package b4j.docU;

import anywheresoftware.b4a.BA;
import anywheresoftware.b4a.pc.*;

public class jamtableclv_subs_0 {


public static void  _abrircamposbuilder(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("AbrirCamposBuilder (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6801);
if (RapidSub.canDelegate("abrircamposbuilder")) { __ref.runUserSub(false, "jamtableclv","abrircamposbuilder", __ref); return;}
ResumableSub_AbrirCamposBuilder rsub = new ResumableSub_AbrirCamposBuilder(null,__ref);
rsub.resume(null, null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_AbrirCamposBuilder extends BA.ResumableSub {
public ResumableSub_AbrirCamposBuilder(b4j.docU.jamtableclv parent,RemoteObject __ref) {
this.parent = parent;
this.__ref = __ref;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _sb = RemoteObject.declareNull("anywheresoftware.b4a.keywords.StringBuilderWrapper");
RemoteObject _msa = RemoteObject.declareNull("Object");
RemoteObject _rint = RemoteObject.createImmutable(0);
RemoteObject _clvbuilder = RemoteObject.declareNull("b4j.docU.jamtableclvcamposbuilder");

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("AbrirCamposBuilder (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6801);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
return;

case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
 BA.debugLineNum = 6803;BA.debugLine="If NombreJSONOrigenDatos<>\"\" Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//if
this.state = 14;
if (RemoteObject.solveBoolean("!",__ref.getField(true,"_nombrejsonorigendatos" /*RemoteObject*/ ),BA.ObjectToString(""))) { 
this.state = 3;
}else {
this.state = 13;
}if (true) break;

case 3:
//C
this.state = 4;
 BA.debugLineNum = 6804;BA.debugLine="Dim sb As StringBuilder";
Debug.JustUpdateDeviceLine();
_sb = RemoteObject.createNew ("anywheresoftware.b4a.keywords.StringBuilderWrapper");Debug.locals.put("sb", _sb);
 BA.debugLineNum = 6805;BA.debugLine="sb.Initialize";
Debug.JustUpdateDeviceLine();
_sb.runVoidMethod ("Initialize");
 BA.debugLineNum = 6806;BA.debugLine="sb.Append(\"La tabla ya tiene un fichero JSON de";
Debug.JustUpdateDeviceLine();
_sb.runMethod(false,"Append",(Object)(RemoteObject.createImmutable("La tabla ya tiene un fichero JSON de configuración ("))).runMethod(false,"Append",(Object)(__ref.getField(true,"_nombrejsonorigendatos" /*RemoteObject*/ ))).runMethod(false,"Append",(Object)(RemoteObject.createImmutable(")"))).runMethod(false,"Append",(Object)(parent.__c.getField(true,"CRLF"))).runVoidMethod ("Append",(Object)(parent.__c.getField(true,"CRLF")));
 BA.debugLineNum = 6807;BA.debugLine="sb.Append(\"¿Editar este fichero o crear uno nuev";
Debug.JustUpdateDeviceLine();
_sb.runVoidMethod ("Append",(Object)(RemoteObject.createImmutable("¿Editar este fichero o crear uno nuevo?")));
 BA.debugLineNum = 6809;BA.debugLine="Dim msa As Object = xui.Msgbox2Async(sb.tostring";
Debug.JustUpdateDeviceLine();
_msa = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"Msgbox2Async",__ref.getField(false, "ba"),(Object)(_sb.runMethod(true,"ToString")),(Object)(BA.ObjectToString("Confirma")),(Object)(BA.ObjectToString("Editar")),(Object)(BA.ObjectToString("Cancelar")),(Object)(BA.ObjectToString("Nuevo")),(Object)((parent.__c.getField(false,"Null"))));Debug.locals.put("msa", _msa);Debug.locals.put("msa", _msa);
 BA.debugLineNum = 6810;BA.debugLine="Wait For (msa) Msgbox_Result (rInt As Int)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","msgbox_result", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "abrircamposbuilder"), _msa);
this.state = 15;
return;
case 15:
//C
this.state = 4;
_rint = (RemoteObject) result.getArrayElement(true,RemoteObject.createImmutable(1));Debug.locals.put("rInt", _rint);
;
 BA.debugLineNum = 6811;BA.debugLine="Select True";
Debug.JustUpdateDeviceLine();
if (true) break;

case 4:
//select
this.state = 11;
switch (BA.switchObjectToInt(parent.__c.getField(true,"True"),BA.ObjectToBoolean(RemoteObject.solveBoolean("=",_rint,BA.numberCast(double.class, __ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"DialogResponse_Positive")))),BA.ObjectToBoolean(RemoteObject.solveBoolean("=",_rint,BA.numberCast(double.class, __ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"DialogResponse_Negative")))),BA.ObjectToBoolean(RemoteObject.solveBoolean("=",_rint,BA.numberCast(double.class, __ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"DialogResponse_Cancel")))))) {
case 0: {
this.state = 6;
if (true) break;
}
case 1: {
this.state = 8;
if (true) break;
}
case 2: {
this.state = 10;
if (true) break;
}
}
if (true) break;

case 6:
//C
this.state = 11;
 BA.debugLineNum = 6815;BA.debugLine="Dim clvBuilder As jamTableCLVCamposBuilder";
Debug.JustUpdateDeviceLine();
_clvbuilder = RemoteObject.createNew ("b4j.docU.jamtableclvcamposbuilder");Debug.locals.put("clvBuilder", _clvbuilder);
 BA.debugLineNum = 6816;BA.debugLine="clvBuilder.Initialize";
Debug.JustUpdateDeviceLine();
_clvbuilder.runClassMethod (b4j.docU.jamtableclvcamposbuilder.class, "_initialize" /*RemoteObject*/ ,__ref.getField(false, "ba"));
 BA.debugLineNum = 6817;BA.debugLine="clvBuilder.Show(\"../files/\" & NombreJSONOrigen";
Debug.JustUpdateDeviceLine();
_clvbuilder.runClassMethod (b4j.docU.jamtableclvcamposbuilder.class, "_show" /*RemoteObject*/ ,(Object)(RemoteObject.concat(RemoteObject.createImmutable("../files/"),__ref.getField(true,"_nombrejsonorigendatos" /*RemoteObject*/ ))));
 if (true) break;

case 8:
//C
this.state = 11;
 BA.debugLineNum = 6820;BA.debugLine="Dim clvBuilder As jamTableCLVCamposBuilder";
Debug.JustUpdateDeviceLine();
_clvbuilder = RemoteObject.createNew ("b4j.docU.jamtableclvcamposbuilder");Debug.locals.put("clvBuilder", _clvbuilder);
 BA.debugLineNum = 6821;BA.debugLine="clvBuilder.Initialize";
Debug.JustUpdateDeviceLine();
_clvbuilder.runClassMethod (b4j.docU.jamtableclvcamposbuilder.class, "_initialize" /*RemoteObject*/ ,__ref.getField(false, "ba"));
 BA.debugLineNum = 6822;BA.debugLine="clvBuilder.Show(\"\")";
Debug.JustUpdateDeviceLine();
_clvbuilder.runClassMethod (b4j.docU.jamtableclvcamposbuilder.class, "_show" /*RemoteObject*/ ,(Object)(RemoteObject.createImmutable("")));
 if (true) break;

case 10:
//C
this.state = 11;
 BA.debugLineNum = 6825;BA.debugLine="Return";
Debug.JustUpdateDeviceLine();
if (true) return ;
 if (true) break;

case 11:
//C
this.state = 14;
;
 if (true) break;

case 13:
//C
this.state = 14;
 BA.debugLineNum = 6829;BA.debugLine="Dim clvBuilder As jamTableCLVCamposBuilder";
Debug.JustUpdateDeviceLine();
_clvbuilder = RemoteObject.createNew ("b4j.docU.jamtableclvcamposbuilder");Debug.locals.put("clvBuilder", _clvbuilder);
 BA.debugLineNum = 6830;BA.debugLine="clvBuilder.Initialize";
Debug.JustUpdateDeviceLine();
_clvbuilder.runClassMethod (b4j.docU.jamtableclvcamposbuilder.class, "_initialize" /*RemoteObject*/ ,__ref.getField(false, "ba"));
 BA.debugLineNum = 6831;BA.debugLine="clvBuilder.Show(\"\")";
Debug.JustUpdateDeviceLine();
_clvbuilder.runClassMethod (b4j.docU.jamtableclvcamposbuilder.class, "_show" /*RemoteObject*/ ,(Object)(RemoteObject.createImmutable("")));
 if (true) break;

case 14:
//C
this.state = -1;
;
 BA.debugLineNum = 6833;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static void  _msgbox_result(RemoteObject __ref,RemoteObject _rint) throws Exception{
}
public static RemoteObject  _abrircamposbuilderedicion(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("AbrirCamposBuilderEdicion (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6835);
if (RapidSub.canDelegate("abrircamposbuilderedicion")) { return __ref.runUserSub(false, "jamtableclv","abrircamposbuilderedicion", __ref);}
RemoteObject _clvbuilder = RemoteObject.declareNull("b4j.docU.jamtableclvcamposbuilder");
 BA.debugLineNum = 6835;BA.debugLine="private Sub AbrirCamposBuilderEdicion";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6836;BA.debugLine="Dim clvBuilder As jamTableCLVCamposBuilder";
Debug.JustUpdateDeviceLine();
_clvbuilder = RemoteObject.createNew ("b4j.docU.jamtableclvcamposbuilder");Debug.locals.put("clvBuilder", _clvbuilder);
 BA.debugLineNum = 6837;BA.debugLine="clvBuilder.Initialize";
Debug.JustUpdateDeviceLine();
_clvbuilder.runClassMethod (b4j.docU.jamtableclvcamposbuilder.class, "_initialize" /*RemoteObject*/ ,__ref.getField(false, "ba"));
 BA.debugLineNum = 6838;BA.debugLine="clvBuilder.Show(\"../files/\" & NombreJSONOrigenDat";
Debug.JustUpdateDeviceLine();
_clvbuilder.runClassMethod (b4j.docU.jamtableclvcamposbuilder.class, "_show" /*RemoteObject*/ ,(Object)(RemoteObject.concat(RemoteObject.createImmutable("../files/"),__ref.getField(true,"_nombrejsonorigendatos" /*RemoteObject*/ ))));
 BA.debugLineNum = 6839;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _activarkeypresseventnodo(RemoteObject __ref,RemoteObject _n) throws Exception{
try {
		Debug.PushSubsStack("ActivarKeyPressEventNodo (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,8117);
if (RapidSub.canDelegate("activarkeypresseventnodo")) { return __ref.runUserSub(false, "jamtableclv","activarkeypresseventnodo", __ref, _n);}
Debug.locals.put("n", _n);
 BA.debugLineNum = 8117;BA.debugLine="public Sub ActivarKeyPressEventNodo(n As B4XView)";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 8118;BA.debugLine="SetHandlerKeyPress(n)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_sethandlerkeypress" /*RemoteObject*/ ,RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.NodeWrapper.ConcreteNodeWrapper"), _n.getObject()));
 BA.debugLineNum = 8119;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _actualizarfiltro(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("ActualizarFiltro (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,4126);
if (RapidSub.canDelegate("actualizarfiltro")) { return __ref.runUserSub(false, "jamtableclv","actualizarfiltro", __ref);}
ResumableSub_ActualizarFiltro rsub = new ResumableSub_ActualizarFiltro(null,__ref);
rsub.remoteResumableSub = anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSubForFilter();
rsub.resume(null, null);
return RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.keywords.Common.ResumableSubWrapper"), rsub.remoteResumableSub);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_ActualizarFiltro extends BA.ResumableSub {
public ResumableSub_ActualizarFiltro(b4j.docU.jamtableclv parent,RemoteObject __ref) {
this.parent = parent;
this.__ref = __ref;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _sbtextonuevofiltro = RemoteObject.declareNull("anywheresoftware.b4a.keywords.StringBuilderWrapper");
RemoteObject _sbnuevofiltrosql = RemoteObject.declareNull("anywheresoftware.b4a.keywords.StringBuilderWrapper");
int _i = 0;
RemoteObject _p = RemoteObject.declareNull("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
RemoteObject _m = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
RemoteObject _filtrocompleto = RemoteObject.createImmutable(false);
RemoteObject _operadorfiltro = RemoteObject.createImmutable("");
RemoteObject _c = RemoteObject.declareNull("b4j.docU.jamtableclv._campoorigendatosjamtableclv");
RemoteObject _campoanalizadosql = RemoteObject.createImmutable("");
RemoteObject _tipodatofiltro = RemoteObject.createImmutable("");
RemoteObject _comparadorfiltro = RemoteObject.createImmutable("");
RemoteObject _comparadorfiltrosql = RemoteObject.createImmutable("");
RemoteObject _valorfiltro = RemoteObject.declareNull("Object");
RemoteObject _valorfiltrosql = RemoteObject.declareNull("Object");
RemoteObject _tickshoracerodia = RemoteObject.createImmutable(0L);
RemoteObject _periodo = RemoteObject.declareNull("b4j.example.dateutils._period");
RemoteObject _tickshoracerodiasiguiente = RemoteObject.createImmutable(0L);
RemoteObject _svalorfiltro = RemoteObject.createImmutable("");
RemoteObject _robj = RemoteObject.declareNull("Object");
int step9;
int limit9;

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("ActualizarFiltro (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,4126);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
{
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,RemoteObject.createImmutable(null));return;}
case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
 BA.debugLineNum = 4135;BA.debugLine="Dim sbTextoNuevoFiltro As StringBuilder";
Debug.JustUpdateDeviceLine();
_sbtextonuevofiltro = RemoteObject.createNew ("anywheresoftware.b4a.keywords.StringBuilderWrapper");Debug.locals.put("sbTextoNuevoFiltro", _sbtextonuevofiltro);
 BA.debugLineNum = 4136;BA.debugLine="sbTextoNuevoFiltro.Initialize";
Debug.JustUpdateDeviceLine();
_sbtextonuevofiltro.runVoidMethod ("Initialize");
 BA.debugLineNum = 4137;BA.debugLine="Dim sbNuevoFiltroSQL As StringBuilder";
Debug.JustUpdateDeviceLine();
_sbnuevofiltrosql = RemoteObject.createNew ("anywheresoftware.b4a.keywords.StringBuilderWrapper");Debug.locals.put("sbNuevoFiltroSQL", _sbnuevofiltrosql);
 BA.debugLineNum = 4138;BA.debugLine="sbNuevoFiltroSQL.Initialize";
Debug.JustUpdateDeviceLine();
_sbnuevofiltrosql.runVoidMethod ("Initialize");
 BA.debugLineNum = 4140;BA.debugLine="lstOperadoresFiltros.Initialize";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstoperadoresfiltros" /*RemoteObject*/ ).runVoidMethod ("Initialize");
 BA.debugLineNum = 4141;BA.debugLine="lstCamposFiltros.Initialize";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstcamposfiltros" /*RemoteObject*/ ).runVoidMethod ("Initialize");
 BA.debugLineNum = 4142;BA.debugLine="lstComparadoresFiltros.Initialize";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstcomparadoresfiltros" /*RemoteObject*/ ).runVoidMethod ("Initialize");
 BA.debugLineNum = 4143;BA.debugLine="lstValoresFiltros.Initialize";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstvaloresfiltros" /*RemoteObject*/ ).runVoidMethod ("Initialize");
 BA.debugLineNum = 4144;BA.debugLine="For i=0 To clvFiltros.Size-1";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//for
this.state = 91;
step9 = 1;
limit9 = RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(true,"_getsize"),RemoteObject.createImmutable(1)}, "-",1, 1).<Integer>get().intValue();
_i = 0 ;
Debug.locals.put("i", _i);
this.state = 96;
if (true) break;

case 96:
//C
this.state = 91;
if ((step9 > 0 && _i <= limit9) || (step9 < 0 && _i >= limit9)) this.state = 3;
if (true) break;

case 97:
//C
this.state = 96;
_i = ((int)(0 + _i + step9)) ;
Debug.locals.put("i", _i);
if (true) break;

case 3:
//C
this.state = 4;
 BA.debugLineNum = 4145;BA.debugLine="Dim p As Pane=clvFiltros.GetPanel(i)";
Debug.JustUpdateDeviceLine();
_p = RemoteObject.createNew ("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
_p = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper"), __ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(false,"_getpanel",(Object)(BA.numberCast(int.class, _i))).getObject());Debug.locals.put("p", _p);Debug.locals.put("p", _p);
 BA.debugLineNum = 4146;BA.debugLine="Dim m As Map=p.Tag";
Debug.JustUpdateDeviceLine();
_m = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");
_m = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.collections.Map"), _p.runMethod(false,"getTag"));Debug.locals.put("m", _m);Debug.locals.put("m", _m);
 BA.debugLineNum = 4147;BA.debugLine="Dim FiltroCompleto As Boolean=m.Get(\"FiltroCompl";
Debug.JustUpdateDeviceLine();
_filtrocompleto = BA.ObjectToBoolean(_m.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("FiltroCompleto")))));Debug.locals.put("FiltroCompleto", _filtrocompleto);Debug.locals.put("FiltroCompleto", _filtrocompleto);
 BA.debugLineNum = 4149;BA.debugLine="If FiltroCompleto=False Then Continue  ' EL FILT";
Debug.JustUpdateDeviceLine();
if (true) break;

case 4:
//if
this.state = 9;
if (RemoteObject.solveBoolean("=",_filtrocompleto,parent.__c.getField(true,"False"))) { 
this.state = 6;
;}if (true) break;

case 6:
//C
this.state = 9;
this.state = 97;
if (true) break;;
if (true) break;

case 9:
//C
this.state = 10;
;
 BA.debugLineNum = 4150;BA.debugLine="Dim OperadorFiltro As String=m.Get(\"OperadorFilt";
Debug.JustUpdateDeviceLine();
_operadorfiltro = BA.ObjectToString(_m.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("OperadorFiltro")))));Debug.locals.put("OperadorFiltro", _operadorfiltro);Debug.locals.put("OperadorFiltro", _operadorfiltro);
 BA.debugLineNum = 4153;BA.debugLine="Dim c As CampoOrigenDatosJamTableCLV=m.Get(\"Dato";
Debug.JustUpdateDeviceLine();
_c = (_m.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("DatosCampoFiltro")))));Debug.locals.put("c", _c);Debug.locals.put("c", _c);
 BA.debugLineNum = 4156;BA.debugLine="Dim CampoAnalizadoSQL As String=c.AliasCampo";
Debug.JustUpdateDeviceLine();
_campoanalizadosql = _c.getField(true,"AliasCampo" /*RemoteObject*/ );Debug.locals.put("CampoAnalizadoSQL", _campoanalizadosql);Debug.locals.put("CampoAnalizadoSQL", _campoanalizadosql);
 BA.debugLineNum = 4163;BA.debugLine="Dim TipoDatoFiltro As String=c.TipoDato";
Debug.JustUpdateDeviceLine();
_tipodatofiltro = _c.getField(true,"TipoDato" /*RemoteObject*/ );Debug.locals.put("TipoDatoFiltro", _tipodatofiltro);Debug.locals.put("TipoDatoFiltro", _tipodatofiltro);
 BA.debugLineNum = 4164;BA.debugLine="Dim ComparadorFiltro As String=m.Get(\"Comparador";
Debug.JustUpdateDeviceLine();
_comparadorfiltro = BA.ObjectToString(_m.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("ComparadorFiltro")))));Debug.locals.put("ComparadorFiltro", _comparadorfiltro);Debug.locals.put("ComparadorFiltro", _comparadorfiltro);
 BA.debugLineNum = 4166;BA.debugLine="Log(\"ComparadorFiltro \" & ComparadorFiltro)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9166264872",RemoteObject.concat(RemoteObject.createImmutable("ComparadorFiltro "),_comparadorfiltro),0);
 BA.debugLineNum = 4169;BA.debugLine="Dim ComparadorFiltroSQL As String";
Debug.JustUpdateDeviceLine();
_comparadorfiltrosql = RemoteObject.createImmutable("");Debug.locals.put("ComparadorFiltroSQL", _comparadorfiltrosql);
 BA.debugLineNum = 4170;BA.debugLine="Dim ValorFiltro As Object=m.Get(\"ValorFiltro\")";
Debug.JustUpdateDeviceLine();
_valorfiltro = _m.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("ValorFiltro"))));Debug.locals.put("ValorFiltro", _valorfiltro);Debug.locals.put("ValorFiltro", _valorfiltro);
 BA.debugLineNum = 4172;BA.debugLine="Dim ValorfiltroSQL As Object";
Debug.JustUpdateDeviceLine();
_valorfiltrosql = RemoteObject.createNew ("Object");Debug.locals.put("ValorfiltroSQL", _valorfiltrosql);
 BA.debugLineNum = 4177;BA.debugLine="If TipoDatoFiltro=\"\" Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 10:
//if
this.state = 13;
if (RemoteObject.solveBoolean("=",_tipodatofiltro,BA.ObjectToString(""))) { 
this.state = 12;
}if (true) break;

case 12:
//C
this.state = 13;
 BA.debugLineNum = 4179;BA.debugLine="Continue";
Debug.JustUpdateDeviceLine();
this.state = 97;
if (true) break;;
 if (true) break;
;
 BA.debugLineNum = 4183;BA.debugLine="Select OperadorFiltro";
Debug.JustUpdateDeviceLine();

case 13:
//select
this.state = 20;
switch (BA.switchObjectToInt(_operadorfiltro,BA.ObjectToString(""),BA.ObjectToString("Y"),BA.ObjectToString("O"))) {
case 0: {
this.state = 15;
if (true) break;
}
case 1: {
this.state = 17;
if (true) break;
}
case 2: {
this.state = 19;
if (true) break;
}
}
if (true) break;

case 15:
//C
this.state = 20;
 if (true) break;

case 17:
//C
this.state = 20;
 BA.debugLineNum = 4187;BA.debugLine="sbNuevoFiltroSQL.Append(\" AND \")";
Debug.JustUpdateDeviceLine();
_sbnuevofiltrosql.runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(" AND ")));
 if (true) break;

case 19:
//C
this.state = 20;
 BA.debugLineNum = 4189;BA.debugLine="sbNuevoFiltroSQL.Append(\" OR \")";
Debug.JustUpdateDeviceLine();
_sbnuevofiltrosql.runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(" OR ")));
 if (true) break;
;
 BA.debugLineNum = 4193;BA.debugLine="If (TipoDatoFiltro=\"INTEGER\" Or TipoDatoFiltro=\"";
Debug.JustUpdateDeviceLine();

case 20:
//if
this.state = 37;
if (RemoteObject.solveBoolean(".",BA.ObjectToBoolean((RemoteObject.solveBoolean("=",_tipodatofiltro,BA.ObjectToString("INTEGER")) || RemoteObject.solveBoolean("=",_tipodatofiltro,RemoteObject.createImmutable("REAL"))))) && RemoteObject.solveBoolean(".",_c.getField(true,"EsFecha" /*RemoteObject*/ ))) { 
this.state = 22;
}if (true) break;

case 22:
//C
this.state = 23;
 BA.debugLineNum = 4194;BA.debugLine="Log(\"Tipo fecha\")";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9166264900",RemoteObject.createImmutable("Tipo fecha"),0);
 BA.debugLineNum = 4205;BA.debugLine="Dim TicksHoraCeroDia As Long=DateUtils.SetDate(";
Debug.JustUpdateDeviceLine();
_tickshoracerodia = parent._dateutils.runMethod(true,"_setdate",(Object)(parent.__c.getField(false,"DateTime").runMethod(true,"GetYear",(Object)(BA.numberCast(long.class, _valorfiltro)))),(Object)(parent.__c.getField(false,"DateTime").runMethod(true,"GetMonth",(Object)(BA.numberCast(long.class, _valorfiltro)))),(Object)(parent.__c.getField(false,"DateTime").runMethod(true,"GetDayOfMonth",(Object)(BA.numberCast(long.class, _valorfiltro)))));Debug.locals.put("TicksHoraCeroDia", _tickshoracerodia);Debug.locals.put("TicksHoraCeroDia", _tickshoracerodia);
 BA.debugLineNum = 4206;BA.debugLine="Log(\"Valor seleccionado \" & ValorFiltro & \" Val";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9166264912",RemoteObject.concat(RemoteObject.createImmutable("Valor seleccionado "),_valorfiltro,RemoteObject.createImmutable(" Valor dia seleccionado"),_tickshoracerodia),0);
 BA.debugLineNum = 4207;BA.debugLine="Dim Periodo As Period";
Debug.JustUpdateDeviceLine();
_periodo = RemoteObject.createNew ("b4j.example.dateutils._period");Debug.locals.put("Periodo", _periodo);
 BA.debugLineNum = 4208;BA.debugLine="Periodo.Initialize";
Debug.JustUpdateDeviceLine();
_periodo.runVoidMethod ("Initialize");
 BA.debugLineNum = 4209;BA.debugLine="Periodo.Days=1";
Debug.JustUpdateDeviceLine();
_periodo.setField ("Days",BA.numberCast(int.class, 1));
 BA.debugLineNum = 4210;BA.debugLine="Dim TicksHoraCeroDiaSiguiente As Long=DateUtils";
Debug.JustUpdateDeviceLine();
_tickshoracerodiasiguiente = parent._dateutils.runMethod(true,"_addperiod",(Object)(_tickshoracerodia),(Object)(_periodo));Debug.locals.put("TicksHoraCeroDiaSiguiente", _tickshoracerodiasiguiente);Debug.locals.put("TicksHoraCeroDiaSiguiente", _tickshoracerodiasiguiente);
 BA.debugLineNum = 4211;BA.debugLine="Select Case ComparadorFiltro";
Debug.JustUpdateDeviceLine();
if (true) break;

case 23:
//select
this.state = 36;
switch (BA.switchObjectToInt(_comparadorfiltro,BA.ObjectToString("Es igual a"),BA.ObjectToString("No es igual a"),BA.ObjectToString("Anterior a"),BA.ObjectToString("Anterior o igual a"),BA.ObjectToString("Posterior a"),BA.ObjectToString("Posterior o igual a"))) {
case 0: {
this.state = 25;
if (true) break;
}
case 1: {
this.state = 27;
if (true) break;
}
case 2: {
this.state = 29;
if (true) break;
}
case 3: {
this.state = 31;
if (true) break;
}
case 4: {
this.state = 33;
if (true) break;
}
case 5: {
this.state = 35;
if (true) break;
}
}
if (true) break;

case 25:
//C
this.state = 36;
 BA.debugLineNum = 4215;BA.debugLine="sbNuevoFiltroSQL.Append(\"(\")";
Debug.JustUpdateDeviceLine();
_sbnuevofiltrosql.runVoidMethod ("Append",(Object)(RemoteObject.createImmutable("(")));
 BA.debugLineNum = 4216;BA.debugLine="sbNuevoFiltroSQL.append(\"[\").Append(CampoAnal";
Debug.JustUpdateDeviceLine();
_sbnuevofiltrosql.runMethod(false,"Append",(Object)(RemoteObject.createImmutable("["))).runMethod(false,"Append",(Object)(_campoanalizadosql)).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable("]")));
 BA.debugLineNum = 4217;BA.debugLine="sbNuevoFiltroSQL.Append(\" >= ? \")";
Debug.JustUpdateDeviceLine();
_sbnuevofiltrosql.runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(" >= ? ")));
 BA.debugLineNum = 4218;BA.debugLine="lstValoresFiltros.Add(TicksHoraCeroDia)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstvaloresfiltros" /*RemoteObject*/ ).runVoidMethod ("Add",(Object)((_tickshoracerodia)));
 BA.debugLineNum = 4220;BA.debugLine="sbNuevoFiltroSQL.Append(\" AND \")";
Debug.JustUpdateDeviceLine();
_sbnuevofiltrosql.runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(" AND ")));
 BA.debugLineNum = 4221;BA.debugLine="sbNuevoFiltroSQL.append(\"[\").Append(CampoAnal";
Debug.JustUpdateDeviceLine();
_sbnuevofiltrosql.runMethod(false,"Append",(Object)(RemoteObject.createImmutable("["))).runMethod(false,"Append",(Object)(_campoanalizadosql)).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable("]")));
 BA.debugLineNum = 4222;BA.debugLine="sbNuevoFiltroSQL.Append(\" < ? \")";
Debug.JustUpdateDeviceLine();
_sbnuevofiltrosql.runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(" < ? ")));
 BA.debugLineNum = 4223;BA.debugLine="sbNuevoFiltroSQL.Append(\")\")";
Debug.JustUpdateDeviceLine();
_sbnuevofiltrosql.runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(")")));
 BA.debugLineNum = 4226;BA.debugLine="lstValoresFiltros.Add(TicksHoraCeroDiaSiguien";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstvaloresfiltros" /*RemoteObject*/ ).runVoidMethod ("Add",(Object)((_tickshoracerodiasiguiente)));
 BA.debugLineNum = 4230;BA.debugLine="sbTextoNuevoFiltro.Append(\"(\")";
Debug.JustUpdateDeviceLine();
_sbtextonuevofiltro.runVoidMethod ("Append",(Object)(RemoteObject.createImmutable("(")));
 BA.debugLineNum = 4231;BA.debugLine="sbTextoNuevoFiltro.append(\"[\").Append(CampoAn";
Debug.JustUpdateDeviceLine();
_sbtextonuevofiltro.runMethod(false,"Append",(Object)(RemoteObject.createImmutable("["))).runMethod(false,"Append",(Object)(_campoanalizadosql)).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable("]")));
 BA.debugLineNum = 4232;BA.debugLine="sbTextoNuevoFiltro.Append(\" >= \").Append(Tick";
Debug.JustUpdateDeviceLine();
_sbtextonuevofiltro.runMethod(false,"Append",(Object)(RemoteObject.createImmutable(" >= "))).runVoidMethod ("Append",(Object)(BA.NumberToString(_tickshoracerodia)));
 BA.debugLineNum = 4234;BA.debugLine="sbTextoNuevoFiltro.Append(\" AND \")";
Debug.JustUpdateDeviceLine();
_sbtextonuevofiltro.runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(" AND ")));
 BA.debugLineNum = 4235;BA.debugLine="sbTextoNuevoFiltro.append(\"[\").Append(CampoAn";
Debug.JustUpdateDeviceLine();
_sbtextonuevofiltro.runMethod(false,"Append",(Object)(RemoteObject.createImmutable("["))).runMethod(false,"Append",(Object)(_campoanalizadosql)).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable("]")));
 BA.debugLineNum = 4237;BA.debugLine="sbTextoNuevoFiltro.Append(\" < \").Append(Ticks";
Debug.JustUpdateDeviceLine();
_sbtextonuevofiltro.runMethod(false,"Append",(Object)(RemoteObject.createImmutable(" < "))).runVoidMethod ("Append",(Object)(BA.NumberToString(_tickshoracerodiasiguiente)));
 BA.debugLineNum = 4238;BA.debugLine="sbTextoNuevoFiltro.Append(\")\")";
Debug.JustUpdateDeviceLine();
_sbtextonuevofiltro.runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(")")));
 if (true) break;

case 27:
//C
this.state = 36;
 BA.debugLineNum = 4243;BA.debugLine="sbNuevoFiltroSQL.Append(\"(\")";
Debug.JustUpdateDeviceLine();
_sbnuevofiltrosql.runVoidMethod ("Append",(Object)(RemoteObject.createImmutable("(")));
 BA.debugLineNum = 4244;BA.debugLine="sbNuevoFiltroSQL.append(\"[\").Append(CampoAnal";
Debug.JustUpdateDeviceLine();
_sbnuevofiltrosql.runMethod(false,"Append",(Object)(RemoteObject.createImmutable("["))).runMethod(false,"Append",(Object)(_campoanalizadosql)).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable("]")));
 BA.debugLineNum = 4245;BA.debugLine="sbNuevoFiltroSQL.Append(\" < ? \")";
Debug.JustUpdateDeviceLine();
_sbnuevofiltrosql.runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(" < ? ")));
 BA.debugLineNum = 4246;BA.debugLine="lstValoresFiltros.Add(TicksHoraCeroDia)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstvaloresfiltros" /*RemoteObject*/ ).runVoidMethod ("Add",(Object)((_tickshoracerodia)));
 BA.debugLineNum = 4248;BA.debugLine="sbNuevoFiltroSQL.Append(\" OR \")";
Debug.JustUpdateDeviceLine();
_sbnuevofiltrosql.runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(" OR ")));
 BA.debugLineNum = 4249;BA.debugLine="sbNuevoFiltroSQL.append(\"[\").Append(CampoAnal";
Debug.JustUpdateDeviceLine();
_sbnuevofiltrosql.runMethod(false,"Append",(Object)(RemoteObject.createImmutable("["))).runMethod(false,"Append",(Object)(_campoanalizadosql)).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable("]")));
 BA.debugLineNum = 4250;BA.debugLine="sbNuevoFiltroSQL.Append(\" >= ? \")";
Debug.JustUpdateDeviceLine();
_sbnuevofiltrosql.runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(" >= ? ")));
 BA.debugLineNum = 4251;BA.debugLine="sbNuevoFiltroSQL.Append(\")\")";
Debug.JustUpdateDeviceLine();
_sbnuevofiltrosql.runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(")")));
 BA.debugLineNum = 4252;BA.debugLine="lstValoresFiltros.Add(TicksHoraCeroDiaSiguien";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstvaloresfiltros" /*RemoteObject*/ ).runVoidMethod ("Add",(Object)((_tickshoracerodiasiguiente)));
 BA.debugLineNum = 4256;BA.debugLine="sbTextoNuevoFiltro.Append(\"(\")";
Debug.JustUpdateDeviceLine();
_sbtextonuevofiltro.runVoidMethod ("Append",(Object)(RemoteObject.createImmutable("(")));
 BA.debugLineNum = 4257;BA.debugLine="sbTextoNuevoFiltro.append(\"[\").Append(CampoAn";
Debug.JustUpdateDeviceLine();
_sbtextonuevofiltro.runMethod(false,"Append",(Object)(RemoteObject.createImmutable("["))).runMethod(false,"Append",(Object)(_campoanalizadosql)).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable("]")));
 BA.debugLineNum = 4258;BA.debugLine="sbTextoNuevoFiltro.Append(\" < \").Append(Ticks";
Debug.JustUpdateDeviceLine();
_sbtextonuevofiltro.runMethod(false,"Append",(Object)(RemoteObject.createImmutable(" < "))).runVoidMethod ("Append",(Object)(BA.NumberToString(_tickshoracerodia)));
 BA.debugLineNum = 4260;BA.debugLine="sbTextoNuevoFiltro.Append(\" OR \")";
Debug.JustUpdateDeviceLine();
_sbtextonuevofiltro.runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(" OR ")));
 BA.debugLineNum = 4261;BA.debugLine="sbTextoNuevoFiltro.append(\"[\").Append(CampoAn";
Debug.JustUpdateDeviceLine();
_sbtextonuevofiltro.runMethod(false,"Append",(Object)(RemoteObject.createImmutable("["))).runMethod(false,"Append",(Object)(_campoanalizadosql)).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable("]")));
 BA.debugLineNum = 4262;BA.debugLine="sbTextoNuevoFiltro.Append(\" >= \").Append(Tick";
Debug.JustUpdateDeviceLine();
_sbtextonuevofiltro.runMethod(false,"Append",(Object)(RemoteObject.createImmutable(" >= "))).runVoidMethod ("Append",(Object)(BA.NumberToString(_tickshoracerodiasiguiente)));
 BA.debugLineNum = 4263;BA.debugLine="sbTextoNuevoFiltro.Append(\")\")";
Debug.JustUpdateDeviceLine();
_sbtextonuevofiltro.runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(")")));
 if (true) break;

case 29:
//C
this.state = 36;
 BA.debugLineNum = 4266;BA.debugLine="ComparadorFiltroSQL=\"<\"";
Debug.JustUpdateDeviceLine();
_comparadorfiltrosql = BA.ObjectToString("<");Debug.locals.put("ComparadorFiltroSQL", _comparadorfiltrosql);
 BA.debugLineNum = 4268;BA.debugLine="sbNuevoFiltroSQL.append(\"[\").Append(CampoAnal";
Debug.JustUpdateDeviceLine();
_sbnuevofiltrosql.runMethod(false,"Append",(Object)(RemoteObject.createImmutable("["))).runMethod(false,"Append",(Object)(_campoanalizadosql)).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable("]")));
 BA.debugLineNum = 4270;BA.debugLine="sbNuevoFiltroSQL.Append(\" \" & ComparadorFiltr";
Debug.JustUpdateDeviceLine();
_sbnuevofiltrosql.runVoidMethod ("Append",(Object)(RemoteObject.concat(RemoteObject.createImmutable(" "),_comparadorfiltrosql,RemoteObject.createImmutable(" ? "))));
 BA.debugLineNum = 4271;BA.debugLine="lstValoresFiltros.Add(TicksHoraCeroDia)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstvaloresfiltros" /*RemoteObject*/ ).runVoidMethod ("Add",(Object)((_tickshoracerodia)));
 BA.debugLineNum = 4273;BA.debugLine="sbTextoNuevoFiltro.Append(OperadorFiltro).App";
Debug.JustUpdateDeviceLine();
_sbtextonuevofiltro.runMethod(false,"Append",(Object)(_operadorfiltro)).runMethod(false,"Append",(Object)(RemoteObject.createImmutable(" ["))).runMethod(false,"Append",(Object)(_campoanalizadosql)).runMethod(false,"Append",(Object)(RemoteObject.createImmutable("] "))).runMethod(false,"Append",(Object)(_comparadorfiltro)).runMethod(false,"Append",(Object)(RemoteObject.createImmutable(" "))).runMethod(false,"Append",(Object)(BA.NumberToString(_tickshoracerodia))).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(" ")));
 if (true) break;

case 31:
//C
this.state = 36;
 BA.debugLineNum = 4276;BA.debugLine="ComparadorFiltroSQL=\"<\"";
Debug.JustUpdateDeviceLine();
_comparadorfiltrosql = BA.ObjectToString("<");Debug.locals.put("ComparadorFiltroSQL", _comparadorfiltrosql);
 BA.debugLineNum = 4278;BA.debugLine="sbNuevoFiltroSQL.append(\"[\").Append(CampoAnal";
Debug.JustUpdateDeviceLine();
_sbnuevofiltrosql.runMethod(false,"Append",(Object)(RemoteObject.createImmutable("["))).runMethod(false,"Append",(Object)(_campoanalizadosql)).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable("]")));
 BA.debugLineNum = 4280;BA.debugLine="sbNuevoFiltroSQL.Append(\" \" & ComparadorFiltr";
Debug.JustUpdateDeviceLine();
_sbnuevofiltrosql.runVoidMethod ("Append",(Object)(RemoteObject.concat(RemoteObject.createImmutable(" "),_comparadorfiltrosql,RemoteObject.createImmutable(" ? "))));
 BA.debugLineNum = 4281;BA.debugLine="lstValoresFiltros.Add(TicksHoraCeroDiaSiguien";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstvaloresfiltros" /*RemoteObject*/ ).runVoidMethod ("Add",(Object)((_tickshoracerodiasiguiente)));
 BA.debugLineNum = 4283;BA.debugLine="sbTextoNuevoFiltro.Append(OperadorFiltro).App";
Debug.JustUpdateDeviceLine();
_sbtextonuevofiltro.runMethod(false,"Append",(Object)(_operadorfiltro)).runMethod(false,"Append",(Object)(RemoteObject.createImmutable(" ["))).runMethod(false,"Append",(Object)(_campoanalizadosql)).runMethod(false,"Append",(Object)(RemoteObject.createImmutable("] "))).runMethod(false,"Append",(Object)(_comparadorfiltro)).runMethod(false,"Append",(Object)(RemoteObject.createImmutable(" "))).runMethod(false,"Append",(Object)(BA.NumberToString(_tickshoracerodiasiguiente))).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(" ")));
 if (true) break;

case 33:
//C
this.state = 36;
 BA.debugLineNum = 4286;BA.debugLine="ComparadorFiltroSQL=\">=\"";
Debug.JustUpdateDeviceLine();
_comparadorfiltrosql = BA.ObjectToString(">=");Debug.locals.put("ComparadorFiltroSQL", _comparadorfiltrosql);
 BA.debugLineNum = 4288;BA.debugLine="sbNuevoFiltroSQL.append(\"[\").Append(CampoAnal";
Debug.JustUpdateDeviceLine();
_sbnuevofiltrosql.runMethod(false,"Append",(Object)(RemoteObject.createImmutable("["))).runMethod(false,"Append",(Object)(_campoanalizadosql)).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable("]")));
 BA.debugLineNum = 4290;BA.debugLine="sbNuevoFiltroSQL.Append(\" \" & ComparadorFiltr";
Debug.JustUpdateDeviceLine();
_sbnuevofiltrosql.runVoidMethod ("Append",(Object)(RemoteObject.concat(RemoteObject.createImmutable(" "),_comparadorfiltrosql,RemoteObject.createImmutable(" ? "))));
 BA.debugLineNum = 4291;BA.debugLine="lstValoresFiltros.Add(TicksHoraCeroDiaSiguien";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstvaloresfiltros" /*RemoteObject*/ ).runVoidMethod ("Add",(Object)((_tickshoracerodiasiguiente)));
 BA.debugLineNum = 4293;BA.debugLine="sbTextoNuevoFiltro.Append(OperadorFiltro).App";
Debug.JustUpdateDeviceLine();
_sbtextonuevofiltro.runMethod(false,"Append",(Object)(_operadorfiltro)).runMethod(false,"Append",(Object)(RemoteObject.createImmutable(" ["))).runMethod(false,"Append",(Object)(_campoanalizadosql)).runMethod(false,"Append",(Object)(RemoteObject.createImmutable("] "))).runMethod(false,"Append",(Object)(_comparadorfiltro)).runMethod(false,"Append",(Object)(RemoteObject.createImmutable(" "))).runMethod(false,"Append",(Object)(BA.NumberToString(_tickshoracerodiasiguiente))).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(" ")));
 if (true) break;

case 35:
//C
this.state = 36;
 BA.debugLineNum = 4296;BA.debugLine="ComparadorFiltroSQL=\">=\"";
Debug.JustUpdateDeviceLine();
_comparadorfiltrosql = BA.ObjectToString(">=");Debug.locals.put("ComparadorFiltroSQL", _comparadorfiltrosql);
 BA.debugLineNum = 4298;BA.debugLine="sbNuevoFiltroSQL.append(\"[\").Append(CampoAnal";
Debug.JustUpdateDeviceLine();
_sbnuevofiltrosql.runMethod(false,"Append",(Object)(RemoteObject.createImmutable("["))).runMethod(false,"Append",(Object)(_campoanalizadosql)).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable("]")));
 BA.debugLineNum = 4300;BA.debugLine="sbNuevoFiltroSQL.Append(\" \" & ComparadorFiltr";
Debug.JustUpdateDeviceLine();
_sbnuevofiltrosql.runVoidMethod ("Append",(Object)(RemoteObject.concat(RemoteObject.createImmutable(" "),_comparadorfiltrosql,RemoteObject.createImmutable(" ? "))));
 BA.debugLineNum = 4301;BA.debugLine="lstValoresFiltros.Add(TicksHoraCeroDia)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstvaloresfiltros" /*RemoteObject*/ ).runVoidMethod ("Add",(Object)((_tickshoracerodia)));
 BA.debugLineNum = 4303;BA.debugLine="sbTextoNuevoFiltro.Append(OperadorFiltro).App";
Debug.JustUpdateDeviceLine();
_sbtextonuevofiltro.runMethod(false,"Append",(Object)(_operadorfiltro)).runMethod(false,"Append",(Object)(RemoteObject.createImmutable(" ["))).runMethod(false,"Append",(Object)(_campoanalizadosql)).runMethod(false,"Append",(Object)(RemoteObject.createImmutable("] "))).runMethod(false,"Append",(Object)(_comparadorfiltro)).runMethod(false,"Append",(Object)(RemoteObject.createImmutable(" "))).runMethod(false,"Append",(Object)(BA.NumberToString(_tickshoracerodia))).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(" ")));
 if (true) break;

case 36:
//C
this.state = 37;
;
 BA.debugLineNum = 4309;BA.debugLine="Continue   ' IMPORTANTE EN ESTE CASO (PARA NO V";
Debug.JustUpdateDeviceLine();
this.state = 97;
if (true) break;;
 if (true) break;
;
 BA.debugLineNum = 4316;BA.debugLine="If (TipoDatoFiltro=\"INTEGER\" Or TipoDatoFiltro=\"";
Debug.JustUpdateDeviceLine();

case 37:
//if
this.state = 57;
if (RemoteObject.solveBoolean(".",BA.ObjectToBoolean((RemoteObject.solveBoolean("=",_tipodatofiltro,BA.ObjectToString("INTEGER")) || RemoteObject.solveBoolean("=",_tipodatofiltro,RemoteObject.createImmutable("REAL"))))) && RemoteObject.solveBoolean("=",_c.getField(true,"EsFecha" /*RemoteObject*/ ),parent.__c.getField(true,"False"))) { 
this.state = 39;
}if (true) break;

case 39:
//C
this.state = 40;
 BA.debugLineNum = 4317;BA.debugLine="Log(\"Tipo numérico\")";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9166265023",RemoteObject.createImmutable("Tipo numérico"),0);
 BA.debugLineNum = 4318;BA.debugLine="ValorfiltroSQL=ValorFiltro";
Debug.JustUpdateDeviceLine();
_valorfiltrosql = _valorfiltro;Debug.locals.put("ValorfiltroSQL", _valorfiltrosql);
 BA.debugLineNum = 4320;BA.debugLine="If IsNumber(ValorFiltro)=False Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 40:
//if
this.state = 43;
if (RemoteObject.solveBoolean("=",parent.__c.runMethod(true,"IsNumber",(Object)(BA.ObjectToString(_valorfiltro))),parent.__c.getField(true,"False"))) { 
this.state = 42;
}if (true) break;

case 42:
//C
this.state = 43;
 BA.debugLineNum = 4322;BA.debugLine="ValorfiltroSQL=\"'\" & ValorfiltroSQL & \"'\"";
Debug.JustUpdateDeviceLine();
_valorfiltrosql = (RemoteObject.concat(RemoteObject.createImmutable("'"),_valorfiltrosql,RemoteObject.createImmutable("'")));Debug.locals.put("ValorfiltroSQL", _valorfiltrosql);
 if (true) break;
;
 BA.debugLineNum = 4327;BA.debugLine="Select Case ComparadorFiltro";
Debug.JustUpdateDeviceLine();

case 43:
//select
this.state = 56;
switch (BA.switchObjectToInt(_comparadorfiltro,BA.ObjectToString("Es igual a"),BA.ObjectToString("No es igual a"),BA.ObjectToString("Mayor que"),BA.ObjectToString("Mayor o igual que"),BA.ObjectToString("Menor que"),BA.ObjectToString("Menor o igual que"))) {
case 0: {
this.state = 45;
if (true) break;
}
case 1: {
this.state = 47;
if (true) break;
}
case 2: {
this.state = 49;
if (true) break;
}
case 3: {
this.state = 51;
if (true) break;
}
case 4: {
this.state = 53;
if (true) break;
}
case 5: {
this.state = 55;
if (true) break;
}
}
if (true) break;

case 45:
//C
this.state = 56;
 BA.debugLineNum = 4332;BA.debugLine="ComparadorFiltroSQL=\"=\"";
Debug.JustUpdateDeviceLine();
_comparadorfiltrosql = BA.ObjectToString("=");Debug.locals.put("ComparadorFiltroSQL", _comparadorfiltrosql);
 if (true) break;

case 47:
//C
this.state = 56;
 BA.debugLineNum = 4339;BA.debugLine="ComparadorFiltroSQL=\"<>\"";
Debug.JustUpdateDeviceLine();
_comparadorfiltrosql = BA.ObjectToString("<>");Debug.locals.put("ComparadorFiltroSQL", _comparadorfiltrosql);
 if (true) break;

case 49:
//C
this.state = 56;
 BA.debugLineNum = 4343;BA.debugLine="ComparadorFiltroSQL=\">\"";
Debug.JustUpdateDeviceLine();
_comparadorfiltrosql = BA.ObjectToString(">");Debug.locals.put("ComparadorFiltroSQL", _comparadorfiltrosql);
 if (true) break;

case 51:
//C
this.state = 56;
 BA.debugLineNum = 4346;BA.debugLine="ComparadorFiltroSQL=\">=\"";
Debug.JustUpdateDeviceLine();
_comparadorfiltrosql = BA.ObjectToString(">=");Debug.locals.put("ComparadorFiltroSQL", _comparadorfiltrosql);
 if (true) break;

case 53:
//C
this.state = 56;
 BA.debugLineNum = 4349;BA.debugLine="ComparadorFiltroSQL=\"<\"";
Debug.JustUpdateDeviceLine();
_comparadorfiltrosql = BA.ObjectToString("<");Debug.locals.put("ComparadorFiltroSQL", _comparadorfiltrosql);
 if (true) break;

case 55:
//C
this.state = 56;
 BA.debugLineNum = 4352;BA.debugLine="ComparadorFiltroSQL=\"<=\"";
Debug.JustUpdateDeviceLine();
_comparadorfiltrosql = BA.ObjectToString("<=");Debug.locals.put("ComparadorFiltroSQL", _comparadorfiltrosql);
 if (true) break;

case 56:
//C
this.state = 57;
;
 if (true) break;
;
 BA.debugLineNum = 4358;BA.debugLine="If TipoDatoFiltro=\"TEXT\" Then";
Debug.JustUpdateDeviceLine();

case 57:
//if
this.state = 90;
if (RemoteObject.solveBoolean("=",_tipodatofiltro,BA.ObjectToString("TEXT"))) { 
this.state = 59;
}if (true) break;

case 59:
//C
this.state = 60;
 BA.debugLineNum = 4359;BA.debugLine="Log(\"Tipo texto\")";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9166265065",RemoteObject.createImmutable("Tipo texto"),0);
 BA.debugLineNum = 4360;BA.debugLine="Dim sValorFiltro As String=ValorFiltro";
Debug.JustUpdateDeviceLine();
_svalorfiltro = BA.ObjectToString(_valorfiltro);Debug.locals.put("sValorFiltro", _svalorfiltro);Debug.locals.put("sValorFiltro", _svalorfiltro);
 BA.debugLineNum = 4363;BA.debugLine="Select Case ComparadorFiltro";
Debug.JustUpdateDeviceLine();
if (true) break;

case 60:
//select
this.state = 89;
switch (BA.switchObjectToInt(_comparadorfiltro,BA.ObjectToString("Es igual a"),BA.ObjectToString("No es igual a"),BA.ObjectToString("Comienza por"),BA.ObjectToString("No comienza por"),BA.ObjectToString("Termina con"),BA.ObjectToString("No termina con"),BA.ObjectToString("Contiene"),BA.ObjectToString("No contiene"))) {
case 0: {
this.state = 62;
if (true) break;
}
case 1: {
this.state = 70;
if (true) break;
}
case 2: {
this.state = 78;
if (true) break;
}
case 3: {
this.state = 80;
if (true) break;
}
case 4: {
this.state = 82;
if (true) break;
}
case 5: {
this.state = 84;
if (true) break;
}
case 6: {
this.state = 86;
if (true) break;
}
case 7: {
this.state = 88;
if (true) break;
}
}
if (true) break;

case 62:
//C
this.state = 63;
 BA.debugLineNum = 4365;BA.debugLine="If sValorFiltro.Contains(\"*\") Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 63:
//if
this.state = 68;
if (_svalorfiltro.runMethod(true,"contains",(Object)(RemoteObject.createImmutable("*"))).<Boolean>get().booleanValue()) { 
this.state = 65;
}else {
this.state = 67;
}if (true) break;

case 65:
//C
this.state = 68;
 BA.debugLineNum = 4366;BA.debugLine="ComparadorFiltroSQL=\"LIKE \"";
Debug.JustUpdateDeviceLine();
_comparadorfiltrosql = BA.ObjectToString("LIKE ");Debug.locals.put("ComparadorFiltroSQL", _comparadorfiltrosql);
 BA.debugLineNum = 4367;BA.debugLine="ValorfiltroSQL=sValorFiltro.Replace(\"*\",\"%\")";
Debug.JustUpdateDeviceLine();
_valorfiltrosql = (_svalorfiltro.runMethod(true,"replace",(Object)(BA.ObjectToString("*")),(Object)(RemoteObject.createImmutable("%"))));Debug.locals.put("ValorfiltroSQL", _valorfiltrosql);
 if (true) break;

case 67:
//C
this.state = 68;
 BA.debugLineNum = 4370;BA.debugLine="ComparadorFiltroSQL=\"=\"";
Debug.JustUpdateDeviceLine();
_comparadorfiltrosql = BA.ObjectToString("=");Debug.locals.put("ComparadorFiltroSQL", _comparadorfiltrosql);
 BA.debugLineNum = 4371;BA.debugLine="ValorfiltroSQL=sValorFiltro";
Debug.JustUpdateDeviceLine();
_valorfiltrosql = (_svalorfiltro);Debug.locals.put("ValorfiltroSQL", _valorfiltrosql);
 if (true) break;

case 68:
//C
this.state = 89;
;
 if (true) break;

case 70:
//C
this.state = 71;
 BA.debugLineNum = 4375;BA.debugLine="If sValorFiltro.Contains(\"*\") Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 71:
//if
this.state = 76;
if (_svalorfiltro.runMethod(true,"contains",(Object)(RemoteObject.createImmutable("*"))).<Boolean>get().booleanValue()) { 
this.state = 73;
}else {
this.state = 75;
}if (true) break;

case 73:
//C
this.state = 76;
 BA.debugLineNum = 4376;BA.debugLine="ComparadorFiltroSQL=\"NOT LIKE \"";
Debug.JustUpdateDeviceLine();
_comparadorfiltrosql = BA.ObjectToString("NOT LIKE ");Debug.locals.put("ComparadorFiltroSQL", _comparadorfiltrosql);
 BA.debugLineNum = 4377;BA.debugLine="ValorfiltroSQL=sValorFiltro.Replace(\"*\",\"%\")";
Debug.JustUpdateDeviceLine();
_valorfiltrosql = (_svalorfiltro.runMethod(true,"replace",(Object)(BA.ObjectToString("*")),(Object)(RemoteObject.createImmutable("%"))));Debug.locals.put("ValorfiltroSQL", _valorfiltrosql);
 if (true) break;

case 75:
//C
this.state = 76;
 BA.debugLineNum = 4380;BA.debugLine="ComparadorFiltroSQL=\"<>\"";
Debug.JustUpdateDeviceLine();
_comparadorfiltrosql = BA.ObjectToString("<>");Debug.locals.put("ComparadorFiltroSQL", _comparadorfiltrosql);
 BA.debugLineNum = 4381;BA.debugLine="ValorfiltroSQL=sValorFiltro";
Debug.JustUpdateDeviceLine();
_valorfiltrosql = (_svalorfiltro);Debug.locals.put("ValorfiltroSQL", _valorfiltrosql);
 if (true) break;

case 76:
//C
this.state = 89;
;
 if (true) break;

case 78:
//C
this.state = 89;
 BA.debugLineNum = 4385;BA.debugLine="ComparadorFiltroSQL=\"LIKE \"";
Debug.JustUpdateDeviceLine();
_comparadorfiltrosql = BA.ObjectToString("LIKE ");Debug.locals.put("ComparadorFiltroSQL", _comparadorfiltrosql);
 BA.debugLineNum = 4386;BA.debugLine="ValorfiltroSQL=sValorFiltro.Replace(\"*\",\"%\")";
Debug.JustUpdateDeviceLine();
_valorfiltrosql = (_svalorfiltro.runMethod(true,"replace",(Object)(BA.ObjectToString("*")),(Object)(RemoteObject.createImmutable("%"))));Debug.locals.put("ValorfiltroSQL", _valorfiltrosql);
 BA.debugLineNum = 4388;BA.debugLine="ValorfiltroSQL= ValorfiltroSQL & \"%\"";
Debug.JustUpdateDeviceLine();
_valorfiltrosql = (RemoteObject.concat(_valorfiltrosql,RemoteObject.createImmutable("%")));Debug.locals.put("ValorfiltroSQL", _valorfiltrosql);
 if (true) break;

case 80:
//C
this.state = 89;
 BA.debugLineNum = 4391;BA.debugLine="ComparadorFiltroSQL=\"NOT LIKE \"";
Debug.JustUpdateDeviceLine();
_comparadorfiltrosql = BA.ObjectToString("NOT LIKE ");Debug.locals.put("ComparadorFiltroSQL", _comparadorfiltrosql);
 BA.debugLineNum = 4392;BA.debugLine="ValorfiltroSQL=sValorFiltro.Replace(\"*\",\"%\")";
Debug.JustUpdateDeviceLine();
_valorfiltrosql = (_svalorfiltro.runMethod(true,"replace",(Object)(BA.ObjectToString("*")),(Object)(RemoteObject.createImmutable("%"))));Debug.locals.put("ValorfiltroSQL", _valorfiltrosql);
 BA.debugLineNum = 4394;BA.debugLine="ValorfiltroSQL= ValorfiltroSQL & \"%\"";
Debug.JustUpdateDeviceLine();
_valorfiltrosql = (RemoteObject.concat(_valorfiltrosql,RemoteObject.createImmutable("%")));Debug.locals.put("ValorfiltroSQL", _valorfiltrosql);
 if (true) break;

case 82:
//C
this.state = 89;
 BA.debugLineNum = 4397;BA.debugLine="ComparadorFiltroSQL=\"LIKE \"";
Debug.JustUpdateDeviceLine();
_comparadorfiltrosql = BA.ObjectToString("LIKE ");Debug.locals.put("ComparadorFiltroSQL", _comparadorfiltrosql);
 BA.debugLineNum = 4398;BA.debugLine="ValorfiltroSQL=sValorFiltro.Replace(\"*\",\"%\")";
Debug.JustUpdateDeviceLine();
_valorfiltrosql = (_svalorfiltro.runMethod(true,"replace",(Object)(BA.ObjectToString("*")),(Object)(RemoteObject.createImmutable("%"))));Debug.locals.put("ValorfiltroSQL", _valorfiltrosql);
 BA.debugLineNum = 4400;BA.debugLine="ValorfiltroSQL= \"%\" & ValorfiltroSQL";
Debug.JustUpdateDeviceLine();
_valorfiltrosql = (RemoteObject.concat(RemoteObject.createImmutable("%"),_valorfiltrosql));Debug.locals.put("ValorfiltroSQL", _valorfiltrosql);
 if (true) break;

case 84:
//C
this.state = 89;
 BA.debugLineNum = 4403;BA.debugLine="ComparadorFiltroSQL=\"NOT LIKE \"";
Debug.JustUpdateDeviceLine();
_comparadorfiltrosql = BA.ObjectToString("NOT LIKE ");Debug.locals.put("ComparadorFiltroSQL", _comparadorfiltrosql);
 BA.debugLineNum = 4404;BA.debugLine="ValorfiltroSQL=sValorFiltro.Replace(\"*\",\"%\")";
Debug.JustUpdateDeviceLine();
_valorfiltrosql = (_svalorfiltro.runMethod(true,"replace",(Object)(BA.ObjectToString("*")),(Object)(RemoteObject.createImmutable("%"))));Debug.locals.put("ValorfiltroSQL", _valorfiltrosql);
 BA.debugLineNum = 4406;BA.debugLine="ValorfiltroSQL= \"%\" & ValorfiltroSQL";
Debug.JustUpdateDeviceLine();
_valorfiltrosql = (RemoteObject.concat(RemoteObject.createImmutable("%"),_valorfiltrosql));Debug.locals.put("ValorfiltroSQL", _valorfiltrosql);
 if (true) break;

case 86:
//C
this.state = 89;
 BA.debugLineNum = 4410;BA.debugLine="ComparadorFiltroSQL=\"LIKE \"";
Debug.JustUpdateDeviceLine();
_comparadorfiltrosql = BA.ObjectToString("LIKE ");Debug.locals.put("ComparadorFiltroSQL", _comparadorfiltrosql);
 BA.debugLineNum = 4411;BA.debugLine="ValorfiltroSQL=sValorFiltro.Replace(\"*\",\"%\")";
Debug.JustUpdateDeviceLine();
_valorfiltrosql = (_svalorfiltro.runMethod(true,"replace",(Object)(BA.ObjectToString("*")),(Object)(RemoteObject.createImmutable("%"))));Debug.locals.put("ValorfiltroSQL", _valorfiltrosql);
 BA.debugLineNum = 4413;BA.debugLine="ValorfiltroSQL= \"%\" & ValorfiltroSQL & \"%\"";
Debug.JustUpdateDeviceLine();
_valorfiltrosql = (RemoteObject.concat(RemoteObject.createImmutable("%"),_valorfiltrosql,RemoteObject.createImmutable("%")));Debug.locals.put("ValorfiltroSQL", _valorfiltrosql);
 if (true) break;

case 88:
//C
this.state = 89;
 BA.debugLineNum = 4416;BA.debugLine="ComparadorFiltroSQL=\"NOT LIKE\"";
Debug.JustUpdateDeviceLine();
_comparadorfiltrosql = BA.ObjectToString("NOT LIKE");Debug.locals.put("ComparadorFiltroSQL", _comparadorfiltrosql);
 BA.debugLineNum = 4417;BA.debugLine="ValorfiltroSQL=sValorFiltro.Replace(\"*\",\"%\")";
Debug.JustUpdateDeviceLine();
_valorfiltrosql = (_svalorfiltro.runMethod(true,"replace",(Object)(BA.ObjectToString("*")),(Object)(RemoteObject.createImmutable("%"))));Debug.locals.put("ValorfiltroSQL", _valorfiltrosql);
 BA.debugLineNum = 4419;BA.debugLine="ValorfiltroSQL= \"%\" & ValorfiltroSQL & \"%\"";
Debug.JustUpdateDeviceLine();
_valorfiltrosql = (RemoteObject.concat(RemoteObject.createImmutable("%"),_valorfiltrosql,RemoteObject.createImmutable("%")));Debug.locals.put("ValorfiltroSQL", _valorfiltrosql);
 if (true) break;

case 89:
//C
this.state = 90;
;
 if (true) break;

case 90:
//C
this.state = 97;
;
 BA.debugLineNum = 4424;BA.debugLine="Log(\"ComparadorFiltroSQL \" & ComparadorFiltroSQL";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9166265130",RemoteObject.concat(RemoteObject.createImmutable("ComparadorFiltroSQL "),_comparadorfiltrosql),0);
 BA.debugLineNum = 4425;BA.debugLine="Log(\"ValorfiltroSQL \" & ValorfiltroSQL)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9166265131",RemoteObject.concat(RemoteObject.createImmutable("ValorfiltroSQL "),_valorfiltrosql),0);
 BA.debugLineNum = 4437;BA.debugLine="sbNuevoFiltroSQL.append(\"[\").Append(CampoAnaliza";
Debug.JustUpdateDeviceLine();
_sbnuevofiltrosql.runMethod(false,"Append",(Object)(RemoteObject.createImmutable("["))).runMethod(false,"Append",(Object)(_campoanalizadosql)).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable("]")));
 BA.debugLineNum = 4439;BA.debugLine="sbNuevoFiltroSQL.Append(\" \" & ComparadorFiltroSQ";
Debug.JustUpdateDeviceLine();
_sbnuevofiltrosql.runVoidMethod ("Append",(Object)(RemoteObject.concat(RemoteObject.createImmutable(" "),_comparadorfiltrosql,RemoteObject.createImmutable(" ? "))));
 BA.debugLineNum = 4440;BA.debugLine="lstOperadoresFiltros.Add(OperadorFiltro)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstoperadoresfiltros" /*RemoteObject*/ ).runVoidMethod ("Add",(Object)((_operadorfiltro)));
 BA.debugLineNum = 4441;BA.debugLine="lstCamposFiltros.Add(CampoAnalizadoSQL)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstcamposfiltros" /*RemoteObject*/ ).runVoidMethod ("Add",(Object)((_campoanalizadosql)));
 BA.debugLineNum = 4442;BA.debugLine="lstComparadoresFiltros.Add(ComparadorFiltroSQL)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstcomparadoresfiltros" /*RemoteObject*/ ).runVoidMethod ("Add",(Object)((_comparadorfiltrosql)));
 BA.debugLineNum = 4443;BA.debugLine="lstValoresFiltros.Add(ValorfiltroSQL)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstvaloresfiltros" /*RemoteObject*/ ).runVoidMethod ("Add",(Object)(_valorfiltrosql));
 BA.debugLineNum = 4446;BA.debugLine="sbTextoNuevoFiltro.Append(OperadorFiltro).Append";
Debug.JustUpdateDeviceLine();
_sbtextonuevofiltro.runMethod(false,"Append",(Object)(_operadorfiltro)).runMethod(false,"Append",(Object)(RemoteObject.createImmutable(" ["))).runMethod(false,"Append",(Object)(_campoanalizadosql)).runMethod(false,"Append",(Object)(RemoteObject.createImmutable("] "))).runMethod(false,"Append",(Object)(_comparadorfiltrosql)).runMethod(false,"Append",(Object)(RemoteObject.createImmutable(" "))).runMethod(false,"Append",(Object)(BA.ObjectToString(_valorfiltrosql))).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(" ")));
 BA.debugLineNum = 4448;BA.debugLine="Log(sbTextoNuevoFiltro.ToString)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9166265154",_sbtextonuevofiltro.runMethod(true,"ToString"),0);
 if (true) break;
if (true) break;

case 91:
//C
this.state = 92;
Debug.locals.put("i", _i);
;
 BA.debugLineNum = 4452;BA.debugLine="sCamposFiltrados=sbNuevoFiltroSQL.ToString";
Debug.JustUpdateDeviceLine();
__ref.setField ("_scamposfiltrados" /*RemoteObject*/ ,_sbnuevofiltrosql.runMethod(true,"ToString"));
 BA.debugLineNum = 4472;BA.debugLine="If mFiltroActual<>sbTextoNuevoFiltro Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 92:
//if
this.state = 95;
if (RemoteObject.solveBoolean("!",__ref.getField(true,"_mfiltroactual" /*RemoteObject*/ ),BA.ObjectToString(_sbtextonuevofiltro))) { 
this.state = 94;
}if (true) break;

case 94:
//C
this.state = 95;
 BA.debugLineNum = 4473;BA.debugLine="mFiltroActual=sbTextoNuevoFiltro";
Debug.JustUpdateDeviceLine();
__ref.setField ("_mfiltroactual" /*RemoteObject*/ ,BA.ObjectToString(_sbtextonuevofiltro));
 BA.debugLineNum = 4474;BA.debugLine="NPrimerRegistroVisible=1";
Debug.JustUpdateDeviceLine();
__ref.setField ("_nprimerregistrovisible" /*RemoteObject*/ ,BA.numberCast(int.class, 1));
 BA.debugLineNum = 4476;BA.debugLine="WAIT FOR (ActualizarTableCLV(True)) COMPLETE (rO";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "actualizarfiltro"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_actualizartableclv" /*RemoteObject*/ ,(Object)(parent.__c.getField(true,"True"))));
this.state = 98;
return;
case 98:
//C
this.state = 95;
_robj = (RemoteObject) result.getArrayElement(false,RemoteObject.createImmutable(1));Debug.locals.put("rObj", _robj);
;
 if (true) break;

case 95:
//C
this.state = -1;
;
 BA.debugLineNum = 4483;BA.debugLine="Return Null";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,parent.__c.getField(false,"Null"));return;};
 BA.debugLineNum = 4484;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static void  _complete(RemoteObject __ref,RemoteObject _robj) throws Exception{
}
public static RemoteObject  _actualizartableclv(RemoteObject __ref,RemoteObject _scrollto0) throws Exception{
try {
		Debug.PushSubsStack("ActualizarTableCLV (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6013);
if (RapidSub.canDelegate("actualizartableclv")) { return __ref.runUserSub(false, "jamtableclv","actualizartableclv", __ref, _scrollto0);}
ResumableSub_ActualizarTableCLV rsub = new ResumableSub_ActualizarTableCLV(null,__ref,_scrollto0);
rsub.remoteResumableSub = anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSubForFilter();
rsub.resume(null, null);
return RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.keywords.Common.ResumableSubWrapper"), rsub.remoteResumableSub);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_ActualizarTableCLV extends BA.ResumableSub {
public ResumableSub_ActualizarTableCLV(b4j.docU.jamtableclv parent,RemoteObject __ref,RemoteObject _scrollto0) {
this.parent = parent;
this.__ref = __ref;
this._scrollto0 = _scrollto0;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _scrollto0;
RemoteObject _datetimeformatant = RemoteObject.createImmutable("");
RemoteObject _t1 = RemoteObject.createImmutable(0L);
RemoteObject _sordensql = RemoteObject.createImmutable("");
RemoteObject _sbordensql = RemoteObject.declareNull("anywheresoftware.b4a.keywords.StringBuilderWrapper");
int _idxordensql = 0;
RemoteObject _dol = RemoteObject.declareNull("b4j.docU.jamtableclv._datosordensqljamtableclv");
RemoteObject _stipoorden = RemoteObject.createImmutable("");
RemoteObject _rsregistrosfiltradosvisibles = RemoteObject.declareNull("anywheresoftware.b4j.objects.SQL.ResultSetWrapper");
RemoteObject _sbdatos = RemoteObject.declareNull("anywheresoftware.b4a.keywords.StringBuilderWrapper");
RemoteObject _tirs = RemoteObject.createImmutable(0L);
RemoteObject _interv = RemoteObject.createImmutable(0);
RemoteObject _valacum = RemoteObject.createImmutable(0);
RemoteObject _numpanel = RemoteObject.createImmutable(0);
RemoteObject _anchoclv = RemoteObject.createImmutable(0);
RemoteObject _svclv = RemoteObject.declareNull("anywheresoftware.b4j.objects.ScrollPaneWrapper");
RemoteObject _mregistro = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
RemoteObject _rowid = RemoteObject.createImmutable(0);
RemoteObject _c = RemoteObject.declareNull("b4j.docU.jamtableclv._campoorigendatosjamtableclv");
RemoteObject _stipodato = RemoteObject.createImmutable("");
RemoteObject _pnl = RemoteObject.declareNull("anywheresoftware.b4a.objects.B4XViewWrapper");
int step13;
int limit13;
RemoteObject group90;
int index90;
int groupLen90;

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("ActualizarTableCLV (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6013);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
try {

        switch (state) {
            case -1:
{
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,RemoteObject.createImmutable(null));return;}
case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
Debug.locals.put("ScrollTo0", _scrollto0);
 BA.debugLineNum = 6022;BA.debugLine="DeshabilitarTableCLV";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_deshabilitartableclv" /*RemoteObject*/ );
 BA.debugLineNum = 6024;BA.debugLine="CLVSelections.Clear";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvselections" /*RemoteObject*/ ).runClassMethod (b4j.docU.clvselectionsjamtableclv.class, "_clear" /*RemoteObject*/ );
 BA.debugLineNum = 6026;BA.debugLine="clvDatos.Clear";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runVoidMethod ("_clear");
 BA.debugLineNum = 6028;BA.debugLine="Dim DatetimeFormatAnt As String=DateTime.DateForm";
Debug.JustUpdateDeviceLine();
_datetimeformatant = parent.__c.getField(false,"DateTime").runMethod(true,"getDateFormat");Debug.locals.put("DatetimeFormatAnt", _datetimeformatant);Debug.locals.put("DatetimeFormatAnt", _datetimeformatant);
 BA.debugLineNum = 6029;BA.debugLine="DateTime.DateFormat=\"dd/MM/yyyy\"";
Debug.JustUpdateDeviceLine();
parent.__c.getField(false,"DateTime").runMethod(true,"setDateFormat",BA.ObjectToString("dd/MM/yyyy"));
 BA.debugLineNum = 6032;BA.debugLine="Dim T1 As Long=DateTime.Now";
Debug.JustUpdateDeviceLine();
_t1 = parent.__c.getField(false,"DateTime").runMethod(true,"getNow");Debug.locals.put("T1", _t1);Debug.locals.put("T1", _t1);
 BA.debugLineNum = 6044;BA.debugLine="Dim sOrdenSQL As String";
Debug.JustUpdateDeviceLine();
_sordensql = RemoteObject.createImmutable("");Debug.locals.put("sOrdenSQL", _sordensql);
 BA.debugLineNum = 6045;BA.debugLine="If lstOrdenSQL.Size>0 Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//if
this.state = 14;
if (RemoteObject.solveBoolean(">",__ref.getField(false,"_lstordensql" /*RemoteObject*/ ).runMethod(true,"getSize"),BA.numberCast(double.class, 0))) { 
this.state = 3;
}if (true) break;

case 3:
//C
this.state = 4;
 BA.debugLineNum = 6046;BA.debugLine="lstOrdenSQL.SortType(\"IndiceOrdenSQL\",True)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstordensql" /*RemoteObject*/ ).runVoidMethod ("SortType",(Object)(BA.ObjectToString("IndiceOrdenSQL")),(Object)(parent.__c.getField(true,"True")));
 BA.debugLineNum = 6047;BA.debugLine="Dim sbOrdenSQL As StringBuilder";
Debug.JustUpdateDeviceLine();
_sbordensql = RemoteObject.createNew ("anywheresoftware.b4a.keywords.StringBuilderWrapper");Debug.locals.put("sbOrdenSQL", _sbordensql);
 BA.debugLineNum = 6048;BA.debugLine="sbOrdenSQL.Initialize";
Debug.JustUpdateDeviceLine();
_sbordensql.runVoidMethod ("Initialize");
 BA.debugLineNum = 6049;BA.debugLine="sbOrdenSQL.append(\" ORDER BY \")";
Debug.JustUpdateDeviceLine();
_sbordensql.runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(" ORDER BY ")));
 BA.debugLineNum = 6050;BA.debugLine="For idXOrdenSQL=0 To lstOrdenSQL.Size-1";
Debug.JustUpdateDeviceLine();
if (true) break;

case 4:
//for
this.state = 13;
step13 = 1;
limit13 = RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_lstordensql" /*RemoteObject*/ ).runMethod(true,"getSize"),RemoteObject.createImmutable(1)}, "-",1, 1).<Integer>get().intValue();
_idxordensql = 0 ;
Debug.locals.put("idXOrdenSQL", _idxordensql);
this.state = 106;
if (true) break;

case 106:
//C
this.state = 13;
if ((step13 > 0 && _idxordensql <= limit13) || (step13 < 0 && _idxordensql >= limit13)) this.state = 6;
if (true) break;

case 107:
//C
this.state = 106;
_idxordensql = ((int)(0 + _idxordensql + step13)) ;
Debug.locals.put("idXOrdenSQL", _idxordensql);
if (true) break;

case 6:
//C
this.state = 7;
 BA.debugLineNum = 6051;BA.debugLine="Dim dOl As DatosOrdenSQLJamTableCLV=lstOrdenSQL";
Debug.JustUpdateDeviceLine();
_dol = (__ref.getField(false,"_lstordensql" /*RemoteObject*/ ).runMethod(false,"Get",(Object)(BA.numberCast(int.class, _idxordensql))));Debug.locals.put("dOl", _dol);Debug.locals.put("dOl", _dol);
 BA.debugLineNum = 6052;BA.debugLine="Dim sTipoOrden As String";
Debug.JustUpdateDeviceLine();
_stipoorden = RemoteObject.createImmutable("");Debug.locals.put("sTipoOrden", _stipoorden);
 BA.debugLineNum = 6053;BA.debugLine="If dOl.TipoOrdenSQL=\"Ascendente\" Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 7:
//if
this.state = 12;
if (RemoteObject.solveBoolean("=",_dol.getField(true,"TipoOrdenSQL" /*RemoteObject*/ ),BA.ObjectToString("Ascendente"))) { 
this.state = 9;
}else {
this.state = 11;
}if (true) break;

case 9:
//C
this.state = 12;
 BA.debugLineNum = 6054;BA.debugLine="sTipoOrden=\"ASC\"";
Debug.JustUpdateDeviceLine();
_stipoorden = BA.ObjectToString("ASC");Debug.locals.put("sTipoOrden", _stipoorden);
 if (true) break;

case 11:
//C
this.state = 12;
 BA.debugLineNum = 6056;BA.debugLine="sTipoOrden=\"DESC\"";
Debug.JustUpdateDeviceLine();
_stipoorden = BA.ObjectToString("DESC");Debug.locals.put("sTipoOrden", _stipoorden);
 if (true) break;

case 12:
//C
this.state = 107;
;
 BA.debugLineNum = 6059;BA.debugLine="sbOrdenSQL.Append(\"[\").Append(dOl.AliasCampoOrd";
Debug.JustUpdateDeviceLine();
_sbordensql.runMethod(false,"Append",(Object)(RemoteObject.createImmutable("["))).runMethod(false,"Append",(Object)(_dol.getField(true,"AliasCampoOrdenSQL" /*RemoteObject*/ ))).runMethod(false,"Append",(Object)(RemoteObject.createImmutable("]"))).runMethod(false,"Append",(Object)(RemoteObject.createImmutable(" "))).runMethod(false,"Append",(Object)(_stipoorden)).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(",")));
 if (true) break;
if (true) break;

case 13:
//C
this.state = 14;
Debug.locals.put("idXOrdenSQL", _idxordensql);
;
 BA.debugLineNum = 6061;BA.debugLine="sbOrdenSQL=sbOrdenSQL.Remove(sbOrdenSQL.Length-1";
Debug.JustUpdateDeviceLine();
_sbordensql = _sbordensql.runMethod(false,"Remove",(Object)(RemoteObject.solve(new RemoteObject[] {_sbordensql.runMethod(true,"getLength"),RemoteObject.createImmutable(1)}, "-",1, 1)),(Object)(_sbordensql.runMethod(true,"getLength")));Debug.locals.put("sbOrdenSQL", _sbordensql);
 BA.debugLineNum = 6062;BA.debugLine="sOrdenSQL=sbOrdenSQL.ToString";
Debug.JustUpdateDeviceLine();
_sordensql = _sbordensql.runMethod(true,"ToString");Debug.locals.put("sOrdenSQL", _sordensql);
 if (true) break;

case 14:
//C
this.state = 15;
;
 BA.debugLineNum = 6066;BA.debugLine="Dim rsRegistrosFiltradosVisibles As ResultSet";
Debug.JustUpdateDeviceLine();
_rsregistrosfiltradosvisibles = RemoteObject.createNew ("anywheresoftware.b4j.objects.SQL.ResultSetWrapper");Debug.locals.put("rsRegistrosFiltradosVisibles", _rsregistrosfiltradosvisibles);
 BA.debugLineNum = 6068;BA.debugLine="Dim sbDatos As StringBuilder";
Debug.JustUpdateDeviceLine();
_sbdatos = RemoteObject.createNew ("anywheresoftware.b4a.keywords.StringBuilderWrapper");Debug.locals.put("sbDatos", _sbdatos);
 BA.debugLineNum = 6069;BA.debugLine="sbDatos.Initialize";
Debug.JustUpdateDeviceLine();
_sbdatos.runVoidMethod ("Initialize");
 BA.debugLineNum = 6070;BA.debugLine="If lstValoresFiltros.Size>0 Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 15:
//if
this.state = 54;
if (RemoteObject.solveBoolean(">",__ref.getField(false,"_lstvaloresfiltros" /*RemoteObject*/ ).runMethod(true,"getSize"),BA.numberCast(double.class, 0))) { 
this.state = 17;
}else {
this.state = 36;
}if (true) break;

case 17:
//C
this.state = 18;
 BA.debugLineNum = 6073;BA.debugLine="NTotalRegistrosFiltrados=mSQL.ExecQuerySingleRes";
Debug.JustUpdateDeviceLine();
__ref.setField ("_ntotalregistrosfiltrados" /*RemoteObject*/ ,BA.numberCast(int.class, __ref.getField(false,"_msql" /*RemoteObject*/ ).runMethod(true,"ExecQuerySingleResult2",(Object)(RemoteObject.concat(RemoteObject.createImmutable("select count(*) from tblOrigenDatos where "),__ref.getField(true,"_scamposfiltrados" /*RemoteObject*/ ))),(Object)(__ref.getField(false,"_lstvaloresfiltros" /*RemoteObject*/ )))));
 BA.debugLineNum = 6075;BA.debugLine="Log(\"sCamposFiltrados \" & sCamposFiltrados)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9168099902",RemoteObject.concat(RemoteObject.createImmutable("sCamposFiltrados "),__ref.getField(true,"_scamposfiltrados" /*RemoteObject*/ )),0);
 BA.debugLineNum = 6076;BA.debugLine="Log(\"NTotalRegistrosFiltrados \" & NTotalRegistro";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9168099903",RemoteObject.concat(RemoteObject.createImmutable("NTotalRegistrosFiltrados "),__ref.getField(true,"_ntotalregistrosfiltrados" /*RemoteObject*/ )),0);
 BA.debugLineNum = 6078;BA.debugLine="If NUltimoRegistroVisible>NTotalRegistrosFiltrad";
Debug.JustUpdateDeviceLine();
if (true) break;

case 18:
//if
this.state = 23;
if (RemoteObject.solveBoolean(">",__ref.getField(true,"_nultimoregistrovisible" /*RemoteObject*/ ),BA.numberCast(double.class, __ref.getField(true,"_ntotalregistrosfiltrados" /*RemoteObject*/ )))) { 
this.state = 20;
;}if (true) break;

case 20:
//C
this.state = 23;
__ref.setField ("_nultimoregistrovisible" /*RemoteObject*/ ,__ref.getField(true,"_ntotalregistrosfiltrados" /*RemoteObject*/ ));
if (true) break;

case 23:
//C
this.state = 24;
;
 BA.debugLineNum = 6080;BA.debugLine="If sOrdenSQL<>\"\" Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 24:
//if
this.state = 29;
if (RemoteObject.solveBoolean("!",_sordensql,BA.ObjectToString(""))) { 
this.state = 26;
}else {
this.state = 28;
}if (true) break;

case 26:
//C
this.state = 29;
 BA.debugLineNum = 6081;BA.debugLine="sbDatos.Append(\"select \").append(msCampostblOri";
Debug.JustUpdateDeviceLine();
_sbdatos.runMethod(false,"Append",(Object)(RemoteObject.createImmutable("select "))).runMethod(false,"Append",(Object)(__ref.getField(true,"_mscampostblorigendatos" /*RemoteObject*/ ))).runMethod(false,"Append",(Object)(RemoteObject.createImmutable(" from tblOrigenDatos where "))).runMethod(false,"Append",(Object)(__ref.getField(true,"_scamposfiltrados" /*RemoteObject*/ ))).runVoidMethod ("Append",(Object)(_sordensql));
 if (true) break;

case 28:
//C
this.state = 29;
 BA.debugLineNum = 6083;BA.debugLine="sbDatos.Append(\"select \").Append(msCampostblOri";
Debug.JustUpdateDeviceLine();
_sbdatos.runMethod(false,"Append",(Object)(RemoteObject.createImmutable("select "))).runMethod(false,"Append",(Object)(__ref.getField(true,"_mscampostblorigendatos" /*RemoteObject*/ ))).runMethod(false,"Append",(Object)(RemoteObject.createImmutable(" from tblOrigenDatos where "))).runVoidMethod ("Append",(Object)(__ref.getField(true,"_scamposfiltrados" /*RemoteObject*/ )));
 if (true) break;
;
 BA.debugLineNum = 6090;BA.debugLine="Try";
Debug.JustUpdateDeviceLine();

case 29:
//try
this.state = 34;
this.catchState = 33;
this.state = 31;
if (true) break;

case 31:
//C
this.state = 34;
this.catchState = 33;
 BA.debugLineNum = 6092;BA.debugLine="Log(\"****** FILTRO ************\")";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9168099919",RemoteObject.createImmutable("****** FILTRO ************"),0);
 BA.debugLineNum = 6093;BA.debugLine="Log(sbDatos.ToString)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9168099920",_sbdatos.runMethod(true,"ToString"),0);
 BA.debugLineNum = 6094;BA.debugLine="Log(lstValoresFiltros)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9168099921",BA.ObjectToString(__ref.getField(false,"_lstvaloresfiltros" /*RemoteObject*/ )),0);
 BA.debugLineNum = 6095;BA.debugLine="Log(\"******************\")";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9168099922",RemoteObject.createImmutable("******************"),0);
 BA.debugLineNum = 6097;BA.debugLine="rsRegistrosFiltradosVisibles=mSQL.ExecQuery2(sb";
Debug.JustUpdateDeviceLine();
_rsregistrosfiltradosvisibles = __ref.getField(false,"_msql" /*RemoteObject*/ ).runMethod(false,"ExecQuery2",(Object)(_sbdatos.runMethod(true,"ToString")),(Object)(__ref.getField(false,"_lstvaloresfiltros" /*RemoteObject*/ )));Debug.locals.put("rsRegistrosFiltradosVisibles", _rsregistrosfiltradosvisibles);
 Debug.CheckDeviceExceptions();
if (true) break;

case 33:
//C
this.state = 34;
this.catchState = 0;
 BA.debugLineNum = 6099;BA.debugLine="LogColor(LastException.Message, xui.Color_Red)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9168099926",parent.__c.runMethod(false,"LastException",__ref.getField(false, "ba")).runMethod(true,"getMessage"),__ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"Color_Red"));
 BA.debugLineNum = 6100;BA.debugLine="fx.Msgbox(mParentForm, \"Error SQLite \" & LastEx";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_fx" /*RemoteObject*/ ).runVoidMethodAndSync ("Msgbox",(Object)(__ref.getField(false,"_mparentform" /*RemoteObject*/ )),(Object)(RemoteObject.concat(RemoteObject.createImmutable("Error SQLite "),parent.__c.runMethod(false,"LastException",__ref.getField(false, "ba")).runMethod(true,"getMessage"),parent.__c.getField(true,"CRLF"),parent.__c.getField(true,"CRLF"),_sbdatos.runMethod(true,"ToString"),parent.__c.getField(true,"CRLF"),parent.__c.getField(true,"CRLF"),RemoteObject.createImmutable("Avisa al administrador de la aplicación."))),(Object)(RemoteObject.createImmutable("Error")));
 BA.debugLineNum = 6101;BA.debugLine="ExitApplication";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("ExitApplication");
 if (true) break;
if (true) break;

case 34:
//C
this.state = 54;
this.catchState = 0;
;
 if (true) break;

case 36:
//C
this.state = 37;
 BA.debugLineNum = 6104;BA.debugLine="NTotalRegistrosFiltrados=NTotalRegistros";
Debug.JustUpdateDeviceLine();
__ref.setField ("_ntotalregistrosfiltrados" /*RemoteObject*/ ,__ref.getField(true,"_ntotalregistros" /*RemoteObject*/ ));
 BA.debugLineNum = 6105;BA.debugLine="If NUltimoRegistroVisible>NTotalRegistrosFiltrad";
Debug.JustUpdateDeviceLine();
if (true) break;

case 37:
//if
this.state = 42;
if (RemoteObject.solveBoolean(">",__ref.getField(true,"_nultimoregistrovisible" /*RemoteObject*/ ),BA.numberCast(double.class, __ref.getField(true,"_ntotalregistrosfiltrados" /*RemoteObject*/ )))) { 
this.state = 39;
;}if (true) break;

case 39:
//C
this.state = 42;
__ref.setField ("_nultimoregistrovisible" /*RemoteObject*/ ,__ref.getField(true,"_ntotalregistrosfiltrados" /*RemoteObject*/ ));
if (true) break;

case 42:
//C
this.state = 43;
;
 BA.debugLineNum = 6106;BA.debugLine="If sOrdenSQL<>\"\" Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 43:
//if
this.state = 48;
if (RemoteObject.solveBoolean("!",_sordensql,BA.ObjectToString(""))) { 
this.state = 45;
}else {
this.state = 47;
}if (true) break;

case 45:
//C
this.state = 48;
 BA.debugLineNum = 6107;BA.debugLine="sbDatos.Append(\"select \").Append(msCampostblOri";
Debug.JustUpdateDeviceLine();
_sbdatos.runMethod(false,"Append",(Object)(RemoteObject.createImmutable("select "))).runMethod(false,"Append",(Object)(__ref.getField(true,"_mscampostblorigendatos" /*RemoteObject*/ ))).runMethod(false,"Append",(Object)(RemoteObject.createImmutable(" from tblOrigenDatos "))).runVoidMethod ("Append",(Object)(_sordensql));
 if (true) break;

case 47:
//C
this.state = 48;
 BA.debugLineNum = 6109;BA.debugLine="sbDatos.Append(\"select \").Append(msCampostblOri";
Debug.JustUpdateDeviceLine();
_sbdatos.runMethod(false,"Append",(Object)(RemoteObject.createImmutable("select "))).runMethod(false,"Append",(Object)(__ref.getField(true,"_mscampostblorigendatos" /*RemoteObject*/ ))).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(" from tblOrigenDatos")));
 if (true) break;
;
 BA.debugLineNum = 6116;BA.debugLine="Try";
Debug.JustUpdateDeviceLine();

case 48:
//try
this.state = 53;
this.catchState = 52;
this.state = 50;
if (true) break;

case 50:
//C
this.state = 53;
this.catchState = 52;
 BA.debugLineNum = 6118;BA.debugLine="Log(\"******SIN FILTRO ************\")";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9168099945",RemoteObject.createImmutable("******SIN FILTRO ************"),0);
 BA.debugLineNum = 6119;BA.debugLine="Log(sbDatos.ToString)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9168099946",_sbdatos.runMethod(true,"ToString"),0);
 BA.debugLineNum = 6120;BA.debugLine="Log(\"******************\")";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9168099947",RemoteObject.createImmutable("******************"),0);
 BA.debugLineNum = 6122;BA.debugLine="rsRegistrosFiltradosVisibles=mSQL.ExecQuery(sbD";
Debug.JustUpdateDeviceLine();
_rsregistrosfiltradosvisibles = __ref.getField(false,"_msql" /*RemoteObject*/ ).runMethod(false,"ExecQuery",(Object)(_sbdatos.runMethod(true,"ToString")));Debug.locals.put("rsRegistrosFiltradosVisibles", _rsregistrosfiltradosvisibles);
 Debug.CheckDeviceExceptions();
if (true) break;

case 52:
//C
this.state = 53;
this.catchState = 0;
 BA.debugLineNum = 6124;BA.debugLine="LogColor(LastException.Message, xui.Color_Red)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9168099951",parent.__c.runMethod(false,"LastException",__ref.getField(false, "ba")).runMethod(true,"getMessage"),__ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"Color_Red"));
 BA.debugLineNum = 6125;BA.debugLine="fx.Msgbox(mParentForm, \"Error SQLite \" & LastEx";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_fx" /*RemoteObject*/ ).runVoidMethodAndSync ("Msgbox",(Object)(__ref.getField(false,"_mparentform" /*RemoteObject*/ )),(Object)(RemoteObject.concat(RemoteObject.createImmutable("Error SQLite "),parent.__c.runMethod(false,"LastException",__ref.getField(false, "ba")).runMethod(true,"getMessage"),parent.__c.getField(true,"CRLF"),parent.__c.getField(true,"CRLF"),_sbdatos.runMethod(true,"ToString"),parent.__c.getField(true,"CRLF"),parent.__c.getField(true,"CRLF"),RemoteObject.createImmutable("Avisa al administrador de la aplicación."))),(Object)(RemoteObject.createImmutable("Error")));
 BA.debugLineNum = 6126;BA.debugLine="ExitApplication";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("ExitApplication");
 if (true) break;
if (true) break;

case 53:
//C
this.state = 54;
this.catchState = 0;
;
 if (true) break;
;
 BA.debugLineNum = 6130;BA.debugLine="If NTotalRegistrosFiltrados>0 Then";
Debug.JustUpdateDeviceLine();

case 54:
//if
this.state = 59;
if (RemoteObject.solveBoolean(">",__ref.getField(true,"_ntotalregistrosfiltrados" /*RemoteObject*/ ),BA.numberCast(double.class, 0))) { 
this.state = 56;
}else {
this.state = 58;
}if (true) break;

case 56:
//C
this.state = 59;
 BA.debugLineNum = 6134;BA.debugLine="lblRecords.Text=\"Registros: \" & NumberFormat2(NT";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lblrecords" /*RemoteObject*/ ).runMethod(true,"setText",RemoteObject.concat(RemoteObject.createImmutable("Registros: "),parent.__c.runMethod(true,"NumberFormat2",(Object)(BA.numberCast(double.class, __ref.getField(true,"_ntotalregistros" /*RemoteObject*/ ))),(Object)(BA.numberCast(int.class, 1)),(Object)(BA.numberCast(int.class, 0)),(Object)(BA.numberCast(int.class, 0)),(Object)(parent.__c.getField(true,"True"))),RemoteObject.createImmutable("  Filtrados: "),parent.__c.runMethod(true,"NumberFormat2",(Object)(BA.numberCast(double.class, __ref.getField(true,"_ntotalregistrosfiltrados" /*RemoteObject*/ ))),(Object)(BA.numberCast(int.class, 1)),(Object)(BA.numberCast(int.class, 0)),(Object)(BA.numberCast(int.class, 0)),(Object)(parent.__c.getField(true,"True")))));
 if (true) break;

case 58:
//C
this.state = 59;
 BA.debugLineNum = 6139;BA.debugLine="lblRecords.Text=\"Registros: \" & NumberFormat2(NT";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lblrecords" /*RemoteObject*/ ).runMethod(true,"setText",RemoteObject.concat(RemoteObject.createImmutable("Registros: "),parent.__c.runMethod(true,"NumberFormat2",(Object)(BA.numberCast(double.class, __ref.getField(true,"_ntotalregistros" /*RemoteObject*/ ))),(Object)(BA.numberCast(int.class, 1)),(Object)(BA.numberCast(int.class, 0)),(Object)(BA.numberCast(int.class, 0)),(Object)(parent.__c.getField(true,"True"))),RemoteObject.createImmutable("  Filtrados: "),parent.__c.runMethod(true,"NumberFormat2",(Object)(BA.numberCast(double.class, __ref.getField(true,"_ntotalregistrosfiltrados" /*RemoteObject*/ ))),(Object)(BA.numberCast(int.class, 1)),(Object)(BA.numberCast(int.class, 0)),(Object)(BA.numberCast(int.class, 0)),(Object)(parent.__c.getField(true,"True")))));
 if (true) break;

case 59:
//C
this.state = 60;
;
 BA.debugLineNum = 6155;BA.debugLine="Dim tiRS As Long=DateTime.Now";
Debug.JustUpdateDeviceLine();
_tirs = parent.__c.getField(false,"DateTime").runMethod(true,"getNow");Debug.locals.put("tiRS", _tirs);Debug.locals.put("tiRS", _tirs);
 BA.debugLineNum = 6166;BA.debugLine="Dim Interv As Double=Round2(100/NTotalRegistrosFi";
Debug.JustUpdateDeviceLine();
_interv = parent.__c.runMethod(true,"Round2",(Object)(RemoteObject.solve(new RemoteObject[] {RemoteObject.createImmutable(100),__ref.getField(true,"_ntotalregistrosfiltrados" /*RemoteObject*/ )}, "/",0, 0)),(Object)(BA.numberCast(int.class, 2)));Debug.locals.put("Interv", _interv);Debug.locals.put("Interv", _interv);
 BA.debugLineNum = 6167;BA.debugLine="Dim ValAcum As Double";
Debug.JustUpdateDeviceLine();
_valacum = RemoteObject.createImmutable(0);Debug.locals.put("ValAcum", _valacum);
 BA.debugLineNum = 6169;BA.debugLine="pnlBaseJamCircularProgressBar.Enabled=True";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_pnlbasejamcircularprogressbar" /*RemoteObject*/ ).runMethod(true,"setEnabled",parent.__c.getField(true,"True"));
 BA.debugLineNum = 6170;BA.debugLine="pnlBaseJamCircularProgressBar.Visible=True";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_pnlbasejamcircularprogressbar" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"True"));
 BA.debugLineNum = 6171;BA.debugLine="jamCircularProgressBarJamTableCLV.Visible=True";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_jamcircularprogressbarjamtableclv" /*RemoteObject*/ ).runClassMethod (b4j.docU.jamcircularprogressbar.class, "_setvisible" /*RemoteObject*/ ,parent.__c.getField(true,"True"));
 BA.debugLineNum = 6172;BA.debugLine="jamCircularProgressBarJamTableCLV.Enabled=True";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_jamcircularprogressbarjamtableclv" /*RemoteObject*/ ).runClassMethod (b4j.docU.jamcircularprogressbar.class, "_setenabled" /*RemoteObject*/ ,parent.__c.getField(true,"True"));
 BA.debugLineNum = 6175;BA.debugLine="Dim NumPanel As Int";
Debug.JustUpdateDeviceLine();
_numpanel = RemoteObject.createImmutable(0);Debug.locals.put("NumPanel", _numpanel);
 BA.debugLineNum = 6176;BA.debugLine="Dim AnchoCLV As Double=clvDatos.AsView.Width";
Debug.JustUpdateDeviceLine();
_anchoclv = __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(false,"_asview").runMethod(true,"getWidth");Debug.locals.put("AnchoCLV", _anchoclv);Debug.locals.put("AnchoCLV", _anchoclv);
 BA.debugLineNum = 6179;BA.debugLine="Dim svCLV As ScrollPane=clvDatos.sv";
Debug.JustUpdateDeviceLine();
_svclv = RemoteObject.createNew ("anywheresoftware.b4j.objects.ScrollPaneWrapper");
_svclv = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.ScrollPaneWrapper"), __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).getField(false,"_sv").getObject());Debug.locals.put("svCLV", _svclv);Debug.locals.put("svCLV", _svclv);
 BA.debugLineNum = 6180;BA.debugLine="svCLV.SetHScrollVisibility(\"ALWAYS\")";
Debug.JustUpdateDeviceLine();
_svclv.runVoidMethod ("SetHScrollVisibility",(Object)(BA.getEnumFromString(BA.getDeviceClass("javafx.scene.control.ScrollPane.ScrollBarPolicy"),RemoteObject.createImmutable("ALWAYS"))));
 BA.debugLineNum = 6182;BA.debugLine="Do While rsRegistrosFiltradosVisibles.NextRow";
Debug.JustUpdateDeviceLine();
if (true) break;

case 60:
//do while
this.state = 92;
while (_rsregistrosfiltradosvisibles.runMethod(true,"NextRow").<Boolean>get().booleanValue()) {
this.state = 62;
if (true) break;
}
if (true) break;

case 62:
//C
this.state = 63;
 BA.debugLineNum = 6184;BA.debugLine="Dim mRegistro As Map";
Debug.JustUpdateDeviceLine();
_mregistro = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");Debug.locals.put("mRegistro", _mregistro);
 BA.debugLineNum = 6185;BA.debugLine="mRegistro.Initialize";
Debug.JustUpdateDeviceLine();
_mregistro.runVoidMethod ("Initialize");
 BA.debugLineNum = 6187;BA.debugLine="Dim RowID As Int=rsRegistrosFiltradosVisibles.Ge";
Debug.JustUpdateDeviceLine();
_rowid = _rsregistrosfiltradosvisibles.runMethod(true,"GetInt",(Object)(RemoteObject.createImmutable("rowid")));Debug.locals.put("RowID", _rowid);Debug.locals.put("RowID", _rowid);
 BA.debugLineNum = 6188;BA.debugLine="mRegistro.Put(\"rowid\",RowID)";
Debug.JustUpdateDeviceLine();
_mregistro.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("rowid"))),(Object)((_rowid)));
 BA.debugLineNum = 6191;BA.debugLine="For Each c As CampoOrigenDatosJamTableCLV In mLs";
Debug.JustUpdateDeviceLine();
if (true) break;

case 63:
//for
this.state = 82;
group90 = __ref.getField(false,"_mlstcamposorigendatos" /*RemoteObject*/ );
index90 = 0;
groupLen90 = group90.runMethod(true,"getSize").<Integer>get();
Debug.locals.put("c", _c);
this.state = 108;
if (true) break;

case 108:
//C
this.state = 82;
if (index90 < groupLen90) {
this.state = 65;
_c = (group90.runMethod(false,"Get",index90));Debug.locals.put("c", _c);}
if (true) break;

case 109:
//C
this.state = 108;
index90++;
Debug.locals.put("c", _c);
if (true) break;

case 65:
//C
this.state = 66;
 BA.debugLineNum = 6192;BA.debugLine="Dim sTipoDato As String=c.TipoDato";
Debug.JustUpdateDeviceLine();
_stipodato = _c.getField(true,"TipoDato" /*RemoteObject*/ );Debug.locals.put("sTipoDato", _stipodato);Debug.locals.put("sTipoDato", _stipodato);
 BA.debugLineNum = 6193;BA.debugLine="Select sTipoDato";
Debug.JustUpdateDeviceLine();
if (true) break;

case 66:
//select
this.state = 81;
switch (BA.switchObjectToInt(_stipodato,BA.ObjectToString("INTEGER"),BA.ObjectToString("REAL"),BA.ObjectToString("TEXT"))) {
case 0: {
this.state = 68;
if (true) break;
}
case 1: {
this.state = 70;
if (true) break;
}
case 2: {
this.state = 78;
if (true) break;
}
default: {
this.state = 80;
if (true) break;
}
}
if (true) break;

case 68:
//C
this.state = 81;
 BA.debugLineNum = 6195;BA.debugLine="mRegistro.Put(c.AliasCampo,rsRegistrosFiltrad";
Debug.JustUpdateDeviceLine();
_mregistro.runVoidMethod ("Put",(Object)((_c.getField(true,"AliasCampo" /*RemoteObject*/ ))),(Object)((_rsregistrosfiltradosvisibles.runMethod(true,"GetInt",(Object)(_c.getField(true,"AliasCampo" /*RemoteObject*/ ))))));
 if (true) break;

case 70:
//C
this.state = 71;
 BA.debugLineNum = 6197;BA.debugLine="If c.EsFecha Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 71:
//if
this.state = 76;
if (_c.getField(true,"EsFecha" /*RemoteObject*/ ).<Boolean>get().booleanValue()) { 
this.state = 73;
}else {
this.state = 75;
}if (true) break;

case 73:
//C
this.state = 76;
 BA.debugLineNum = 6198;BA.debugLine="mRegistro.Put(c.AliasCampo,rsRegistrosFiltra";
Debug.JustUpdateDeviceLine();
_mregistro.runVoidMethod ("Put",(Object)((_c.getField(true,"AliasCampo" /*RemoteObject*/ ))),(Object)((_rsregistrosfiltradosvisibles.runMethod(true,"GetLong",(Object)(_c.getField(true,"AliasCampo" /*RemoteObject*/ ))))));
 if (true) break;

case 75:
//C
this.state = 76;
 BA.debugLineNum = 6200;BA.debugLine="mRegistro.Put(c.AliasCampo,rsRegistrosFiltra";
Debug.JustUpdateDeviceLine();
_mregistro.runVoidMethod ("Put",(Object)((_c.getField(true,"AliasCampo" /*RemoteObject*/ ))),(Object)((_rsregistrosfiltradosvisibles.runMethod(true,"GetDouble",(Object)(_c.getField(true,"AliasCampo" /*RemoteObject*/ ))))));
 if (true) break;

case 76:
//C
this.state = 81;
;
 if (true) break;

case 78:
//C
this.state = 81;
 BA.debugLineNum = 6204;BA.debugLine="mRegistro.Put(c.AliasCampo,rsRegistrosFiltrad";
Debug.JustUpdateDeviceLine();
_mregistro.runVoidMethod ("Put",(Object)((_c.getField(true,"AliasCampo" /*RemoteObject*/ ))),(Object)((_rsregistrosfiltradosvisibles.runMethod(true,"GetString",(Object)(_c.getField(true,"AliasCampo" /*RemoteObject*/ ))))));
 if (true) break;

case 80:
//C
this.state = 81;
 BA.debugLineNum = 6206;BA.debugLine="mRegistro.Put(c.AliasCampo,rsRegistrosFiltrad";
Debug.JustUpdateDeviceLine();
_mregistro.runVoidMethod ("Put",(Object)((_c.getField(true,"AliasCampo" /*RemoteObject*/ ))),(Object)((_rsregistrosfiltradosvisibles.runMethod(true,"GetString",(Object)(_c.getField(true,"AliasCampo" /*RemoteObject*/ ))))));
 if (true) break;

case 81:
//C
this.state = 109;
;
 if (true) break;
if (true) break;
Debug.locals.put("c", _c);
;
 BA.debugLineNum = 6224;BA.debugLine="If mUsarPCLV Then";
Debug.JustUpdateDeviceLine();

case 82:
//if
this.state = 87;
if (__ref.getField(true,"_musarpclv" /*RemoteObject*/ ).<Boolean>get().booleanValue()) { 
this.state = 84;
}else {
this.state = 86;
}if (true) break;

case 84:
//C
this.state = 87;
 BA.debugLineNum = 6226;BA.debugLine="PCLV.AddItem(mAlturaItems, xui.Color_Transparen";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_pclv" /*RemoteObject*/ ).runClassMethod (b4j.docU.preoptimizedclv.class, "_additem" /*RemoteObject*/ ,(Object)(__ref.getField(true,"_malturaitems" /*RemoteObject*/ )),(Object)(__ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"Color_Transparent")),(Object)((_mregistro.getObject())));
 if (true) break;

case 86:
//C
this.state = 87;
 BA.debugLineNum = 6234;BA.debugLine="Dim pnl As B4XView = xui.CreatePanel(Null)";
Debug.JustUpdateDeviceLine();
_pnl = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");
_pnl = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"CreatePanel",__ref.getField(false, "ba"),(Object)(BA.ObjectToString(parent.__c.getField(false,"Null"))));Debug.locals.put("pnl", _pnl);Debug.locals.put("pnl", _pnl);
 BA.debugLineNum = 6235;BA.debugLine="pnl.SetLayoutAnimated(0, 0, 0, AnchoCLV, mAltur";
Debug.JustUpdateDeviceLine();
_pnl.runVoidMethod ("SetLayoutAnimated",(Object)(BA.numberCast(int.class, 0)),(Object)(BA.numberCast(double.class, 0)),(Object)(BA.numberCast(double.class, 0)),(Object)(_anchoclv),(Object)(BA.numberCast(double.class, __ref.getField(true,"_malturaitems" /*RemoteObject*/ ))));
 BA.debugLineNum = 6240;BA.debugLine="pnl.Color=ArrayColoresItems(NumPanel Mod 2)";
Debug.JustUpdateDeviceLine();
_pnl.runMethod(true,"setColor",__ref.getField(false,"_arraycoloresitems" /*RemoteObject*/ ).getArrayElement(true,RemoteObject.solve(new RemoteObject[] {_numpanel,RemoteObject.createImmutable(2)}, "%",0, 1)));
 BA.debugLineNum = 6247;BA.debugLine="clvDatos.Add(pnl,mRegistro)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runVoidMethod ("_add",(Object)(_pnl),(Object)((_mregistro.getObject())));
 if (true) break;

case 87:
//C
this.state = 88;
;
 BA.debugLineNum = 6250;BA.debugLine="ValAcum=ValAcum+Interv";
Debug.JustUpdateDeviceLine();
_valacum = RemoteObject.solve(new RemoteObject[] {_valacum,_interv}, "+",1, 0);Debug.locals.put("ValAcum", _valacum);
 BA.debugLineNum = 6251;BA.debugLine="ValAcum=Min(ValAcum,100)";
Debug.JustUpdateDeviceLine();
_valacum = parent.__c.runMethod(true,"Min",(Object)(_valacum),(Object)(BA.numberCast(double.class, 100)));Debug.locals.put("ValAcum", _valacum);
 BA.debugLineNum = 6252;BA.debugLine="If (Round(ValAcum) Mod 5)=0 Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 88:
//if
this.state = 91;
if (RemoteObject.solveBoolean("=",(RemoteObject.solve(new RemoteObject[] {parent.__c.runMethod(true,"Round",(Object)(_valacum)),RemoteObject.createImmutable(5)}, "%",0, 2)),BA.numberCast(long.class, 0))) { 
this.state = 90;
}if (true) break;

case 90:
//C
this.state = 91;
 BA.debugLineNum = 6253;BA.debugLine="jamCircularProgressBarJamTableCLV.Value=ValAcum";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_jamcircularprogressbarjamtableclv" /*RemoteObject*/ ).runClassMethod (b4j.docU.jamcircularprogressbar.class, "_setvalue" /*RemoteObject*/ ,BA.numberCast(float.class, _valacum));
 BA.debugLineNum = 6254;BA.debugLine="Sleep(0)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("Sleep",__ref.getField(false, "ba"),anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "actualizartableclv"),BA.numberCast(int.class, 0));
this.state = 110;
return;
case 110:
//C
this.state = 91;
;
 if (true) break;

case 91:
//C
this.state = 60;
;
 BA.debugLineNum = 6257;BA.debugLine="NumPanel=NumPanel+1";
Debug.JustUpdateDeviceLine();
_numpanel = RemoteObject.solve(new RemoteObject[] {_numpanel,RemoteObject.createImmutable(1)}, "+",1, 1);Debug.locals.put("NumPanel", _numpanel);
 if (true) break;
;
 BA.debugLineNum = 6259;BA.debugLine="If mUsarPCLV Then";
Debug.JustUpdateDeviceLine();

case 92:
//if
this.state = 95;
if (__ref.getField(true,"_musarpclv" /*RemoteObject*/ ).<Boolean>get().booleanValue()) { 
this.state = 94;
}if (true) break;

case 94:
//C
this.state = 95;
 BA.debugLineNum = 6260;BA.debugLine="PCLV.Commit";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_pclv" /*RemoteObject*/ ).runClassMethod (b4j.docU.preoptimizedclv.class, "_commit" /*RemoteObject*/ );
 if (true) break;

case 95:
//C
this.state = 96;
;
 BA.debugLineNum = 6264;BA.debugLine="jamCircularProgressBarJamTableCLV.Visible=False";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_jamcircularprogressbarjamtableclv" /*RemoteObject*/ ).runClassMethod (b4j.docU.jamcircularprogressbar.class, "_setvisible" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 BA.debugLineNum = 6265;BA.debugLine="jamCircularProgressBarJamTableCLV.Value=0";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_jamcircularprogressbarjamtableclv" /*RemoteObject*/ ).runClassMethod (b4j.docU.jamcircularprogressbar.class, "_setvalue" /*RemoteObject*/ ,BA.numberCast(float.class, 0));
 BA.debugLineNum = 6267;BA.debugLine="pnlBaseJamCircularProgressBar.Visible=False";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_pnlbasejamcircularprogressbar" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"False"));
 BA.debugLineNum = 6268;BA.debugLine="pnlBaseJamCircularProgressBar.Enabled=False";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_pnlbasejamcircularprogressbar" /*RemoteObject*/ ).runMethod(true,"setEnabled",parent.__c.getField(true,"False"));
 BA.debugLineNum = 6269;BA.debugLine="Sleep(0)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("Sleep",__ref.getField(false, "ba"),anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "actualizartableclv"),BA.numberCast(int.class, 0));
this.state = 111;
return;
case 111:
//C
this.state = 96;
;
 BA.debugLineNum = 6270;BA.debugLine="rsRegistrosFiltradosVisibles.Close";
Debug.JustUpdateDeviceLine();
_rsregistrosfiltradosvisibles.runVoidMethod ("Close");
 BA.debugLineNum = 6272;BA.debugLine="Log($\"Fin Actualizacion Recordset. Tiempo Ejecuci";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9168100099",(RemoteObject.concat(RemoteObject.createImmutable("Fin Actualizacion Recordset. Tiempo Ejecución "),parent.__c.runMethod(true,"SmartStringFormatter",(Object)(BA.ObjectToString("")),(Object)((RemoteObject.solve(new RemoteObject[] {parent.__c.getField(false,"DateTime").runMethod(true,"getNow"),_tirs}, "-",1, 2)))),RemoteObject.createImmutable("ms"))),0);
 BA.debugLineNum = 6290;BA.debugLine="DateTime.DateFormat=DatetimeFormatAnt";
Debug.JustUpdateDeviceLine();
parent.__c.getField(false,"DateTime").runMethod(true,"setDateFormat",_datetimeformatant);
 BA.debugLineNum = 6292;BA.debugLine="If ScrollTo0 And clvDatos.Size>0 Then clvDatos.Ju";
Debug.JustUpdateDeviceLine();
if (true) break;

case 96:
//if
this.state = 101;
if (RemoteObject.solveBoolean(".",_scrollto0) && RemoteObject.solveBoolean(">",__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"_getsize"),BA.numberCast(double.class, 0))) { 
this.state = 98;
;}if (true) break;

case 98:
//C
this.state = 101;
__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runVoidMethod ("_jumptoitem",(Object)(BA.numberCast(int.class, 0)));
if (true) break;

case 101:
//C
this.state = 102;
;
 BA.debugLineNum = 6294;BA.debugLine="Log($\"Fin Actualizar tv. Tiempo Ejecución ${DateT";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9168100121",(RemoteObject.concat(RemoteObject.createImmutable("Fin Actualizar tv. Tiempo Ejecución "),parent.__c.runMethod(true,"SmartStringFormatter",(Object)(BA.ObjectToString("")),(Object)((RemoteObject.solve(new RemoteObject[] {parent.__c.getField(false,"DateTime").runMethod(true,"getNow"),_t1}, "-",1, 2)))),RemoteObject.createImmutable("ms"))),0);
 BA.debugLineNum = 6295;BA.debugLine="HabilitarTableCLV";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_habilitartableclv" /*RemoteObject*/ );
 BA.debugLineNum = 6299;BA.debugLine="clvDatos_VisibleRangeChanged(clvDatos.FirstVisibl";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_clvdatos_visiblerangechanged" /*RemoteObject*/ ,(Object)(__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"_getfirstvisibleindex")),(Object)(__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"_getlastvisibleindex")));
 BA.debugLineNum = 6301;BA.debugLine="If SubExists(mCallBack,mEventName & \"_AfterUpdate";
Debug.JustUpdateDeviceLine();
if (true) break;

case 102:
//if
this.state = 105;
if (parent.__c.runMethod(true,"SubExists",__ref.getField(false, "ba"),(Object)(__ref.getField(false,"_mcallback" /*RemoteObject*/ )),(Object)(RemoteObject.concat(__ref.getField(true,"_meventname" /*RemoteObject*/ ),RemoteObject.createImmutable("_AfterUpdateJamTableCLV")))).<Boolean>get().booleanValue()) { 
this.state = 104;
}if (true) break;

case 104:
//C
this.state = 105;
 BA.debugLineNum = 6302;BA.debugLine="CallSub(mCallBack,mEventName & \"_AfterUpdateJamT";
Debug.JustUpdateDeviceLine();
parent.__c.runMethodAndSync(false,"CallSubNew",__ref.getField(false, "ba"),(Object)(__ref.getField(false,"_mcallback" /*RemoteObject*/ )),(Object)(RemoteObject.concat(__ref.getField(true,"_meventname" /*RemoteObject*/ ),RemoteObject.createImmutable("_AfterUpdateJamTableCLV"))));
 if (true) break;

case 105:
//C
this.state = -1;
;
 BA.debugLineNum = 6304;BA.debugLine="Return Null";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,parent.__c.getField(false,"Null"));return;};
 BA.debugLineNum = 6305;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;
}} 
       catch (Exception e0) {
			
if (catchState == 0)
    throw e0;
else {
    state = catchState;
BA.rdebugUtils.runVoidMethod("setLastException",__ref.getField(false, "ba"), e0.toString());}
            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static RemoteObject  _actualizartodosvalueitemsclv(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("ActualizarTodosValueItemsCLV (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7354);
if (RapidSub.canDelegate("actualizartodosvalueitemsclv")) { return __ref.runUserSub(false, "jamtableclv","actualizartodosvalueitemsclv", __ref);}
 BA.debugLineNum = 7354;BA.debugLine="Public Sub ActualizarTodosValueItemsCLV";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 7356;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _actualizarvalueitemclv(RemoteObject __ref,RemoteObject _idxitemmodificado,RemoteObject _mdatacamposmodificados) throws Exception{
try {
		Debug.PushSubsStack("ActualizarValueItemCLV (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7308);
if (RapidSub.canDelegate("actualizarvalueitemclv")) { return __ref.runUserSub(false, "jamtableclv","actualizarvalueitemclv", __ref, _idxitemmodificado, _mdatacamposmodificados);}
ResumableSub_ActualizarValueItemCLV rsub = new ResumableSub_ActualizarValueItemCLV(null,__ref,_idxitemmodificado,_mdatacamposmodificados);
rsub.remoteResumableSub = anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSubForFilter();
rsub.resume(null, null);
return RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.keywords.Common.ResumableSubWrapper"), rsub.remoteResumableSub);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_ActualizarValueItemCLV extends BA.ResumableSub {
public ResumableSub_ActualizarValueItemCLV(b4j.docU.jamtableclv parent,RemoteObject __ref,RemoteObject _idxitemmodificado,RemoteObject _mdatacamposmodificados) {
this.parent = parent;
this.__ref = __ref;
this._idxitemmodificado = _idxitemmodificado;
this._mdatacamposmodificados = _mdatacamposmodificados;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _idxitemmodificado;
RemoteObject _mdatacamposmodificados;
RemoteObject _numregfiltradosantescambio = RemoteObject.createImmutable(0);
RemoteObject _clvitemsel = RemoteObject.declareNull("b4j.example.customlistview._clvitem");
RemoteObject _mdataactualitemclv = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
RemoteObject _k = RemoteObject.createImmutable("");
RemoteObject _keymdatacamposmodificadosok = RemoteObject.createImmutable(false);
RemoteObject _kiv = RemoteObject.createImmutable("");
RemoteObject _msa = RemoteObject.declareNull("Object");
RemoteObject _ntotalregistrosfiltradosdespuescambio = RemoteObject.createImmutable(0);
RemoteObject _robj = RemoteObject.declareNull("Object");
RemoteObject _p = RemoteObject.declareNull("anywheresoftware.b4a.objects.B4XViewWrapper");
RemoteObject group4;
int index4;
int groupLen4;
RemoteObject group6;
int index6;
int groupLen6;

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("ActualizarValueItemCLV (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7308);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
{
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,RemoteObject.createImmutable(null));return;}
case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
Debug.locals.put("iDxItemModificado", _idxitemmodificado);
Debug.locals.put("mDataCamposModificados", _mdatacamposmodificados);
 BA.debugLineNum = 7310;BA.debugLine="Dim NumRegFiltradosAntesCambio As Int=	NTotalRegi";
Debug.JustUpdateDeviceLine();
_numregfiltradosantescambio = __ref.getField(true,"_ntotalregistrosfiltrados" /*RemoteObject*/ );Debug.locals.put("NumRegFiltradosAntesCambio", _numregfiltradosantescambio);Debug.locals.put("NumRegFiltradosAntesCambio", _numregfiltradosantescambio);
 BA.debugLineNum = 7313;BA.debugLine="Dim clvItemSel As CLVItem=clvDatos.GetRawListItem";
Debug.JustUpdateDeviceLine();
_clvitemsel = __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(false,"_getrawlistitem",(Object)(_idxitemmodificado));Debug.locals.put("clvItemSel", _clvitemsel);Debug.locals.put("clvItemSel", _clvitemsel);
 BA.debugLineNum = 7314;BA.debugLine="Dim mDataActualItemCLV As Map=clvItemSel.Value";
Debug.JustUpdateDeviceLine();
_mdataactualitemclv = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");
_mdataactualitemclv = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.collections.Map"), _clvitemsel.getField(false,"Value"));Debug.locals.put("mDataActualItemCLV", _mdataactualitemclv);Debug.locals.put("mDataActualItemCLV", _mdataactualitemclv);
 BA.debugLineNum = 7315;BA.debugLine="For Each k As String In mDataCamposModificados.Ke";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//for
this.state = 15;
group4 = _mdatacamposmodificados.runMethod(false,"Keys");
index4 = 0;
groupLen4 = group4.runMethod(true,"getSize").<Integer>get();
Debug.locals.put("k", _k);
this.state = 24;
if (true) break;

case 24:
//C
this.state = 15;
if (index4 < groupLen4) {
this.state = 3;
_k = BA.ObjectToString(group4.runMethod(false,"Get",index4));Debug.locals.put("k", _k);}
if (true) break;

case 25:
//C
this.state = 24;
index4++;
Debug.locals.put("k", _k);
if (true) break;

case 3:
//C
this.state = 4;
 BA.debugLineNum = 7316;BA.debugLine="Dim keymDataCamposModificadosOK As Boolean";
Debug.JustUpdateDeviceLine();
_keymdatacamposmodificadosok = RemoteObject.createImmutable(false);Debug.locals.put("keymDataCamposModificadosOK", _keymdatacamposmodificadosok);
 BA.debugLineNum = 7317;BA.debugLine="For Each kIV As String In mDataActualItemCLV.Key";
Debug.JustUpdateDeviceLine();
if (true) break;

case 4:
//for
this.state = 11;
group6 = _mdataactualitemclv.runMethod(false,"Keys");
index6 = 0;
groupLen6 = group6.runMethod(true,"getSize").<Integer>get();
Debug.locals.put("kIV", _kiv);
this.state = 26;
if (true) break;

case 26:
//C
this.state = 11;
if (index6 < groupLen6) {
this.state = 6;
_kiv = BA.ObjectToString(group6.runMethod(false,"Get",index6));Debug.locals.put("kIV", _kiv);}
if (true) break;

case 27:
//C
this.state = 26;
index6++;
Debug.locals.put("kIV", _kiv);
if (true) break;

case 6:
//C
this.state = 7;
 BA.debugLineNum = 7318;BA.debugLine="If k=kIV Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 7:
//if
this.state = 10;
if (RemoteObject.solveBoolean("=",_k,_kiv)) { 
this.state = 9;
}if (true) break;

case 9:
//C
this.state = 10;
 BA.debugLineNum = 7319;BA.debugLine="keymDataCamposModificadosOK=True";
Debug.JustUpdateDeviceLine();
_keymdatacamposmodificadosok = parent.__c.getField(true,"True");Debug.locals.put("keymDataCamposModificadosOK", _keymdatacamposmodificadosok);
 BA.debugLineNum = 7320;BA.debugLine="mDataActualItemCLV.Put(k,mDataCamposModificado";
Debug.JustUpdateDeviceLine();
_mdataactualitemclv.runVoidMethod ("Put",(Object)((_k)),(Object)(_mdatacamposmodificados.runMethod(false,"Get",(Object)((_k)))));
 BA.debugLineNum = 7321;BA.debugLine="Exit";
Debug.JustUpdateDeviceLine();
this.state = 11;
if (true) break;
 if (true) break;

case 10:
//C
this.state = 27;
;
 if (true) break;
if (true) break;
Debug.locals.put("kIV", _kiv);
;
 BA.debugLineNum = 7324;BA.debugLine="If keymDataCamposModificadosOK=False Then";
Debug.JustUpdateDeviceLine();

case 11:
//if
this.state = 14;
if (RemoteObject.solveBoolean("=",_keymdatacamposmodificadosok,parent.__c.getField(true,"False"))) { 
this.state = 13;
}if (true) break;

case 13:
//C
this.state = 14;
 BA.debugLineNum = 7325;BA.debugLine="Dim msa As Object=xui.MsgboxAsync(\"La clave \" &";
Debug.JustUpdateDeviceLine();
_msa = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"MsgboxAsync",__ref.getField(false, "ba"),(Object)(RemoteObject.concat(RemoteObject.createImmutable("La clave "),_k,RemoteObject.createImmutable(" del mapa mDataCamposModificados pasado al método ActualizarItemCLV no está incluida en las claves del mapa del ItemValue a actualizar. Avisa al administrador de la aplicación."))),(Object)(RemoteObject.createImmutable("Error")));Debug.locals.put("msa", _msa);Debug.locals.put("msa", _msa);
 BA.debugLineNum = 7326;BA.debugLine="Wait For (msa) Msgbox_Result";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","msgbox_result", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "actualizarvalueitemclv"), _msa);
this.state = 28;
return;
case 28:
//C
this.state = 14;
;
 BA.debugLineNum = 7327;BA.debugLine="Return False";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(parent.__c.getField(true,"False")));return;};
 if (true) break;

case 14:
//C
this.state = 25;
;
 if (true) break;
if (true) break;

case 15:
//C
this.state = 16;
Debug.locals.put("k", _k);
;
 BA.debugLineNum = 7331;BA.debugLine="Log(\"\")";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9171704343",RemoteObject.createImmutable(""),0);
 BA.debugLineNum = 7335;BA.debugLine="If lstValoresFiltros.Size>0 Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 16:
//if
this.state = 23;
if (RemoteObject.solveBoolean(">",__ref.getField(false,"_lstvaloresfiltros" /*RemoteObject*/ ).runMethod(true,"getSize"),BA.numberCast(double.class, 0))) { 
this.state = 18;
}if (true) break;

case 18:
//C
this.state = 19;
 BA.debugLineNum = 7336;BA.debugLine="Dim NTotalRegistrosFiltradosDespuesCambio As Int";
Debug.JustUpdateDeviceLine();
_ntotalregistrosfiltradosdespuescambio = BA.numberCast(int.class, __ref.getField(false,"_msql" /*RemoteObject*/ ).runMethod(true,"ExecQuerySingleResult2",(Object)(RemoteObject.concat(RemoteObject.createImmutable("select count(*) from tblOrigenDatos where "),__ref.getField(true,"_scamposfiltrados" /*RemoteObject*/ ))),(Object)(__ref.getField(false,"_lstvaloresfiltros" /*RemoteObject*/ ))));Debug.locals.put("NTotalRegistrosFiltradosDespuesCambio", _ntotalregistrosfiltradosdespuescambio);Debug.locals.put("NTotalRegistrosFiltradosDespuesCambio", _ntotalregistrosfiltradosdespuescambio);
 BA.debugLineNum = 7338;BA.debugLine="If NumRegFiltradosAntesCambio<>NTotalRegistrosFi";
Debug.JustUpdateDeviceLine();
if (true) break;

case 19:
//if
this.state = 22;
if (RemoteObject.solveBoolean("!",_numregfiltradosantescambio,BA.numberCast(double.class, _ntotalregistrosfiltradosdespuescambio))) { 
this.state = 21;
}if (true) break;

case 21:
//C
this.state = 22;
 BA.debugLineNum = 7339;BA.debugLine="WAIT FOR (ActualizarTableCLV(True)) COMPLETE (r";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "actualizarvalueitemclv"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_actualizartableclv" /*RemoteObject*/ ,(Object)(parent.__c.getField(true,"True"))));
this.state = 29;
return;
case 29:
//C
this.state = 22;
_robj = (RemoteObject) result.getArrayElement(false,RemoteObject.createImmutable(1));Debug.locals.put("rObj", _robj);
;
 BA.debugLineNum = 7340;BA.debugLine="Return True";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(parent.__c.getField(true,"True")));return;};
 if (true) break;

case 22:
//C
this.state = 23;
;
 if (true) break;

case 23:
//C
this.state = -1;
;
 BA.debugLineNum = 7345;BA.debugLine="Dim p As B4XView=clvDatos.GetPanel(iDxItemModific";
Debug.JustUpdateDeviceLine();
_p = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");
_p = __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(false,"_getpanel",(Object)(_idxitemmodificado));Debug.locals.put("p", _p);Debug.locals.put("p", _p);
 BA.debugLineNum = 7346;BA.debugLine="p.RemoveAllViews";
Debug.JustUpdateDeviceLine();
_p.runVoidMethod ("RemoveAllViews");
 BA.debugLineNum = 7349;BA.debugLine="RefreshVisibleItems";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_refreshvisibleitems" /*RemoteObject*/ );
 BA.debugLineNum = 7351;BA.debugLine="Return True";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(parent.__c.getField(true,"True")));return;};
 BA.debugLineNum = 7352;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static RemoteObject  _add(RemoteObject __ref,RemoteObject _pnl,RemoteObject _value) throws Exception{
try {
		Debug.PushSubsStack("Add (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6875);
if (RapidSub.canDelegate("add")) { return __ref.runUserSub(false, "jamtableclv","add", __ref, _pnl, _value);}
Debug.locals.put("pnl", _pnl);
Debug.locals.put("Value", _value);
 BA.debugLineNum = 6875;BA.debugLine="public Sub Add(pnl As B4XView, Value As Object)";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6876;BA.debugLine="clvDatos.Add(pnl,Value)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runVoidMethod ("_add",(Object)(_pnl),(Object)(_value));
 BA.debugLineNum = 6877;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _addcontextmenufiltroavanzadonodo(RemoteObject __ref,RemoteObject _aliascamponodosel) throws Exception{
try {
		Debug.PushSubsStack("AddContextMenuFiltroAvanzadoNodo (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,1135);
if (RapidSub.canDelegate("addcontextmenufiltroavanzadonodo")) { return __ref.runUserSub(false, "jamtableclv","addcontextmenufiltroavanzadonodo", __ref, _aliascamponodosel);}
RemoteObject _mobj = RemoteObject.declareNull("Object");
RemoteObject _nativeme = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
RemoteObject _esmenu = RemoteObject.createImmutable(false);
RemoteObject _mmn = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper");
RemoteObject _schr = RemoteObject.createImmutable("");
RemoteObject _mf = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper");
RemoteObject _img = RemoteObject.declareNull("anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper");
RemoteObject _imv = RemoteObject.declareNull("anywheresoftware.b4j.objects.ImageViewWrapper");
RemoteObject _jomnu = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
RemoteObject _c = RemoteObject.declareNull("b4j.docU.jamtableclv._campoorigendatosjamtableclv");
RemoteObject _smenuitemfadv = RemoteObject.createImmutable("");
RemoteObject _mifiltroavanzado = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");
Debug.locals.put("AliasCampoNodoSel", _aliascamponodosel);
 BA.debugLineNum = 1135;BA.debugLine="private Sub AddContextMenuFiltroAvanzadoNodo(Alias";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 1136;BA.debugLine="For Each mObj As Object In mContextMenu.MenuItems";
Debug.JustUpdateDeviceLine();
{
final RemoteObject group1 = __ref.getField(false,"_mcontextmenu" /*RemoteObject*/ ).runMethod(false,"getMenuItems");
final int groupLen1 = group1.runMethod(true,"getSize").<Integer>get()
;int index1 = 0;
;
for (; index1 < groupLen1;index1++){
_mobj = group1.runMethod(false,"Get",index1);Debug.locals.put("mObj", _mobj);
Debug.locals.put("mObj", _mobj);
 BA.debugLineNum = 1137;BA.debugLine="Dim NativeMe As JavaObject=Me";
Debug.JustUpdateDeviceLine();
_nativeme = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");
_nativeme = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), __ref);Debug.locals.put("NativeMe", _nativeme);Debug.locals.put("NativeMe", _nativeme);
 BA.debugLineNum = 1138;BA.debugLine="Dim EsMenu As Boolean=NativeMe.RunMethod(\"IsMenu";
Debug.JustUpdateDeviceLine();
_esmenu = BA.ObjectToBoolean(_nativeme.runMethod(false,"RunMethod",(Object)(BA.ObjectToString("IsMenu")),(Object)(RemoteObject.createNewArray("Object",new int[] {1},new Object[] {_mobj}))));Debug.locals.put("EsMenu", _esmenu);Debug.locals.put("EsMenu", _esmenu);
 BA.debugLineNum = 1139;BA.debugLine="If EsMenu Then";
Debug.JustUpdateDeviceLine();
if (_esmenu.<Boolean>get().booleanValue()) { 
 BA.debugLineNum = 1140;BA.debugLine="Dim mMn As Menu=mObj";
Debug.JustUpdateDeviceLine();
_mmn = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper");
_mmn = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper"), _mobj);Debug.locals.put("mMn", _mmn);Debug.locals.put("mMn", _mmn);
 BA.debugLineNum = 1141;BA.debugLine="If mMn.Tag=\"MenuFiltroAvanzadoCampo\" Then Retur";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_mmn.runMethod(false,"getTag"),RemoteObject.createImmutable(("MenuFiltroAvanzadoCampo")))) { 
if (true) return RemoteObject.createImmutable("");};
 };
 }
}Debug.locals.put("mObj", _mobj);
;
 BA.debugLineNum = 1144;BA.debugLine="Dim sChr As String=Chr(0xF0B0)";
Debug.JustUpdateDeviceLine();
_schr = BA.ObjectToString(jamtableclv.__c.runMethod(true,"Chr",(Object)(BA.numberCast(int.class, ((int)0xf0b0)))));Debug.locals.put("sChr", _schr);Debug.locals.put("sChr", _schr);
 BA.debugLineNum = 1145;BA.debugLine="Dim mF As Menu";
Debug.JustUpdateDeviceLine();
_mf = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper");Debug.locals.put("mF", _mf);
 BA.debugLineNum = 1146;BA.debugLine="mF.Initialize(\"Filtro Avanzado Campo\", \"\")";
Debug.JustUpdateDeviceLine();
_mf.runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(BA.ObjectToString("Filtro Avanzado Campo")),(Object)(RemoteObject.createImmutable("")));
 BA.debugLineNum = 1147;BA.debugLine="mF.Tag=\"MenuFiltroAvanzadoCampo\"";
Debug.JustUpdateDeviceLine();
_mf.runMethod(false,"setTag",RemoteObject.createImmutable(("MenuFiltroAvanzadoCampo")));
 BA.debugLineNum = 1148;BA.debugLine="Dim img As Image=TextToImageAwesome(sChr,16)";
Debug.JustUpdateDeviceLine();
_img = RemoteObject.createNew ("anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper");
_img = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_texttoimageawesome" /*RemoteObject*/ ,(Object)(_schr),(Object)(BA.numberCast(double.class, 16)));Debug.locals.put("img", _img);Debug.locals.put("img", _img);
 BA.debugLineNum = 1149;BA.debugLine="Dim Imv As ImageView";
Debug.JustUpdateDeviceLine();
_imv = RemoteObject.createNew ("anywheresoftware.b4j.objects.ImageViewWrapper");Debug.locals.put("Imv", _imv);
 BA.debugLineNum = 1150;BA.debugLine="Imv.Initialize(\"\")";
Debug.JustUpdateDeviceLine();
_imv.runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(RemoteObject.createImmutable("")));
 BA.debugLineNum = 1151;BA.debugLine="Imv.SetImage(img)";
Debug.JustUpdateDeviceLine();
_imv.runVoidMethod ("SetImage",(Object)((_img.getObject())));
 BA.debugLineNum = 1152;BA.debugLine="Dim JOMnu As JavaObject=mF";
Debug.JustUpdateDeviceLine();
_jomnu = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");
_jomnu = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), _mf.getObject());Debug.locals.put("JOMnu", _jomnu);Debug.locals.put("JOMnu", _jomnu);
 BA.debugLineNum = 1153;BA.debugLine="JOMnu.RunMethod(\"setGraphic\",Array(Imv))";
Debug.JustUpdateDeviceLine();
_jomnu.runVoidMethod ("RunMethod",(Object)(BA.ObjectToString("setGraphic")),(Object)(RemoteObject.createNewArray("Object",new int[] {1},new Object[] {(_imv.getObject())})));
 BA.debugLineNum = 1155;BA.debugLine="Dim c As CampoOrigenDatosJamTableCLV=GetDatosCamp";
Debug.JustUpdateDeviceLine();
_c = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_getdatoscampoorigendatosjamtableclvaliascampo" /*RemoteObject*/ ,(Object)(_aliascamponodosel));Debug.locals.put("c", _c);Debug.locals.put("c", _c);
 BA.debugLineNum = 1156;BA.debugLine="Select True";
Debug.JustUpdateDeviceLine();
switch (BA.switchObjectToInt(jamtableclv.__c.getField(true,"True"),BA.ObjectToBoolean(RemoteObject.solveBoolean("=",_c.getField(true,"TipoControlFiltro" /*RemoteObject*/ ),__ref.getField(true,"_tipocontrolfiltro_combobox" /*RemoteObject*/ ))),BA.ObjectToBoolean(RemoteObject.solveBoolean("=",_c.getField(true,"TipoControlFiltro" /*RemoteObject*/ ),__ref.getField(true,"_tipocontrolfiltro_checkbox" /*RemoteObject*/ ))))) {
case 0: {
 BA.debugLineNum = 1158;BA.debugLine="For Each sMenuItemFAdv As String In lstComparad";
Debug.JustUpdateDeviceLine();
{
final RemoteObject group22 = __ref.getField(false,"_lstcomparadorescampostipocontrolcombobox" /*RemoteObject*/ );
final int groupLen22 = group22.runMethod(true,"getSize").<Integer>get()
;int index22 = 0;
;
for (; index22 < groupLen22;index22++){
_smenuitemfadv = BA.ObjectToString(group22.runMethod(false,"Get",index22));Debug.locals.put("sMenuItemFAdv", _smenuitemfadv);
Debug.locals.put("sMenuItemFAdv", _smenuitemfadv);
 BA.debugLineNum = 1159;BA.debugLine="Dim mIFiltroAvanzado As MenuItem";
Debug.JustUpdateDeviceLine();
_mifiltroavanzado = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");Debug.locals.put("mIFiltroAvanzado", _mifiltroavanzado);
 BA.debugLineNum = 1160;BA.debugLine="mIFiltroAvanzado.Initialize(sMenuItemFAdv,\"Con";
Debug.JustUpdateDeviceLine();
_mifiltroavanzado.runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(_smenuitemfadv),(Object)(RemoteObject.createImmutable("ContextMenuItemNodo")));
 BA.debugLineNum = 1161;BA.debugLine="mIFiltroAvanzado.Tag=\"FiltroAvanzadoCampo\"";
Debug.JustUpdateDeviceLine();
_mifiltroavanzado.runMethod(false,"setTag",RemoteObject.createImmutable(("FiltroAvanzadoCampo")));
 BA.debugLineNum = 1162;BA.debugLine="mF.MenuItems.Add(mIFiltroAvanzado)";
Debug.JustUpdateDeviceLine();
_mf.runMethod(false,"getMenuItems").runVoidMethod ("Add",(Object)((_mifiltroavanzado.getObject())));
 }
}Debug.locals.put("sMenuItemFAdv", _smenuitemfadv);
;
 break; }
case 1: {
 BA.debugLineNum = 1165;BA.debugLine="For Each sMenuItemFAdv As String In lstComparad";
Debug.JustUpdateDeviceLine();
{
final RemoteObject group29 = __ref.getField(false,"_lstcomparadoresbooleanos" /*RemoteObject*/ );
final int groupLen29 = group29.runMethod(true,"getSize").<Integer>get()
;int index29 = 0;
;
for (; index29 < groupLen29;index29++){
_smenuitemfadv = BA.ObjectToString(group29.runMethod(false,"Get",index29));Debug.locals.put("sMenuItemFAdv", _smenuitemfadv);
Debug.locals.put("sMenuItemFAdv", _smenuitemfadv);
 BA.debugLineNum = 1166;BA.debugLine="Dim mIFiltroAvanzado As MenuItem";
Debug.JustUpdateDeviceLine();
_mifiltroavanzado = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");Debug.locals.put("mIFiltroAvanzado", _mifiltroavanzado);
 BA.debugLineNum = 1167;BA.debugLine="mIFiltroAvanzado.Initialize(sMenuItemFAdv,\"Con";
Debug.JustUpdateDeviceLine();
_mifiltroavanzado.runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(_smenuitemfadv),(Object)(RemoteObject.createImmutable("ContextMenuItemNodo")));
 BA.debugLineNum = 1168;BA.debugLine="mIFiltroAvanzado.Tag=\"FiltroAvanzadoCampo\"";
Debug.JustUpdateDeviceLine();
_mifiltroavanzado.runMethod(false,"setTag",RemoteObject.createImmutable(("FiltroAvanzadoCampo")));
 BA.debugLineNum = 1169;BA.debugLine="mF.MenuItems.Add(mIFiltroAvanzado)";
Debug.JustUpdateDeviceLine();
_mf.runMethod(false,"getMenuItems").runVoidMethod ("Add",(Object)((_mifiltroavanzado.getObject())));
 }
}Debug.locals.put("sMenuItemFAdv", _smenuitemfadv);
;
 break; }
default: {
 BA.debugLineNum = 1172;BA.debugLine="If c.TipoDato=\"INTEGER\" Or c.TipoDato=\"REAL\" Th";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_c.getField(true,"TipoDato" /*RemoteObject*/ ),BA.ObjectToString("INTEGER")) || RemoteObject.solveBoolean("=",_c.getField(true,"TipoDato" /*RemoteObject*/ ),BA.ObjectToString("REAL"))) { 
 BA.debugLineNum = 1173;BA.debugLine="If c.EsFecha Then";
Debug.JustUpdateDeviceLine();
if (_c.getField(true,"EsFecha" /*RemoteObject*/ ).<Boolean>get().booleanValue()) { 
 BA.debugLineNum = 1174;BA.debugLine="For Each sMenuItemFAdv As String In lstCompar";
Debug.JustUpdateDeviceLine();
{
final RemoteObject group38 = __ref.getField(false,"_lstcomparadoresfechas" /*RemoteObject*/ );
final int groupLen38 = group38.runMethod(true,"getSize").<Integer>get()
;int index38 = 0;
;
for (; index38 < groupLen38;index38++){
_smenuitemfadv = BA.ObjectToString(group38.runMethod(false,"Get",index38));Debug.locals.put("sMenuItemFAdv", _smenuitemfadv);
Debug.locals.put("sMenuItemFAdv", _smenuitemfadv);
 BA.debugLineNum = 1175;BA.debugLine="Dim mIFiltroAvanzado As MenuItem";
Debug.JustUpdateDeviceLine();
_mifiltroavanzado = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");Debug.locals.put("mIFiltroAvanzado", _mifiltroavanzado);
 BA.debugLineNum = 1176;BA.debugLine="mIFiltroAvanzado.Initialize(sMenuItemFAdv,\"C";
Debug.JustUpdateDeviceLine();
_mifiltroavanzado.runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(_smenuitemfadv),(Object)(RemoteObject.createImmutable("ContextMenuItemNodo")));
 BA.debugLineNum = 1177;BA.debugLine="mIFiltroAvanzado.Tag=\"FiltroAvanzadoCampo\"";
Debug.JustUpdateDeviceLine();
_mifiltroavanzado.runMethod(false,"setTag",RemoteObject.createImmutable(("FiltroAvanzadoCampo")));
 BA.debugLineNum = 1178;BA.debugLine="mF.MenuItems.Add(mIFiltroAvanzado)";
Debug.JustUpdateDeviceLine();
_mf.runMethod(false,"getMenuItems").runVoidMethod ("Add",(Object)((_mifiltroavanzado.getObject())));
 }
}Debug.locals.put("sMenuItemFAdv", _smenuitemfadv);
;
 }else {
 BA.debugLineNum = 1181;BA.debugLine="For Each sMenuItemFAdv As String In lstCompar";
Debug.JustUpdateDeviceLine();
{
final RemoteObject group45 = __ref.getField(false,"_lstcomparadoresnumericos" /*RemoteObject*/ );
final int groupLen45 = group45.runMethod(true,"getSize").<Integer>get()
;int index45 = 0;
;
for (; index45 < groupLen45;index45++){
_smenuitemfadv = BA.ObjectToString(group45.runMethod(false,"Get",index45));Debug.locals.put("sMenuItemFAdv", _smenuitemfadv);
Debug.locals.put("sMenuItemFAdv", _smenuitemfadv);
 BA.debugLineNum = 1182;BA.debugLine="Dim mIFiltroAvanzado As MenuItem";
Debug.JustUpdateDeviceLine();
_mifiltroavanzado = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");Debug.locals.put("mIFiltroAvanzado", _mifiltroavanzado);
 BA.debugLineNum = 1183;BA.debugLine="mIFiltroAvanzado.Initialize(sMenuItemFAdv,\"C";
Debug.JustUpdateDeviceLine();
_mifiltroavanzado.runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(_smenuitemfadv),(Object)(RemoteObject.createImmutable("ContextMenuItemNodo")));
 BA.debugLineNum = 1184;BA.debugLine="mIFiltroAvanzado.Tag=\"FiltroAvanzadoCampo\"";
Debug.JustUpdateDeviceLine();
_mifiltroavanzado.runMethod(false,"setTag",RemoteObject.createImmutable(("FiltroAvanzadoCampo")));
 BA.debugLineNum = 1185;BA.debugLine="mF.MenuItems.Add(mIFiltroAvanzado)";
Debug.JustUpdateDeviceLine();
_mf.runMethod(false,"getMenuItems").runVoidMethod ("Add",(Object)((_mifiltroavanzado.getObject())));
 }
}Debug.locals.put("sMenuItemFAdv", _smenuitemfadv);
;
 };
 }else {
 BA.debugLineNum = 1189;BA.debugLine="If c.TipoDato= \"TEXT\" Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_c.getField(true,"TipoDato" /*RemoteObject*/ ),BA.ObjectToString("TEXT"))) { 
 BA.debugLineNum = 1190;BA.debugLine="For Each sMenuItemFAdv As String In lstCompar";
Debug.JustUpdateDeviceLine();
{
final RemoteObject group54 = __ref.getField(false,"_lstcomparadorestexto" /*RemoteObject*/ );
final int groupLen54 = group54.runMethod(true,"getSize").<Integer>get()
;int index54 = 0;
;
for (; index54 < groupLen54;index54++){
_smenuitemfadv = BA.ObjectToString(group54.runMethod(false,"Get",index54));Debug.locals.put("sMenuItemFAdv", _smenuitemfadv);
Debug.locals.put("sMenuItemFAdv", _smenuitemfadv);
 BA.debugLineNum = 1191;BA.debugLine="Dim mIFiltroAvanzado As MenuItem";
Debug.JustUpdateDeviceLine();
_mifiltroavanzado = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");Debug.locals.put("mIFiltroAvanzado", _mifiltroavanzado);
 BA.debugLineNum = 1192;BA.debugLine="mIFiltroAvanzado.Initialize(sMenuItemFAdv,\"C";
Debug.JustUpdateDeviceLine();
_mifiltroavanzado.runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(_smenuitemfadv),(Object)(RemoteObject.createImmutable("ContextMenuItemNodo")));
 BA.debugLineNum = 1193;BA.debugLine="mIFiltroAvanzado.Tag=\"FiltroAvanzadoCampo\"";
Debug.JustUpdateDeviceLine();
_mifiltroavanzado.runMethod(false,"setTag",RemoteObject.createImmutable(("FiltroAvanzadoCampo")));
 BA.debugLineNum = 1194;BA.debugLine="mF.MenuItems.Add(mIFiltroAvanzado)";
Debug.JustUpdateDeviceLine();
_mf.runMethod(false,"getMenuItems").runVoidMethod ("Add",(Object)((_mifiltroavanzado.getObject())));
 }
}Debug.locals.put("sMenuItemFAdv", _smenuitemfadv);
;
 };
 };
 break; }
}
;
 BA.debugLineNum = 1201;BA.debugLine="mContextMenu.MenuItems.Add(mF)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_mcontextmenu" /*RemoteObject*/ ).runMethod(false,"getMenuItems").runVoidMethod ("Add",(Object)((_mf.getObject())));
 BA.debugLineNum = 1202;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _addcontextmenuitem(RemoteObject __ref,RemoteObject _textomenuitem,RemoteObject _tagmenuitem) throws Exception{
try {
		Debug.PushSubsStack("AddContextMenuItem (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,881);
if (RapidSub.canDelegate("addcontextmenuitem")) { return __ref.runUserSub(false, "jamtableclv","addcontextmenuitem", __ref, _textomenuitem, _tagmenuitem);}
RemoteObject _mi = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");
Debug.locals.put("TextoMenuItem", _textomenuitem);
Debug.locals.put("TagMenuItem", _tagmenuitem);
 BA.debugLineNum = 881;BA.debugLine="Public Sub AddContextMenuItem(TextoMenuItem As Str";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 882;BA.debugLine="Dim mi As MenuItem";
Debug.JustUpdateDeviceLine();
_mi = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");Debug.locals.put("mi", _mi);
 BA.debugLineNum = 883;BA.debugLine="mi.Initialize(TextoMenuItem, \"ContextMenuItem\")";
Debug.JustUpdateDeviceLine();
_mi.runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(_textomenuitem),(Object)(RemoteObject.createImmutable("ContextMenuItem")));
 BA.debugLineNum = 884;BA.debugLine="mi.Tag=TagMenuItem";
Debug.JustUpdateDeviceLine();
_mi.runMethod(false,"setTag",(_tagmenuitem));
 BA.debugLineNum = 885;BA.debugLine="lstContextMenuItemsGenerales.Add(mi)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstcontextmenuitemsgenerales" /*RemoteObject*/ ).runVoidMethod ("Add",(Object)((_mi.getObject())));
 BA.debugLineNum = 887;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _addcontextmenuitemcopiartextonodo(RemoteObject __ref,RemoteObject _xnode) throws Exception{
try {
		Debug.PushSubsStack("AddContextMenuItemCopiarTextoNodo (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,1205);
if (RapidSub.canDelegate("addcontextmenuitemcopiartextonodo")) { return __ref.runUserSub(false, "jamtableclv","addcontextmenuitemcopiartextonodo", __ref, _xnode);}
RemoteObject _mic = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");
RemoteObject _schr = RemoteObject.createImmutable("");
RemoteObject _mi = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");
RemoteObject _img = RemoteObject.declareNull("anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper");
Debug.locals.put("xNode", _xnode);
 BA.debugLineNum = 1205;BA.debugLine="private Sub AddContextMenuItemCopiarTextoNodo(xNod";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 1207;BA.debugLine="For Each mIC As MenuItem In mContextMenu.MenuItem";
Debug.JustUpdateDeviceLine();
_mic = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");
{
final RemoteObject group1 = __ref.getField(false,"_mcontextmenu" /*RemoteObject*/ ).runMethod(false,"getMenuItems");
final int groupLen1 = group1.runMethod(true,"getSize").<Integer>get()
;int index1 = 0;
;
for (; index1 < groupLen1;index1++){
_mic = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper"), group1.runMethod(false,"Get",index1));Debug.locals.put("mIC", _mic);
Debug.locals.put("mIC", _mic);
 BA.debugLineNum = 1210;BA.debugLine="If mIC.Tag=\"CopiarTextoNodoMenuContextual\" Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_mic.runMethod(false,"getTag"),RemoteObject.createImmutable(("CopiarTextoNodoMenuContextual")))) { 
if (true) return RemoteObject.createImmutable("");};
 }
}Debug.locals.put("mIC", _mic);
;
 BA.debugLineNum = 1213;BA.debugLine="Dim sChr As String=Chr(0xF0C5)";
Debug.JustUpdateDeviceLine();
_schr = BA.ObjectToString(jamtableclv.__c.runMethod(true,"Chr",(Object)(BA.numberCast(int.class, ((int)0xf0c5)))));Debug.locals.put("sChr", _schr);Debug.locals.put("sChr", _schr);
 BA.debugLineNum = 1214;BA.debugLine="Dim mI As MenuItem";
Debug.JustUpdateDeviceLine();
_mi = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");Debug.locals.put("mI", _mi);
 BA.debugLineNum = 1215;BA.debugLine="mI.Initialize(\"Copiar\", \"ContextMenuItemNodo\")";
Debug.JustUpdateDeviceLine();
_mi.runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(BA.ObjectToString("Copiar")),(Object)(RemoteObject.createImmutable("ContextMenuItemNodo")));
 BA.debugLineNum = 1219;BA.debugLine="mI.Tag=\"CopiarTextoNodoMenuContextual\"";
Debug.JustUpdateDeviceLine();
_mi.runMethod(false,"setTag",RemoteObject.createImmutable(("CopiarTextoNodoMenuContextual")));
 BA.debugLineNum = 1220;BA.debugLine="Dim img As Image=TextToImageAwesome(sChr,16)";
Debug.JustUpdateDeviceLine();
_img = RemoteObject.createNew ("anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper");
_img = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_texttoimageawesome" /*RemoteObject*/ ,(Object)(_schr),(Object)(BA.numberCast(double.class, 16)));Debug.locals.put("img", _img);Debug.locals.put("img", _img);
 BA.debugLineNum = 1221;BA.debugLine="mI.Image=img";
Debug.JustUpdateDeviceLine();
_mi.runMethod(false,"setImage",(_img.getObject()));
 BA.debugLineNum = 1223;BA.debugLine="If xNode Is TextField Or xNode Is TextArea Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("i",_xnode.getObjectOrNull(), RemoteObject.createImmutable("javafx.scene.control.TextField")) || RemoteObject.solveBoolean("i",_xnode.getObjectOrNull(), RemoteObject.createImmutable("javafx.scene.control.TextArea"))) { 
 BA.debugLineNum = 1224;BA.debugLine="Log(xNode.SelectionLength)";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("LogImpl","9162070547",BA.NumberToString(_xnode.runMethod(true,"getSelectionLength")),0);
 BA.debugLineNum = 1225;BA.debugLine="mI.Enabled=xNode.SelectionLength>0";
Debug.JustUpdateDeviceLine();
_mi.runMethod(true,"setEnabled",BA.ObjectToBoolean(RemoteObject.solveBoolean(">",_xnode.runMethod(true,"getSelectionLength"),BA.numberCast(double.class, 0))));
 };
 BA.debugLineNum = 1228;BA.debugLine="mContextMenu.MenuItems.InsertAt(0,mI)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_mcontextmenu" /*RemoteObject*/ ).runMethod(false,"getMenuItems").runVoidMethod ("InsertAt",(Object)(BA.numberCast(int.class, 0)),(Object)((_mi.getObject())));
 BA.debugLineNum = 1230;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _addcontextmenuitemfiltraravalornodo(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("AddContextMenuItemFiltrarAValorNodo (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,1120);
if (RapidSub.canDelegate("addcontextmenuitemfiltraravalornodo")) { return __ref.runUserSub(false, "jamtableclv","addcontextmenuitemfiltraravalornodo", __ref);}
RemoteObject _mis = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");
RemoteObject _schr = RemoteObject.createImmutable("");
RemoteObject _mi = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");
RemoteObject _img = RemoteObject.declareNull("anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper");
 BA.debugLineNum = 1120;BA.debugLine="private Sub AddContextMenuItemFiltrarAValorNodo";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 1121;BA.debugLine="For Each mIS As MenuItem In mContextMenu.MenuItem";
Debug.JustUpdateDeviceLine();
_mis = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");
{
final RemoteObject group1 = __ref.getField(false,"_mcontextmenu" /*RemoteObject*/ ).runMethod(false,"getMenuItems");
final int groupLen1 = group1.runMethod(true,"getSize").<Integer>get()
;int index1 = 0;
;
for (; index1 < groupLen1;index1++){
_mis = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper"), group1.runMethod(false,"Get",index1));Debug.locals.put("mIS", _mis);
Debug.locals.put("mIS", _mis);
 BA.debugLineNum = 1122;BA.debugLine="If mIS.Tag=\"FiltrarAEsteValor\" Then Return";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_mis.runMethod(false,"getTag"),RemoteObject.createImmutable(("FiltrarAEsteValor")))) { 
if (true) return RemoteObject.createImmutable("");};
 }
}Debug.locals.put("mIS", _mis);
;
 BA.debugLineNum = 1124;BA.debugLine="Dim sChr As String=Chr(0xF0B0)";
Debug.JustUpdateDeviceLine();
_schr = BA.ObjectToString(jamtableclv.__c.runMethod(true,"Chr",(Object)(BA.numberCast(int.class, ((int)0xf0b0)))));Debug.locals.put("sChr", _schr);Debug.locals.put("sChr", _schr);
 BA.debugLineNum = 1125;BA.debugLine="Dim mi As MenuItem";
Debug.JustUpdateDeviceLine();
_mi = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");Debug.locals.put("mi", _mi);
 BA.debugLineNum = 1126;BA.debugLine="mi.Initialize(\"Filtrar este valor\", \"ContextMenuI";
Debug.JustUpdateDeviceLine();
_mi.runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(BA.ObjectToString("Filtrar este valor")),(Object)(RemoteObject.createImmutable("ContextMenuItemNodo")));
 BA.debugLineNum = 1127;BA.debugLine="mi.Tag=\"FiltrarAEsteValor\"";
Debug.JustUpdateDeviceLine();
_mi.runMethod(false,"setTag",RemoteObject.createImmutable(("FiltrarAEsteValor")));
 BA.debugLineNum = 1128;BA.debugLine="Dim img As Image=TextToImageAwesome(sChr,16)";
Debug.JustUpdateDeviceLine();
_img = RemoteObject.createNew ("anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper");
_img = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_texttoimageawesome" /*RemoteObject*/ ,(Object)(_schr),(Object)(BA.numberCast(double.class, 16)));Debug.locals.put("img", _img);Debug.locals.put("img", _img);
 BA.debugLineNum = 1129;BA.debugLine="mi.Image=img";
Debug.JustUpdateDeviceLine();
_mi.runMethod(false,"setImage",(_img.getObject()));
 BA.debugLineNum = 1131;BA.debugLine="mContextMenu.MenuItems.Add(mi)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_mcontextmenu" /*RemoteObject*/ ).runMethod(false,"getMenuItems").runVoidMethod ("Add",(Object)((_mi.getObject())));
 BA.debugLineNum = 1133;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _addcontextmenuitemfontawesometext(RemoteObject __ref,RemoteObject _textomenuitem,RemoteObject _tagmenuitem,RemoteObject _schr) throws Exception{
try {
		Debug.PushSubsStack("AddContextMenuItemFontAwesomeText (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,925);
if (RapidSub.canDelegate("addcontextmenuitemfontawesometext")) { return __ref.runUserSub(false, "jamtableclv","addcontextmenuitemfontawesometext", __ref, _textomenuitem, _tagmenuitem, _schr);}
RemoteObject _mi = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");
RemoteObject _img = RemoteObject.declareNull("anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper");
Debug.locals.put("TextoMenuItem", _textomenuitem);
Debug.locals.put("TagMenuItem", _tagmenuitem);
Debug.locals.put("sChr", _schr);
 BA.debugLineNum = 925;BA.debugLine="Public Sub AddContextMenuItemFontAwesomeText(Texto";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 926;BA.debugLine="Dim mi As MenuItem";
Debug.JustUpdateDeviceLine();
_mi = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");Debug.locals.put("mi", _mi);
 BA.debugLineNum = 927;BA.debugLine="mi.Initialize(TextoMenuItem, \"ContextMenuItem\")";
Debug.JustUpdateDeviceLine();
_mi.runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(_textomenuitem),(Object)(RemoteObject.createImmutable("ContextMenuItem")));
 BA.debugLineNum = 928;BA.debugLine="mi.Tag=TagMenuItem";
Debug.JustUpdateDeviceLine();
_mi.runMethod(false,"setTag",(_tagmenuitem));
 BA.debugLineNum = 929;BA.debugLine="Dim img As Image=TextToImageAwesome(sChr,16)";
Debug.JustUpdateDeviceLine();
_img = RemoteObject.createNew ("anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper");
_img = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_texttoimageawesome" /*RemoteObject*/ ,(Object)(_schr),(Object)(BA.numberCast(double.class, 16)));Debug.locals.put("img", _img);Debug.locals.put("img", _img);
 BA.debugLineNum = 930;BA.debugLine="mi.Image=img";
Debug.JustUpdateDeviceLine();
_mi.runMethod(false,"setImage",(_img.getObject()));
 BA.debugLineNum = 931;BA.debugLine="lstContextMenuItemsGenerales.Add(mi)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstcontextmenuitemsgenerales" /*RemoteObject*/ ).runVoidMethod ("Add",(Object)((_mi.getObject())));
 BA.debugLineNum = 933;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _addcontextmenuitemfontawesometextnodo(RemoteObject __ref,RemoteObject _aliascampo,RemoteObject _textomenuitem,RemoteObject _tagmenuitem,RemoteObject _schr) throws Exception{
try {
		Debug.PushSubsStack("AddContextMenuItemFontAwesomeTextNodo (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,937);
if (RapidSub.canDelegate("addcontextmenuitemfontawesometextnodo")) { return __ref.runUserSub(false, "jamtableclv","addcontextmenuitemfontawesometextnodo", __ref, _aliascampo, _textomenuitem, _tagmenuitem, _schr);}
RemoteObject _mic = RemoteObject.declareNull("b4j.docU.jamtableclv._contextmenuitemnodojamtableclv");
RemoteObject _img = RemoteObject.declareNull("anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper");
Debug.locals.put("AliasCampo", _aliascampo);
Debug.locals.put("TextoMenuItem", _textomenuitem);
Debug.locals.put("TagMenuItem", _tagmenuitem);
Debug.locals.put("sChr", _schr);
 BA.debugLineNum = 937;BA.debugLine="Public Sub AddContextMenuItemFontAwesomeTextNodo(A";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 938;BA.debugLine="Dim mIC As ContextMenuItemNodoJamTableCLV";
Debug.JustUpdateDeviceLine();
_mic = RemoteObject.createNew ("b4j.docU.jamtableclv._contextmenuitemnodojamtableclv");Debug.locals.put("mIC", _mic);
 BA.debugLineNum = 939;BA.debugLine="mIC.Initialize";
Debug.JustUpdateDeviceLine();
_mic.runVoidMethod ("Initialize");
 BA.debugLineNum = 940;BA.debugLine="mIC.AliasCampo=AliasCampo";
Debug.JustUpdateDeviceLine();
_mic.setField ("AliasCampo" /*RemoteObject*/ ,_aliascampo);
 BA.debugLineNum = 941;BA.debugLine="mIC.TagMenuItem=TagMenuItem";
Debug.JustUpdateDeviceLine();
_mic.setField ("TagMenuItem" /*RemoteObject*/ ,_tagmenuitem);
 BA.debugLineNum = 942;BA.debugLine="mIC.TextoMenuItem=TextoMenuItem";
Debug.JustUpdateDeviceLine();
_mic.setField ("TextoMenuItem" /*RemoteObject*/ ,_textomenuitem);
 BA.debugLineNum = 943;BA.debugLine="Dim img As Image=TextToImageAwesome(sChr,16)";
Debug.JustUpdateDeviceLine();
_img = RemoteObject.createNew ("anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper");
_img = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_texttoimageawesome" /*RemoteObject*/ ,(Object)(_schr),(Object)(BA.numberCast(double.class, 16)));Debug.locals.put("img", _img);Debug.locals.put("img", _img);
 BA.debugLineNum = 944;BA.debugLine="mIC.ImageMenuItem=img";
Debug.JustUpdateDeviceLine();
_mic.setField ("ImageMenuItem" /*RemoteObject*/ ,_img);
 BA.debugLineNum = 945;BA.debugLine="lstContextMenuItemsNodo.Add(mIC)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstcontextmenuitemsnodo" /*RemoteObject*/ ).runVoidMethod ("Add",(Object)((_mic)));
 BA.debugLineNum = 947;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _addcontextmenuitemfontmaterialiconstext(RemoteObject __ref,RemoteObject _textomenuitem,RemoteObject _tagmenuitem,RemoteObject _schr) throws Exception{
try {
		Debug.PushSubsStack("AddContextMenuItemFontMaterialIconsText (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,953);
if (RapidSub.canDelegate("addcontextmenuitemfontmaterialiconstext")) { return __ref.runUserSub(false, "jamtableclv","addcontextmenuitemfontmaterialiconstext", __ref, _textomenuitem, _tagmenuitem, _schr);}
RemoteObject _mi = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");
RemoteObject _img = RemoteObject.declareNull("anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper");
Debug.locals.put("TextoMenuItem", _textomenuitem);
Debug.locals.put("TagMenuItem", _tagmenuitem);
Debug.locals.put("sChr", _schr);
 BA.debugLineNum = 953;BA.debugLine="Public Sub AddContextMenuItemFontMaterialIconsText";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 954;BA.debugLine="Dim mi As MenuItem";
Debug.JustUpdateDeviceLine();
_mi = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");Debug.locals.put("mi", _mi);
 BA.debugLineNum = 955;BA.debugLine="mi.Initialize(TextoMenuItem, \"ContextMenuItem\")";
Debug.JustUpdateDeviceLine();
_mi.runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(_textomenuitem),(Object)(RemoteObject.createImmutable("ContextMenuItem")));
 BA.debugLineNum = 956;BA.debugLine="mi.Tag=TagMenuItem";
Debug.JustUpdateDeviceLine();
_mi.runMethod(false,"setTag",(_tagmenuitem));
 BA.debugLineNum = 957;BA.debugLine="Dim img As Image=TextToImageMaterialIcons(sChr,16";
Debug.JustUpdateDeviceLine();
_img = RemoteObject.createNew ("anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper");
_img = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_texttoimagematerialicons" /*RemoteObject*/ ,(Object)(_schr),(Object)(BA.numberCast(double.class, 16)));Debug.locals.put("img", _img);Debug.locals.put("img", _img);
 BA.debugLineNum = 958;BA.debugLine="mi.Image=img";
Debug.JustUpdateDeviceLine();
_mi.runMethod(false,"setImage",(_img.getObject()));
 BA.debugLineNum = 959;BA.debugLine="lstContextMenuItemsGenerales.Add(mi)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstcontextmenuitemsgenerales" /*RemoteObject*/ ).runVoidMethod ("Add",(Object)((_mi.getObject())));
 BA.debugLineNum = 961;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _addcontextmenuitemfontmaterialiconstextnodo(RemoteObject __ref,RemoteObject _aliascampo,RemoteObject _textomenuitem,RemoteObject _tagmenuitem,RemoteObject _schr) throws Exception{
try {
		Debug.PushSubsStack("AddContextMenuItemFontMaterialIconsTextNodo (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,965);
if (RapidSub.canDelegate("addcontextmenuitemfontmaterialiconstextnodo")) { return __ref.runUserSub(false, "jamtableclv","addcontextmenuitemfontmaterialiconstextnodo", __ref, _aliascampo, _textomenuitem, _tagmenuitem, _schr);}
RemoteObject _mic = RemoteObject.declareNull("b4j.docU.jamtableclv._contextmenuitemnodojamtableclv");
RemoteObject _img = RemoteObject.declareNull("anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper");
Debug.locals.put("AliasCampo", _aliascampo);
Debug.locals.put("TextoMenuItem", _textomenuitem);
Debug.locals.put("TagMenuItem", _tagmenuitem);
Debug.locals.put("sChr", _schr);
 BA.debugLineNum = 965;BA.debugLine="Public Sub AddContextMenuItemFontMaterialIconsText";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 966;BA.debugLine="Dim mIC As ContextMenuItemNodoJamTableCLV";
Debug.JustUpdateDeviceLine();
_mic = RemoteObject.createNew ("b4j.docU.jamtableclv._contextmenuitemnodojamtableclv");Debug.locals.put("mIC", _mic);
 BA.debugLineNum = 967;BA.debugLine="mIC.Initialize";
Debug.JustUpdateDeviceLine();
_mic.runVoidMethod ("Initialize");
 BA.debugLineNum = 968;BA.debugLine="mIC.AliasCampo=AliasCampo";
Debug.JustUpdateDeviceLine();
_mic.setField ("AliasCampo" /*RemoteObject*/ ,_aliascampo);
 BA.debugLineNum = 969;BA.debugLine="mIC.TagMenuItem=TagMenuItem";
Debug.JustUpdateDeviceLine();
_mic.setField ("TagMenuItem" /*RemoteObject*/ ,_tagmenuitem);
 BA.debugLineNum = 970;BA.debugLine="mIC.TextoMenuItem=TextoMenuItem";
Debug.JustUpdateDeviceLine();
_mic.setField ("TextoMenuItem" /*RemoteObject*/ ,_textomenuitem);
 BA.debugLineNum = 971;BA.debugLine="Dim img As Image=TextToImageMaterialIcons(sChr,16";
Debug.JustUpdateDeviceLine();
_img = RemoteObject.createNew ("anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper");
_img = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_texttoimagematerialicons" /*RemoteObject*/ ,(Object)(_schr),(Object)(BA.numberCast(double.class, 16)));Debug.locals.put("img", _img);Debug.locals.put("img", _img);
 BA.debugLineNum = 972;BA.debugLine="mIC.ImageMenuItem=img";
Debug.JustUpdateDeviceLine();
_mic.setField ("ImageMenuItem" /*RemoteObject*/ ,_img);
 BA.debugLineNum = 973;BA.debugLine="lstContextMenuItemsNodo.Add(mIC)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstcontextmenuitemsnodo" /*RemoteObject*/ ).runVoidMethod ("Add",(Object)((_mic)));
 BA.debugLineNum = 976;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _addcontextmenuitemimage(RemoteObject __ref,RemoteObject _textomenuitem,RemoteObject _tagmenuitem,RemoteObject _img) throws Exception{
try {
		Debug.PushSubsStack("AddContextMenuItemImage (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,902);
if (RapidSub.canDelegate("addcontextmenuitemimage")) { return __ref.runUserSub(false, "jamtableclv","addcontextmenuitemimage", __ref, _textomenuitem, _tagmenuitem, _img);}
RemoteObject _mi = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");
Debug.locals.put("TextoMenuItem", _textomenuitem);
Debug.locals.put("TagMenuItem", _tagmenuitem);
Debug.locals.put("Img", _img);
 BA.debugLineNum = 902;BA.debugLine="Public Sub AddContextMenuItemImage(TextoMenuItem A";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 903;BA.debugLine="Dim mi As MenuItem";
Debug.JustUpdateDeviceLine();
_mi = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");Debug.locals.put("mi", _mi);
 BA.debugLineNum = 904;BA.debugLine="mi.Initialize(TextoMenuItem, \"ContextMenuItem\")";
Debug.JustUpdateDeviceLine();
_mi.runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(_textomenuitem),(Object)(RemoteObject.createImmutable("ContextMenuItem")));
 BA.debugLineNum = 905;BA.debugLine="mi.Tag=TagMenuItem";
Debug.JustUpdateDeviceLine();
_mi.runMethod(false,"setTag",(_tagmenuitem));
 BA.debugLineNum = 906;BA.debugLine="mi.Image=Img";
Debug.JustUpdateDeviceLine();
_mi.runMethod(false,"setImage",(_img.getObject()));
 BA.debugLineNum = 907;BA.debugLine="lstContextMenuItemsGenerales.Add(mi)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstcontextmenuitemsgenerales" /*RemoteObject*/ ).runVoidMethod ("Add",(Object)((_mi.getObject())));
 BA.debugLineNum = 909;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _addcontextmenuitemimagenodo(RemoteObject __ref,RemoteObject _aliascampo,RemoteObject _textomenuitem,RemoteObject _tagmenuitem,RemoteObject _img) throws Exception{
try {
		Debug.PushSubsStack("AddContextMenuItemImageNodo (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,912);
if (RapidSub.canDelegate("addcontextmenuitemimagenodo")) { return __ref.runUserSub(false, "jamtableclv","addcontextmenuitemimagenodo", __ref, _aliascampo, _textomenuitem, _tagmenuitem, _img);}
RemoteObject _mic = RemoteObject.declareNull("b4j.docU.jamtableclv._contextmenuitemnodojamtableclv");
Debug.locals.put("AliasCampo", _aliascampo);
Debug.locals.put("TextoMenuItem", _textomenuitem);
Debug.locals.put("TagMenuItem", _tagmenuitem);
Debug.locals.put("Img", _img);
 BA.debugLineNum = 912;BA.debugLine="Public Sub AddContextMenuItemImageNodo(AliasCampo";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 913;BA.debugLine="Dim mIC As ContextMenuItemNodoJamTableCLV";
Debug.JustUpdateDeviceLine();
_mic = RemoteObject.createNew ("b4j.docU.jamtableclv._contextmenuitemnodojamtableclv");Debug.locals.put("mIC", _mic);
 BA.debugLineNum = 914;BA.debugLine="mIC.Initialize";
Debug.JustUpdateDeviceLine();
_mic.runVoidMethod ("Initialize");
 BA.debugLineNum = 915;BA.debugLine="mIC.AliasCampo=AliasCampo";
Debug.JustUpdateDeviceLine();
_mic.setField ("AliasCampo" /*RemoteObject*/ ,_aliascampo);
 BA.debugLineNum = 916;BA.debugLine="mIC.TextoMenuItem=TextoMenuItem";
Debug.JustUpdateDeviceLine();
_mic.setField ("TextoMenuItem" /*RemoteObject*/ ,_textomenuitem);
 BA.debugLineNum = 917;BA.debugLine="mIC.TagMenuItem=TagMenuItem";
Debug.JustUpdateDeviceLine();
_mic.setField ("TagMenuItem" /*RemoteObject*/ ,_tagmenuitem);
 BA.debugLineNum = 918;BA.debugLine="mIC.Imagemenuitem=Img";
Debug.JustUpdateDeviceLine();
_mic.setField ("ImageMenuItem" /*RemoteObject*/ ,_img);
 BA.debugLineNum = 919;BA.debugLine="lstContextMenuItemsNodo.Add(mIC)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstcontextmenuitemsnodo" /*RemoteObject*/ ).runVoidMethod ("Add",(Object)((_mic)));
 BA.debugLineNum = 921;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _addcontextmenuitemnodo(RemoteObject __ref,RemoteObject _aliascampo,RemoteObject _textomenuitem,RemoteObject _tagmenuitem) throws Exception{
try {
		Debug.PushSubsStack("AddContextMenuItemNodo (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,890);
if (RapidSub.canDelegate("addcontextmenuitemnodo")) { return __ref.runUserSub(false, "jamtableclv","addcontextmenuitemnodo", __ref, _aliascampo, _textomenuitem, _tagmenuitem);}
RemoteObject _mic = RemoteObject.declareNull("b4j.docU.jamtableclv._contextmenuitemnodojamtableclv");
Debug.locals.put("AliasCampo", _aliascampo);
Debug.locals.put("TextoMenuItem", _textomenuitem);
Debug.locals.put("TagMenuItem", _tagmenuitem);
 BA.debugLineNum = 890;BA.debugLine="Public Sub AddContextMenuItemNodo(AliasCampo As St";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 891;BA.debugLine="Dim mIC As ContextMenuItemNodoJamTableCLV";
Debug.JustUpdateDeviceLine();
_mic = RemoteObject.createNew ("b4j.docU.jamtableclv._contextmenuitemnodojamtableclv");Debug.locals.put("mIC", _mic);
 BA.debugLineNum = 892;BA.debugLine="mIC.Initialize";
Debug.JustUpdateDeviceLine();
_mic.runVoidMethod ("Initialize");
 BA.debugLineNum = 893;BA.debugLine="mIC.AliasCampo=AliasCampo";
Debug.JustUpdateDeviceLine();
_mic.setField ("AliasCampo" /*RemoteObject*/ ,_aliascampo);
 BA.debugLineNum = 894;BA.debugLine="mIC.TextoMenuItem=TextoMenuItem";
Debug.JustUpdateDeviceLine();
_mic.setField ("TextoMenuItem" /*RemoteObject*/ ,_textomenuitem);
 BA.debugLineNum = 895;BA.debugLine="mIC.TagMenuItem=TagMenuItem";
Debug.JustUpdateDeviceLine();
_mic.setField ("TagMenuItem" /*RemoteObject*/ ,_tagmenuitem);
 BA.debugLineNum = 896;BA.debugLine="lstContextMenuItemsNodo.Add(mIC)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstcontextmenuitemsnodo" /*RemoteObject*/ ).runVoidMethod ("Add",(Object)((_mic)));
 BA.debugLineNum = 897;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _addcontextmenuitemseleccionartodotextonodo(RemoteObject __ref,RemoteObject _xnode) throws Exception{
try {
		Debug.PushSubsStack("AddContextMenuItemSeleccionarTodoTextoNodo (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,1232);
if (RapidSub.canDelegate("addcontextmenuitemseleccionartodotextonodo")) { return __ref.runUserSub(false, "jamtableclv","addcontextmenuitemseleccionartodotextonodo", __ref, _xnode);}
RemoteObject _mis = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");
RemoteObject _schr = RemoteObject.createImmutable("");
RemoteObject _mi = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");
RemoteObject _img = RemoteObject.declareNull("anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper");
Debug.locals.put("xNode", _xnode);
 BA.debugLineNum = 1232;BA.debugLine="private Sub AddContextMenuItemSeleccionarTodoTexto";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 1234;BA.debugLine="For Each mIS As MenuItem In mContextMenu.MenuItem";
Debug.JustUpdateDeviceLine();
_mis = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");
{
final RemoteObject group1 = __ref.getField(false,"_mcontextmenu" /*RemoteObject*/ ).runMethod(false,"getMenuItems");
final int groupLen1 = group1.runMethod(true,"getSize").<Integer>get()
;int index1 = 0;
;
for (; index1 < groupLen1;index1++){
_mis = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper"), group1.runMethod(false,"Get",index1));Debug.locals.put("mIS", _mis);
Debug.locals.put("mIS", _mis);
 BA.debugLineNum = 1235;BA.debugLine="If mIS.Tag=\"SeleccionarTodoTextoNodoMenuContextu";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_mis.runMethod(false,"getTag"),RemoteObject.createImmutable(("SeleccionarTodoTextoNodoMenuContextual")))) { 
if (true) return RemoteObject.createImmutable("");};
 }
}Debug.locals.put("mIS", _mis);
;
 BA.debugLineNum = 1239;BA.debugLine="Dim sChr As String=Chr(0xF07E)";
Debug.JustUpdateDeviceLine();
_schr = BA.ObjectToString(jamtableclv.__c.runMethod(true,"Chr",(Object)(BA.numberCast(int.class, ((int)0xf07e)))));Debug.locals.put("sChr", _schr);Debug.locals.put("sChr", _schr);
 BA.debugLineNum = 1240;BA.debugLine="Dim mI As MenuItem";
Debug.JustUpdateDeviceLine();
_mi = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");Debug.locals.put("mI", _mi);
 BA.debugLineNum = 1241;BA.debugLine="mI.Initialize(\"Seleccionar Todo\", \"ContextMenuIte";
Debug.JustUpdateDeviceLine();
_mi.runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(BA.ObjectToString("Seleccionar Todo")),(Object)(RemoteObject.createImmutable("ContextMenuItemNodo")));
 BA.debugLineNum = 1242;BA.debugLine="mI.Tag=\"SeleccionarTodoTextoNodoMenuContextual\"";
Debug.JustUpdateDeviceLine();
_mi.runMethod(false,"setTag",RemoteObject.createImmutable(("SeleccionarTodoTextoNodoMenuContextual")));
 BA.debugLineNum = 1243;BA.debugLine="Dim img As Image=TextToImageAwesome(sChr,16)";
Debug.JustUpdateDeviceLine();
_img = RemoteObject.createNew ("anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper");
_img = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_texttoimageawesome" /*RemoteObject*/ ,(Object)(_schr),(Object)(BA.numberCast(double.class, 16)));Debug.locals.put("img", _img);Debug.locals.put("img", _img);
 BA.debugLineNum = 1244;BA.debugLine="mI.Image=img";
Debug.JustUpdateDeviceLine();
_mi.runMethod(false,"setImage",(_img.getObject()));
 BA.debugLineNum = 1246;BA.debugLine="mContextMenu.MenuItems.Add(mI)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_mcontextmenu" /*RemoteObject*/ ).runMethod(false,"getMenuItems").runVoidMethod ("Add",(Object)((_mi.getObject())));
 BA.debugLineNum = 1247;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _addcontextmenuitemseparator(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("AddContextMenuItemSeparator (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,981);
if (RapidSub.canDelegate("addcontextmenuitemseparator")) { return __ref.runUserSub(false, "jamtableclv","addcontextmenuitemseparator", __ref);}
RemoteObject _sseparator = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
 BA.debugLineNum = 981;BA.debugLine="Public Sub AddContextMenuItemSeparator";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 982;BA.debugLine="Dim sSeparator As JavaObject";
Debug.JustUpdateDeviceLine();
_sseparator = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");Debug.locals.put("sSeparator", _sseparator);
 BA.debugLineNum = 983;BA.debugLine="sSeparator.InitializeNewInstance(\"javafx.scene.co";
Debug.JustUpdateDeviceLine();
_sseparator.runVoidMethod ("InitializeNewInstance",(Object)(BA.ObjectToString("javafx.scene.control.SeparatorMenuItem")),(Object)((jamtableclv.__c.getField(false,"Null"))));
 BA.debugLineNum = 985;BA.debugLine="lstContextMenuItemsGenerales.Add(sSeparator)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstcontextmenuitemsgenerales" /*RemoteObject*/ ).runVoidMethod ("Add",(Object)((_sseparator.getObject())));
 BA.debugLineNum = 986;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _addcontextmenuitemseparatornodo(RemoteObject __ref,RemoteObject _aliascampo) throws Exception{
try {
		Debug.PushSubsStack("AddContextMenuItemSeparatorNodo (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,989);
if (RapidSub.canDelegate("addcontextmenuitemseparatornodo")) { return __ref.runUserSub(false, "jamtableclv","addcontextmenuitemseparatornodo", __ref, _aliascampo);}
RemoteObject _sseparator = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
Debug.locals.put("AliasCampo", _aliascampo);
 BA.debugLineNum = 989;BA.debugLine="Public Sub AddContextMenuItemSeparatorNodo(AliasCa";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 990;BA.debugLine="Dim sSeparator As JavaObject";
Debug.JustUpdateDeviceLine();
_sseparator = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");Debug.locals.put("sSeparator", _sseparator);
 BA.debugLineNum = 991;BA.debugLine="sSeparator.InitializeNewInstance(\"javafx.scene.co";
Debug.JustUpdateDeviceLine();
_sseparator.runVoidMethod ("InitializeNewInstance",(Object)(BA.ObjectToString("javafx.scene.control.SeparatorMenuItem")),(Object)((jamtableclv.__c.getField(false,"Null"))));
 BA.debugLineNum = 993;BA.debugLine="lstContextMenuItemsNodo.Add(sSeparator)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstcontextmenuitemsnodo" /*RemoteObject*/ ).runVoidMethod ("Add",(Object)((_sseparator.getObject())));
 BA.debugLineNum = 994;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static void  _addfiltro(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("AddFiltro (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,2302);
if (RapidSub.canDelegate("addfiltro")) { __ref.runUserSub(false, "jamtableclv","addfiltro", __ref); return;}
ResumableSub_AddFiltro rsub = new ResumableSub_AddFiltro(null,__ref);
rsub.resume(null, null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_AddFiltro extends BA.ResumableSub {
public ResumableSub_AddFiltro(b4j.docU.jamtableclv parent,RemoteObject __ref) {
this.parent = parent;
this.__ref = __ref;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _clviv = RemoteObject.declareNull("b4j.docU.jamtableclv._clvjamtableclvfiltroitemvalue");

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("AddFiltro (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,2302);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
return;

case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
 BA.debugLineNum = 2303;BA.debugLine="If Not(clvFiltros.IsInitialized) Then Return";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//if
this.state = 6;
if (parent.__c.runMethod(true,"Not",(Object)(__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(true,"IsInitialized"))).<Boolean>get().booleanValue()) { 
this.state = 3;
;}if (true) break;

case 3:
//C
this.state = 6;
if (true) return ;
if (true) break;

case 6:
//C
this.state = 7;
;
 BA.debugLineNum = 2304;BA.debugLine="Dim clviv As clvJAMTableCLVFiltroItemValue";
Debug.JustUpdateDeviceLine();
_clviv = RemoteObject.createNew ("b4j.docU.jamtableclv._clvjamtableclvfiltroitemvalue");Debug.locals.put("clviv", _clviv);
 BA.debugLineNum = 2305;BA.debugLine="clviv.Initialize";
Debug.JustUpdateDeviceLine();
_clviv.runVoidMethod ("Initialize");
 BA.debugLineNum = 2306;BA.debugLine="If clvFiltros.Size=0 Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 7:
//if
this.state = 12;
if (RemoteObject.solveBoolean("=",__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(true,"_getsize"),BA.numberCast(double.class, 0))) { 
this.state = 9;
}else {
this.state = 11;
}if (true) break;

case 9:
//C
this.state = 12;
 BA.debugLineNum = 2307;BA.debugLine="clvFiltros.Add(CreateItemFiltro(True, clviv),clv";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runVoidMethod ("_add",(Object)(__ref.runClassMethod (b4j.docU.jamtableclv.class, "_createitemfiltro" /*RemoteObject*/ ,(Object)(parent.__c.getField(true,"True")),(Object)(_clviv))),(Object)((_clviv)));
 if (true) break;

case 11:
//C
this.state = 12;
 BA.debugLineNum = 2309;BA.debugLine="clvFiltros.Add(CreateItemFiltro(False, clviv),cl";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runVoidMethod ("_add",(Object)(__ref.runClassMethod (b4j.docU.jamtableclv.class, "_createitemfiltro" /*RemoteObject*/ ,(Object)(parent.__c.getField(true,"False")),(Object)(_clviv))),(Object)((_clviv)));
 if (true) break;

case 12:
//C
this.state = 13;
;
 BA.debugLineNum = 2311;BA.debugLine="FiltrosVisibles=True";
Debug.JustUpdateDeviceLine();
__ref.setField ("_filtrosvisibles" /*RemoteObject*/ ,parent.__c.getField(true,"True"));
 BA.debugLineNum = 2312;BA.debugLine="Sleep(0)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("Sleep",__ref.getField(false, "ba"),anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "addfiltro"),BA.numberCast(int.class, 0));
this.state = 19;
return;
case 19:
//C
this.state = 13;
;
 BA.debugLineNum = 2313;BA.debugLine="PosicionDimensionesCLVFiltros";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_posiciondimensionesclvfiltros" /*RemoteObject*/ );
 BA.debugLineNum = 2314;BA.debugLine="Sleep(0)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("Sleep",__ref.getField(false, "ba"),anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "addfiltro"),BA.numberCast(int.class, 0));
this.state = 20;
return;
case 20:
//C
this.state = 13;
;
 BA.debugLineNum = 2315;BA.debugLine="If clvFiltros.sv.ScrollViewContentHeight>clvFiltr";
Debug.JustUpdateDeviceLine();
if (true) break;

case 13:
//if
this.state = 18;
if (RemoteObject.solveBoolean(">",__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).getField(false,"_sv").runMethod(true,"getScrollViewContentHeight"),__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(false,"_asview").runMethod(true,"getHeight"))) { 
this.state = 15;
;}if (true) break;

case 15:
//C
this.state = 18;
__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runVoidMethod ("_scrolltoitem",(Object)(RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(true,"_getsize"),RemoteObject.createImmutable(1)}, "-",1, 1)));
if (true) break;

case 18:
//C
this.state = -1;
;
 BA.debugLineNum = 2316;BA.debugLine="CallSubDelayed(Me,\"AddFiltro_Completed\")";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("CallSubDelayed",__ref.getField(false, "ba"),(Object)(__ref),(Object)(RemoteObject.createImmutable("AddFiltro_Completed")));
 BA.debugLineNum = 2317;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static RemoteObject  _addfiltroavanzadocampovalorseleccionado(RemoteObject __ref,RemoteObject _aliascamposel,RemoteObject _comparadorfiltroavanzado,RemoteObject _valorfiltrosel,RemoteObject _xnodeorigen) throws Exception{
try {
		Debug.PushSubsStack("AddFiltroAvanzadoCampoValorSeleccionado (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,3763);
if (RapidSub.canDelegate("addfiltroavanzadocampovalorseleccionado")) { return __ref.runUserSub(false, "jamtableclv","addfiltroavanzadocampovalorseleccionado", __ref, _aliascamposel, _comparadorfiltroavanzado, _valorfiltrosel, _xnodeorigen);}
ResumableSub_AddFiltroAvanzadoCampoValorSeleccionado rsub = new ResumableSub_AddFiltroAvanzadoCampoValorSeleccionado(null,__ref,_aliascamposel,_comparadorfiltroavanzado,_valorfiltrosel,_xnodeorigen);
rsub.remoteResumableSub = anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSubForFilter();
rsub.resume(null, null);
return RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.keywords.Common.ResumableSubWrapper"), rsub.remoteResumableSub);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_AddFiltroAvanzadoCampoValorSeleccionado extends BA.ResumableSub {
public ResumableSub_AddFiltroAvanzadoCampoValorSeleccionado(b4j.docU.jamtableclv parent,RemoteObject __ref,RemoteObject _aliascamposel,RemoteObject _comparadorfiltroavanzado,RemoteObject _valorfiltrosel,RemoteObject _xnodeorigen) {
this.parent = parent;
this.__ref = __ref;
this._aliascamposel = _aliascamposel;
this._comparadorfiltroavanzado = _comparadorfiltroavanzado;
this._valorfiltrosel = _valorfiltrosel;
this._xnodeorigen = _xnodeorigen;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _aliascamposel;
RemoteObject _comparadorfiltroavanzado;
RemoteObject _valorfiltrosel;
RemoteObject _xnodeorigen;
RemoteObject _c = RemoteObject.declareNull("b4j.docU.jamtableclv._campoorigendatosjamtableclv");
RemoteObject _msa = RemoteObject.declareNull("Object");
RemoteObject _crearfiltro = RemoteObject.createImmutable(false);
RemoteObject _cambiooperador = RemoteObject.createImmutable(false);
RemoteObject _flagfiltroincompleto = RemoteObject.createImmutable(false);
int _i = 0;
RemoteObject _p = RemoteObject.declareNull("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
RemoteObject _m = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
RemoteObject _dcfiltro = RemoteObject.declareNull("b4j.docU.jamtableclv._campoorigendatosjamtableclv");
RemoteObject _fechafiltro = RemoteObject.createImmutable(0L);
RemoteObject _mdataitemnodo = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
RemoteObject _valorfiltrosellong = RemoteObject.createImmutable(0L);
RemoteObject _flagfiltroyaexiste = RemoteObject.createImmutable(false);
RemoteObject _mdatoscampofiltro = RemoteObject.declareNull("b4j.docU.jamtableclv._campoorigendatosjamtableclv");
RemoteObject _mdatosfiltro = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
RemoteObject _clviv = RemoteObject.declareNull("b4j.docU.jamtableclv._clvjamtableclvfiltroitemvalue");
RemoteObject _robj = RemoteObject.declareNull("Object");
RemoteObject _datetimeformatant = RemoteObject.createImmutable("");
int step15;
int limit15;
int step55;
int limit55;

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("AddFiltroAvanzadoCampoValorSeleccionado (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,3763);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
{
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,RemoteObject.createImmutable(null));return;}
case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
Debug.locals.put("AliasCampoSel", _aliascamposel);
Debug.locals.put("ComparadorFiltroAvanzado", _comparadorfiltroavanzado);
Debug.locals.put("ValorFiltroSel", _valorfiltrosel);
Debug.locals.put("xNodeOrigen", _xnodeorigen);
 BA.debugLineNum = 3766;BA.debugLine="Dim c As CampoOrigenDatosJamTableCLV=GetDatosCamp";
Debug.JustUpdateDeviceLine();
_c = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_getdatoscampoorigendatosjamtableclvaliascampo" /*RemoteObject*/ ,(Object)(_aliascamposel));Debug.locals.put("c", _c);Debug.locals.put("c", _c);
 BA.debugLineNum = 3767;BA.debugLine="If c=Null Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//if
this.state = 4;
if (RemoteObject.solveBoolean("n",_c)) { 
this.state = 3;
}if (true) break;

case 3:
//C
this.state = 4;
 BA.debugLineNum = 3768;BA.debugLine="Dim msa As Object=xui.MsgboxAsync(\"Error obtenie";
Debug.JustUpdateDeviceLine();
_msa = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"MsgboxAsync",__ref.getField(false, "ba"),(Object)(BA.ObjectToString("Error obteniendo los datos del campo.")),(Object)(RemoteObject.createImmutable("Aviso")));Debug.locals.put("msa", _msa);Debug.locals.put("msa", _msa);
 BA.debugLineNum = 3769;BA.debugLine="Wait For (msa) Msgbox_Result";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","msgbox_result", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "addfiltroavanzadocampovalorseleccionado"), _msa);
this.state = 82;
return;
case 82:
//C
this.state = 4;
;
 BA.debugLineNum = 3770;BA.debugLine="Return False";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(parent.__c.getField(true,"False")));return;};
 if (true) break;
;
 BA.debugLineNum = 3773;BA.debugLine="If c.TipoControlFiltro=\"\" Then";
Debug.JustUpdateDeviceLine();

case 4:
//if
this.state = 7;
if (RemoteObject.solveBoolean("=",_c.getField(true,"TipoControlFiltro" /*RemoteObject*/ ),BA.ObjectToString(""))) { 
this.state = 6;
}if (true) break;

case 6:
//C
this.state = 7;
 BA.debugLineNum = 3774;BA.debugLine="Dim msa As Object=xui.MsgboxAsync(\"No existe un";
Debug.JustUpdateDeviceLine();
_msa = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"MsgboxAsync",__ref.getField(false, "ba"),(Object)(RemoteObject.concat(RemoteObject.createImmutable("No existe un tipo de control de filtro para el campo de la columna seleccionada."),parent.__c.getField(true,"CRLF"),parent.__c.getField(true,"CRLF"),RemoteObject.createImmutable("No es posible filtrar por el campo "),_aliascamposel)),(Object)(RemoteObject.createImmutable("Aviso")));Debug.locals.put("msa", _msa);Debug.locals.put("msa", _msa);
 BA.debugLineNum = 3775;BA.debugLine="Wait For (msa) Msgbox_Result";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","msgbox_result", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "addfiltroavanzadocampovalorseleccionado"), _msa);
this.state = 83;
return;
case 83:
//C
this.state = 7;
;
 BA.debugLineNum = 3776;BA.debugLine="Return False";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(parent.__c.getField(true,"False")));return;};
 if (true) break;

case 7:
//C
this.state = 8;
;
 BA.debugLineNum = 3779;BA.debugLine="Dim CrearFiltro As Boolean";
Debug.JustUpdateDeviceLine();
_crearfiltro = RemoteObject.createImmutable(false);Debug.locals.put("CrearFiltro", _crearfiltro);
 BA.debugLineNum = 3780;BA.debugLine="Dim CambioOperador As Boolean";
Debug.JustUpdateDeviceLine();
_cambiooperador = RemoteObject.createImmutable(false);Debug.locals.put("CambioOperador", _cambiooperador);
 BA.debugLineNum = 3782;BA.debugLine="Dim FlagFiltroIncompleto As Boolean";
Debug.JustUpdateDeviceLine();
_flagfiltroincompleto = RemoteObject.createImmutable(false);Debug.locals.put("FlagFiltroIncompleto", _flagfiltroincompleto);
 BA.debugLineNum = 3783;BA.debugLine="For i=0 To clvFiltros.Size-1";
Debug.JustUpdateDeviceLine();
if (true) break;

case 8:
//for
this.state = 15;
step15 = 1;
limit15 = RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(true,"_getsize"),RemoteObject.createImmutable(1)}, "-",1, 1).<Integer>get().intValue();
_i = 0 ;
Debug.locals.put("i", _i);
this.state = 84;
if (true) break;

case 84:
//C
this.state = 15;
if ((step15 > 0 && _i <= limit15) || (step15 < 0 && _i >= limit15)) this.state = 10;
if (true) break;

case 85:
//C
this.state = 84;
_i = ((int)(0 + _i + step15)) ;
Debug.locals.put("i", _i);
if (true) break;

case 10:
//C
this.state = 11;
 BA.debugLineNum = 3784;BA.debugLine="Dim p As Pane=clvFiltros.GetPanel(i)";
Debug.JustUpdateDeviceLine();
_p = RemoteObject.createNew ("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
_p = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper"), __ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(false,"_getpanel",(Object)(BA.numberCast(int.class, _i))).getObject());Debug.locals.put("p", _p);Debug.locals.put("p", _p);
 BA.debugLineNum = 3785;BA.debugLine="Dim m As Map=p.Tag";
Debug.JustUpdateDeviceLine();
_m = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");
_m = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.collections.Map"), _p.runMethod(false,"getTag"));Debug.locals.put("m", _m);Debug.locals.put("m", _m);
 BA.debugLineNum = 3786;BA.debugLine="If m.Get(\"FiltroCompleto\")=False Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 11:
//if
this.state = 14;
if (RemoteObject.solveBoolean("=",_m.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("FiltroCompleto")))),(parent.__c.getField(true,"False")))) { 
this.state = 13;
}if (true) break;

case 13:
//C
this.state = 14;
 BA.debugLineNum = 3787;BA.debugLine="FlagFiltroIncompleto=True";
Debug.JustUpdateDeviceLine();
_flagfiltroincompleto = parent.__c.getField(true,"True");Debug.locals.put("FlagFiltroIncompleto", _flagfiltroincompleto);
 BA.debugLineNum = 3788;BA.debugLine="Exit";
Debug.JustUpdateDeviceLine();
this.state = 15;
if (true) break;
 if (true) break;

case 14:
//C
this.state = 85;
;
 if (true) break;
if (true) break;
Debug.locals.put("i", _i);
;
 BA.debugLineNum = 3792;BA.debugLine="If FlagFiltroIncompleto Then";
Debug.JustUpdateDeviceLine();

case 15:
//if
this.state = 26;
if (_flagfiltroincompleto.<Boolean>get().booleanValue()) { 
this.state = 17;
}else {
this.state = 25;
}if (true) break;

case 17:
//C
this.state = 18;
 BA.debugLineNum = 3793;BA.debugLine="Dim dCFiltro As CampoOrigenDatosJamTableCLV=m.Ge";
Debug.JustUpdateDeviceLine();
_dcfiltro = (_m.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("DatosCampoFiltro")))));Debug.locals.put("dCFiltro", _dcfiltro);Debug.locals.put("dCFiltro", _dcfiltro);
 BA.debugLineNum = 3794;BA.debugLine="If dCFiltro.Campo<>\"\" Then ' hay un filtro incom";
Debug.JustUpdateDeviceLine();
if (true) break;

case 18:
//if
this.state = 23;
if (RemoteObject.solveBoolean("!",_dcfiltro.getField(true,"Campo" /*RemoteObject*/ ),BA.ObjectToString(""))) { 
this.state = 20;
}else {
this.state = 22;
}if (true) break;

case 20:
//C
this.state = 23;
 BA.debugLineNum = 3795;BA.debugLine="Dim msa As Object=xui.MsgboxAsync(\"Existe un pa";
Debug.JustUpdateDeviceLine();
_msa = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"MsgboxAsync",__ref.getField(false, "ba"),(Object)(RemoteObject.concat(RemoteObject.createImmutable("Existe un panel del filtro sin completar."),parent.__c.getField(true,"CRLF"),parent.__c.getField(true,"CRLF"),RemoteObject.createImmutable("Es necesario completar el filtro, o eliminarlo antes de añadir otro filtro."))),(Object)(RemoteObject.createImmutable("Aviso")));Debug.locals.put("msa", _msa);Debug.locals.put("msa", _msa);
 BA.debugLineNum = 3796;BA.debugLine="Wait For (msa) Msgbox_Result";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","msgbox_result", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "addfiltroavanzadocampovalorseleccionado"), _msa);
this.state = 86;
return;
case 86:
//C
this.state = 23;
;
 BA.debugLineNum = 3797;BA.debugLine="Return False";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(parent.__c.getField(true,"False")));return;};
 if (true) break;

case 22:
//C
this.state = 23;
 BA.debugLineNum = 3800;BA.debugLine="CrearFiltro=False";
Debug.JustUpdateDeviceLine();
_crearfiltro = parent.__c.getField(true,"False");Debug.locals.put("CrearFiltro", _crearfiltro);
 if (true) break;

case 23:
//C
this.state = 26;
;
 if (true) break;

case 25:
//C
this.state = 26;
 BA.debugLineNum = 3807;BA.debugLine="CrearFiltro=True";
Debug.JustUpdateDeviceLine();
_crearfiltro = parent.__c.getField(true,"True");Debug.locals.put("CrearFiltro", _crearfiltro);
 if (true) break;
;
 BA.debugLineNum = 3822;BA.debugLine="If c.EsFecha Then";
Debug.JustUpdateDeviceLine();

case 26:
//if
this.state = 41;
if (_c.getField(true,"EsFecha" /*RemoteObject*/ ).<Boolean>get().booleanValue()) { 
this.state = 28;
}if (true) break;

case 28:
//C
this.state = 29;
 BA.debugLineNum = 3824;BA.debugLine="Dim FechaFiltro As Long";
Debug.JustUpdateDeviceLine();
_fechafiltro = RemoteObject.createImmutable(0L);Debug.locals.put("FechaFiltro", _fechafiltro);
 BA.debugLineNum = 3825;BA.debugLine="If ValorFiltroSel=\"\" Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 29:
//if
this.state = 40;
if (RemoteObject.solveBoolean("=",_valorfiltrosel,RemoteObject.createImmutable(("")))) { 
this.state = 31;
}else {
this.state = 33;
}if (true) break;

case 31:
//C
this.state = 40;
 BA.debugLineNum = 3826;BA.debugLine="FechaFiltro=0";
Debug.JustUpdateDeviceLine();
_fechafiltro = BA.numberCast(long.class, 0);Debug.locals.put("FechaFiltro", _fechafiltro);
 if (true) break;

case 33:
//C
this.state = 34;
 BA.debugLineNum = 3830;BA.debugLine="If xNodeOrigen<>Null Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 34:
//if
this.state = 39;
if (RemoteObject.solveBoolean("N",_xnodeorigen)) { 
this.state = 36;
}else {
this.state = 38;
}if (true) break;

case 36:
//C
this.state = 39;
 BA.debugLineNum = 3831;BA.debugLine="Dim mDataItemNodo As Map=GetDatosItemNodo(xNod";
Debug.JustUpdateDeviceLine();
_mdataitemnodo = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");
_mdataitemnodo = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_getdatositemnodo" /*RemoteObject*/ ,(Object)(_xnodeorigen));Debug.locals.put("mDataItemNodo", _mdataitemnodo);Debug.locals.put("mDataItemNodo", _mdataitemnodo);
 BA.debugLineNum = 3832;BA.debugLine="FechaFiltro=mDataItemNodo.Get(c.AliasCampo)";
Debug.JustUpdateDeviceLine();
_fechafiltro = BA.numberCast(long.class, _mdataitemnodo.runMethod(false,"Get",(Object)((_c.getField(true,"AliasCampo" /*RemoteObject*/ )))));Debug.locals.put("FechaFiltro", _fechafiltro);
 if (true) break;

case 38:
//C
this.state = 39;
 BA.debugLineNum = 3834;BA.debugLine="LogColor(\"No es posible determinar el formato";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9166133831",BA.ObjectToString("No es posible determinar el formato de fecha para establecer el filtro"),__ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"Color_Red"));
 BA.debugLineNum = 3835;BA.debugLine="Dim msa As Object=xui.MsgboxAsync(\"No es posib";
Debug.JustUpdateDeviceLine();
_msa = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"MsgboxAsync",__ref.getField(false, "ba"),(Object)(BA.ObjectToString("No es posible determinar el formato de fecha para establecer el filtro")),(Object)(RemoteObject.createImmutable("Aviso")));Debug.locals.put("msa", _msa);Debug.locals.put("msa", _msa);
 BA.debugLineNum = 3836;BA.debugLine="Wait For (msa) Msgbox_Result";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","msgbox_result", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "addfiltroavanzadocampovalorseleccionado"), _msa);
this.state = 87;
return;
case 87:
//C
this.state = 39;
;
 BA.debugLineNum = 3837;BA.debugLine="Return False";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(parent.__c.getField(true,"False")));return;};
 if (true) break;

case 39:
//C
this.state = 40;
;
 if (true) break;

case 40:
//C
this.state = 41;
;
 BA.debugLineNum = 3840;BA.debugLine="Dim ValorFiltroSelLong As Long=DateUtils.SetDate";
Debug.JustUpdateDeviceLine();
_valorfiltrosellong = parent._dateutils.runMethod(true,"_setdate",(Object)(parent.__c.getField(false,"DateTime").runMethod(true,"GetYear",(Object)(_fechafiltro))),(Object)(parent.__c.getField(false,"DateTime").runMethod(true,"GetMonth",(Object)(_fechafiltro))),(Object)(parent.__c.getField(false,"DateTime").runMethod(true,"GetDayOfMonth",(Object)(_fechafiltro))));Debug.locals.put("ValorFiltroSelLong", _valorfiltrosellong);Debug.locals.put("ValorFiltroSelLong", _valorfiltrosellong);
 BA.debugLineNum = 3841;BA.debugLine="ValorFiltroSel=ValorFiltroSelLong";
Debug.JustUpdateDeviceLine();
_valorfiltrosel = (_valorfiltrosellong);Debug.locals.put("ValorFiltroSel", _valorfiltrosel);
 if (true) break;
;
 BA.debugLineNum = 3844;BA.debugLine="If CrearFiltro Then";
Debug.JustUpdateDeviceLine();

case 41:
//if
this.state = 55;
if (_crearfiltro.<Boolean>get().booleanValue()) { 
this.state = 43;
}if (true) break;

case 43:
//C
this.state = 44;
 BA.debugLineNum = 3846;BA.debugLine="Dim FlagFiltroYaExiste As Boolean";
Debug.JustUpdateDeviceLine();
_flagfiltroyaexiste = RemoteObject.createImmutable(false);Debug.locals.put("FlagFiltroYaExiste", _flagfiltroyaexiste);
 BA.debugLineNum = 3847;BA.debugLine="For i=0 To clvFiltros.Size-1";
Debug.JustUpdateDeviceLine();
if (true) break;

case 44:
//for
this.state = 51;
step55 = 1;
limit55 = RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(true,"_getsize"),RemoteObject.createImmutable(1)}, "-",1, 1).<Integer>get().intValue();
_i = 0 ;
Debug.locals.put("i", _i);
this.state = 88;
if (true) break;

case 88:
//C
this.state = 51;
if ((step55 > 0 && _i <= limit55) || (step55 < 0 && _i >= limit55)) this.state = 46;
if (true) break;

case 89:
//C
this.state = 88;
_i = ((int)(0 + _i + step55)) ;
Debug.locals.put("i", _i);
if (true) break;

case 46:
//C
this.state = 47;
 BA.debugLineNum = 3848;BA.debugLine="Dim p As Pane=clvFiltros.GetPanel(i)";
Debug.JustUpdateDeviceLine();
_p = RemoteObject.createNew ("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
_p = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper"), __ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(false,"_getpanel",(Object)(BA.numberCast(int.class, _i))).getObject());Debug.locals.put("p", _p);Debug.locals.put("p", _p);
 BA.debugLineNum = 3849;BA.debugLine="Dim m As Map=p.Tag";
Debug.JustUpdateDeviceLine();
_m = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");
_m = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.collections.Map"), _p.runMethod(false,"getTag"));Debug.locals.put("m", _m);Debug.locals.put("m", _m);
 BA.debugLineNum = 3850;BA.debugLine="Dim mDatosCampoFiltro As CampoOrigenDatosJamTab";
Debug.JustUpdateDeviceLine();
_mdatoscampofiltro = (_m.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("DatosCampoFiltro")))));Debug.locals.put("mDatosCampoFiltro", _mdatoscampofiltro);Debug.locals.put("mDatosCampoFiltro", _mdatoscampofiltro);
 BA.debugLineNum = 3851;BA.debugLine="If m.Get(\"FiltroCompleto\")=True And m.Get(\"Comp";
Debug.JustUpdateDeviceLine();
if (true) break;

case 47:
//if
this.state = 50;
if (RemoteObject.solveBoolean("=",_m.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("FiltroCompleto")))),(parent.__c.getField(true,"True"))) && RemoteObject.solveBoolean("=",_m.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("ComparadorFiltro")))),(_comparadorfiltroavanzado)) && RemoteObject.solveBoolean("=",_m.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("ValorFiltro")))),_valorfiltrosel) && RemoteObject.solveBoolean("=",_mdatoscampofiltro.getField(true,"AliasCampo" /*RemoteObject*/ ),_aliascamposel)) { 
this.state = 49;
}if (true) break;

case 49:
//C
this.state = 50;
 BA.debugLineNum = 3853;BA.debugLine="FlagFiltroYaExiste=True";
Debug.JustUpdateDeviceLine();
_flagfiltroyaexiste = parent.__c.getField(true,"True");Debug.locals.put("FlagFiltroYaExiste", _flagfiltroyaexiste);
 BA.debugLineNum = 3854;BA.debugLine="Exit";
Debug.JustUpdateDeviceLine();
this.state = 51;
if (true) break;
 if (true) break;

case 50:
//C
this.state = 89;
;
 if (true) break;
if (true) break;
Debug.locals.put("i", _i);
;
 BA.debugLineNum = 3858;BA.debugLine="If FlagFiltroYaExiste Then";
Debug.JustUpdateDeviceLine();

case 51:
//if
this.state = 54;
if (_flagfiltroyaexiste.<Boolean>get().booleanValue()) { 
this.state = 53;
}if (true) break;

case 53:
//C
this.state = 54;
 BA.debugLineNum = 3872;BA.debugLine="Dim msa As Object=xui.MsgboxAsync(\"El filtro se";
Debug.JustUpdateDeviceLine();
_msa = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"MsgboxAsync",__ref.getField(false, "ba"),(Object)(BA.ObjectToString("El filtro seleccionado ya existe.")),(Object)(RemoteObject.createImmutable("Aviso")));Debug.locals.put("msa", _msa);Debug.locals.put("msa", _msa);
 BA.debugLineNum = 3873;BA.debugLine="Wait For (msa) Msgbox_Result";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","msgbox_result", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "addfiltroavanzadocampovalorseleccionado"), _msa);
this.state = 90;
return;
case 90:
//C
this.state = 54;
;
 BA.debugLineNum = 3874;BA.debugLine="Return False";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(parent.__c.getField(true,"False")));return;};
 if (true) break;

case 54:
//C
this.state = 55;
;
 BA.debugLineNum = 3878;BA.debugLine="AddFiltro";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addfiltro" /*void*/ );
 BA.debugLineNum = 3879;BA.debugLine="Wait For AddFiltro_completed";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","addfiltro_completed", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "addfiltroavanzadocampovalorseleccionado"), null);
this.state = 91;
return;
case 91:
//C
this.state = 55;
;
 if (true) break;

case 55:
//C
this.state = 56;
;
 BA.debugLineNum = 3885;BA.debugLine="Dim p As Pane=clvFiltros.GetPanel(clvFiltros.Size";
Debug.JustUpdateDeviceLine();
_p = RemoteObject.createNew ("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
_p = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper"), __ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(false,"_getpanel",(Object)(RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(true,"_getsize"),RemoteObject.createImmutable(1)}, "-",1, 1))).getObject());Debug.locals.put("p", _p);Debug.locals.put("p", _p);
 BA.debugLineNum = 3886;BA.debugLine="Dim mDatosFiltro As Map=p.Tag";
Debug.JustUpdateDeviceLine();
_mdatosfiltro = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");
_mdatosfiltro = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.collections.Map"), _p.runMethod(false,"getTag"));Debug.locals.put("mDatosFiltro", _mdatosfiltro);Debug.locals.put("mDatosFiltro", _mdatosfiltro);
 BA.debugLineNum = 3887;BA.debugLine="Dim clviv As clvJAMTableCLVFiltroItemValue=clvFil";
Debug.JustUpdateDeviceLine();
_clviv = (__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(false,"_getvalue",(Object)(RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(true,"_getsize"),RemoteObject.createImmutable(1)}, "-",1, 1))));Debug.locals.put("clviv", _clviv);Debug.locals.put("clviv", _clviv);
 BA.debugLineNum = 3895;BA.debugLine="cboCampoFiltroUserChange=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_cbocampofiltrouserchange" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 BA.debugLineNum = 3896;BA.debugLine="clviv.cboCampoFiltro.Value=AliasCampoSel";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"cboCampoFiltro" /*RemoteObject*/ ).runMethod(false,"setValue",(_aliascamposel));
 BA.debugLineNum = 3900;BA.debugLine="cbComparadorFiltroUserChange=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_cbcomparadorfiltrouserchange" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 BA.debugLineNum = 3904;BA.debugLine="wait for(CargarItemsCbComparadorFiltro(clviv.cbCo";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "addfiltroavanzadocampovalorseleccionado"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_cargaritemscbcomparadorfiltro" /*RemoteObject*/ ,(Object)(_clviv.getField(false,"cbComparadorFiltro" /*RemoteObject*/ )),(Object)(_c),(Object)(_clviv)));
this.state = 92;
return;
case 92:
//C
this.state = 56;
_robj = (RemoteObject) result.getArrayElement(false,RemoteObject.createImmutable(1));Debug.locals.put("rObj", _robj);
;
 BA.debugLineNum = 3905;BA.debugLine="clviv.cbComparadorFiltro.SelectedIndex=clviv.cbCo";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"cbComparadorFiltro" /*RemoteObject*/ ).runMethod(true,"setSelectedIndex",_clviv.getField(false,"cbComparadorFiltro" /*RemoteObject*/ ).runMethod(false,"getItems").runMethod(true,"IndexOf",(Object)((_comparadorfiltroavanzado))));
 BA.debugLineNum = 3906;BA.debugLine="clviv.cbComparadorFiltro.Visible=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"cbComparadorFiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"True"));
 BA.debugLineNum = 3910;BA.debugLine="If c.EsFecha Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 56:
//if
this.state = 81;
if (_c.getField(true,"EsFecha" /*RemoteObject*/ ).<Boolean>get().booleanValue()) { 
this.state = 58;
}else {
this.state = 60;
}if (true) break;

case 58:
//C
this.state = 81;
 BA.debugLineNum = 3911;BA.debugLine="Dim DatetimeFormatAnt As String=DateTime.DateFor";
Debug.JustUpdateDeviceLine();
_datetimeformatant = parent.__c.getField(false,"DateTime").runMethod(true,"getDateFormat");Debug.locals.put("DatetimeFormatAnt", _datetimeformatant);Debug.locals.put("DatetimeFormatAnt", _datetimeformatant);
 BA.debugLineNum = 3912;BA.debugLine="DateTime.DateFormat=\"dd/MM/yyyy\"";
Debug.JustUpdateDeviceLine();
parent.__c.getField(false,"DateTime").runMethod(true,"setDateFormat",BA.ObjectToString("dd/MM/yyyy"));
 BA.debugLineNum = 3913;BA.debugLine="clviv.txtValorFechaFiltro.Text=DateTime.Date(Val";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"txtValorFechaFiltro" /*RemoteObject*/ ).runMethod(true,"setText",parent.__c.getField(false,"DateTime").runMethod(true,"Date",(Object)(BA.numberCast(long.class, _valorfiltrosel))));
 BA.debugLineNum = 3914;BA.debugLine="DateTime.DateFormat=DatetimeFormatAnt";
Debug.JustUpdateDeviceLine();
parent.__c.getField(false,"DateTime").runMethod(true,"setDateFormat",_datetimeformatant);
 BA.debugLineNum = 3915;BA.debugLine="clviv.txtValorFechaFiltro.Visible=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"txtValorFechaFiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"True"));
 BA.debugLineNum = 3916;BA.debugLine="clviv.btnSelFechaFiltro.Visible=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"btnSelFechaFiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"True"));
 BA.debugLineNum = 3917;BA.debugLine="clviv.btnSelFechaFiltro.Enabled=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"btnSelFechaFiltro" /*RemoteObject*/ ).runMethod(true,"setEnabled",parent.__c.getField(true,"True"));
 if (true) break;

case 60:
//C
this.state = 61;
 BA.debugLineNum = 3919;BA.debugLine="Select True";
Debug.JustUpdateDeviceLine();
if (true) break;

case 61:
//select
this.state = 80;
switch (BA.switchObjectToInt(parent.__c.getField(true,"True"),BA.ObjectToBoolean(RemoteObject.solveBoolean("=",_c.getField(true,"TipoControlFiltro" /*RemoteObject*/ ),__ref.getField(true,"_tipocontrolfiltro_combobox" /*RemoteObject*/ ))),BA.ObjectToBoolean(RemoteObject.solveBoolean("=",_c.getField(true,"TipoControlFiltro" /*RemoteObject*/ ),__ref.getField(true,"_tipocontrolfiltro_textfield" /*RemoteObject*/ ))),BA.ObjectToBoolean(RemoteObject.solveBoolean("=",_c.getField(true,"TipoControlFiltro" /*RemoteObject*/ ),__ref.getField(true,"_tipocontrolfiltro_checkbox" /*RemoteObject*/ ))))) {
case 0: {
this.state = 63;
if (true) break;
}
case 1: {
this.state = 65;
if (true) break;
}
case 2: {
this.state = 67;
if (true) break;
}
}
if (true) break;

case 63:
//C
this.state = 80;
 BA.debugLineNum = 3921;BA.debugLine="cboValorFiltroUserChange=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_cbovalorfiltrouserchange" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 BA.debugLineNum = 3922;BA.debugLine="clviv.cboValorFiltro.Value=ValorFiltroSel";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"cboValorFiltro" /*RemoteObject*/ ).runMethod(false,"setValue",_valorfiltrosel);
 BA.debugLineNum = 3923;BA.debugLine="clviv.cboValorFiltro.Visible=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"cboValorFiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"True"));
 BA.debugLineNum = 3924;BA.debugLine="clviv.cboValorFiltro.Enabled=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"cboValorFiltro" /*RemoteObject*/ ).runMethod(true,"setEnabled",parent.__c.getField(true,"True"));
 if (true) break;

case 65:
//C
this.state = 80;
 BA.debugLineNum = 3926;BA.debugLine="clviv.txtValorFiltro.Text=ValorFiltroSel";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"txtValorFiltro" /*RemoteObject*/ ).runMethod(true,"setText",BA.ObjectToString(_valorfiltrosel));
 BA.debugLineNum = 3927;BA.debugLine="clviv.txtValorFiltro.Visible=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"txtValorFiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"True"));
 BA.debugLineNum = 3928;BA.debugLine="clviv.txtValorFiltro.Enabled=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"txtValorFiltro" /*RemoteObject*/ ).runMethod(true,"setEnabled",parent.__c.getField(true,"True"));
 if (true) break;

case 67:
//C
this.state = 68;
 BA.debugLineNum = 3930;BA.debugLine="chkValorFiltroUserChange=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_chkvalorfiltrouserchange" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 BA.debugLineNum = 3931;BA.debugLine="If ValorFiltroSel Is Int Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 68:
//if
this.state = 79;
if (RemoteObject.solveBoolean("i",_valorfiltrosel, RemoteObject.createImmutable("Integer"))) { 
this.state = 70;
}else {
this.state = 78;
}if (true) break;

case 70:
//C
this.state = 71;
 BA.debugLineNum = 3932;BA.debugLine="If 0=ValorFiltroSel Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 71:
//if
this.state = 76;
if (RemoteObject.solveBoolean("=",RemoteObject.createImmutable(0),BA.numberCast(double.class, _valorfiltrosel))) { 
this.state = 73;
}else {
this.state = 75;
}if (true) break;

case 73:
//C
this.state = 76;
 BA.debugLineNum = 3933;BA.debugLine="clviv.chkValorFiltro.Checked=False";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"chkValorFiltro" /*RemoteObject*/ ).runMethod(true,"setChecked",parent.__c.getField(true,"False"));
 if (true) break;

case 75:
//C
this.state = 76;
 BA.debugLineNum = 3935;BA.debugLine="clviv.chkValorFiltro.Checked=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"chkValorFiltro" /*RemoteObject*/ ).runMethod(true,"setChecked",parent.__c.getField(true,"True"));
 if (true) break;

case 76:
//C
this.state = 79;
;
 if (true) break;

case 78:
//C
this.state = 79;
 BA.debugLineNum = 3938;BA.debugLine="clviv.chkValorFiltro.Checked=ValorFiltroSel";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"chkValorFiltro" /*RemoteObject*/ ).runMethod(true,"setChecked",BA.ObjectToBoolean(_valorfiltrosel));
 if (true) break;

case 79:
//C
this.state = 80;
;
 BA.debugLineNum = 3940;BA.debugLine="clviv.chkValorFiltro.Visible=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"chkValorFiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"True"));
 BA.debugLineNum = 3941;BA.debugLine="clviv.chkValorFiltro.Enabled=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"chkValorFiltro" /*RemoteObject*/ ).runMethod(true,"setEnabled",parent.__c.getField(true,"True"));
 if (true) break;

case 80:
//C
this.state = 81;
;
 if (true) break;

case 81:
//C
this.state = -1;
;
 BA.debugLineNum = 3945;BA.debugLine="p.Tag=DatosFiltro(True,mDatosFiltro.Get(\"Operador";
Debug.JustUpdateDeviceLine();
_p.runMethod(false,"setTag",(__ref.runClassMethod (b4j.docU.jamtableclv.class, "_datosfiltro" /*RemoteObject*/ ,(Object)(parent.__c.getField(true,"True")),(Object)(BA.ObjectToString(_mdatosfiltro.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("OperadorFiltro")))))),(Object)(_c),(Object)(BA.ObjectToString(_clviv.getField(false,"cbComparadorFiltro" /*RemoteObject*/ ).runMethod(false,"getItems").runMethod(false,"Get",(Object)(_clviv.getField(false,"cbComparadorFiltro" /*RemoteObject*/ ).runMethod(true,"getSelectedIndex"))))),(Object)(_valorfiltrosel)).getObject()));
 BA.debugLineNum = 3946;BA.debugLine="wait for(ActualizarFiltro) complete (rObj As Obje";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "addfiltroavanzadocampovalorseleccionado"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_actualizarfiltro" /*RemoteObject*/ ));
this.state = 93;
return;
case 93:
//C
this.state = -1;
_robj = (RemoteObject) result.getArrayElement(false,RemoteObject.createImmutable(1));Debug.locals.put("rObj", _robj);
;
 BA.debugLineNum = 3947;BA.debugLine="Return True";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(parent.__c.getField(true,"True")));return;};
 BA.debugLineNum = 3948;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static void  _addfiltro_completed(RemoteObject __ref) throws Exception{
}
public static RemoteObject  _addfiltrocampovalorinicial(RemoteObject __ref,RemoteObject _aliascamposel,RemoteObject _valorfiltrosel) throws Exception{
try {
		Debug.PushSubsStack("AddFiltroCampoValorInicial (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,3961);
if (RapidSub.canDelegate("addfiltrocampovalorinicial")) { return __ref.runUserSub(false, "jamtableclv","addfiltrocampovalorinicial", __ref, _aliascamposel, _valorfiltrosel);}
ResumableSub_AddFiltroCampoValorInicial rsub = new ResumableSub_AddFiltroCampoValorInicial(null,__ref,_aliascamposel,_valorfiltrosel);
rsub.remoteResumableSub = anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSubForFilter();
rsub.resume(null, null);
return RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.keywords.Common.ResumableSubWrapper"), rsub.remoteResumableSub);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_AddFiltroCampoValorInicial extends BA.ResumableSub {
public ResumableSub_AddFiltroCampoValorInicial(b4j.docU.jamtableclv parent,RemoteObject __ref,RemoteObject _aliascamposel,RemoteObject _valorfiltrosel) {
this.parent = parent;
this.__ref = __ref;
this._aliascamposel = _aliascamposel;
this._valorfiltrosel = _valorfiltrosel;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _aliascamposel;
RemoteObject _valorfiltrosel;
RemoteObject _c = RemoteObject.declareNull("b4j.docU.jamtableclv._campoorigendatosjamtableclv");
RemoteObject _msa = RemoteObject.declareNull("Object");
RemoteObject _crearfiltro = RemoteObject.createImmutable(false);
RemoteObject _cambiooperador = RemoteObject.createImmutable(false);
RemoteObject _flagfiltroincompleto = RemoteObject.createImmutable(false);
int _i = 0;
RemoteObject _p = RemoteObject.declareNull("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
RemoteObject _m = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
RemoteObject _dcfiltro = RemoteObject.declareNull("b4j.docU.jamtableclv._campoorigendatosjamtableclv");
RemoteObject _fechafiltro = RemoteObject.createImmutable(0L);
RemoteObject _valorfiltrosellong = RemoteObject.createImmutable(0L);
RemoteObject _flagfiltroyaexiste = RemoteObject.createImmutable(false);
RemoteObject _mdatoscampofiltro = RemoteObject.declareNull("b4j.docU.jamtableclv._campoorigendatosjamtableclv");
RemoteObject _mdatosfiltro = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
RemoteObject _clviv = RemoteObject.declareNull("b4j.docU.jamtableclv._clvjamtableclvfiltroitemvalue");
RemoteObject _robj = RemoteObject.declareNull("Object");
RemoteObject _datetimeformatant = RemoteObject.createImmutable("");
int step15;
int limit15;
int step47;
int limit47;

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("AddFiltroCampoValorInicial (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,3961);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
{
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,RemoteObject.createImmutable(null));return;}
case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
Debug.locals.put("AliasCampoSel", _aliascamposel);
Debug.locals.put("ValorFiltroSel", _valorfiltrosel);
 BA.debugLineNum = 3964;BA.debugLine="Dim c As CampoOrigenDatosJamTableCLV=GetDatosCamp";
Debug.JustUpdateDeviceLine();
_c = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_getdatoscampoorigendatosjamtableclvaliascampo" /*RemoteObject*/ ,(Object)(_aliascamposel));Debug.locals.put("c", _c);Debug.locals.put("c", _c);
 BA.debugLineNum = 3965;BA.debugLine="If c=Null Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//if
this.state = 4;
if (RemoteObject.solveBoolean("n",_c)) { 
this.state = 3;
}if (true) break;

case 3:
//C
this.state = 4;
 BA.debugLineNum = 3966;BA.debugLine="Dim msa As Object=xui.MsgboxAsync(\"Error obtenie";
Debug.JustUpdateDeviceLine();
_msa = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"MsgboxAsync",__ref.getField(false, "ba"),(Object)(BA.ObjectToString("Error obteniendo los datos del campo.")),(Object)(RemoteObject.createImmutable("Aviso")));Debug.locals.put("msa", _msa);Debug.locals.put("msa", _msa);
 BA.debugLineNum = 3967;BA.debugLine="Wait For (msa) Msgbox_Result";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","msgbox_result", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "addfiltrocampovalorinicial"), _msa);
this.state = 76;
return;
case 76:
//C
this.state = 4;
;
 BA.debugLineNum = 3968;BA.debugLine="Return False";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(parent.__c.getField(true,"False")));return;};
 if (true) break;
;
 BA.debugLineNum = 3970;BA.debugLine="If c.TipoControlFiltro=\"\" Then";
Debug.JustUpdateDeviceLine();

case 4:
//if
this.state = 7;
if (RemoteObject.solveBoolean("=",_c.getField(true,"TipoControlFiltro" /*RemoteObject*/ ),BA.ObjectToString(""))) { 
this.state = 6;
}if (true) break;

case 6:
//C
this.state = 7;
 BA.debugLineNum = 3971;BA.debugLine="Dim msa As Object=xui.MsgboxAsync(\"No existe un";
Debug.JustUpdateDeviceLine();
_msa = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"MsgboxAsync",__ref.getField(false, "ba"),(Object)(RemoteObject.concat(RemoteObject.createImmutable("No existe un tipo de control de filtro para el campo de la columna seleccionada."),parent.__c.getField(true,"CRLF"),parent.__c.getField(true,"CRLF"),RemoteObject.createImmutable("No es posible establecer un filtro inicial para el campo "),_aliascamposel,RemoteObject.createImmutable("."))),(Object)(RemoteObject.createImmutable("Aviso")));Debug.locals.put("msa", _msa);Debug.locals.put("msa", _msa);
 BA.debugLineNum = 3972;BA.debugLine="Wait For (msa) Msgbox_Result";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","msgbox_result", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "addfiltrocampovalorinicial"), _msa);
this.state = 77;
return;
case 77:
//C
this.state = 7;
;
 BA.debugLineNum = 3973;BA.debugLine="Return False";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(parent.__c.getField(true,"False")));return;};
 if (true) break;

case 7:
//C
this.state = 8;
;
 BA.debugLineNum = 3976;BA.debugLine="Dim CrearFiltro As Boolean";
Debug.JustUpdateDeviceLine();
_crearfiltro = RemoteObject.createImmutable(false);Debug.locals.put("CrearFiltro", _crearfiltro);
 BA.debugLineNum = 3977;BA.debugLine="Dim CambioOperador As Boolean";
Debug.JustUpdateDeviceLine();
_cambiooperador = RemoteObject.createImmutable(false);Debug.locals.put("CambioOperador", _cambiooperador);
 BA.debugLineNum = 3979;BA.debugLine="Dim FlagFiltroIncompleto As Boolean";
Debug.JustUpdateDeviceLine();
_flagfiltroincompleto = RemoteObject.createImmutable(false);Debug.locals.put("FlagFiltroIncompleto", _flagfiltroincompleto);
 BA.debugLineNum = 3980;BA.debugLine="For i=0 To clvFiltros.Size-1";
Debug.JustUpdateDeviceLine();
if (true) break;

case 8:
//for
this.state = 15;
step15 = 1;
limit15 = RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(true,"_getsize"),RemoteObject.createImmutable(1)}, "-",1, 1).<Integer>get().intValue();
_i = 0 ;
Debug.locals.put("i", _i);
this.state = 78;
if (true) break;

case 78:
//C
this.state = 15;
if ((step15 > 0 && _i <= limit15) || (step15 < 0 && _i >= limit15)) this.state = 10;
if (true) break;

case 79:
//C
this.state = 78;
_i = ((int)(0 + _i + step15)) ;
Debug.locals.put("i", _i);
if (true) break;

case 10:
//C
this.state = 11;
 BA.debugLineNum = 3981;BA.debugLine="Dim p As Pane=clvFiltros.GetPanel(i)";
Debug.JustUpdateDeviceLine();
_p = RemoteObject.createNew ("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
_p = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper"), __ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(false,"_getpanel",(Object)(BA.numberCast(int.class, _i))).getObject());Debug.locals.put("p", _p);Debug.locals.put("p", _p);
 BA.debugLineNum = 3982;BA.debugLine="Dim m As Map=p.Tag";
Debug.JustUpdateDeviceLine();
_m = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");
_m = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.collections.Map"), _p.runMethod(false,"getTag"));Debug.locals.put("m", _m);Debug.locals.put("m", _m);
 BA.debugLineNum = 3983;BA.debugLine="If m.Get(\"FiltroCompleto\")=False Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 11:
//if
this.state = 14;
if (RemoteObject.solveBoolean("=",_m.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("FiltroCompleto")))),(parent.__c.getField(true,"False")))) { 
this.state = 13;
}if (true) break;

case 13:
//C
this.state = 14;
 BA.debugLineNum = 3984;BA.debugLine="FlagFiltroIncompleto=True";
Debug.JustUpdateDeviceLine();
_flagfiltroincompleto = parent.__c.getField(true,"True");Debug.locals.put("FlagFiltroIncompleto", _flagfiltroincompleto);
 BA.debugLineNum = 3985;BA.debugLine="Exit";
Debug.JustUpdateDeviceLine();
this.state = 15;
if (true) break;
 if (true) break;

case 14:
//C
this.state = 79;
;
 if (true) break;
if (true) break;
Debug.locals.put("i", _i);
;
 BA.debugLineNum = 3989;BA.debugLine="If FlagFiltroIncompleto Then";
Debug.JustUpdateDeviceLine();

case 15:
//if
this.state = 26;
if (_flagfiltroincompleto.<Boolean>get().booleanValue()) { 
this.state = 17;
}else {
this.state = 25;
}if (true) break;

case 17:
//C
this.state = 18;
 BA.debugLineNum = 3990;BA.debugLine="Dim dCFiltro As CampoOrigenDatosJamTableCLV=m.Ge";
Debug.JustUpdateDeviceLine();
_dcfiltro = (_m.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("DatosCampoFiltro")))));Debug.locals.put("dCFiltro", _dcfiltro);Debug.locals.put("dCFiltro", _dcfiltro);
 BA.debugLineNum = 3991;BA.debugLine="If dCFiltro.Campo<>\"\" Then ' hay un filtro incom";
Debug.JustUpdateDeviceLine();
if (true) break;

case 18:
//if
this.state = 23;
if (RemoteObject.solveBoolean("!",_dcfiltro.getField(true,"Campo" /*RemoteObject*/ ),BA.ObjectToString(""))) { 
this.state = 20;
}else {
this.state = 22;
}if (true) break;

case 20:
//C
this.state = 23;
 BA.debugLineNum = 3992;BA.debugLine="Dim msa As Object=xui.MsgboxAsync(\"Existe un pa";
Debug.JustUpdateDeviceLine();
_msa = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"MsgboxAsync",__ref.getField(false, "ba"),(Object)(RemoteObject.concat(RemoteObject.createImmutable("Existe un panel del filtro sin completar."),parent.__c.getField(true,"CRLF"),parent.__c.getField(true,"CRLF"),RemoteObject.createImmutable("Es necesario completar el filtro, o eliminarlo antes de añadir otro filtro."))),(Object)(RemoteObject.createImmutable("Aviso")));Debug.locals.put("msa", _msa);Debug.locals.put("msa", _msa);
 BA.debugLineNum = 3993;BA.debugLine="Wait For (msa) Msgbox_Result";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","msgbox_result", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "addfiltrocampovalorinicial"), _msa);
this.state = 80;
return;
case 80:
//C
this.state = 23;
;
 BA.debugLineNum = 3994;BA.debugLine="Return False";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(parent.__c.getField(true,"False")));return;};
 if (true) break;

case 22:
//C
this.state = 23;
 BA.debugLineNum = 3997;BA.debugLine="CrearFiltro=False";
Debug.JustUpdateDeviceLine();
_crearfiltro = parent.__c.getField(true,"False");Debug.locals.put("CrearFiltro", _crearfiltro);
 if (true) break;

case 23:
//C
this.state = 26;
;
 if (true) break;

case 25:
//C
this.state = 26;
 BA.debugLineNum = 4004;BA.debugLine="CrearFiltro=True";
Debug.JustUpdateDeviceLine();
_crearfiltro = parent.__c.getField(true,"True");Debug.locals.put("CrearFiltro", _crearfiltro);
 if (true) break;
;
 BA.debugLineNum = 4010;BA.debugLine="If c.EsFecha Then";
Debug.JustUpdateDeviceLine();

case 26:
//if
this.state = 35;
if (_c.getField(true,"EsFecha" /*RemoteObject*/ ).<Boolean>get().booleanValue()) { 
this.state = 28;
}if (true) break;

case 28:
//C
this.state = 29;
 BA.debugLineNum = 4011;BA.debugLine="Dim FechaFiltro As Long";
Debug.JustUpdateDeviceLine();
_fechafiltro = RemoteObject.createImmutable(0L);Debug.locals.put("FechaFiltro", _fechafiltro);
 BA.debugLineNum = 4012;BA.debugLine="If ValorFiltroSel=\"\" Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 29:
//if
this.state = 34;
if (RemoteObject.solveBoolean("=",_valorfiltrosel,RemoteObject.createImmutable(("")))) { 
this.state = 31;
}else {
this.state = 33;
}if (true) break;

case 31:
//C
this.state = 34;
 BA.debugLineNum = 4013;BA.debugLine="FechaFiltro=0";
Debug.JustUpdateDeviceLine();
_fechafiltro = BA.numberCast(long.class, 0);Debug.locals.put("FechaFiltro", _fechafiltro);
 if (true) break;

case 33:
//C
this.state = 34;
 BA.debugLineNum = 4015;BA.debugLine="FechaFiltro=ValorFiltroSel";
Debug.JustUpdateDeviceLine();
_fechafiltro = BA.numberCast(long.class, _valorfiltrosel);Debug.locals.put("FechaFiltro", _fechafiltro);
 if (true) break;

case 34:
//C
this.state = 35;
;
 BA.debugLineNum = 4017;BA.debugLine="Dim ValorFiltroSelLong As Long=DateUtils.SetDate";
Debug.JustUpdateDeviceLine();
_valorfiltrosellong = parent._dateutils.runMethod(true,"_setdate",(Object)(parent.__c.getField(false,"DateTime").runMethod(true,"GetYear",(Object)(_fechafiltro))),(Object)(parent.__c.getField(false,"DateTime").runMethod(true,"GetMonth",(Object)(_fechafiltro))),(Object)(parent.__c.getField(false,"DateTime").runMethod(true,"GetDayOfMonth",(Object)(_fechafiltro))));Debug.locals.put("ValorFiltroSelLong", _valorfiltrosellong);Debug.locals.put("ValorFiltroSelLong", _valorfiltrosellong);
 BA.debugLineNum = 4018;BA.debugLine="ValorFiltroSel=ValorFiltroSelLong";
Debug.JustUpdateDeviceLine();
_valorfiltrosel = (_valorfiltrosellong);Debug.locals.put("ValorFiltroSel", _valorfiltrosel);
 if (true) break;
;
 BA.debugLineNum = 4021;BA.debugLine="If CrearFiltro Then";
Debug.JustUpdateDeviceLine();

case 35:
//if
this.state = 49;
if (_crearfiltro.<Boolean>get().booleanValue()) { 
this.state = 37;
}if (true) break;

case 37:
//C
this.state = 38;
 BA.debugLineNum = 4023;BA.debugLine="Dim FlagFiltroYaExiste As Boolean";
Debug.JustUpdateDeviceLine();
_flagfiltroyaexiste = RemoteObject.createImmutable(false);Debug.locals.put("FlagFiltroYaExiste", _flagfiltroyaexiste);
 BA.debugLineNum = 4024;BA.debugLine="For i=0 To clvFiltros.Size-1";
Debug.JustUpdateDeviceLine();
if (true) break;

case 38:
//for
this.state = 45;
step47 = 1;
limit47 = RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(true,"_getsize"),RemoteObject.createImmutable(1)}, "-",1, 1).<Integer>get().intValue();
_i = 0 ;
Debug.locals.put("i", _i);
this.state = 81;
if (true) break;

case 81:
//C
this.state = 45;
if ((step47 > 0 && _i <= limit47) || (step47 < 0 && _i >= limit47)) this.state = 40;
if (true) break;

case 82:
//C
this.state = 81;
_i = ((int)(0 + _i + step47)) ;
Debug.locals.put("i", _i);
if (true) break;

case 40:
//C
this.state = 41;
 BA.debugLineNum = 4025;BA.debugLine="Dim p As Pane=clvFiltros.GetPanel(i)";
Debug.JustUpdateDeviceLine();
_p = RemoteObject.createNew ("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
_p = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper"), __ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(false,"_getpanel",(Object)(BA.numberCast(int.class, _i))).getObject());Debug.locals.put("p", _p);Debug.locals.put("p", _p);
 BA.debugLineNum = 4026;BA.debugLine="Dim m As Map=p.Tag";
Debug.JustUpdateDeviceLine();
_m = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");
_m = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.collections.Map"), _p.runMethod(false,"getTag"));Debug.locals.put("m", _m);Debug.locals.put("m", _m);
 BA.debugLineNum = 4027;BA.debugLine="Dim mDatosCampoFiltro As CampoOrigenDatosJamTab";
Debug.JustUpdateDeviceLine();
_mdatoscampofiltro = (_m.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("DatosCampoFiltro")))));Debug.locals.put("mDatosCampoFiltro", _mdatoscampofiltro);Debug.locals.put("mDatosCampoFiltro", _mdatoscampofiltro);
 BA.debugLineNum = 4028;BA.debugLine="If m.Get(\"FiltroCompleto\")=True And m.Get(\"Comp";
Debug.JustUpdateDeviceLine();
if (true) break;

case 41:
//if
this.state = 44;
if (RemoteObject.solveBoolean("=",_m.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("FiltroCompleto")))),(parent.__c.getField(true,"True"))) && RemoteObject.solveBoolean("=",_m.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("ComparadorFiltro")))),RemoteObject.createImmutable(("Es igual a"))) && RemoteObject.solveBoolean("=",_m.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("ValorFiltro")))),_valorfiltrosel) && RemoteObject.solveBoolean("=",_mdatoscampofiltro.getField(true,"AliasCampo" /*RemoteObject*/ ),_aliascamposel)) { 
this.state = 43;
}if (true) break;

case 43:
//C
this.state = 44;
 BA.debugLineNum = 4030;BA.debugLine="FlagFiltroYaExiste=True";
Debug.JustUpdateDeviceLine();
_flagfiltroyaexiste = parent.__c.getField(true,"True");Debug.locals.put("FlagFiltroYaExiste", _flagfiltroyaexiste);
 BA.debugLineNum = 4031;BA.debugLine="Exit";
Debug.JustUpdateDeviceLine();
this.state = 45;
if (true) break;
 if (true) break;

case 44:
//C
this.state = 82;
;
 if (true) break;
if (true) break;
Debug.locals.put("i", _i);
;
 BA.debugLineNum = 4035;BA.debugLine="If FlagFiltroYaExiste Then";
Debug.JustUpdateDeviceLine();

case 45:
//if
this.state = 48;
if (_flagfiltroyaexiste.<Boolean>get().booleanValue()) { 
this.state = 47;
}if (true) break;

case 47:
//C
this.state = 48;
 BA.debugLineNum = 4049;BA.debugLine="Dim msa As Object=xui.MsgboxAsync(\"El filtro se";
Debug.JustUpdateDeviceLine();
_msa = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"MsgboxAsync",__ref.getField(false, "ba"),(Object)(BA.ObjectToString("El filtro seleccionado ya existe.")),(Object)(RemoteObject.createImmutable("Aviso")));Debug.locals.put("msa", _msa);Debug.locals.put("msa", _msa);
 BA.debugLineNum = 4050;BA.debugLine="Wait For (msa) Msgbox_Result";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","msgbox_result", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "addfiltrocampovalorinicial"), _msa);
this.state = 83;
return;
case 83:
//C
this.state = 48;
;
 BA.debugLineNum = 4051;BA.debugLine="Return False";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(parent.__c.getField(true,"False")));return;};
 if (true) break;

case 48:
//C
this.state = 49;
;
 BA.debugLineNum = 4055;BA.debugLine="AddFiltro";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addfiltro" /*void*/ );
 BA.debugLineNum = 4056;BA.debugLine="Wait For AddFiltro_completed";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","addfiltro_completed", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "addfiltrocampovalorinicial"), null);
this.state = 84;
return;
case 84:
//C
this.state = 49;
;
 if (true) break;

case 49:
//C
this.state = 50;
;
 BA.debugLineNum = 4062;BA.debugLine="Dim p As Pane=clvFiltros.GetPanel(clvFiltros.Size";
Debug.JustUpdateDeviceLine();
_p = RemoteObject.createNew ("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
_p = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper"), __ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(false,"_getpanel",(Object)(RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(true,"_getsize"),RemoteObject.createImmutable(1)}, "-",1, 1))).getObject());Debug.locals.put("p", _p);Debug.locals.put("p", _p);
 BA.debugLineNum = 4063;BA.debugLine="Dim mDatosFiltro As Map=p.Tag";
Debug.JustUpdateDeviceLine();
_mdatosfiltro = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");
_mdatosfiltro = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.collections.Map"), _p.runMethod(false,"getTag"));Debug.locals.put("mDatosFiltro", _mdatosfiltro);Debug.locals.put("mDatosFiltro", _mdatosfiltro);
 BA.debugLineNum = 4064;BA.debugLine="Dim clviv As clvJAMTableCLVFiltroItemValue=clvFil";
Debug.JustUpdateDeviceLine();
_clviv = (__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(false,"_getvalue",(Object)(RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(true,"_getsize"),RemoteObject.createImmutable(1)}, "-",1, 1))));Debug.locals.put("clviv", _clviv);Debug.locals.put("clviv", _clviv);
 BA.debugLineNum = 4072;BA.debugLine="cboCampoFiltroUserChange=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_cbocampofiltrouserchange" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 BA.debugLineNum = 4073;BA.debugLine="clviv.cboCampoFiltro.Value=AliasCampoSel";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"cboCampoFiltro" /*RemoteObject*/ ).runMethod(false,"setValue",(_aliascamposel));
 BA.debugLineNum = 4077;BA.debugLine="cbComparadorFiltroUserChange=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_cbcomparadorfiltrouserchange" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 BA.debugLineNum = 4080;BA.debugLine="wait for(CargarItemsCbComparadorFiltro(clviv.cbCo";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "addfiltrocampovalorinicial"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_cargaritemscbcomparadorfiltro" /*RemoteObject*/ ,(Object)(_clviv.getField(false,"cbComparadorFiltro" /*RemoteObject*/ )),(Object)(_c),(Object)(_clviv)));
this.state = 85;
return;
case 85:
//C
this.state = 50;
_robj = (RemoteObject) result.getArrayElement(false,RemoteObject.createImmutable(1));Debug.locals.put("rObj", _robj);
;
 BA.debugLineNum = 4081;BA.debugLine="clviv.cbComparadorFiltro.SelectedIndex=clviv.cbCo";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"cbComparadorFiltro" /*RemoteObject*/ ).runMethod(true,"setSelectedIndex",_clviv.getField(false,"cbComparadorFiltro" /*RemoteObject*/ ).runMethod(false,"getItems").runMethod(true,"IndexOf",(Object)((RemoteObject.createImmutable("Es igual a")))));
 BA.debugLineNum = 4082;BA.debugLine="clviv.cbComparadorFiltro.Visible=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"cbComparadorFiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"True"));
 BA.debugLineNum = 4086;BA.debugLine="If c.EsFecha Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 50:
//if
this.state = 75;
if (_c.getField(true,"EsFecha" /*RemoteObject*/ ).<Boolean>get().booleanValue()) { 
this.state = 52;
}else {
this.state = 54;
}if (true) break;

case 52:
//C
this.state = 75;
 BA.debugLineNum = 4087;BA.debugLine="Dim DatetimeFormatAnt As String=DateTime.DateFor";
Debug.JustUpdateDeviceLine();
_datetimeformatant = parent.__c.getField(false,"DateTime").runMethod(true,"getDateFormat");Debug.locals.put("DatetimeFormatAnt", _datetimeformatant);Debug.locals.put("DatetimeFormatAnt", _datetimeformatant);
 BA.debugLineNum = 4088;BA.debugLine="DateTime.DateFormat=\"dd/MM/yyyy\"";
Debug.JustUpdateDeviceLine();
parent.__c.getField(false,"DateTime").runMethod(true,"setDateFormat",BA.ObjectToString("dd/MM/yyyy"));
 BA.debugLineNum = 4089;BA.debugLine="clviv.txtValorFechaFiltro.Text=DateTime.Date(Val";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"txtValorFechaFiltro" /*RemoteObject*/ ).runMethod(true,"setText",parent.__c.getField(false,"DateTime").runMethod(true,"Date",(Object)(BA.numberCast(long.class, _valorfiltrosel))));
 BA.debugLineNum = 4090;BA.debugLine="DateTime.DateFormat=DatetimeFormatAnt";
Debug.JustUpdateDeviceLine();
parent.__c.getField(false,"DateTime").runMethod(true,"setDateFormat",_datetimeformatant);
 BA.debugLineNum = 4091;BA.debugLine="clviv.txtValorFechaFiltro.Visible=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"txtValorFechaFiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"True"));
 BA.debugLineNum = 4092;BA.debugLine="clviv.btnSelFechaFiltro.Visible=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"btnSelFechaFiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"True"));
 BA.debugLineNum = 4093;BA.debugLine="clviv.btnSelFechaFiltro.Enabled=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"btnSelFechaFiltro" /*RemoteObject*/ ).runMethod(true,"setEnabled",parent.__c.getField(true,"True"));
 if (true) break;

case 54:
//C
this.state = 55;
 BA.debugLineNum = 4095;BA.debugLine="Select True";
Debug.JustUpdateDeviceLine();
if (true) break;

case 55:
//select
this.state = 74;
switch (BA.switchObjectToInt(parent.__c.getField(true,"True"),BA.ObjectToBoolean(RemoteObject.solveBoolean("=",_c.getField(true,"TipoControlFiltro" /*RemoteObject*/ ),__ref.getField(true,"_tipocontrolfiltro_combobox" /*RemoteObject*/ ))),BA.ObjectToBoolean(RemoteObject.solveBoolean("=",_c.getField(true,"TipoControlFiltro" /*RemoteObject*/ ),__ref.getField(true,"_tipocontrolfiltro_textfield" /*RemoteObject*/ ))),BA.ObjectToBoolean(RemoteObject.solveBoolean("=",_c.getField(true,"TipoControlFiltro" /*RemoteObject*/ ),__ref.getField(true,"_tipocontrolfiltro_checkbox" /*RemoteObject*/ ))))) {
case 0: {
this.state = 57;
if (true) break;
}
case 1: {
this.state = 59;
if (true) break;
}
case 2: {
this.state = 61;
if (true) break;
}
}
if (true) break;

case 57:
//C
this.state = 74;
 BA.debugLineNum = 4097;BA.debugLine="cboValorFiltroUserChange=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_cbovalorfiltrouserchange" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 BA.debugLineNum = 4098;BA.debugLine="clviv.cboValorFiltro.Value=ValorFiltroSel";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"cboValorFiltro" /*RemoteObject*/ ).runMethod(false,"setValue",_valorfiltrosel);
 BA.debugLineNum = 4099;BA.debugLine="clviv.cboValorFiltro.Visible=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"cboValorFiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"True"));
 BA.debugLineNum = 4100;BA.debugLine="clviv.cboValorFiltro.Enabled=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"cboValorFiltro" /*RemoteObject*/ ).runMethod(true,"setEnabled",parent.__c.getField(true,"True"));
 if (true) break;

case 59:
//C
this.state = 74;
 BA.debugLineNum = 4102;BA.debugLine="clviv.txtValorFiltro.Text=ValorFiltroSel";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"txtValorFiltro" /*RemoteObject*/ ).runMethod(true,"setText",BA.ObjectToString(_valorfiltrosel));
 BA.debugLineNum = 4103;BA.debugLine="clviv.txtValorFiltro.Visible=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"txtValorFiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"True"));
 BA.debugLineNum = 4104;BA.debugLine="clviv.txtValorFiltro.Enabled=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"txtValorFiltro" /*RemoteObject*/ ).runMethod(true,"setEnabled",parent.__c.getField(true,"True"));
 if (true) break;

case 61:
//C
this.state = 62;
 BA.debugLineNum = 4106;BA.debugLine="chkValorFiltroUserChange=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_chkvalorfiltrouserchange" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 BA.debugLineNum = 4107;BA.debugLine="If ValorFiltroSel Is Int Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 62:
//if
this.state = 73;
if (RemoteObject.solveBoolean("i",_valorfiltrosel, RemoteObject.createImmutable("Integer"))) { 
this.state = 64;
}else {
this.state = 72;
}if (true) break;

case 64:
//C
this.state = 65;
 BA.debugLineNum = 4108;BA.debugLine="If 0=ValorFiltroSel Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 65:
//if
this.state = 70;
if (RemoteObject.solveBoolean("=",RemoteObject.createImmutable(0),BA.numberCast(double.class, _valorfiltrosel))) { 
this.state = 67;
}else {
this.state = 69;
}if (true) break;

case 67:
//C
this.state = 70;
 BA.debugLineNum = 4109;BA.debugLine="clviv.chkValorFiltro.Checked=False";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"chkValorFiltro" /*RemoteObject*/ ).runMethod(true,"setChecked",parent.__c.getField(true,"False"));
 if (true) break;

case 69:
//C
this.state = 70;
 BA.debugLineNum = 4111;BA.debugLine="clviv.chkValorFiltro.Checked=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"chkValorFiltro" /*RemoteObject*/ ).runMethod(true,"setChecked",parent.__c.getField(true,"True"));
 if (true) break;

case 70:
//C
this.state = 73;
;
 if (true) break;

case 72:
//C
this.state = 73;
 BA.debugLineNum = 4114;BA.debugLine="clviv.chkValorFiltro.Checked=ValorFiltroSel";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"chkValorFiltro" /*RemoteObject*/ ).runMethod(true,"setChecked",BA.ObjectToBoolean(_valorfiltrosel));
 if (true) break;

case 73:
//C
this.state = 74;
;
 BA.debugLineNum = 4116;BA.debugLine="clviv.chkValorFiltro.Visible=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"chkValorFiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"True"));
 BA.debugLineNum = 4117;BA.debugLine="clviv.chkValorFiltro.Enabled=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"chkValorFiltro" /*RemoteObject*/ ).runMethod(true,"setEnabled",parent.__c.getField(true,"True"));
 if (true) break;

case 74:
//C
this.state = 75;
;
 if (true) break;

case 75:
//C
this.state = -1;
;
 BA.debugLineNum = 4121;BA.debugLine="p.Tag=DatosFiltro(True,mDatosFiltro.Get(\"Operador";
Debug.JustUpdateDeviceLine();
_p.runMethod(false,"setTag",(__ref.runClassMethod (b4j.docU.jamtableclv.class, "_datosfiltro" /*RemoteObject*/ ,(Object)(parent.__c.getField(true,"True")),(Object)(BA.ObjectToString(_mdatosfiltro.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("OperadorFiltro")))))),(Object)(_c),(Object)(BA.ObjectToString(_clviv.getField(false,"cbComparadorFiltro" /*RemoteObject*/ ).runMethod(false,"getItems").runMethod(false,"Get",(Object)(_clviv.getField(false,"cbComparadorFiltro" /*RemoteObject*/ ).runMethod(true,"getSelectedIndex"))))),(Object)(_valorfiltrosel)).getObject()));
 BA.debugLineNum = 4122;BA.debugLine="wait for(ActualizarFiltro) complete (rObj As Obje";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "addfiltrocampovalorinicial"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_actualizarfiltro" /*RemoteObject*/ ));
this.state = 86;
return;
case 86:
//C
this.state = -1;
_robj = (RemoteObject) result.getArrayElement(false,RemoteObject.createImmutable(1));Debug.locals.put("rObj", _robj);
;
 BA.debugLineNum = 4123;BA.debugLine="Return True";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(parent.__c.getField(true,"True")));return;};
 BA.debugLineNum = 4124;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static RemoteObject  _addfiltrocampovalorseleccionado(RemoteObject __ref,RemoteObject _aliascamposel,RemoteObject _valorfiltrosel,RemoteObject _xnodeorigen) throws Exception{
try {
		Debug.PushSubsStack("AddFiltroCampoValorSeleccionado (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,3585);
if (RapidSub.canDelegate("addfiltrocampovalorseleccionado")) { return __ref.runUserSub(false, "jamtableclv","addfiltrocampovalorseleccionado", __ref, _aliascamposel, _valorfiltrosel, _xnodeorigen);}
ResumableSub_AddFiltroCampoValorSeleccionado rsub = new ResumableSub_AddFiltroCampoValorSeleccionado(null,__ref,_aliascamposel,_valorfiltrosel,_xnodeorigen);
rsub.remoteResumableSub = anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSubForFilter();
rsub.resume(null, null);
return RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.keywords.Common.ResumableSubWrapper"), rsub.remoteResumableSub);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_AddFiltroCampoValorSeleccionado extends BA.ResumableSub {
public ResumableSub_AddFiltroCampoValorSeleccionado(b4j.docU.jamtableclv parent,RemoteObject __ref,RemoteObject _aliascamposel,RemoteObject _valorfiltrosel,RemoteObject _xnodeorigen) {
this.parent = parent;
this.__ref = __ref;
this._aliascamposel = _aliascamposel;
this._valorfiltrosel = _valorfiltrosel;
this._xnodeorigen = _xnodeorigen;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _aliascamposel;
RemoteObject _valorfiltrosel;
RemoteObject _xnodeorigen;
RemoteObject _c = RemoteObject.declareNull("b4j.docU.jamtableclv._campoorigendatosjamtableclv");
RemoteObject _msa = RemoteObject.declareNull("Object");
RemoteObject _crearfiltro = RemoteObject.createImmutable(false);
RemoteObject _cambiooperador = RemoteObject.createImmutable(false);
RemoteObject _flagfiltroincompleto = RemoteObject.createImmutable(false);
int _i = 0;
RemoteObject _p = RemoteObject.declareNull("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
RemoteObject _m = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
RemoteObject _dcfiltro = RemoteObject.declareNull("b4j.docU.jamtableclv._campoorigendatosjamtableclv");
RemoteObject _fechafiltro = RemoteObject.createImmutable(0L);
RemoteObject _mdataitemnodo = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
RemoteObject _valorfiltrosellong = RemoteObject.createImmutable(0L);
RemoteObject _flagfiltroyaexiste = RemoteObject.createImmutable(false);
RemoteObject _mdatoscampofiltro = RemoteObject.declareNull("b4j.docU.jamtableclv._campoorigendatosjamtableclv");
RemoteObject _mdatosfiltro = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
RemoteObject _clviv = RemoteObject.declareNull("b4j.docU.jamtableclv._clvjamtableclvfiltroitemvalue");
RemoteObject _robj = RemoteObject.declareNull("Object");
RemoteObject _datetimeformatant = RemoteObject.createImmutable("");
int step15;
int limit15;
int step55;
int limit55;

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("AddFiltroCampoValorSeleccionado (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,3585);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
{
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,RemoteObject.createImmutable(null));return;}
case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
Debug.locals.put("AliasCampoSel", _aliascamposel);
Debug.locals.put("ValorFiltroSel", _valorfiltrosel);
Debug.locals.put("xNodeOrigen", _xnodeorigen);
 BA.debugLineNum = 3588;BA.debugLine="Dim c As CampoOrigenDatosJamTableCLV=GetDatosCamp";
Debug.JustUpdateDeviceLine();
_c = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_getdatoscampoorigendatosjamtableclvaliascampo" /*RemoteObject*/ ,(Object)(_aliascamposel));Debug.locals.put("c", _c);Debug.locals.put("c", _c);
 BA.debugLineNum = 3590;BA.debugLine="If c=Null Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//if
this.state = 4;
if (RemoteObject.solveBoolean("n",_c)) { 
this.state = 3;
}if (true) break;

case 3:
//C
this.state = 4;
 BA.debugLineNum = 3591;BA.debugLine="Dim msa As Object=xui.MsgboxAsync(\"Error obtenie";
Debug.JustUpdateDeviceLine();
_msa = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"MsgboxAsync",__ref.getField(false, "ba"),(Object)(BA.ObjectToString("Error obteniendo los datos del campo.")),(Object)(RemoteObject.createImmutable("Aviso")));Debug.locals.put("msa", _msa);Debug.locals.put("msa", _msa);
 BA.debugLineNum = 3592;BA.debugLine="Wait For (msa) Msgbox_Result";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","msgbox_result", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "addfiltrocampovalorseleccionado"), _msa);
this.state = 82;
return;
case 82:
//C
this.state = 4;
;
 BA.debugLineNum = 3593;BA.debugLine="Return False";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(parent.__c.getField(true,"False")));return;};
 if (true) break;
;
 BA.debugLineNum = 3596;BA.debugLine="If c.TipoControlFiltro=\"\" Then";
Debug.JustUpdateDeviceLine();

case 4:
//if
this.state = 7;
if (RemoteObject.solveBoolean("=",_c.getField(true,"TipoControlFiltro" /*RemoteObject*/ ),BA.ObjectToString(""))) { 
this.state = 6;
}if (true) break;

case 6:
//C
this.state = 7;
 BA.debugLineNum = 3597;BA.debugLine="Dim msa As Object=xui.MsgboxAsync(\"No existe un";
Debug.JustUpdateDeviceLine();
_msa = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"MsgboxAsync",__ref.getField(false, "ba"),(Object)(RemoteObject.concat(RemoteObject.createImmutable("No existe un tipo de control de filtro para el campo de la columna seleccionada."),parent.__c.getField(true,"CRLF"),parent.__c.getField(true,"CRLF"),RemoteObject.createImmutable("No es posible filtrar por el campo "),_aliascamposel)),(Object)(RemoteObject.createImmutable("Aviso")));Debug.locals.put("msa", _msa);Debug.locals.put("msa", _msa);
 BA.debugLineNum = 3598;BA.debugLine="Wait For (msa) Msgbox_Result";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","msgbox_result", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "addfiltrocampovalorseleccionado"), _msa);
this.state = 83;
return;
case 83:
//C
this.state = 7;
;
 BA.debugLineNum = 3599;BA.debugLine="Return False";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(parent.__c.getField(true,"False")));return;};
 if (true) break;

case 7:
//C
this.state = 8;
;
 BA.debugLineNum = 3602;BA.debugLine="Dim CrearFiltro As Boolean";
Debug.JustUpdateDeviceLine();
_crearfiltro = RemoteObject.createImmutable(false);Debug.locals.put("CrearFiltro", _crearfiltro);
 BA.debugLineNum = 3603;BA.debugLine="Dim CambioOperador As Boolean";
Debug.JustUpdateDeviceLine();
_cambiooperador = RemoteObject.createImmutable(false);Debug.locals.put("CambioOperador", _cambiooperador);
 BA.debugLineNum = 3605;BA.debugLine="Dim FlagFiltroIncompleto As Boolean";
Debug.JustUpdateDeviceLine();
_flagfiltroincompleto = RemoteObject.createImmutable(false);Debug.locals.put("FlagFiltroIncompleto", _flagfiltroincompleto);
 BA.debugLineNum = 3606;BA.debugLine="For i=0 To clvFiltros.Size-1";
Debug.JustUpdateDeviceLine();
if (true) break;

case 8:
//for
this.state = 15;
step15 = 1;
limit15 = RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(true,"_getsize"),RemoteObject.createImmutable(1)}, "-",1, 1).<Integer>get().intValue();
_i = 0 ;
Debug.locals.put("i", _i);
this.state = 84;
if (true) break;

case 84:
//C
this.state = 15;
if ((step15 > 0 && _i <= limit15) || (step15 < 0 && _i >= limit15)) this.state = 10;
if (true) break;

case 85:
//C
this.state = 84;
_i = ((int)(0 + _i + step15)) ;
Debug.locals.put("i", _i);
if (true) break;

case 10:
//C
this.state = 11;
 BA.debugLineNum = 3607;BA.debugLine="Dim p As Pane=clvFiltros.GetPanel(i)";
Debug.JustUpdateDeviceLine();
_p = RemoteObject.createNew ("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
_p = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper"), __ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(false,"_getpanel",(Object)(BA.numberCast(int.class, _i))).getObject());Debug.locals.put("p", _p);Debug.locals.put("p", _p);
 BA.debugLineNum = 3608;BA.debugLine="Dim m As Map=p.Tag";
Debug.JustUpdateDeviceLine();
_m = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");
_m = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.collections.Map"), _p.runMethod(false,"getTag"));Debug.locals.put("m", _m);Debug.locals.put("m", _m);
 BA.debugLineNum = 3609;BA.debugLine="If m.Get(\"FiltroCompleto\")=False Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 11:
//if
this.state = 14;
if (RemoteObject.solveBoolean("=",_m.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("FiltroCompleto")))),(parent.__c.getField(true,"False")))) { 
this.state = 13;
}if (true) break;

case 13:
//C
this.state = 14;
 BA.debugLineNum = 3610;BA.debugLine="FlagFiltroIncompleto=True";
Debug.JustUpdateDeviceLine();
_flagfiltroincompleto = parent.__c.getField(true,"True");Debug.locals.put("FlagFiltroIncompleto", _flagfiltroincompleto);
 BA.debugLineNum = 3611;BA.debugLine="Exit";
Debug.JustUpdateDeviceLine();
this.state = 15;
if (true) break;
 if (true) break;

case 14:
//C
this.state = 85;
;
 if (true) break;
if (true) break;
Debug.locals.put("i", _i);
;
 BA.debugLineNum = 3615;BA.debugLine="If FlagFiltroIncompleto Then";
Debug.JustUpdateDeviceLine();

case 15:
//if
this.state = 26;
if (_flagfiltroincompleto.<Boolean>get().booleanValue()) { 
this.state = 17;
}else {
this.state = 25;
}if (true) break;

case 17:
//C
this.state = 18;
 BA.debugLineNum = 3616;BA.debugLine="Dim dCFiltro As CampoOrigenDatosJamTableCLV=m.Ge";
Debug.JustUpdateDeviceLine();
_dcfiltro = (_m.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("DatosCampoFiltro")))));Debug.locals.put("dCFiltro", _dcfiltro);Debug.locals.put("dCFiltro", _dcfiltro);
 BA.debugLineNum = 3617;BA.debugLine="If dCFiltro.Campo<>\"\" Then ' hay un filtro incom";
Debug.JustUpdateDeviceLine();
if (true) break;

case 18:
//if
this.state = 23;
if (RemoteObject.solveBoolean("!",_dcfiltro.getField(true,"Campo" /*RemoteObject*/ ),BA.ObjectToString(""))) { 
this.state = 20;
}else {
this.state = 22;
}if (true) break;

case 20:
//C
this.state = 23;
 BA.debugLineNum = 3618;BA.debugLine="Dim msa As Object=xui.MsgboxAsync(\"Existe un pa";
Debug.JustUpdateDeviceLine();
_msa = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"MsgboxAsync",__ref.getField(false, "ba"),(Object)(RemoteObject.concat(RemoteObject.createImmutable("Existe un panel del filtro sin completar."),parent.__c.getField(true,"CRLF"),parent.__c.getField(true,"CRLF"),RemoteObject.createImmutable("Es necesario completar el filtro, o eliminarlo antes de añadir otro filtro."))),(Object)(RemoteObject.createImmutable("Aviso")));Debug.locals.put("msa", _msa);Debug.locals.put("msa", _msa);
 BA.debugLineNum = 3619;BA.debugLine="Wait For (msa) Msgbox_Result";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","msgbox_result", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "addfiltrocampovalorseleccionado"), _msa);
this.state = 86;
return;
case 86:
//C
this.state = 23;
;
 BA.debugLineNum = 3620;BA.debugLine="Return False";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(parent.__c.getField(true,"False")));return;};
 if (true) break;

case 22:
//C
this.state = 23;
 BA.debugLineNum = 3623;BA.debugLine="CrearFiltro=False";
Debug.JustUpdateDeviceLine();
_crearfiltro = parent.__c.getField(true,"False");Debug.locals.put("CrearFiltro", _crearfiltro);
 if (true) break;

case 23:
//C
this.state = 26;
;
 if (true) break;

case 25:
//C
this.state = 26;
 BA.debugLineNum = 3630;BA.debugLine="CrearFiltro=True";
Debug.JustUpdateDeviceLine();
_crearfiltro = parent.__c.getField(true,"True");Debug.locals.put("CrearFiltro", _crearfiltro);
 if (true) break;
;
 BA.debugLineNum = 3636;BA.debugLine="If c.EsFecha Then";
Debug.JustUpdateDeviceLine();

case 26:
//if
this.state = 41;
if (_c.getField(true,"EsFecha" /*RemoteObject*/ ).<Boolean>get().booleanValue()) { 
this.state = 28;
}if (true) break;

case 28:
//C
this.state = 29;
 BA.debugLineNum = 3637;BA.debugLine="Dim FechaFiltro As Long";
Debug.JustUpdateDeviceLine();
_fechafiltro = RemoteObject.createImmutable(0L);Debug.locals.put("FechaFiltro", _fechafiltro);
 BA.debugLineNum = 3638;BA.debugLine="If ValorFiltroSel=\"\" Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 29:
//if
this.state = 40;
if (RemoteObject.solveBoolean("=",_valorfiltrosel,RemoteObject.createImmutable(("")))) { 
this.state = 31;
}else {
this.state = 33;
}if (true) break;

case 31:
//C
this.state = 40;
 BA.debugLineNum = 3639;BA.debugLine="FechaFiltro=0";
Debug.JustUpdateDeviceLine();
_fechafiltro = BA.numberCast(long.class, 0);Debug.locals.put("FechaFiltro", _fechafiltro);
 if (true) break;

case 33:
//C
this.state = 34;
 BA.debugLineNum = 3643;BA.debugLine="If xNodeOrigen<>Null Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 34:
//if
this.state = 39;
if (RemoteObject.solveBoolean("N",_xnodeorigen)) { 
this.state = 36;
}else {
this.state = 38;
}if (true) break;

case 36:
//C
this.state = 39;
 BA.debugLineNum = 3644;BA.debugLine="Dim mDataItemNodo As Map=GetDatosItemNodo(xNod";
Debug.JustUpdateDeviceLine();
_mdataitemnodo = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");
_mdataitemnodo = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_getdatositemnodo" /*RemoteObject*/ ,(Object)(_xnodeorigen));Debug.locals.put("mDataItemNodo", _mdataitemnodo);Debug.locals.put("mDataItemNodo", _mdataitemnodo);
 BA.debugLineNum = 3645;BA.debugLine="FechaFiltro=mDataItemNodo.Get(c.AliasCampo)";
Debug.JustUpdateDeviceLine();
_fechafiltro = BA.numberCast(long.class, _mdataitemnodo.runMethod(false,"Get",(Object)((_c.getField(true,"AliasCampo" /*RemoteObject*/ )))));Debug.locals.put("FechaFiltro", _fechafiltro);
 if (true) break;

case 38:
//C
this.state = 39;
 BA.debugLineNum = 3647;BA.debugLine="LogColor(\"No es posible determinar el formato";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9166068286",BA.ObjectToString("No es posible determinar el formato de fecha para establecer el filtro"),__ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"Color_Red"));
 BA.debugLineNum = 3648;BA.debugLine="Dim msa As Object=xui.MsgboxAsync(\"No es posib";
Debug.JustUpdateDeviceLine();
_msa = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"MsgboxAsync",__ref.getField(false, "ba"),(Object)(BA.ObjectToString("No es posible determinar el formato de fecha para establecer el filtro")),(Object)(RemoteObject.createImmutable("Aviso")));Debug.locals.put("msa", _msa);Debug.locals.put("msa", _msa);
 BA.debugLineNum = 3649;BA.debugLine="Wait For (msa) Msgbox_Result";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","msgbox_result", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "addfiltrocampovalorseleccionado"), _msa);
this.state = 87;
return;
case 87:
//C
this.state = 39;
;
 BA.debugLineNum = 3650;BA.debugLine="Return False";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(parent.__c.getField(true,"False")));return;};
 if (true) break;

case 39:
//C
this.state = 40;
;
 if (true) break;

case 40:
//C
this.state = 41;
;
 BA.debugLineNum = 3653;BA.debugLine="Dim ValorFiltroSelLong As Long=DateUtils.SetDate";
Debug.JustUpdateDeviceLine();
_valorfiltrosellong = parent._dateutils.runMethod(true,"_setdate",(Object)(parent.__c.getField(false,"DateTime").runMethod(true,"GetYear",(Object)(_fechafiltro))),(Object)(parent.__c.getField(false,"DateTime").runMethod(true,"GetMonth",(Object)(_fechafiltro))),(Object)(parent.__c.getField(false,"DateTime").runMethod(true,"GetDayOfMonth",(Object)(_fechafiltro))));Debug.locals.put("ValorFiltroSelLong", _valorfiltrosellong);Debug.locals.put("ValorFiltroSelLong", _valorfiltrosellong);
 BA.debugLineNum = 3654;BA.debugLine="ValorFiltroSel=ValorFiltroSelLong";
Debug.JustUpdateDeviceLine();
_valorfiltrosel = (_valorfiltrosellong);Debug.locals.put("ValorFiltroSel", _valorfiltrosel);
 if (true) break;
;
 BA.debugLineNum = 3657;BA.debugLine="If CrearFiltro Then";
Debug.JustUpdateDeviceLine();

case 41:
//if
this.state = 55;
if (_crearfiltro.<Boolean>get().booleanValue()) { 
this.state = 43;
}if (true) break;

case 43:
//C
this.state = 44;
 BA.debugLineNum = 3659;BA.debugLine="Dim FlagFiltroYaExiste As Boolean";
Debug.JustUpdateDeviceLine();
_flagfiltroyaexiste = RemoteObject.createImmutable(false);Debug.locals.put("FlagFiltroYaExiste", _flagfiltroyaexiste);
 BA.debugLineNum = 3660;BA.debugLine="For i=0 To clvFiltros.Size-1";
Debug.JustUpdateDeviceLine();
if (true) break;

case 44:
//for
this.state = 51;
step55 = 1;
limit55 = RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(true,"_getsize"),RemoteObject.createImmutable(1)}, "-",1, 1).<Integer>get().intValue();
_i = 0 ;
Debug.locals.put("i", _i);
this.state = 88;
if (true) break;

case 88:
//C
this.state = 51;
if ((step55 > 0 && _i <= limit55) || (step55 < 0 && _i >= limit55)) this.state = 46;
if (true) break;

case 89:
//C
this.state = 88;
_i = ((int)(0 + _i + step55)) ;
Debug.locals.put("i", _i);
if (true) break;

case 46:
//C
this.state = 47;
 BA.debugLineNum = 3661;BA.debugLine="Dim p As Pane=clvFiltros.GetPanel(i)";
Debug.JustUpdateDeviceLine();
_p = RemoteObject.createNew ("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
_p = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper"), __ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(false,"_getpanel",(Object)(BA.numberCast(int.class, _i))).getObject());Debug.locals.put("p", _p);Debug.locals.put("p", _p);
 BA.debugLineNum = 3662;BA.debugLine="Dim m As Map=p.Tag";
Debug.JustUpdateDeviceLine();
_m = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");
_m = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.collections.Map"), _p.runMethod(false,"getTag"));Debug.locals.put("m", _m);Debug.locals.put("m", _m);
 BA.debugLineNum = 3663;BA.debugLine="Dim mDatosCampoFiltro As CampoOrigenDatosJamTab";
Debug.JustUpdateDeviceLine();
_mdatoscampofiltro = (_m.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("DatosCampoFiltro")))));Debug.locals.put("mDatosCampoFiltro", _mdatoscampofiltro);Debug.locals.put("mDatosCampoFiltro", _mdatoscampofiltro);
 BA.debugLineNum = 3664;BA.debugLine="If m.Get(\"FiltroCompleto\")=True And m.Get(\"Comp";
Debug.JustUpdateDeviceLine();
if (true) break;

case 47:
//if
this.state = 50;
if (RemoteObject.solveBoolean("=",_m.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("FiltroCompleto")))),(parent.__c.getField(true,"True"))) && RemoteObject.solveBoolean("=",_m.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("ComparadorFiltro")))),RemoteObject.createImmutable(("Es igual a"))) && RemoteObject.solveBoolean("=",_m.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("ValorFiltro")))),_valorfiltrosel) && RemoteObject.solveBoolean("=",_mdatoscampofiltro.getField(true,"AliasCampo" /*RemoteObject*/ ),_aliascamposel)) { 
this.state = 49;
}if (true) break;

case 49:
//C
this.state = 50;
 BA.debugLineNum = 3666;BA.debugLine="FlagFiltroYaExiste=True";
Debug.JustUpdateDeviceLine();
_flagfiltroyaexiste = parent.__c.getField(true,"True");Debug.locals.put("FlagFiltroYaExiste", _flagfiltroyaexiste);
 BA.debugLineNum = 3667;BA.debugLine="Exit";
Debug.JustUpdateDeviceLine();
this.state = 51;
if (true) break;
 if (true) break;

case 50:
//C
this.state = 89;
;
 if (true) break;
if (true) break;
Debug.locals.put("i", _i);
;
 BA.debugLineNum = 3671;BA.debugLine="If FlagFiltroYaExiste Then";
Debug.JustUpdateDeviceLine();

case 51:
//if
this.state = 54;
if (_flagfiltroyaexiste.<Boolean>get().booleanValue()) { 
this.state = 53;
}if (true) break;

case 53:
//C
this.state = 54;
 BA.debugLineNum = 3685;BA.debugLine="Dim msa As Object=xui.MsgboxAsync(\"El filtro se";
Debug.JustUpdateDeviceLine();
_msa = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"MsgboxAsync",__ref.getField(false, "ba"),(Object)(BA.ObjectToString("El filtro seleccionado ya existe.")),(Object)(RemoteObject.createImmutable("Aviso")));Debug.locals.put("msa", _msa);Debug.locals.put("msa", _msa);
 BA.debugLineNum = 3686;BA.debugLine="Wait For (msa) Msgbox_Result";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","msgbox_result", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "addfiltrocampovalorseleccionado"), _msa);
this.state = 90;
return;
case 90:
//C
this.state = 54;
;
 BA.debugLineNum = 3687;BA.debugLine="Return False";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(parent.__c.getField(true,"False")));return;};
 if (true) break;

case 54:
//C
this.state = 55;
;
 BA.debugLineNum = 3691;BA.debugLine="AddFiltro";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addfiltro" /*void*/ );
 BA.debugLineNum = 3692;BA.debugLine="Wait For AddFiltro_completed";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","addfiltro_completed", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "addfiltrocampovalorseleccionado"), null);
this.state = 91;
return;
case 91:
//C
this.state = 55;
;
 BA.debugLineNum = 3693;BA.debugLine="Sleep(0)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("Sleep",__ref.getField(false, "ba"),anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "addfiltrocampovalorseleccionado"),BA.numberCast(int.class, 0));
this.state = 92;
return;
case 92:
//C
this.state = 55;
;
 if (true) break;

case 55:
//C
this.state = 56;
;
 BA.debugLineNum = 3699;BA.debugLine="Dim p As Pane=clvFiltros.GetPanel(clvFiltros.Size";
Debug.JustUpdateDeviceLine();
_p = RemoteObject.createNew ("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
_p = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper"), __ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(false,"_getpanel",(Object)(RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(true,"_getsize"),RemoteObject.createImmutable(1)}, "-",1, 1))).getObject());Debug.locals.put("p", _p);Debug.locals.put("p", _p);
 BA.debugLineNum = 3700;BA.debugLine="Dim mDatosFiltro As Map=p.Tag";
Debug.JustUpdateDeviceLine();
_mdatosfiltro = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");
_mdatosfiltro = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.collections.Map"), _p.runMethod(false,"getTag"));Debug.locals.put("mDatosFiltro", _mdatosfiltro);Debug.locals.put("mDatosFiltro", _mdatosfiltro);
 BA.debugLineNum = 3701;BA.debugLine="Dim clviv As clvJAMTableCLVFiltroItemValue=clvFil";
Debug.JustUpdateDeviceLine();
_clviv = (__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(false,"_getvalue",(Object)(RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(true,"_getsize"),RemoteObject.createImmutable(1)}, "-",1, 1))));Debug.locals.put("clviv", _clviv);Debug.locals.put("clviv", _clviv);
 BA.debugLineNum = 3708;BA.debugLine="cboCampoFiltroUserChange=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_cbocampofiltrouserchange" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 BA.debugLineNum = 3709;BA.debugLine="clviv.cboCampoFiltro.Value=AliasCampoSel";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"cboCampoFiltro" /*RemoteObject*/ ).runMethod(false,"setValue",(_aliascamposel));
 BA.debugLineNum = 3713;BA.debugLine="cbComparadorFiltroUserChange=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_cbcomparadorfiltrouserchange" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 BA.debugLineNum = 3717;BA.debugLine="wait for(CargarItemsCbComparadorFiltro(clviv.cbCo";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "addfiltrocampovalorseleccionado"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_cargaritemscbcomparadorfiltro" /*RemoteObject*/ ,(Object)(_clviv.getField(false,"cbComparadorFiltro" /*RemoteObject*/ )),(Object)(_c),(Object)(_clviv)));
this.state = 93;
return;
case 93:
//C
this.state = 56;
_robj = (RemoteObject) result.getArrayElement(false,RemoteObject.createImmutable(1));Debug.locals.put("rObj", _robj);
;
 BA.debugLineNum = 3718;BA.debugLine="clviv.cbComparadorFiltro.SelectedIndex=clviv.cbCo";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"cbComparadorFiltro" /*RemoteObject*/ ).runMethod(true,"setSelectedIndex",_clviv.getField(false,"cbComparadorFiltro" /*RemoteObject*/ ).runMethod(false,"getItems").runMethod(true,"IndexOf",(Object)((RemoteObject.createImmutable("Es igual a")))));
 BA.debugLineNum = 3719;BA.debugLine="clviv.cbComparadorFiltro.Visible=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"cbComparadorFiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"True"));
 BA.debugLineNum = 3723;BA.debugLine="If c.EsFecha Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 56:
//if
this.state = 81;
if (_c.getField(true,"EsFecha" /*RemoteObject*/ ).<Boolean>get().booleanValue()) { 
this.state = 58;
}else {
this.state = 60;
}if (true) break;

case 58:
//C
this.state = 81;
 BA.debugLineNum = 3724;BA.debugLine="Dim DatetimeFormatAnt As String=DateTime.DateFor";
Debug.JustUpdateDeviceLine();
_datetimeformatant = parent.__c.getField(false,"DateTime").runMethod(true,"getDateFormat");Debug.locals.put("DatetimeFormatAnt", _datetimeformatant);Debug.locals.put("DatetimeFormatAnt", _datetimeformatant);
 BA.debugLineNum = 3725;BA.debugLine="DateTime.DateFormat=\"dd/MM/yyyy\"";
Debug.JustUpdateDeviceLine();
parent.__c.getField(false,"DateTime").runMethod(true,"setDateFormat",BA.ObjectToString("dd/MM/yyyy"));
 BA.debugLineNum = 3726;BA.debugLine="clviv.txtValorFechaFiltro.Text=DateTime.Date(Val";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"txtValorFechaFiltro" /*RemoteObject*/ ).runMethod(true,"setText",parent.__c.getField(false,"DateTime").runMethod(true,"Date",(Object)(BA.numberCast(long.class, _valorfiltrosel))));
 BA.debugLineNum = 3727;BA.debugLine="DateTime.DateFormat=DatetimeFormatAnt";
Debug.JustUpdateDeviceLine();
parent.__c.getField(false,"DateTime").runMethod(true,"setDateFormat",_datetimeformatant);
 BA.debugLineNum = 3728;BA.debugLine="clviv.txtValorFechaFiltro.Visible=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"txtValorFechaFiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"True"));
 BA.debugLineNum = 3729;BA.debugLine="clviv.btnSelFechaFiltro.Visible=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"btnSelFechaFiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"True"));
 BA.debugLineNum = 3730;BA.debugLine="clviv.btnSelFechaFiltro.Enabled=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"btnSelFechaFiltro" /*RemoteObject*/ ).runMethod(true,"setEnabled",parent.__c.getField(true,"True"));
 if (true) break;

case 60:
//C
this.state = 61;
 BA.debugLineNum = 3732;BA.debugLine="Select True";
Debug.JustUpdateDeviceLine();
if (true) break;

case 61:
//select
this.state = 80;
switch (BA.switchObjectToInt(parent.__c.getField(true,"True"),BA.ObjectToBoolean(RemoteObject.solveBoolean("=",_c.getField(true,"TipoControlFiltro" /*RemoteObject*/ ),__ref.getField(true,"_tipocontrolfiltro_combobox" /*RemoteObject*/ ))),BA.ObjectToBoolean(RemoteObject.solveBoolean("=",_c.getField(true,"TipoControlFiltro" /*RemoteObject*/ ),__ref.getField(true,"_tipocontrolfiltro_textfield" /*RemoteObject*/ ))),BA.ObjectToBoolean(RemoteObject.solveBoolean("=",_c.getField(true,"TipoControlFiltro" /*RemoteObject*/ ),__ref.getField(true,"_tipocontrolfiltro_checkbox" /*RemoteObject*/ ))))) {
case 0: {
this.state = 63;
if (true) break;
}
case 1: {
this.state = 65;
if (true) break;
}
case 2: {
this.state = 67;
if (true) break;
}
}
if (true) break;

case 63:
//C
this.state = 80;
 BA.debugLineNum = 3734;BA.debugLine="cboValorFiltroUserChange=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_cbovalorfiltrouserchange" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 BA.debugLineNum = 3735;BA.debugLine="clviv.cboValorFiltro.Value=ValorFiltroSel";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"cboValorFiltro" /*RemoteObject*/ ).runMethod(false,"setValue",_valorfiltrosel);
 BA.debugLineNum = 3736;BA.debugLine="clviv.cboValorFiltro.Visible=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"cboValorFiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"True"));
 BA.debugLineNum = 3737;BA.debugLine="clviv.cboValorFiltro.Enabled=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"cboValorFiltro" /*RemoteObject*/ ).runMethod(true,"setEnabled",parent.__c.getField(true,"True"));
 if (true) break;

case 65:
//C
this.state = 80;
 BA.debugLineNum = 3739;BA.debugLine="clviv.txtValorFiltro.Text=ValorFiltroSel";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"txtValorFiltro" /*RemoteObject*/ ).runMethod(true,"setText",BA.ObjectToString(_valorfiltrosel));
 BA.debugLineNum = 3740;BA.debugLine="clviv.txtValorFiltro.Visible=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"txtValorFiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"True"));
 BA.debugLineNum = 3741;BA.debugLine="clviv.txtValorFiltro.Enabled=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"txtValorFiltro" /*RemoteObject*/ ).runMethod(true,"setEnabled",parent.__c.getField(true,"True"));
 if (true) break;

case 67:
//C
this.state = 68;
 BA.debugLineNum = 3743;BA.debugLine="chkValorFiltroUserChange=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_chkvalorfiltrouserchange" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 BA.debugLineNum = 3744;BA.debugLine="If ValorFiltroSel Is Int Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 68:
//if
this.state = 79;
if (RemoteObject.solveBoolean("i",_valorfiltrosel, RemoteObject.createImmutable("Integer"))) { 
this.state = 70;
}else {
this.state = 78;
}if (true) break;

case 70:
//C
this.state = 71;
 BA.debugLineNum = 3745;BA.debugLine="If 0=ValorFiltroSel Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 71:
//if
this.state = 76;
if (RemoteObject.solveBoolean("=",RemoteObject.createImmutable(0),BA.numberCast(double.class, _valorfiltrosel))) { 
this.state = 73;
}else {
this.state = 75;
}if (true) break;

case 73:
//C
this.state = 76;
 BA.debugLineNum = 3746;BA.debugLine="clviv.chkValorFiltro.Checked=False";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"chkValorFiltro" /*RemoteObject*/ ).runMethod(true,"setChecked",parent.__c.getField(true,"False"));
 if (true) break;

case 75:
//C
this.state = 76;
 BA.debugLineNum = 3748;BA.debugLine="clviv.chkValorFiltro.Checked=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"chkValorFiltro" /*RemoteObject*/ ).runMethod(true,"setChecked",parent.__c.getField(true,"True"));
 if (true) break;

case 76:
//C
this.state = 79;
;
 if (true) break;

case 78:
//C
this.state = 79;
 BA.debugLineNum = 3751;BA.debugLine="clviv.chkValorFiltro.Checked=ValorFiltroSel";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"chkValorFiltro" /*RemoteObject*/ ).runMethod(true,"setChecked",BA.ObjectToBoolean(_valorfiltrosel));
 if (true) break;

case 79:
//C
this.state = 80;
;
 BA.debugLineNum = 3753;BA.debugLine="clviv.chkValorFiltro.Visible=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"chkValorFiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"True"));
 BA.debugLineNum = 3754;BA.debugLine="clviv.chkValorFiltro.Enabled=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"chkValorFiltro" /*RemoteObject*/ ).runMethod(true,"setEnabled",parent.__c.getField(true,"True"));
 if (true) break;

case 80:
//C
this.state = 81;
;
 if (true) break;

case 81:
//C
this.state = -1;
;
 BA.debugLineNum = 3758;BA.debugLine="p.Tag=DatosFiltro(True,mDatosFiltro.Get(\"Operador";
Debug.JustUpdateDeviceLine();
_p.runMethod(false,"setTag",(__ref.runClassMethod (b4j.docU.jamtableclv.class, "_datosfiltro" /*RemoteObject*/ ,(Object)(parent.__c.getField(true,"True")),(Object)(BA.ObjectToString(_mdatosfiltro.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("OperadorFiltro")))))),(Object)(_c),(Object)(BA.ObjectToString(_clviv.getField(false,"cbComparadorFiltro" /*RemoteObject*/ ).runMethod(false,"getItems").runMethod(false,"Get",(Object)(_clviv.getField(false,"cbComparadorFiltro" /*RemoteObject*/ ).runMethod(true,"getSelectedIndex"))))),(Object)(_valorfiltrosel)).getObject()));
 BA.debugLineNum = 3759;BA.debugLine="wait for(ActualizarFiltro) complete (rObj As Obje";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "addfiltrocampovalorseleccionado"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_actualizarfiltro" /*RemoteObject*/ ));
this.state = 94;
return;
case 94:
//C
this.state = -1;
_robj = (RemoteObject) result.getArrayElement(false,RemoteObject.createImmutable(1));Debug.locals.put("rObj", _robj);
;
 BA.debugLineNum = 3760;BA.debugLine="Return True";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(parent.__c.getField(true,"True")));return;};
 BA.debugLineNum = 3761;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static void  _additemmenucontextualfiltrarestevalornodo(RemoteObject __ref,RemoteObject _xnode) throws Exception{
try {
		Debug.PushSubsStack("AddItemMenuContextualFiltrarEsteValorNodo (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,2031);
if (RapidSub.canDelegate("additemmenucontextualfiltrarestevalornodo")) { __ref.runUserSub(false, "jamtableclv","additemmenucontextualfiltrarestevalornodo", __ref, _xnode); return;}
ResumableSub_AddItemMenuContextualFiltrarEsteValorNodo rsub = new ResumableSub_AddItemMenuContextualFiltrarEsteValorNodo(null,__ref,_xnode);
rsub.resume(null, null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_AddItemMenuContextualFiltrarEsteValorNodo extends BA.ResumableSub {
public ResumableSub_AddItemMenuContextualFiltrarEsteValorNodo(b4j.docU.jamtableclv parent,RemoteObject __ref,RemoteObject _xnode) {
this.parent = parent;
this.__ref = __ref;
this._xnode = _xnode;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _xnode;
RemoteObject _msa = RemoteObject.declareNull("Object");
RemoteObject _mi = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");
RemoteObject _img = RemoteObject.declareNull("anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper");
RemoteObject _ctxt = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper");
RemoteObject _tf = RemoteObject.declareNull("anywheresoftware.b4j.objects.TextInputControlWrapper.TextFieldWrapper");
RemoteObject _cbo = RemoteObject.declareNull("anywheresoftware.b4j.objects.ComboBoxWrapper");
RemoteObject _chkb = RemoteObject.declareNull("anywheresoftware.b4j.objects.CheckboxWrapper");

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("AddItemMenuContextualFiltrarEsteValorNodo (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,2031);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
return;

case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
Debug.locals.put("xNode", _xnode);
 BA.debugLineNum = 2033;BA.debugLine="If xNode.Tag=\"\" Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//if
this.state = 4;
if (RemoteObject.solveBoolean("=",_xnode.runMethod(false,"getTag"),RemoteObject.createImmutable(("")))) { 
this.state = 3;
}if (true) break;

case 3:
//C
this.state = 4;
 BA.debugLineNum = 2034;BA.debugLine="Dim msa As Object=xui.MsgboxAsync(\"El nodo selec";
Debug.JustUpdateDeviceLine();
_msa = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"MsgboxAsync",__ref.getField(false, "ba"),(Object)(BA.ObjectToString("El nodo seleccionado no tiene TAG asignado. No es posible asignar items a su menu contextual mediante este método.Avisa al administrador de la aplicación.")),(Object)(RemoteObject.createImmutable("Aviso")));Debug.locals.put("msa", _msa);Debug.locals.put("msa", _msa);
 BA.debugLineNum = 2035;BA.debugLine="Wait For (msa) Msgbox_Result";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","msgbox_result", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "additemmenucontextualfiltrarestevalornodo"), _msa);
this.state = 28;
return;
case 28:
//C
this.state = 4;
;
 BA.debugLineNum = 2036;BA.debugLine="Return";
Debug.JustUpdateDeviceLine();
if (true) return ;
 if (true) break;
;
 BA.debugLineNum = 2040;BA.debugLine="If mlstAliasCamposFiltrables.Size=0 Then Return";
Debug.JustUpdateDeviceLine();

case 4:
//if
this.state = 9;
if (RemoteObject.solveBoolean("=",__ref.getField(false,"_mlstaliascamposfiltrables" /*RemoteObject*/ ).runMethod(true,"getSize"),BA.numberCast(double.class, 0))) { 
this.state = 6;
;}if (true) break;

case 6:
//C
this.state = 9;
if (true) return ;
if (true) break;

case 9:
//C
this.state = 10;
;
 BA.debugLineNum = 2042;BA.debugLine="Dim mi As MenuItem";
Debug.JustUpdateDeviceLine();
_mi = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");Debug.locals.put("mi", _mi);
 BA.debugLineNum = 2043;BA.debugLine="mi.Initialize(\"Filtrar a este Valor\", \"ContextMen";
Debug.JustUpdateDeviceLine();
_mi.runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(BA.ObjectToString("Filtrar a este Valor")),(Object)(RemoteObject.createImmutable("ContextMenuFiltroValorNodo")));
 BA.debugLineNum = 2044;BA.debugLine="mi.Tag=\"FiltrarValorNodo\"";
Debug.JustUpdateDeviceLine();
_mi.runMethod(false,"setTag",RemoteObject.createImmutable(("FiltrarValorNodo")));
 BA.debugLineNum = 2045;BA.debugLine="Dim img As Image=TextToImageAwesome(Chr(0xF0B0),1";
Debug.JustUpdateDeviceLine();
_img = RemoteObject.createNew ("anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper");
_img = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_texttoimageawesome" /*RemoteObject*/ ,(Object)(BA.ObjectToString(parent.__c.runMethod(true,"Chr",(Object)(BA.numberCast(int.class, ((int)0xf0b0)))))),(Object)(BA.numberCast(double.class, 16)));Debug.locals.put("img", _img);Debug.locals.put("img", _img);
 BA.debugLineNum = 2046;BA.debugLine="mi.Image=img";
Debug.JustUpdateDeviceLine();
_mi.runMethod(false,"setImage",(_img.getObject()));
 BA.debugLineNum = 2048;BA.debugLine="If mlstAliasCamposFiltrables.IndexOf(xNode.Tag)>-";
Debug.JustUpdateDeviceLine();
if (true) break;

case 10:
//if
this.state = 27;
if (RemoteObject.solveBoolean(">",__ref.getField(false,"_mlstaliascamposfiltrables" /*RemoteObject*/ ).runMethod(true,"IndexOf",(Object)(_xnode.runMethod(false,"getTag"))),BA.numberCast(double.class, -(double) (0 + 1)))) { 
this.state = 12;
}else {
this.state = 26;
}if (true) break;

case 12:
//C
this.state = 13;
 BA.debugLineNum = 2049;BA.debugLine="Dim ctxt As ContextMenu";
Debug.JustUpdateDeviceLine();
_ctxt = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper");Debug.locals.put("ctxt", _ctxt);
 BA.debugLineNum = 2050;BA.debugLine="ctxt.Initialize(\"\")";
Debug.JustUpdateDeviceLine();
_ctxt.runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(RemoteObject.createImmutable("")));
 BA.debugLineNum = 2051;BA.debugLine="Select True";
Debug.JustUpdateDeviceLine();
if (true) break;

case 13:
//select
this.state = 24;
switch (BA.switchObjectToInt(parent.__c.getField(true,"True"),BA.ObjectToBoolean(RemoteObject.solveBoolean("i",_xnode.getObjectOrNull(), RemoteObject.createImmutable("javafx.scene.control.TextField"))),BA.ObjectToBoolean(RemoteObject.solveBoolean("i",_xnode.getObjectOrNull(), RemoteObject.createImmutable("javafx.scene.control.ComboBox"))),BA.ObjectToBoolean(RemoteObject.solveBoolean("i",_xnode.getObjectOrNull(), RemoteObject.createImmutable("javafx.scene.control.CheckBox"))))) {
case 0: {
this.state = 15;
if (true) break;
}
case 1: {
this.state = 21;
if (true) break;
}
case 2: {
this.state = 23;
if (true) break;
}
}
if (true) break;

case 15:
//C
this.state = 16;
 BA.debugLineNum = 2053;BA.debugLine="Dim tF As TextField=xNode";
Debug.JustUpdateDeviceLine();
_tf = RemoteObject.createNew ("anywheresoftware.b4j.objects.TextInputControlWrapper.TextFieldWrapper");
_tf = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.TextInputControlWrapper.TextFieldWrapper"), _xnode.getObject());Debug.locals.put("tF", _tf);Debug.locals.put("tF", _tf);
 BA.debugLineNum = 2054;BA.debugLine="If tF.ContextMenu.IsInitialized=False Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 16:
//if
this.state = 19;
if (RemoteObject.solveBoolean("=",_tf.runMethod(false,"getContextMenu").runMethod(true,"IsInitialized"),parent.__c.getField(true,"False"))) { 
this.state = 18;
}if (true) break;

case 18:
//C
this.state = 19;
 BA.debugLineNum = 2055;BA.debugLine="ctxt.MenuItems.Add(mi)";
Debug.JustUpdateDeviceLine();
_ctxt.runMethod(false,"getMenuItems").runVoidMethod ("Add",(Object)((_mi.getObject())));
 BA.debugLineNum = 2056;BA.debugLine="tF.ContextMenu=ctxt";
Debug.JustUpdateDeviceLine();
_tf.runMethod(false,"setContextMenu",_ctxt);
 if (true) break;

case 19:
//C
this.state = 24;
;
 if (true) break;

case 21:
//C
this.state = 24;
 BA.debugLineNum = 2060;BA.debugLine="Dim cbo As ComboBox=xNode";
Debug.JustUpdateDeviceLine();
_cbo = RemoteObject.createNew ("anywheresoftware.b4j.objects.ComboBoxWrapper");
_cbo = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.ComboBoxWrapper"), _xnode.getObject());Debug.locals.put("cbo", _cbo);Debug.locals.put("cbo", _cbo);
 BA.debugLineNum = 2061;BA.debugLine="cbo.ContextMenu.MenuItems.Add(mi)";
Debug.JustUpdateDeviceLine();
_cbo.runMethod(false,"getContextMenu").runMethod(false,"getMenuItems").runVoidMethod ("Add",(Object)((_mi.getObject())));
 if (true) break;

case 23:
//C
this.state = 24;
 BA.debugLineNum = 2063;BA.debugLine="Dim chkb As CheckBox=xNode";
Debug.JustUpdateDeviceLine();
_chkb = RemoteObject.createNew ("anywheresoftware.b4j.objects.CheckboxWrapper");
_chkb = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.CheckboxWrapper"), _xnode.getObject());Debug.locals.put("chkb", _chkb);Debug.locals.put("chkb", _chkb);
 BA.debugLineNum = 2064;BA.debugLine="chkb.ContextMenu.MenuItems.Add(mi)";
Debug.JustUpdateDeviceLine();
_chkb.runMethod(false,"getContextMenu").runMethod(false,"getMenuItems").runVoidMethod ("Add",(Object)((_mi.getObject())));
 if (true) break;

case 24:
//C
this.state = 27;
;
 if (true) break;

case 26:
//C
this.state = 27;
 BA.debugLineNum = 2068;BA.debugLine="Dim msa As Object=xui.MsgboxAsync(\"El Tag del nod";
Debug.JustUpdateDeviceLine();
_msa = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"MsgboxAsync",__ref.getField(false, "ba"),(Object)(BA.ObjectToString("El Tag del nodo seleccionado no está en la lista de campos filtrables. No se añade el item de filtrar a este valor a su menu contextual.")),(Object)(RemoteObject.createImmutable("Aviso")));Debug.locals.put("msa", _msa);Debug.locals.put("msa", _msa);
 BA.debugLineNum = 2069;BA.debugLine="Wait For (msa) Msgbox_Result";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","msgbox_result", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "additemmenucontextualfiltrarestevalornodo"), _msa);
this.state = 29;
return;
case 29:
//C
this.state = 27;
;
 BA.debugLineNum = 2070;BA.debugLine="Return";
Debug.JustUpdateDeviceLine();
if (true) return ;
 if (true) break;

case 27:
//C
this.state = -1;
;
 BA.debugLineNum = 2073;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static RemoteObject  _addmenuimagentomenuinmenubar(RemoteObject __ref,RemoteObject _textmenu,RemoteObject _tagmenu,RemoteObject _tagmenuparent,RemoteObject _dirname,RemoteObject _filename,RemoteObject _imagewidth,RemoteObject _imageheight) throws Exception{
try {
		Debug.PushSubsStack("AddMenuImagenToMenuInMenuBar (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,1820);
if (RapidSub.canDelegate("addmenuimagentomenuinmenubar")) { return __ref.runUserSub(false, "jamtableclv","addmenuimagentomenuinmenubar", __ref, _textmenu, _tagmenu, _tagmenuparent, _dirname, _filename, _imagewidth, _imageheight);}
RemoteObject _nuevomnu = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper");
RemoteObject _img = RemoteObject.declareNull("anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper");
RemoteObject _imv = RemoteObject.declareNull("anywheresoftware.b4j.objects.ImageViewWrapper");
RemoteObject _jomnu = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
RemoteObject _menu = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper");
Debug.locals.put("TextMenu", _textmenu);
Debug.locals.put("TagMenu", _tagmenu);
Debug.locals.put("TagMenuParent", _tagmenuparent);
Debug.locals.put("DirName", _dirname);
Debug.locals.put("FileName", _filename);
Debug.locals.put("ImageWidth", _imagewidth);
Debug.locals.put("ImageHeight", _imageheight);
 BA.debugLineNum = 1820;BA.debugLine="public Sub AddMenuImagenToMenuInMenuBar(TextMenu A";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 1822;BA.debugLine="Dim NuevoMnu As Menu";
Debug.JustUpdateDeviceLine();
_nuevomnu = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper");Debug.locals.put("NuevoMnu", _nuevomnu);
 BA.debugLineNum = 1823;BA.debugLine="NuevoMnu.Initialize(\"TextMenu\",\"\")";
Debug.JustUpdateDeviceLine();
_nuevomnu.runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(BA.ObjectToString("TextMenu")),(Object)(RemoteObject.createImmutable("")));
 BA.debugLineNum = 1824;BA.debugLine="NuevoMnu.Text=TextMenu";
Debug.JustUpdateDeviceLine();
_nuevomnu.runMethod(true,"setText",_textmenu);
 BA.debugLineNum = 1825;BA.debugLine="NuevoMnu.tag=TagMenu";
Debug.JustUpdateDeviceLine();
_nuevomnu.runMethod(false,"setTag",(_tagmenu));
 BA.debugLineNum = 1826;BA.debugLine="Dim Img As Image";
Debug.JustUpdateDeviceLine();
_img = RemoteObject.createNew ("anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper");Debug.locals.put("Img", _img);
 BA.debugLineNum = 1827;BA.debugLine="Img.InitializeSample(DirName,FileName,ImageWidth,";
Debug.JustUpdateDeviceLine();
_img.runVoidMethod ("InitializeSample",(Object)(_dirname),(Object)(_filename),(Object)(_imagewidth),(Object)(_imageheight));
 BA.debugLineNum = 1828;BA.debugLine="Dim Imv As ImageView";
Debug.JustUpdateDeviceLine();
_imv = RemoteObject.createNew ("anywheresoftware.b4j.objects.ImageViewWrapper");Debug.locals.put("Imv", _imv);
 BA.debugLineNum = 1829;BA.debugLine="Imv.Initialize(\"\")";
Debug.JustUpdateDeviceLine();
_imv.runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(RemoteObject.createImmutable("")));
 BA.debugLineNum = 1830;BA.debugLine="Imv.SetImage(Img)";
Debug.JustUpdateDeviceLine();
_imv.runVoidMethod ("SetImage",(Object)((_img.getObject())));
 BA.debugLineNum = 1832;BA.debugLine="Dim JOMnu As JavaObject=NuevoMnu";
Debug.JustUpdateDeviceLine();
_jomnu = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");
_jomnu = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), _nuevomnu.getObject());Debug.locals.put("JOMnu", _jomnu);Debug.locals.put("JOMnu", _jomnu);
 BA.debugLineNum = 1833;BA.debugLine="JOMnu.RunMethod(\"setGraphic\",Array(Imv))";
Debug.JustUpdateDeviceLine();
_jomnu.runVoidMethod ("RunMethod",(Object)(BA.ObjectToString("setGraphic")),(Object)(RemoteObject.createNewArray("Object",new int[] {1},new Object[] {(_imv.getObject())})));
 BA.debugLineNum = 1835;BA.debugLine="For Each menu As Menu In MenuBar.Menus";
Debug.JustUpdateDeviceLine();
_menu = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper");
{
final RemoteObject group12 = __ref.getField(false,"_menubar" /*RemoteObject*/ ).runMethod(false,"getMenus");
final int groupLen12 = group12.runMethod(true,"getSize").<Integer>get()
;int index12 = 0;
;
for (; index12 < groupLen12;index12++){
_menu = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper"), group12.runMethod(false,"Get",index12));Debug.locals.put("menu", _menu);
Debug.locals.put("menu", _menu);
 BA.debugLineNum = 1836;BA.debugLine="If menu.Tag=TagMenuParent Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_menu.runMethod(false,"getTag"),(_tagmenuparent))) { 
 BA.debugLineNum = 1838;BA.debugLine="menu.MenuItems.Add(NuevoMnu)";
Debug.JustUpdateDeviceLine();
_menu.runMethod(false,"getMenuItems").runVoidMethod ("Add",(Object)((_nuevomnu.getObject())));
 };
 }
}Debug.locals.put("menu", _menu);
;
 BA.debugLineNum = 1841;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _addmenuimagetomenubar(RemoteObject __ref,RemoteObject _textmenu,RemoteObject _tagmenu,RemoteObject _dirname,RemoteObject _filename,RemoteObject _imagewidth,RemoteObject _imageheight) throws Exception{
try {
		Debug.PushSubsStack("AddMenuImageToMenuBar (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,1784);
if (RapidSub.canDelegate("addmenuimagetomenubar")) { return __ref.runUserSub(false, "jamtableclv","addmenuimagetomenubar", __ref, _textmenu, _tagmenu, _dirname, _filename, _imagewidth, _imageheight);}
RemoteObject _mnu = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper");
RemoteObject _img = RemoteObject.declareNull("anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper");
RemoteObject _imv = RemoteObject.declareNull("anywheresoftware.b4j.objects.ImageViewWrapper");
RemoteObject _jomnu = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
Debug.locals.put("TextMenu", _textmenu);
Debug.locals.put("TagMenu", _tagmenu);
Debug.locals.put("DirName", _dirname);
Debug.locals.put("FileName", _filename);
Debug.locals.put("ImageWidth", _imagewidth);
Debug.locals.put("ImageHeight", _imageheight);
 BA.debugLineNum = 1784;BA.debugLine="public Sub AddMenuImageToMenuBar(TextMenu As Strin";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 1786;BA.debugLine="Dim Mnu As Menu";
Debug.JustUpdateDeviceLine();
_mnu = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper");Debug.locals.put("Mnu", _mnu);
 BA.debugLineNum = 1787;BA.debugLine="Mnu.Initialize(TextMenu,\"\")";
Debug.JustUpdateDeviceLine();
_mnu.runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(_textmenu),(Object)(RemoteObject.createImmutable("")));
 BA.debugLineNum = 1788;BA.debugLine="Mnu.Text=TextMenu";
Debug.JustUpdateDeviceLine();
_mnu.runMethod(true,"setText",_textmenu);
 BA.debugLineNum = 1789;BA.debugLine="Mnu.tag=TagMenu";
Debug.JustUpdateDeviceLine();
_mnu.runMethod(false,"setTag",(_tagmenu));
 BA.debugLineNum = 1790;BA.debugLine="Dim Img As Image";
Debug.JustUpdateDeviceLine();
_img = RemoteObject.createNew ("anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper");Debug.locals.put("Img", _img);
 BA.debugLineNum = 1791;BA.debugLine="Img.InitializeSample(DirName,FileName,ImageWidth,";
Debug.JustUpdateDeviceLine();
_img.runVoidMethod ("InitializeSample",(Object)(_dirname),(Object)(_filename),(Object)(_imagewidth),(Object)(_imageheight));
 BA.debugLineNum = 1792;BA.debugLine="Dim Imv As ImageView";
Debug.JustUpdateDeviceLine();
_imv = RemoteObject.createNew ("anywheresoftware.b4j.objects.ImageViewWrapper");Debug.locals.put("Imv", _imv);
 BA.debugLineNum = 1793;BA.debugLine="Imv.Initialize(\"\")";
Debug.JustUpdateDeviceLine();
_imv.runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(RemoteObject.createImmutable("")));
 BA.debugLineNum = 1794;BA.debugLine="Imv.SetImage(Img)";
Debug.JustUpdateDeviceLine();
_imv.runVoidMethod ("SetImage",(Object)((_img.getObject())));
 BA.debugLineNum = 1796;BA.debugLine="Dim JOMnu As JavaObject=Mnu";
Debug.JustUpdateDeviceLine();
_jomnu = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");
_jomnu = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), _mnu.getObject());Debug.locals.put("JOMnu", _jomnu);Debug.locals.put("JOMnu", _jomnu);
 BA.debugLineNum = 1797;BA.debugLine="JOMnu.RunMethod(\"setGraphic\",Array(Imv))";
Debug.JustUpdateDeviceLine();
_jomnu.runVoidMethod ("RunMethod",(Object)(BA.ObjectToString("setGraphic")),(Object)(RemoteObject.createNewArray("Object",new int[] {1},new Object[] {(_imv.getObject())})));
 BA.debugLineNum = 1798;BA.debugLine="MenuBar.Menus.Add(Mnu)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_menubar" /*RemoteObject*/ ).runMethod(false,"getMenus").runVoidMethod ("Add",(Object)((_mnu.getObject())));
 BA.debugLineNum = 1799;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _addmenuitemfontawesometomenuinmenubar(RemoteObject __ref,RemoteObject _textomenuitem,RemoteObject _tagmenuitem,RemoteObject _schr,RemoteObject _tagmenuparent) throws Exception{
try {
		Debug.PushSubsStack("AddMenuItemFontAwesomeToMenuInMenuBar (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,1856);
if (RapidSub.canDelegate("addmenuitemfontawesometomenuinmenubar")) { return __ref.runUserSub(false, "jamtableclv","addmenuitemfontawesometomenuinmenubar", __ref, _textomenuitem, _tagmenuitem, _schr, _tagmenuparent);}
RemoteObject _parentmenu = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper");
RemoteObject _mi = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");
RemoteObject _img = RemoteObject.declareNull("anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper");
Debug.locals.put("TextoMenuItem", _textomenuitem);
Debug.locals.put("TagMenuItem", _tagmenuitem);
Debug.locals.put("sChr", _schr);
Debug.locals.put("TagMenuParent", _tagmenuparent);
 BA.debugLineNum = 1856;BA.debugLine="public Sub AddMenuItemFontAwesomeToMenuInMenuBar(T";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 1857;BA.debugLine="Dim ParentMenu As Menu=GetMenuBarMenuItem(TagMenu";
Debug.JustUpdateDeviceLine();
_parentmenu = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper");
_parentmenu = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_getmenubarmenuitem" /*RemoteObject*/ ,(Object)(_tagmenuparent)).getObject());Debug.locals.put("ParentMenu", _parentmenu);Debug.locals.put("ParentMenu", _parentmenu);
 BA.debugLineNum = 1858;BA.debugLine="If ParentMenu.IsInitialized Then";
Debug.JustUpdateDeviceLine();
if (_parentmenu.runMethod(true,"IsInitialized").<Boolean>get().booleanValue()) { 
 BA.debugLineNum = 1859;BA.debugLine="Dim mi As MenuItem";
Debug.JustUpdateDeviceLine();
_mi = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");Debug.locals.put("mi", _mi);
 BA.debugLineNum = 1860;BA.debugLine="mi.Initialize(TextoMenuItem, \"MenuBarMenuItem\")";
Debug.JustUpdateDeviceLine();
_mi.runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(_textomenuitem),(Object)(RemoteObject.createImmutable("MenuBarMenuItem")));
 BA.debugLineNum = 1861;BA.debugLine="mi.Tag=TagMenuItem";
Debug.JustUpdateDeviceLine();
_mi.runMethod(false,"setTag",(_tagmenuitem));
 BA.debugLineNum = 1862;BA.debugLine="Dim img As Image=TextToImageAwesome(sChr,16)";
Debug.JustUpdateDeviceLine();
_img = RemoteObject.createNew ("anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper");
_img = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_texttoimageawesome" /*RemoteObject*/ ,(Object)(_schr),(Object)(BA.numberCast(double.class, 16)));Debug.locals.put("img", _img);Debug.locals.put("img", _img);
 BA.debugLineNum = 1863;BA.debugLine="mi.Image=img";
Debug.JustUpdateDeviceLine();
_mi.runMethod(false,"setImage",(_img.getObject()));
 BA.debugLineNum = 1864;BA.debugLine="ParentMenu.MenuItems.Add(mi)";
Debug.JustUpdateDeviceLine();
_parentmenu.runMethod(false,"getMenuItems").runVoidMethod ("Add",(Object)((_mi.getObject())));
 };
 BA.debugLineNum = 1867;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _addmenuitemfontmaterialiconstomenuinmenubar(RemoteObject __ref,RemoteObject _textomenuitem,RemoteObject _tagmenuitem,RemoteObject _schr,RemoteObject _tagmenuparent) throws Exception{
try {
		Debug.PushSubsStack("AddMenuItemFontMaterialIconsToMenuInMenuBar (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,1870);
if (RapidSub.canDelegate("addmenuitemfontmaterialiconstomenuinmenubar")) { return __ref.runUserSub(false, "jamtableclv","addmenuitemfontmaterialiconstomenuinmenubar", __ref, _textomenuitem, _tagmenuitem, _schr, _tagmenuparent);}
RemoteObject _parentmenu = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper");
RemoteObject _mi = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");
RemoteObject _img = RemoteObject.declareNull("anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper");
Debug.locals.put("TextoMenuItem", _textomenuitem);
Debug.locals.put("TagMenuItem", _tagmenuitem);
Debug.locals.put("sChr", _schr);
Debug.locals.put("TagMenuParent", _tagmenuparent);
 BA.debugLineNum = 1870;BA.debugLine="public Sub AddMenuItemFontMaterialIconsToMenuInMen";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 1871;BA.debugLine="Dim ParentMenu As Menu=GetMenuBarMenuItem(TagMenu";
Debug.JustUpdateDeviceLine();
_parentmenu = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper");
_parentmenu = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_getmenubarmenuitem" /*RemoteObject*/ ,(Object)(_tagmenuparent)).getObject());Debug.locals.put("ParentMenu", _parentmenu);Debug.locals.put("ParentMenu", _parentmenu);
 BA.debugLineNum = 1872;BA.debugLine="If ParentMenu.IsInitialized Then";
Debug.JustUpdateDeviceLine();
if (_parentmenu.runMethod(true,"IsInitialized").<Boolean>get().booleanValue()) { 
 BA.debugLineNum = 1873;BA.debugLine="Dim mi As MenuItem";
Debug.JustUpdateDeviceLine();
_mi = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");Debug.locals.put("mi", _mi);
 BA.debugLineNum = 1874;BA.debugLine="mi.Initialize(TextoMenuItem, \"MenuBarMenuItem\")";
Debug.JustUpdateDeviceLine();
_mi.runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(_textomenuitem),(Object)(RemoteObject.createImmutable("MenuBarMenuItem")));
 BA.debugLineNum = 1875;BA.debugLine="mi.Tag=TagMenuItem";
Debug.JustUpdateDeviceLine();
_mi.runMethod(false,"setTag",(_tagmenuitem));
 BA.debugLineNum = 1876;BA.debugLine="Dim img As Image=TextToImageMaterialIcons(sChr,1";
Debug.JustUpdateDeviceLine();
_img = RemoteObject.createNew ("anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper");
_img = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_texttoimagematerialicons" /*RemoteObject*/ ,(Object)(_schr),(Object)(BA.numberCast(double.class, 16)));Debug.locals.put("img", _img);Debug.locals.put("img", _img);
 BA.debugLineNum = 1877;BA.debugLine="mi.Image=img";
Debug.JustUpdateDeviceLine();
_mi.runMethod(false,"setImage",(_img.getObject()));
 BA.debugLineNum = 1878;BA.debugLine="ParentMenu.MenuItems.Add(mi)";
Debug.JustUpdateDeviceLine();
_parentmenu.runMethod(false,"getMenuItems").runVoidMethod ("Add",(Object)((_mi.getObject())));
 };
 BA.debugLineNum = 1881;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _addmenuitemimagentomenuinmenubar(RemoteObject __ref,RemoteObject _textomenuitem,RemoteObject _tagmenuitem,RemoteObject _tagmenuparent,RemoteObject _dirname,RemoteObject _filename,RemoteObject _imagewidth,RemoteObject _imageheight) throws Exception{
try {
		Debug.PushSubsStack("AddMenuItemImagenToMenuInMenuBar (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,1888);
if (RapidSub.canDelegate("addmenuitemimagentomenuinmenubar")) { return __ref.runUserSub(false, "jamtableclv","addmenuitemimagentomenuinmenubar", __ref, _textomenuitem, _tagmenuitem, _tagmenuparent, _dirname, _filename, _imagewidth, _imageheight);}
RemoteObject _parentmenu = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper");
RemoteObject _img = RemoteObject.declareNull("anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper");
RemoteObject _mi = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");
Debug.locals.put("TextoMenuItem", _textomenuitem);
Debug.locals.put("TagMenuItem", _tagmenuitem);
Debug.locals.put("TagMenuParent", _tagmenuparent);
Debug.locals.put("DirName", _dirname);
Debug.locals.put("FileName", _filename);
Debug.locals.put("ImageWidth", _imagewidth);
Debug.locals.put("ImageHeight", _imageheight);
 BA.debugLineNum = 1888;BA.debugLine="public Sub AddMenuItemImagenToMenuInMenuBar(TextoM";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 1890;BA.debugLine="Dim ParentMenu As Menu=GetMenuBarMenuItem(TagMenu";
Debug.JustUpdateDeviceLine();
_parentmenu = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper");
_parentmenu = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_getmenubarmenuitem" /*RemoteObject*/ ,(Object)(_tagmenuparent)).getObject());Debug.locals.put("ParentMenu", _parentmenu);Debug.locals.put("ParentMenu", _parentmenu);
 BA.debugLineNum = 1891;BA.debugLine="If ParentMenu.IsInitialized Then";
Debug.JustUpdateDeviceLine();
if (_parentmenu.runMethod(true,"IsInitialized").<Boolean>get().booleanValue()) { 
 BA.debugLineNum = 1892;BA.debugLine="Dim img As Image";
Debug.JustUpdateDeviceLine();
_img = RemoteObject.createNew ("anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper");Debug.locals.put("img", _img);
 BA.debugLineNum = 1893;BA.debugLine="img.InitializeSample(DirName,FileName,ImageWidth";
Debug.JustUpdateDeviceLine();
_img.runVoidMethod ("InitializeSample",(Object)(_dirname),(Object)(_filename),(Object)(_imagewidth),(Object)(_imageheight));
 BA.debugLineNum = 1894;BA.debugLine="Dim mi As MenuItem";
Debug.JustUpdateDeviceLine();
_mi = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");Debug.locals.put("mi", _mi);
 BA.debugLineNum = 1895;BA.debugLine="mi.Initialize(TextoMenuItem, \"MenuBarMenuItem\")";
Debug.JustUpdateDeviceLine();
_mi.runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(_textomenuitem),(Object)(RemoteObject.createImmutable("MenuBarMenuItem")));
 BA.debugLineNum = 1896;BA.debugLine="mi.Tag=TagMenuItem";
Debug.JustUpdateDeviceLine();
_mi.runMethod(false,"setTag",(_tagmenuitem));
 BA.debugLineNum = 1897;BA.debugLine="mi.Image=img";
Debug.JustUpdateDeviceLine();
_mi.runMethod(false,"setImage",(_img.getObject()));
 BA.debugLineNum = 1898;BA.debugLine="ParentMenu.MenuItems.Add(mi)";
Debug.JustUpdateDeviceLine();
_parentmenu.runMethod(false,"getMenuItems").runVoidMethod ("Add",(Object)((_mi.getObject())));
 };
 BA.debugLineNum = 1901;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _addmenuitemseparatorinmenubar(RemoteObject __ref,RemoteObject _tagmenuparent) throws Exception{
try {
		Debug.PushSubsStack("AddMenuItemSeparatorInMenuBar (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,1904);
if (RapidSub.canDelegate("addmenuitemseparatorinmenubar")) { return __ref.runUserSub(false, "jamtableclv","addmenuitemseparatorinmenubar", __ref, _tagmenuparent);}
RemoteObject _sseparator = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
RemoteObject _parentmenu = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper");
Debug.locals.put("TagMenuParent", _tagmenuparent);
 BA.debugLineNum = 1904;BA.debugLine="public Sub AddMenuItemSeparatorInMenuBar(TagMenuPa";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 1905;BA.debugLine="Dim sSeparator As JavaObject";
Debug.JustUpdateDeviceLine();
_sseparator = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");Debug.locals.put("sSeparator", _sseparator);
 BA.debugLineNum = 1906;BA.debugLine="sSeparator.InitializeNewInstance(\"javafx.scene.co";
Debug.JustUpdateDeviceLine();
_sseparator.runVoidMethod ("InitializeNewInstance",(Object)(BA.ObjectToString("javafx.scene.control.SeparatorMenuItem")),(Object)((jamtableclv.__c.getField(false,"Null"))));
 BA.debugLineNum = 1907;BA.debugLine="Dim ParentMenu As Menu=GetMenuBarMenuItem(TagMenu";
Debug.JustUpdateDeviceLine();
_parentmenu = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper");
_parentmenu = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_getmenubarmenuitem" /*RemoteObject*/ ,(Object)(_tagmenuparent)).getObject());Debug.locals.put("ParentMenu", _parentmenu);Debug.locals.put("ParentMenu", _parentmenu);
 BA.debugLineNum = 1908;BA.debugLine="If ParentMenu.IsInitialized Then";
Debug.JustUpdateDeviceLine();
if (_parentmenu.runMethod(true,"IsInitialized").<Boolean>get().booleanValue()) { 
 BA.debugLineNum = 1909;BA.debugLine="ParentMenu.MenuItems.Add(sSeparator)";
Debug.JustUpdateDeviceLine();
_parentmenu.runMethod(false,"getMenuItems").runVoidMethod ("Add",(Object)((_sseparator.getObject())));
 };
 BA.debugLineNum = 1911;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _addmenuitemtomenuinmenubar(RemoteObject __ref,RemoteObject _textomenuitem,RemoteObject _tagmenuitem,RemoteObject _tagmenuparent) throws Exception{
try {
		Debug.PushSubsStack("AddMenuItemToMenuInMenuBar (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,1845);
if (RapidSub.canDelegate("addmenuitemtomenuinmenubar")) { return __ref.runUserSub(false, "jamtableclv","addmenuitemtomenuinmenubar", __ref, _textomenuitem, _tagmenuitem, _tagmenuparent);}
RemoteObject _parentmenu = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper");
RemoteObject _mi = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");
Debug.locals.put("TextoMenuItem", _textomenuitem);
Debug.locals.put("TagMenuItem", _tagmenuitem);
Debug.locals.put("TagMenuParent", _tagmenuparent);
 BA.debugLineNum = 1845;BA.debugLine="public Sub AddMenuItemToMenuInMenuBar(TextoMenuIte";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 1846;BA.debugLine="Dim ParentMenu As Menu=GetMenuBarMenuItem(TagMenu";
Debug.JustUpdateDeviceLine();
_parentmenu = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper");
_parentmenu = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_getmenubarmenuitem" /*RemoteObject*/ ,(Object)(_tagmenuparent)).getObject());Debug.locals.put("ParentMenu", _parentmenu);Debug.locals.put("ParentMenu", _parentmenu);
 BA.debugLineNum = 1847;BA.debugLine="If ParentMenu.IsInitialized Then";
Debug.JustUpdateDeviceLine();
if (_parentmenu.runMethod(true,"IsInitialized").<Boolean>get().booleanValue()) { 
 BA.debugLineNum = 1848;BA.debugLine="Dim mi As MenuItem";
Debug.JustUpdateDeviceLine();
_mi = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");Debug.locals.put("mi", _mi);
 BA.debugLineNum = 1849;BA.debugLine="mi.Initialize(TextoMenuItem, \"MenuBarMenuItem\")";
Debug.JustUpdateDeviceLine();
_mi.runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(_textomenuitem),(Object)(RemoteObject.createImmutable("MenuBarMenuItem")));
 BA.debugLineNum = 1850;BA.debugLine="mi.Tag=TagMenuItem";
Debug.JustUpdateDeviceLine();
_mi.runMethod(false,"setTag",(_tagmenuitem));
 BA.debugLineNum = 1851;BA.debugLine="ParentMenu.MenuItems.Add(mi)";
Debug.JustUpdateDeviceLine();
_parentmenu.runMethod(false,"getMenuItems").runVoidMethod ("Add",(Object)((_mi.getObject())));
 };
 BA.debugLineNum = 1853;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _addmenutomenubar(RemoteObject __ref,RemoteObject _textmenu,RemoteObject _tagmenu) throws Exception{
try {
		Debug.PushSubsStack("AddMenuToMenuBar (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,1771);
if (RapidSub.canDelegate("addmenutomenubar")) { return __ref.runUserSub(false, "jamtableclv","addmenutomenubar", __ref, _textmenu, _tagmenu);}
RemoteObject _mnu = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper");
Debug.locals.put("TextMenu", _textmenu);
Debug.locals.put("TagMenu", _tagmenu);
 BA.debugLineNum = 1771;BA.debugLine="public Sub AddMenuToMenuBar(TextMenu As String, Ta";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 1772;BA.debugLine="Dim Mnu As Menu";
Debug.JustUpdateDeviceLine();
_mnu = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper");Debug.locals.put("Mnu", _mnu);
 BA.debugLineNum = 1773;BA.debugLine="Mnu.Initialize(TextMenu,\"\")";
Debug.JustUpdateDeviceLine();
_mnu.runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(_textmenu),(Object)(RemoteObject.createImmutable("")));
 BA.debugLineNum = 1774;BA.debugLine="Mnu.Text=TextMenu";
Debug.JustUpdateDeviceLine();
_mnu.runMethod(true,"setText",_textmenu);
 BA.debugLineNum = 1775;BA.debugLine="Mnu.tag=TagMenu";
Debug.JustUpdateDeviceLine();
_mnu.runMethod(false,"setTag",(_tagmenu));
 BA.debugLineNum = 1776;BA.debugLine="MenuBar.Menus.Add(Mnu)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_menubar" /*RemoteObject*/ ).runMethod(false,"getMenus").runVoidMethod ("Add",(Object)((_mnu.getObject())));
 BA.debugLineNum = 1777;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _addmenutomenuinmenubar(RemoteObject __ref,RemoteObject _textmenu,RemoteObject _tagmenu,RemoteObject _tagmenuparent) throws Exception{
try {
		Debug.PushSubsStack("AddMenuToMenuInMenuBar (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,1803);
if (RapidSub.canDelegate("addmenutomenuinmenubar")) { return __ref.runUserSub(false, "jamtableclv","addmenutomenuinmenubar", __ref, _textmenu, _tagmenu, _tagmenuparent);}
RemoteObject _nuevomnu = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper");
RemoteObject _menu = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper");
Debug.locals.put("TextMenu", _textmenu);
Debug.locals.put("TagMenu", _tagmenu);
Debug.locals.put("TagMenuParent", _tagmenuparent);
 BA.debugLineNum = 1803;BA.debugLine="public Sub AddMenuToMenuInMenuBar(TextMenu As Stri";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 1804;BA.debugLine="Dim NuevoMnu As Menu";
Debug.JustUpdateDeviceLine();
_nuevomnu = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper");Debug.locals.put("NuevoMnu", _nuevomnu);
 BA.debugLineNum = 1805;BA.debugLine="NuevoMnu.Initialize(\"TextMenu\",\"\")";
Debug.JustUpdateDeviceLine();
_nuevomnu.runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(BA.ObjectToString("TextMenu")),(Object)(RemoteObject.createImmutable("")));
 BA.debugLineNum = 1806;BA.debugLine="NuevoMnu.Text=TextMenu";
Debug.JustUpdateDeviceLine();
_nuevomnu.runMethod(true,"setText",_textmenu);
 BA.debugLineNum = 1807;BA.debugLine="NuevoMnu.tag=TagMenu";
Debug.JustUpdateDeviceLine();
_nuevomnu.runMethod(false,"setTag",(_tagmenu));
 BA.debugLineNum = 1808;BA.debugLine="For Each menu As Menu In MenuBar.Menus";
Debug.JustUpdateDeviceLine();
_menu = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper");
{
final RemoteObject group5 = __ref.getField(false,"_menubar" /*RemoteObject*/ ).runMethod(false,"getMenus");
final int groupLen5 = group5.runMethod(true,"getSize").<Integer>get()
;int index5 = 0;
;
for (; index5 < groupLen5;index5++){
_menu = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper"), group5.runMethod(false,"Get",index5));Debug.locals.put("menu", _menu);
Debug.locals.put("menu", _menu);
 BA.debugLineNum = 1809;BA.debugLine="If menu.Tag=TagMenuParent Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_menu.runMethod(false,"getTag"),(_tagmenuparent))) { 
 BA.debugLineNum = 1810;BA.debugLine="menu.MenuItems.Add(NuevoMnu)";
Debug.JustUpdateDeviceLine();
_menu.runMethod(false,"getMenuItems").runVoidMethod ("Add",(Object)((_nuevomnu.getObject())));
 };
 }
}Debug.locals.put("menu", _menu);
;
 BA.debugLineNum = 1813;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _afterloadlayout(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("AfterLoadLayout (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,463);
if (RapidSub.canDelegate("afterloadlayout")) { return __ref.runUserSub(false, "jamtableclv","afterloadlayout", __ref);}
ResumableSub_AfterLoadLayout rsub = new ResumableSub_AfterLoadLayout(null,__ref);
rsub.remoteResumableSub = anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSubForFilter();
rsub.resume(null, null);
return RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.keywords.Common.ResumableSubWrapper"), rsub.remoteResumableSub);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_AfterLoadLayout extends BA.ResumableSub {
public ResumableSub_AfterLoadLayout(b4j.docU.jamtableclv parent,RemoteObject __ref) {
this.parent = parent;
this.__ref = __ref;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _n = RemoteObject.declareNull("anywheresoftware.b4j.objects.NodeWrapper.ConcreteNodeWrapper");
RemoteObject group2;
int index2;
int groupLen2;

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("AfterLoadLayout (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,463);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
{
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,RemoteObject.createImmutable(null));return;}
case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
 BA.debugLineNum = 464;BA.debugLine="mBase.LoadLayout(\"scrJamTableCLV2\")";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_mbase" /*RemoteObject*/ ).runVoidMethodAndSync ("LoadLayout",(Object)(RemoteObject.createImmutable("scrJamTableCLV2")),__ref.getField(false, "ba"));
 BA.debugLineNum = 467;BA.debugLine="For Each n As Node In pnlMainJamTableCLV.GetAllVi";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//for
this.state = 4;
_n = RemoteObject.createNew ("anywheresoftware.b4j.objects.NodeWrapper.ConcreteNodeWrapper");
group2 = __ref.getField(false,"_pnlmainjamtableclv" /*RemoteObject*/ ).runMethod(false,"GetAllViewsRecursive");
index2 = 0;
groupLen2 = group2.runMethod(true,"getSize").<Integer>get();
Debug.locals.put("n", _n);
this.state = 5;
if (true) break;

case 5:
//C
this.state = 4;
if (index2 < groupLen2) {
this.state = 3;
_n = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.NodeWrapper.ConcreteNodeWrapper"), group2.runMethod(false,"Get",index2));Debug.locals.put("n", _n);}
if (true) break;

case 6:
//C
this.state = 5;
index2++;
Debug.locals.put("n", _n);
if (true) break;

case 3:
//C
this.state = 6;
 BA.debugLineNum = 468;BA.debugLine="LogColor(\"TAG nodo \" & n.Tag,0xFFCD5C5C)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9160038917",RemoteObject.concat(RemoteObject.createImmutable("TAG nodo "),_n.runMethod(false,"getTag")),BA.numberCast(int.class, ((int)0xffcd5c5c)));
 BA.debugLineNum = 469;BA.debugLine="LogColor(\"nodo inicializado \" & n.IsInitialized,";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9160038918",RemoteObject.concat(RemoteObject.createImmutable("nodo inicializado "),_n.runMethod(true,"IsInitialized")),BA.numberCast(int.class, ((int)0xffcd5c5c)));
 if (true) break;
if (true) break;

case 4:
//C
this.state = -1;
Debug.locals.put("n", _n);
;
 BA.debugLineNum = 473;BA.debugLine="Return Null";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,parent.__c.getField(false,"Null"));return;};
 BA.debugLineNum = 474;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static RemoteObject  _asjo(RemoteObject __ref,RemoteObject _o) throws Exception{
try {
		Debug.PushSubsStack("asJO (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,874);
if (RapidSub.canDelegate("asjo")) { return __ref.runUserSub(false, "jamtableclv","asjo", __ref, _o);}
Debug.locals.put("o", _o);
 BA.debugLineNum = 874;BA.debugLine="private Sub asJO(o As JavaObject) As JavaObject";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 875;BA.debugLine="Return o";
Debug.JustUpdateDeviceLine();
if (true) return _o;
 BA.debugLineNum = 876;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static void  _base_resize(RemoteObject __ref,RemoteObject _width,RemoteObject _height) throws Exception{
try {
		Debug.PushSubsStack("Base_Resize (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,477);
if (RapidSub.canDelegate("base_resize")) { __ref.runUserSub(false, "jamtableclv","base_resize", __ref, _width, _height); return;}
ResumableSub_Base_Resize rsub = new ResumableSub_Base_Resize(null,__ref,_width,_height);
rsub.resume(null, null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_Base_Resize extends BA.ResumableSub {
public ResumableSub_Base_Resize(b4j.docU.jamtableclv parent,RemoteObject __ref,RemoteObject _width,RemoteObject _height) {
this.parent = parent;
this.__ref = __ref;
this._width = _width;
this._height = _height;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _width;
RemoteObject _height;

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("Base_Resize (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,477);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
return;

case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
Debug.locals.put("Width", _width);
Debug.locals.put("Height", _height);
 BA.debugLineNum = 478;BA.debugLine="Log(\"jamTCLV Base Resize\")";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9160104449",RemoteObject.createImmutable("jamTCLV Base Resize"),0);
 BA.debugLineNum = 483;BA.debugLine="LogColor(\"clvDatos.IsInitialized \" & clvDatos.IsI";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9160104454",RemoteObject.concat(RemoteObject.createImmutable("clvDatos.IsInitialized "),__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"IsInitialized")),__ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"Color_Magenta"));
 BA.debugLineNum = 484;BA.debugLine="If clvFiltros.IsInitialized=False Then Return";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//if
this.state = 6;
if (RemoteObject.solveBoolean("=",__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(true,"IsInitialized"),parent.__c.getField(true,"False"))) { 
this.state = 3;
;}if (true) break;

case 3:
//C
this.state = 6;
if (true) return ;
if (true) break;

case 6:
//C
this.state = -1;
;
 BA.debugLineNum = 502;BA.debugLine="PosicionDimensionesCLVFiltros";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_posiciondimensionesclvfiltros" /*RemoteObject*/ );
 BA.debugLineNum = 503;BA.debugLine="Sleep(0)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("Sleep",__ref.getField(false, "ba"),anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "base_resize"),BA.numberCast(int.class, 0));
this.state = 7;
return;
case 7:
//C
this.state = -1;
;
 BA.debugLineNum = 504;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static void  _btnaddcampoordenacionsql_click(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("btnAddCampoOrdenacionSQL_Click (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,4994);
if (RapidSub.canDelegate("btnaddcampoordenacionsql_click")) { __ref.runUserSub(false, "jamtableclv","btnaddcampoordenacionsql_click", __ref); return;}
ResumableSub_btnAddCampoOrdenacionSQL_Click rsub = new ResumableSub_btnAddCampoOrdenacionSQL_Click(null,__ref);
rsub.resume(null, null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_btnAddCampoOrdenacionSQL_Click extends BA.ResumableSub {
public ResumableSub_btnAddCampoOrdenacionSQL_Click(b4j.docU.jamtableclv parent,RemoteObject __ref) {
this.parent = parent;
this.__ref = __ref;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _idx = RemoteObject.createImmutable(0);
RemoteObject _clviv2 = RemoteObject.declareNull("b4j.docU.jamtableclv._clvjamtableclvordensqlitemvalue");
RemoteObject _msa = RemoteObject.declareNull("Object");
RemoteObject _lstnombresrestocampos = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.List");
RemoteObject _dol = RemoteObject.declareNull("b4j.docU.jamtableclv._datosordensqljamtableclv");
RemoteObject _bok = RemoteObject.declareNull("anywheresoftware.b4a.objects.B4XViewWrapper");

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("btnAddCampoOrdenacionSQL_Click (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,4994);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
return;

case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
 BA.debugLineNum = 4995;BA.debugLine="Dim iDx As Int=CLVOrdenSQLjamTableCLV.GetItemFrom";
Debug.JustUpdateDeviceLine();
_idx = __ref.getField(false,"_clvordensqljamtableclv" /*RemoteObject*/ ).runMethod(true,"_getitemfromview",RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper"), parent.__c.runMethod(false,"Sender",__ref.getField(false, "ba"))));Debug.locals.put("iDx", _idx);Debug.locals.put("iDx", _idx);
 BA.debugLineNum = 4996;BA.debugLine="Dim clviv2 As clvJAMTableCLVOrdenSQLItemValue=CLV";
Debug.JustUpdateDeviceLine();
_clviv2 = (__ref.getField(false,"_clvordensqljamtableclv" /*RemoteObject*/ ).runMethod(false,"_getvalue",(Object)(_idx)));Debug.locals.put("clviv2", _clviv2);Debug.locals.put("clviv2", _clviv2);
 BA.debugLineNum = 4997;BA.debugLine="If FixNull(clviv2.cboCampoOrdenacionSQL.Value)=\"\"";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//if
this.state = 4;
if (RemoteObject.solveBoolean("=",__ref.runClassMethod (b4j.docU.jamtableclv.class, "_fixnull" /*RemoteObject*/ ,(Object)(_clviv2.getField(false,"cboCampoOrdenacionSQL" /*RemoteObject*/ ).runMethod(false,"getValue"))),BA.ObjectToString("")) || RemoteObject.solveBoolean("=",__ref.runClassMethod (b4j.docU.jamtableclv.class, "_fixnull" /*RemoteObject*/ ,(Object)(_clviv2.getField(false,"cboTipoOrdenacionSQL" /*RemoteObject*/ ).runMethod(false,"getValue"))),BA.ObjectToString(""))) { 
this.state = 3;
}if (true) break;

case 3:
//C
this.state = 4;
 BA.debugLineNum = 4998;BA.debugLine="Dim msa As Object=xui.MsgboxAsync(\"El elemento a";
Debug.JustUpdateDeviceLine();
_msa = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"MsgboxAsync",__ref.getField(false, "ba"),(Object)(BA.ObjectToString("El elemento actual no está completo. No se puede añadir otro elemento hasta completar éste.")),(Object)(RemoteObject.createImmutable("Aviso")));Debug.locals.put("msa", _msa);Debug.locals.put("msa", _msa);
 BA.debugLineNum = 4999;BA.debugLine="Wait For (msa) Msgbox_Result";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","msgbox_result", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "btnaddcampoordenacionsql_click"), _msa);
this.state = 9;
return;
case 9:
//C
this.state = 4;
;
 BA.debugLineNum = 5000;BA.debugLine="Return";
Debug.JustUpdateDeviceLine();
if (true) return ;
 if (true) break;

case 4:
//C
this.state = 5;
;
 BA.debugLineNum = 5002;BA.debugLine="Dim lstNombresRestoCampos As List=RestoCamposOrde";
Debug.JustUpdateDeviceLine();
_lstnombresrestocampos = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");
_lstnombresrestocampos = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_restocamposordensqlcbo" /*RemoteObject*/ );Debug.locals.put("lstNombresRestoCampos", _lstnombresrestocampos);Debug.locals.put("lstNombresRestoCampos", _lstnombresrestocampos);
 BA.debugLineNum = 5003;BA.debugLine="If lstNombresRestoCampos.size=0 Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 5:
//if
this.state = 8;
if (RemoteObject.solveBoolean("=",_lstnombresrestocampos.runMethod(true,"getSize"),BA.numberCast(double.class, 0))) { 
this.state = 7;
}if (true) break;

case 7:
//C
this.state = 8;
 BA.debugLineNum = 5004;BA.debugLine="Dim msa As Object=xui.MsgboxAsync(\"Todos los cam";
Debug.JustUpdateDeviceLine();
_msa = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"MsgboxAsync",__ref.getField(false, "ba"),(Object)(BA.ObjectToString("Todos los campos ordenables están ya seleccionados. No se puede añadir otro elemento.")),(Object)(RemoteObject.createImmutable("Aviso")));Debug.locals.put("msa", _msa);Debug.locals.put("msa", _msa);
 BA.debugLineNum = 5005;BA.debugLine="Wait For (msa) Msgbox_Result";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","msgbox_result", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "btnaddcampoordenacionsql_click"), _msa);
this.state = 10;
return;
case 10:
//C
this.state = 8;
;
 BA.debugLineNum = 5006;BA.debugLine="Return";
Debug.JustUpdateDeviceLine();
if (true) return ;
 if (true) break;

case 8:
//C
this.state = -1;
;
 BA.debugLineNum = 5009;BA.debugLine="Dim dOl As DatosOrdenSQLJamTableCLV";
Debug.JustUpdateDeviceLine();
_dol = RemoteObject.createNew ("b4j.docU.jamtableclv._datosordensqljamtableclv");Debug.locals.put("dOl", _dol);
 BA.debugLineNum = 5010;BA.debugLine="dOl.Initialize";
Debug.JustUpdateDeviceLine();
_dol.runVoidMethod ("Initialize");
 BA.debugLineNum = 5011;BA.debugLine="Dim clviv2 As clvJAMTableCLVOrdenSQLItemValue";
Debug.JustUpdateDeviceLine();
_clviv2 = RemoteObject.createNew ("b4j.docU.jamtableclv._clvjamtableclvordensqlitemvalue");Debug.locals.put("clviv2", _clviv2);
 BA.debugLineNum = 5012;BA.debugLine="CLVOrdenSQLjamTableCLV.Add(CreateItemOrdenSQL(dOl";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvordensqljamtableclv" /*RemoteObject*/ ).runVoidMethod ("_add",(Object)(__ref.runClassMethod (b4j.docU.jamtableclv.class, "_createitemordensql" /*RemoteObject*/ ,(Object)(_dol),(Object)(_clviv2))),(Object)((_clviv2)));
 BA.debugLineNum = 5013;BA.debugLine="Sleep(350)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("Sleep",__ref.getField(false, "ba"),anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "btnaddcampoordenacionsql_click"),BA.numberCast(int.class, 350));
this.state = 11;
return;
case 11:
//C
this.state = -1;
;
 BA.debugLineNum = 5014;BA.debugLine="CLVOrdenSQLjamTableCLV.ScrollToItem(CLVOrdenSQLja";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvordensqljamtableclv" /*RemoteObject*/ ).runVoidMethod ("_scrolltoitem",(Object)(RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvordensqljamtableclv" /*RemoteObject*/ ).runMethod(true,"_getsize"),RemoteObject.createImmutable(1)}, "-",1, 1)));
 BA.debugLineNum = 5015;BA.debugLine="Dim bOK As B4XView=Dialog.GetButton(xui.DialogRes";
Debug.JustUpdateDeviceLine();
_bok = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");
_bok = __ref.getField(false,"_dialog" /*RemoteObject*/ ).runClassMethod (b4j.docU.b4xdialog.class, "_getbutton" /*RemoteObject*/ ,(Object)(__ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"DialogResponse_Positive")));Debug.locals.put("bOK", _bok);Debug.locals.put("bOK", _bok);
 BA.debugLineNum = 5016;BA.debugLine="bOK.Enabled=False";
Debug.JustUpdateDeviceLine();
_bok.runMethod(true,"setEnabled",parent.__c.getField(true,"False"));
 BA.debugLineNum = 5017;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static void  _btnaddfiltro_click(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("btnAddFiltro_Click (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,2266);
if (RapidSub.canDelegate("btnaddfiltro_click")) { __ref.runUserSub(false, "jamtableclv","btnaddfiltro_click", __ref); return;}
ResumableSub_btnAddFiltro_Click rsub = new ResumableSub_btnAddFiltro_Click(null,__ref);
rsub.resume(null, null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_btnAddFiltro_Click extends BA.ResumableSub {
public ResumableSub_btnAddFiltro_Click(b4j.docU.jamtableclv parent,RemoteObject __ref) {
this.parent = parent;
this.__ref = __ref;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
int _i = 0;
RemoteObject _p = RemoteObject.declareNull("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
RemoteObject _m = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
RemoteObject _msa = RemoteObject.declareNull("Object");
int step4;
int limit4;

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("btnAddFiltro_Click (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,2266);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
return;

case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
 BA.debugLineNum = 2267;BA.debugLine="If NumCamposConControlFiltro=0 Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//if
this.state = 4;
if (RemoteObject.solveBoolean("=",__ref.getField(true,"_numcamposconcontrolfiltro" /*RemoteObject*/ ),BA.numberCast(double.class, 0))) { 
this.state = 3;
}if (true) break;

case 3:
//C
this.state = 4;
 BA.debugLineNum = 2268;BA.debugLine="fx.Msgbox(mParentForm,\"No se han definido campos";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_fx" /*RemoteObject*/ ).runVoidMethodAndSync ("Msgbox",(Object)(__ref.getField(false,"_mparentform" /*RemoteObject*/ )),(Object)(BA.ObjectToString("No se han definido campos con control de filtro. No es posible filtrar la tabla.")),(Object)(RemoteObject.createImmutable("Aviso")));
 if (true) break;
;
 BA.debugLineNum = 2273;BA.debugLine="For i=0 To clvFiltros.Size-1";
Debug.JustUpdateDeviceLine();

case 4:
//for
this.state = 11;
step4 = 1;
limit4 = RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(true,"_getsize"),RemoteObject.createImmutable(1)}, "-",1, 1).<Integer>get().intValue();
_i = 0 ;
Debug.locals.put("i", _i);
this.state = 12;
if (true) break;

case 12:
//C
this.state = 11;
if ((step4 > 0 && _i <= limit4) || (step4 < 0 && _i >= limit4)) this.state = 6;
if (true) break;

case 13:
//C
this.state = 12;
_i = ((int)(0 + _i + step4)) ;
Debug.locals.put("i", _i);
if (true) break;

case 6:
//C
this.state = 7;
 BA.debugLineNum = 2274;BA.debugLine="Dim p As Pane=clvFiltros.GetPanel(i)";
Debug.JustUpdateDeviceLine();
_p = RemoteObject.createNew ("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
_p = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper"), __ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(false,"_getpanel",(Object)(BA.numberCast(int.class, _i))).getObject());Debug.locals.put("p", _p);Debug.locals.put("p", _p);
 BA.debugLineNum = 2275;BA.debugLine="Dim m As Map=p.Tag";
Debug.JustUpdateDeviceLine();
_m = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");
_m = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.collections.Map"), _p.runMethod(false,"getTag"));Debug.locals.put("m", _m);Debug.locals.put("m", _m);
 BA.debugLineNum = 2276;BA.debugLine="If m.Get(\"FiltroCompleto\")=False Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 7:
//if
this.state = 10;
if (RemoteObject.solveBoolean("=",_m.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("FiltroCompleto")))),(parent.__c.getField(true,"False")))) { 
this.state = 9;
}if (true) break;

case 9:
//C
this.state = 10;
 BA.debugLineNum = 2277;BA.debugLine="Dim msa As Object=xui.MsgboxAsync(\"Ya existe un";
Debug.JustUpdateDeviceLine();
_msa = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"MsgboxAsync",__ref.getField(false, "ba"),(Object)(BA.ObjectToString("Ya existe un panel del filtro sin completar.")),(Object)(RemoteObject.createImmutable("Aviso")));Debug.locals.put("msa", _msa);Debug.locals.put("msa", _msa);
 BA.debugLineNum = 2278;BA.debugLine="Wait For (msa) Msgbox_Result";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","msgbox_result", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "btnaddfiltro_click"), _msa);
this.state = 14;
return;
case 14:
//C
this.state = 10;
;
 BA.debugLineNum = 2279;BA.debugLine="Return";
Debug.JustUpdateDeviceLine();
if (true) return ;
 if (true) break;

case 10:
//C
this.state = 13;
;
 if (true) break;
if (true) break;

case 11:
//C
this.state = -1;
Debug.locals.put("i", _i);
;
 BA.debugLineNum = 2285;BA.debugLine="AddFiltro";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addfiltro" /*void*/ );
 BA.debugLineNum = 2286;BA.debugLine="Wait For AddFiltro_completed";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","addfiltro_completed", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "btnaddfiltro_click"), null);
this.state = 15;
return;
case 15:
//C
this.state = -1;
;
 BA.debugLineNum = 2292;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static void  _btndelfiltro_click(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("btnDelFiltro_Click (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,3508);
if (RapidSub.canDelegate("btndelfiltro_click")) { __ref.runUserSub(false, "jamtableclv","btndelfiltro_click", __ref); return;}
ResumableSub_btnDelFiltro_Click rsub = new ResumableSub_btnDelFiltro_Click(null,__ref);
rsub.resume(null, null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_btnDelFiltro_Click extends BA.ResumableSub {
public ResumableSub_btnDelFiltro_Click(b4j.docU.jamtableclv parent,RemoteObject __ref) {
this.parent = parent;
this.__ref = __ref;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _b = RemoteObject.declareNull("anywheresoftware.b4j.objects.ButtonWrapper");
RemoteObject _numfiltrosantesborrado = RemoteObject.createImmutable(0);
RemoteObject _idx = RemoteObject.createImmutable(0);
RemoteObject _p = RemoteObject.declareNull("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
RemoteObject _lbltitlefd = RemoteObject.declareNull("anywheresoftware.b4j.objects.LabelWrapper");
RemoteObject _cboop = RemoteObject.declareNull("anywheresoftware.b4j.objects.ComboBoxWrapper");
RemoteObject _n = RemoteObject.declareNull("anywheresoftware.b4j.objects.NodeWrapper.ConcreteNodeWrapper");
RemoteObject _m = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
RemoteObject _robj = RemoteObject.declareNull("Object");
RemoteObject group13;
int index13;
int groupLen13;

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("btnDelFiltro_Click (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,3508);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
return;

case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
 BA.debugLineNum = 3509;BA.debugLine="Dim b As Button=Sender";
Debug.JustUpdateDeviceLine();
_b = RemoteObject.createNew ("anywheresoftware.b4j.objects.ButtonWrapper");
_b = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.ButtonWrapper"), parent.__c.runMethod(false,"Sender",__ref.getField(false, "ba")));Debug.locals.put("b", _b);Debug.locals.put("b", _b);
 BA.debugLineNum = 3511;BA.debugLine="Dim NumFiltrosAntesBorrado As Int=clvFiltros.Size";
Debug.JustUpdateDeviceLine();
_numfiltrosantesborrado = __ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(true,"_getsize");Debug.locals.put("NumFiltrosAntesBorrado", _numfiltrosantesborrado);Debug.locals.put("NumFiltrosAntesBorrado", _numfiltrosantesborrado);
 BA.debugLineNum = 3513;BA.debugLine="Dim idx As Int=clvFiltros.GetItemFromView(b)  ' i";
Debug.JustUpdateDeviceLine();
_idx = __ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(true,"_getitemfromview",RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper"), _b.getObject()));Debug.locals.put("idx", _idx);Debug.locals.put("idx", _idx);
 BA.debugLineNum = 3514;BA.debugLine="clvFiltros.RemoveAt(idx)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runVoidMethod ("_removeat",(Object)(_idx));
 BA.debugLineNum = 3515;BA.debugLine="Sleep(0)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("Sleep",__ref.getField(false, "ba"),anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "btndelfiltro_click"),BA.numberCast(int.class, 0));
this.state = 27;
return;
case 27:
//C
this.state = 1;
;
 BA.debugLineNum = 3519;BA.debugLine="If NumFiltrosAntesBorrado=1 Then  ' se elimina el";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//if
this.state = 20;
if (RemoteObject.solveBoolean("=",_numfiltrosantesborrado,BA.numberCast(double.class, 1))) { 
this.state = 3;
}else {
this.state = 5;
}if (true) break;

case 3:
//C
this.state = 20;
 BA.debugLineNum = 3524;BA.debugLine="FiltrosVisibles=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_filtrosvisibles" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 if (true) break;

case 5:
//C
this.state = 6;
 BA.debugLineNum = 3526;BA.debugLine="If idx=0 Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 6:
//if
this.state = 19;
if (RemoteObject.solveBoolean("=",_idx,BA.numberCast(double.class, 0))) { 
this.state = 8;
}if (true) break;

case 8:
//C
this.state = 9;
 BA.debugLineNum = 3529;BA.debugLine="Dim p As Pane=clvFiltros.GetPanel(0)  ' ahora s";
Debug.JustUpdateDeviceLine();
_p = RemoteObject.createNew ("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
_p = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper"), __ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(false,"_getpanel",(Object)(BA.numberCast(int.class, 0))).getObject());Debug.locals.put("p", _p);Debug.locals.put("p", _p);
 BA.debugLineNum = 3530;BA.debugLine="Dim lblTitleFD As Label";
Debug.JustUpdateDeviceLine();
_lbltitlefd = RemoteObject.createNew ("anywheresoftware.b4j.objects.LabelWrapper");Debug.locals.put("lblTitleFD", _lbltitlefd);
 BA.debugLineNum = 3531;BA.debugLine="Dim cboOP As ComboBox";
Debug.JustUpdateDeviceLine();
_cboop = RemoteObject.createNew ("anywheresoftware.b4j.objects.ComboBoxWrapper");Debug.locals.put("cboOP", _cboop);
 BA.debugLineNum = 3532;BA.debugLine="For Each n As Node In p.GetAllViewsRecursive";
Debug.JustUpdateDeviceLine();
if (true) break;

case 9:
//for
this.state = 18;
_n = RemoteObject.createNew ("anywheresoftware.b4j.objects.NodeWrapper.ConcreteNodeWrapper");
group13 = _p.runMethod(false,"GetAllViewsRecursive");
index13 = 0;
groupLen13 = group13.runMethod(true,"getSize").<Integer>get();
Debug.locals.put("n", _n);
this.state = 28;
if (true) break;

case 28:
//C
this.state = 18;
if (index13 < groupLen13) {
this.state = 11;
_n = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.NodeWrapper.ConcreteNodeWrapper"), group13.runMethod(false,"Get",index13));Debug.locals.put("n", _n);}
if (true) break;

case 29:
//C
this.state = 28;
index13++;
Debug.locals.put("n", _n);
if (true) break;

case 11:
//C
this.state = 12;
 BA.debugLineNum = 3533;BA.debugLine="Select True";
Debug.JustUpdateDeviceLine();
if (true) break;

case 12:
//select
this.state = 17;
switch (BA.switchObjectToInt(parent.__c.getField(true,"True"),BA.ObjectToBoolean(RemoteObject.solveBoolean("=",_n.runMethod(false,"getTag"),RemoteObject.createImmutable(("lblTitleFiltroDonde")))),BA.ObjectToBoolean(RemoteObject.solveBoolean("=",_n.runMethod(false,"getTag"),RemoteObject.createImmutable(("cboAndOrFiltro")))))) {
case 0: {
this.state = 14;
if (true) break;
}
case 1: {
this.state = 16;
if (true) break;
}
}
if (true) break;

case 14:
//C
this.state = 17;
 BA.debugLineNum = 3535;BA.debugLine="lblTitleFD=n";
Debug.JustUpdateDeviceLine();
_lbltitlefd = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.LabelWrapper"), _n.getObject());Debug.locals.put("lblTitleFD", _lbltitlefd);
 BA.debugLineNum = 3536;BA.debugLine="Continue";
Debug.JustUpdateDeviceLine();
this.state = 17;
if (true) break;;
 if (true) break;

case 16:
//C
this.state = 17;
 BA.debugLineNum = 3538;BA.debugLine="cboOP=n";
Debug.JustUpdateDeviceLine();
_cboop = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.ComboBoxWrapper"), _n.getObject());Debug.locals.put("cboOP", _cboop);
 BA.debugLineNum = 3539;BA.debugLine="Continue";
Debug.JustUpdateDeviceLine();
this.state = 17;
if (true) break;;
 if (true) break;

case 17:
//C
this.state = 29;
;
 if (true) break;
if (true) break;

case 18:
//C
this.state = 19;
Debug.locals.put("n", _n);
;
 BA.debugLineNum = 3543;BA.debugLine="lblTitleFD.Left=70";
Debug.JustUpdateDeviceLine();
_lbltitlefd.runMethod(true,"setLeft",BA.numberCast(double.class, 70));
 BA.debugLineNum = 3544;BA.debugLine="lblTitleFD.prefWidth=105";
Debug.JustUpdateDeviceLine();
_lbltitlefd.runMethod(true,"setPrefWidth",BA.numberCast(double.class, 105));
 BA.debugLineNum = 3545;BA.debugLine="lblTitleFD.Text=\"Filtrar donde\"";
Debug.JustUpdateDeviceLine();
_lbltitlefd.runMethod(true,"setText",BA.ObjectToString("Filtrar donde"));
 BA.debugLineNum = 3546;BA.debugLine="cboOP.Visible=False";
Debug.JustUpdateDeviceLine();
_cboop.runMethod(true,"setVisible",parent.__c.getField(true,"False"));
 BA.debugLineNum = 3549;BA.debugLine="Dim m As Map=p.Tag";
Debug.JustUpdateDeviceLine();
_m = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");
_m = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.collections.Map"), _p.runMethod(false,"getTag"));Debug.locals.put("m", _m);Debug.locals.put("m", _m);
 BA.debugLineNum = 3550;BA.debugLine="m.Put(\"OperadorFiltro\",\"\")";
Debug.JustUpdateDeviceLine();
_m.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("OperadorFiltro"))),(Object)((RemoteObject.createImmutable(""))));
 BA.debugLineNum = 3551;BA.debugLine="p.Tag=m";
Debug.JustUpdateDeviceLine();
_p.runMethod(false,"setTag",(_m.getObject()));
 if (true) break;

case 19:
//C
this.state = 20;
;
 if (true) break;

case 20:
//C
this.state = 21;
;
 BA.debugLineNum = 3555;BA.debugLine="wait for(ActualizarFiltro) complete (rObj As Obje";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "btndelfiltro_click"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_actualizarfiltro" /*RemoteObject*/ ));
this.state = 30;
return;
case 30:
//C
this.state = 21;
_robj = (RemoteObject) result.getArrayElement(false,RemoteObject.createImmutable(1));Debug.locals.put("rObj", _robj);
;
 BA.debugLineNum = 3556;BA.debugLine="PosicionDimensionesCLVFiltros";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_posiciondimensionesclvfiltros" /*RemoteObject*/ );
 BA.debugLineNum = 3557;BA.debugLine="Sleep(0)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("Sleep",__ref.getField(false, "ba"),anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "btndelfiltro_click"),BA.numberCast(int.class, 0));
this.state = 31;
return;
case 31:
//C
this.state = 21;
;
 BA.debugLineNum = 3558;BA.debugLine="If clvFiltros.sv.ScrollViewContentHeight>clvFiltr";
Debug.JustUpdateDeviceLine();
if (true) break;

case 21:
//if
this.state = 26;
if (RemoteObject.solveBoolean(">",__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).getField(false,"_sv").runMethod(true,"getScrollViewContentHeight"),__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(false,"_asview").runMethod(true,"getHeight"))) { 
this.state = 23;
;}if (true) break;

case 23:
//C
this.state = 26;
__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runVoidMethod ("_scrolltoitem",(Object)(RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(true,"_getsize"),RemoteObject.createImmutable(1)}, "-",1, 1)));
if (true) break;

case 26:
//C
this.state = -1;
;
 BA.debugLineNum = 3560;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static void  _btneliminarcampoordenacionsql_click(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("btnEliminarCampoOrdenacionSQL_Click (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,5019);
if (RapidSub.canDelegate("btneliminarcampoordenacionsql_click")) { __ref.runUserSub(false, "jamtableclv","btneliminarcampoordenacionsql_click", __ref); return;}
ResumableSub_btnEliminarCampoOrdenacionSQL_Click rsub = new ResumableSub_btnEliminarCampoOrdenacionSQL_Click(null,__ref);
rsub.resume(null, null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_btnEliminarCampoOrdenacionSQL_Click extends BA.ResumableSub {
public ResumableSub_btnEliminarCampoOrdenacionSQL_Click(b4j.docU.jamtableclv parent,RemoteObject __ref) {
this.parent = parent;
this.__ref = __ref;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _idx = RemoteObject.createImmutable(0);
RemoteObject _clviv2 = RemoteObject.declareNull("b4j.docU.jamtableclv._clvjamtableclvordensqlitemvalue");
RemoteObject _bok = RemoteObject.declareNull("anywheresoftware.b4a.objects.B4XViewWrapper");
RemoteObject _dol = RemoteObject.declareNull("b4j.docU.jamtableclv._datosordensqljamtableclv");

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("btnEliminarCampoOrdenacionSQL_Click (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,5019);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
return;

case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
 BA.debugLineNum = 5020;BA.debugLine="Dim iDx As Int=CLVOrdenSQLjamTableCLV.GetItemFrom";
Debug.JustUpdateDeviceLine();
_idx = __ref.getField(false,"_clvordensqljamtableclv" /*RemoteObject*/ ).runMethod(true,"_getitemfromview",RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper"), parent.__c.runMethod(false,"Sender",__ref.getField(false, "ba"))));Debug.locals.put("iDx", _idx);Debug.locals.put("iDx", _idx);
 BA.debugLineNum = 5021;BA.debugLine="Dim clviv2 As clvJAMTableCLVOrdenSQLItemValue=CLV";
Debug.JustUpdateDeviceLine();
_clviv2 = (__ref.getField(false,"_clvordensqljamtableclv" /*RemoteObject*/ ).runMethod(false,"_getvalue",(Object)(_idx)));Debug.locals.put("clviv2", _clviv2);Debug.locals.put("clviv2", _clviv2);
 BA.debugLineNum = 5022;BA.debugLine="Dim bOK As B4XView=Dialog.GetButton(xui.DialogRes";
Debug.JustUpdateDeviceLine();
_bok = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");
_bok = __ref.getField(false,"_dialog" /*RemoteObject*/ ).runClassMethod (b4j.docU.b4xdialog.class, "_getbutton" /*RemoteObject*/ ,(Object)(__ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"DialogResponse_Positive")));Debug.locals.put("bOK", _bok);Debug.locals.put("bOK", _bok);
 BA.debugLineNum = 5023;BA.debugLine="CLVOrdenSQLjamTableCLV.RemoveAt(iDx)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvordensqljamtableclv" /*RemoteObject*/ ).runVoidMethod ("_removeat",(Object)(_idx));
 BA.debugLineNum = 5024;BA.debugLine="If CLVOrdenSQLjamTableCLV.Size=0 Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//if
this.state = 6;
if (RemoteObject.solveBoolean("=",__ref.getField(false,"_clvordensqljamtableclv" /*RemoteObject*/ ).runMethod(true,"_getsize"),BA.numberCast(double.class, 0))) { 
this.state = 3;
}else {
this.state = 5;
}if (true) break;

case 3:
//C
this.state = 6;
 BA.debugLineNum = 5025;BA.debugLine="Dim dOl As DatosOrdenSQLJamTableCLV";
Debug.JustUpdateDeviceLine();
_dol = RemoteObject.createNew ("b4j.docU.jamtableclv._datosordensqljamtableclv");Debug.locals.put("dOl", _dol);
 BA.debugLineNum = 5026;BA.debugLine="dOl.Initialize";
Debug.JustUpdateDeviceLine();
_dol.runVoidMethod ("Initialize");
 BA.debugLineNum = 5027;BA.debugLine="Dim clviv2 As clvJAMTableCLVOrdenSQLItemValue";
Debug.JustUpdateDeviceLine();
_clviv2 = RemoteObject.createNew ("b4j.docU.jamtableclv._clvjamtableclvordensqlitemvalue");Debug.locals.put("clviv2", _clviv2);
 BA.debugLineNum = 5028;BA.debugLine="CLVOrdenSQLjamTableCLV.Add(CreateItemOrdenSQL(dO";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvordensqljamtableclv" /*RemoteObject*/ ).runVoidMethod ("_add",(Object)(__ref.runClassMethod (b4j.docU.jamtableclv.class, "_createitemordensql" /*RemoteObject*/ ,(Object)(_dol),(Object)(_clviv2))),(Object)((_clviv2)));
 BA.debugLineNum = 5031;BA.debugLine="bOK.Enabled=True";
Debug.JustUpdateDeviceLine();
_bok.runMethod(true,"setEnabled",parent.__c.getField(true,"True"));
 if (true) break;

case 5:
//C
this.state = 6;
 BA.debugLineNum = 5033;BA.debugLine="bOK.Enabled=True";
Debug.JustUpdateDeviceLine();
_bok.runMethod(true,"setEnabled",parent.__c.getField(true,"True"));
 if (true) break;

case 6:
//C
this.state = -1;
;
 BA.debugLineNum = 5035;BA.debugLine="Sleep(350)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("Sleep",__ref.getField(false, "ba"),anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "btneliminarcampoordenacionsql_click"),BA.numberCast(int.class, 350));
this.state = 7;
return;
case 7:
//C
this.state = -1;
;
 BA.debugLineNum = 5036;BA.debugLine="CLVOrdenSQLjamTableCLV.ScrollToItem(Max(0,(iDx-1)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvordensqljamtableclv" /*RemoteObject*/ ).runVoidMethod ("_scrolltoitem",(Object)(BA.numberCast(int.class, parent.__c.runMethod(true,"Max",(Object)(BA.numberCast(double.class, 0)),(Object)(BA.numberCast(double.class, (RemoteObject.solve(new RemoteObject[] {_idx,RemoteObject.createImmutable(1)}, "-",1, 1))))))));
 BA.debugLineNum = 5037;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static void  _btnselfechafiltro_click(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("btnSelFechaFiltro_Click (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,2879);
if (RapidSub.canDelegate("btnselfechafiltro_click")) { __ref.runUserSub(false, "jamtableclv","btnselfechafiltro_click", __ref); return;}
ResumableSub_btnSelFechaFiltro_Click rsub = new ResumableSub_btnSelFechaFiltro_Click(null,__ref);
rsub.resume(null, null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_btnSelFechaFiltro_Click extends BA.ResumableSub {
public ResumableSub_btnSelFechaFiltro_Click(b4j.docU.jamtableclv parent,RemoteObject __ref) {
this.parent = parent;
this.__ref = __ref;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _bf = RemoteObject.declareNull("anywheresoftware.b4j.objects.ButtonWrapper");
RemoteObject _datetemplate = RemoteObject.declareNull("b4j.docU.b4xdatetemplate");
RemoteObject _fechaselfiltro = RemoteObject.createImmutable(0L);
RemoteObject _datetimeformatant = RemoteObject.createImmutable("");
RemoteObject _rsub = RemoteObject.declareNull("anywheresoftware.b4a.keywords.Common.ResumableSubWrapper");
RemoteObject _bok = RemoteObject.declareNull("anywheresoftware.b4a.objects.B4XViewWrapper");
RemoteObject _bcancel = RemoteObject.declareNull("anywheresoftware.b4a.objects.B4XViewWrapper");
RemoteObject _result = RemoteObject.createImmutable(0);
RemoteObject _np = RemoteObject.createImmutable(0);
RemoteObject _p = RemoteObject.declareNull("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
RemoteObject _mdatosfiltro = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
RemoteObject _clviv = RemoteObject.declareNull("b4j.docU.jamtableclv._clvjamtableclvfiltroitemvalue");
RemoteObject _c = RemoteObject.declareNull("b4j.docU.jamtableclv._campoorigendatosjamtableclv");
RemoteObject _operadorfiltro = RemoteObject.createImmutable("");
RemoteObject _comparador = RemoteObject.createImmutable("");
RemoteObject _robj = RemoteObject.declareNull("Object");

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("btnSelFechaFiltro_Click (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,2879);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
return;

case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
 BA.debugLineNum = 2880;BA.debugLine="Dim bF As Button=Sender";
Debug.JustUpdateDeviceLine();
_bf = RemoteObject.createNew ("anywheresoftware.b4j.objects.ButtonWrapper");
_bf = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.ButtonWrapper"), parent.__c.runMethod(false,"Sender",__ref.getField(false, "ba")));Debug.locals.put("bF", _bf);Debug.locals.put("bF", _bf);
 BA.debugLineNum = 2882;BA.debugLine="Private DateTemplate As B4XDateTemplate";
Debug.JustUpdateDeviceLine();
_datetemplate = RemoteObject.createNew ("b4j.docU.b4xdatetemplate");Debug.locals.put("DateTemplate", _datetemplate);
 BA.debugLineNum = 2883;BA.debugLine="Dim FechaSelFiltro As Long";
Debug.JustUpdateDeviceLine();
_fechaselfiltro = RemoteObject.createImmutable(0L);Debug.locals.put("FechaSelFiltro", _fechaselfiltro);
 BA.debugLineNum = 2884;BA.debugLine="Dim DatetimeFormatAnt As String=DateTime.DateForm";
Debug.JustUpdateDeviceLine();
_datetimeformatant = parent.__c.getField(false,"DateTime").runMethod(true,"getDateFormat");Debug.locals.put("DatetimeFormatAnt", _datetimeformatant);Debug.locals.put("DatetimeFormatAnt", _datetimeformatant);
 BA.debugLineNum = 2885;BA.debugLine="DateTime.DateFormat=\"dd/MM/yyyy\"";
Debug.JustUpdateDeviceLine();
parent.__c.getField(false,"DateTime").runMethod(true,"setDateFormat",BA.ObjectToString("dd/MM/yyyy"));
 BA.debugLineNum = 2887;BA.debugLine="DateTemplate.Initialize";
Debug.JustUpdateDeviceLine();
_datetemplate.runClassMethod (b4j.docU.b4xdatetemplate.class, "_initialize" /*RemoteObject*/ ,__ref.getField(false, "ba"));
 BA.debugLineNum = 2890;BA.debugLine="DateTemplate.FirstDay=1";
Debug.JustUpdateDeviceLine();
_datetemplate.setField ("_firstday" /*RemoteObject*/ ,BA.numberCast(int.class, 1));
 BA.debugLineNum = 2891;BA.debugLine="DateTemplate.Date=DateTime.Now";
Debug.JustUpdateDeviceLine();
_datetemplate.runClassMethod (b4j.docU.b4xdatetemplate.class, "_setdate" /*RemoteObject*/ ,parent.__c.getField(false,"DateTime").runMethod(true,"getNow"));
 BA.debugLineNum = 2892;BA.debugLine="Dim rSub As ResumableSub=Dialog.ShowTemplate(Date";
Debug.JustUpdateDeviceLine();
_rsub = RemoteObject.createNew ("anywheresoftware.b4a.keywords.Common.ResumableSubWrapper");
_rsub = __ref.getField(false,"_dialog" /*RemoteObject*/ ).runClassMethod (b4j.docU.b4xdialog.class, "_showtemplate" /*RemoteObject*/ ,(Object)((_datetemplate)),(Object)(RemoteObject.createImmutable(("OK"))),(Object)(RemoteObject.createImmutable((""))),(Object)((RemoteObject.createImmutable("Cancelar"))));Debug.locals.put("rSub", _rsub);Debug.locals.put("rSub", _rsub);
 BA.debugLineNum = 2893;BA.debugLine="Dim bOk As B4XView=Dialog.GetButton(xui.DialogRes";
Debug.JustUpdateDeviceLine();
_bok = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");
_bok = __ref.getField(false,"_dialog" /*RemoteObject*/ ).runClassMethod (b4j.docU.b4xdialog.class, "_getbutton" /*RemoteObject*/ ,(Object)(__ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"DialogResponse_Positive")));Debug.locals.put("bOk", _bok);Debug.locals.put("bOk", _bok);
 BA.debugLineNum = 2894;BA.debugLine="bOk.Left=5dip";
Debug.JustUpdateDeviceLine();
_bok.runMethod(true,"setLeft",BA.numberCast(double.class, parent.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 5)))));
 BA.debugLineNum = 2895;BA.debugLine="Dim bCancel As B4XView=Dialog.GetButton(xui.Dialo";
Debug.JustUpdateDeviceLine();
_bcancel = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");
_bcancel = __ref.getField(false,"_dialog" /*RemoteObject*/ ).runClassMethod (b4j.docU.b4xdialog.class, "_getbutton" /*RemoteObject*/ ,(Object)(__ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"DialogResponse_Cancel")));Debug.locals.put("bCancel", _bcancel);Debug.locals.put("bCancel", _bcancel);
 BA.debugLineNum = 2896;BA.debugLine="bCancel.left=bCancel.left-20dip";
Debug.JustUpdateDeviceLine();
_bcancel.runMethod(true,"setLeft",RemoteObject.solve(new RemoteObject[] {_bcancel.runMethod(true,"getLeft"),parent.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 20)))}, "-",1, 0));
 BA.debugLineNum = 2897;BA.debugLine="bCancel.Width=bCancel.Width+20dip";
Debug.JustUpdateDeviceLine();
_bcancel.runMethod(true,"setWidth",RemoteObject.solve(new RemoteObject[] {_bcancel.runMethod(true,"getWidth"),parent.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 20)))}, "+",1, 0));
 BA.debugLineNum = 2898;BA.debugLine="Wait For (rSub) Complete (Result As Int)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "btnselfechafiltro_click"), _rsub);
this.state = 8;
return;
case 8:
//C
this.state = 1;
_result = (RemoteObject) result.getArrayElement(true,RemoteObject.createImmutable(1));Debug.locals.put("Result", _result);
;
 BA.debugLineNum = 2899;BA.debugLine="If Result=xui.DialogResponse_Cancel Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//if
this.state = 4;
if (RemoteObject.solveBoolean("=",_result,BA.numberCast(double.class, __ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"DialogResponse_Cancel")))) { 
this.state = 3;
}if (true) break;

case 3:
//C
this.state = 4;
 BA.debugLineNum = 2900;BA.debugLine="DateTime.DateFormat=DatetimeFormatAnt";
Debug.JustUpdateDeviceLine();
parent.__c.getField(false,"DateTime").runMethod(true,"setDateFormat",_datetimeformatant);
 BA.debugLineNum = 2901;BA.debugLine="Return";
Debug.JustUpdateDeviceLine();
if (true) return ;
 if (true) break;
;
 BA.debugLineNum = 2903;BA.debugLine="If Result =xui.DialogResponse_Positive Then";
Debug.JustUpdateDeviceLine();

case 4:
//if
this.state = 7;
if (RemoteObject.solveBoolean("=",_result,BA.numberCast(double.class, __ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"DialogResponse_Positive")))) { 
this.state = 6;
}if (true) break;

case 6:
//C
this.state = 7;
 BA.debugLineNum = 2904;BA.debugLine="FechaSelFiltro=DateTemplate.Date";
Debug.JustUpdateDeviceLine();
_fechaselfiltro = _datetemplate.runClassMethod (b4j.docU.b4xdatetemplate.class, "_getdate" /*RemoteObject*/ );Debug.locals.put("FechaSelFiltro", _fechaselfiltro);
 if (true) break;

case 7:
//C
this.state = -1;
;
 BA.debugLineNum = 2910;BA.debugLine="Dim nP As Int=clvFiltros.GetItemFromView(bF)";
Debug.JustUpdateDeviceLine();
_np = __ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(true,"_getitemfromview",RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper"), _bf.getObject()));Debug.locals.put("nP", _np);Debug.locals.put("nP", _np);
 BA.debugLineNum = 2911;BA.debugLine="Dim p As Pane=clvFiltros.GetPanel(nP)";
Debug.JustUpdateDeviceLine();
_p = RemoteObject.createNew ("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
_p = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper"), __ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(false,"_getpanel",(Object)(_np)).getObject());Debug.locals.put("p", _p);Debug.locals.put("p", _p);
 BA.debugLineNum = 2912;BA.debugLine="Dim mDatosFiltro As Map=p.Tag";
Debug.JustUpdateDeviceLine();
_mdatosfiltro = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");
_mdatosfiltro = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.collections.Map"), _p.runMethod(false,"getTag"));Debug.locals.put("mDatosFiltro", _mdatosfiltro);Debug.locals.put("mDatosFiltro", _mdatosfiltro);
 BA.debugLineNum = 2913;BA.debugLine="Dim clviv As clvJAMTableCLVFiltroItemValue=clvFil";
Debug.JustUpdateDeviceLine();
_clviv = (__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(false,"_getvalue",(Object)(_np)));Debug.locals.put("clviv", _clviv);Debug.locals.put("clviv", _clviv);
 BA.debugLineNum = 2916;BA.debugLine="clviv.txtValorFechaFiltro.Text=DateTime.Date(Fech";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"txtValorFechaFiltro" /*RemoteObject*/ ).runMethod(true,"setText",parent.__c.getField(false,"DateTime").runMethod(true,"Date",(Object)(_fechaselfiltro)));
 BA.debugLineNum = 2919;BA.debugLine="Dim c As CampoOrigenDatosJamTableCLV=mDatosFiltro";
Debug.JustUpdateDeviceLine();
_c = (_mdatosfiltro.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("DatosCampoFiltro")))));Debug.locals.put("c", _c);Debug.locals.put("c", _c);
 BA.debugLineNum = 2921;BA.debugLine="Dim OperadorFiltro As String=mDatosFiltro.Get(\"Op";
Debug.JustUpdateDeviceLine();
_operadorfiltro = BA.ObjectToString(_mdatosfiltro.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("OperadorFiltro")))));Debug.locals.put("OperadorFiltro", _operadorfiltro);Debug.locals.put("OperadorFiltro", _operadorfiltro);
 BA.debugLineNum = 2922;BA.debugLine="Dim Comparador As String=mDatosFiltro.Get(\"Compar";
Debug.JustUpdateDeviceLine();
_comparador = BA.ObjectToString(_mdatosfiltro.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("ComparadorFiltro")))));Debug.locals.put("Comparador", _comparador);Debug.locals.put("Comparador", _comparador);
 BA.debugLineNum = 2923;BA.debugLine="p.Tag=DatosFiltro(True,OperadorFiltro,c,Comparado";
Debug.JustUpdateDeviceLine();
_p.runMethod(false,"setTag",(__ref.runClassMethod (b4j.docU.jamtableclv.class, "_datosfiltro" /*RemoteObject*/ ,(Object)(parent.__c.getField(true,"True")),(Object)(_operadorfiltro),(Object)(_c),(Object)(_comparador),(Object)((_fechaselfiltro))).getObject()));
 BA.debugLineNum = 2924;BA.debugLine="wait for(ActualizarFiltro) complete (rObj As Obje";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "btnselfechafiltro_click"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_actualizarfiltro" /*RemoteObject*/ ));
this.state = 9;
return;
case 9:
//C
this.state = -1;
_robj = (RemoteObject) result.getArrayElement(false,RemoteObject.createImmutable(1));Debug.locals.put("rObj", _robj);
;
 BA.debugLineNum = 2926;BA.debugLine="DateTime.DateFormat=DatetimeFormatAnt";
Debug.JustUpdateDeviceLine();
parent.__c.getField(false,"DateTime").runMethod(true,"setDateFormat",_datetimeformatant);
 BA.debugLineNum = 2927;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static RemoteObject  _cambioandorfiltro(RemoteObject __ref,RemoteObject _cbo) throws Exception{
try {
		Debug.PushSubsStack("CambioAndOrFiltro (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,3226);
if (RapidSub.canDelegate("cambioandorfiltro")) { return __ref.runUserSub(false, "jamtableclv","cambioandorfiltro", __ref, _cbo);}
ResumableSub_CambioAndOrFiltro rsub = new ResumableSub_CambioAndOrFiltro(null,__ref,_cbo);
rsub.remoteResumableSub = anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSubForFilter();
rsub.resume(null, null);
return RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.keywords.Common.ResumableSubWrapper"), rsub.remoteResumableSub);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_CambioAndOrFiltro extends BA.ResumableSub {
public ResumableSub_CambioAndOrFiltro(b4j.docU.jamtableclv parent,RemoteObject __ref,RemoteObject _cbo) {
this.parent = parent;
this.__ref = __ref;
this._cbo = _cbo;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _cbo;
RemoteObject _np = RemoteObject.createImmutable(0);
RemoteObject _p = RemoteObject.declareNull("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
RemoteObject _mdatosfiltro = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
RemoteObject _csel = RemoteObject.declareNull("b4j.docU.jamtableclv._campoorigendatosjamtableclv");
RemoteObject _sberr = RemoteObject.declareNull("anywheresoftware.b4a.keywords.StringBuilderWrapper");
RemoteObject _msa = RemoteObject.declareNull("Object");
RemoteObject _robj = RemoteObject.declareNull("Object");

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("CambioAndOrFiltro (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,3226);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
{
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,RemoteObject.createImmutable(null));return;}
case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
Debug.locals.put("cbo", _cbo);
 BA.debugLineNum = 3227;BA.debugLine="Dim nP As Int=clvFiltros.GetItemFromView(cbo)";
Debug.JustUpdateDeviceLine();
_np = __ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(true,"_getitemfromview",RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper"), _cbo.getObject()));Debug.locals.put("nP", _np);Debug.locals.put("nP", _np);
 BA.debugLineNum = 3228;BA.debugLine="Dim p As Pane=clvFiltros.GetPanel(nP)";
Debug.JustUpdateDeviceLine();
_p = RemoteObject.createNew ("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
_p = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper"), __ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(false,"_getpanel",(Object)(_np)).getObject());Debug.locals.put("p", _p);Debug.locals.put("p", _p);
 BA.debugLineNum = 3229;BA.debugLine="Dim mDatosFiltro As Map=p.Tag";
Debug.JustUpdateDeviceLine();
_mdatosfiltro = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");
_mdatosfiltro = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.collections.Map"), _p.runMethod(false,"getTag"));Debug.locals.put("mDatosFiltro", _mdatosfiltro);Debug.locals.put("mDatosFiltro", _mdatosfiltro);
 BA.debugLineNum = 3230;BA.debugLine="Dim CSel As CampoOrigenDatosJamTableCLV=mDatosFil";
Debug.JustUpdateDeviceLine();
_csel = (_mdatosfiltro.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("DatosCampoFiltro")))));Debug.locals.put("CSel", _csel);Debug.locals.put("CSel", _csel);
 BA.debugLineNum = 3231;BA.debugLine="If cbo.Value=\"O\" Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//if
this.state = 8;
if (RemoteObject.solveBoolean("=",_cbo.runMethod(false,"getValue"),RemoteObject.createImmutable(("O")))) { 
this.state = 3;
}if (true) break;

case 3:
//C
this.state = 4;
 BA.debugLineNum = 3233;BA.debugLine="If Not(CheckPosibleFiltroOr(CSel.AliasCampo)) Th";
Debug.JustUpdateDeviceLine();
if (true) break;

case 4:
//if
this.state = 7;
if (parent.__c.runMethod(true,"Not",(Object)(__ref.runClassMethod (b4j.docU.jamtableclv.class, "_checkposiblefiltroor" /*RemoteObject*/ ,(Object)(_csel.getField(true,"AliasCampo" /*RemoteObject*/ ))))).<Boolean>get().booleanValue()) { 
this.state = 6;
}if (true) break;

case 6:
//C
this.state = 7;
 BA.debugLineNum = 3234;BA.debugLine="Dim sbErr As StringBuilder";
Debug.JustUpdateDeviceLine();
_sberr = RemoteObject.createNew ("anywheresoftware.b4a.keywords.StringBuilderWrapper");Debug.locals.put("sbErr", _sberr);
 BA.debugLineNum = 3235;BA.debugLine="sbErr.Initialize";
Debug.JustUpdateDeviceLine();
_sberr.runVoidMethod ("Initialize");
 BA.debugLineNum = 3236;BA.debugLine="sbErr.Append(\"Sólo puede establecerse un filtro";
Debug.JustUpdateDeviceLine();
_sberr.runVoidMethod ("Append",(Object)(RemoteObject.createImmutable("Sólo puede establecerse un filtro con comparador tipo O, cuando tenemos únicamente 2 filtros,")));
 BA.debugLineNum = 3237;BA.debugLine="sbErr.Append(\" o bien cuando todos los filtros";
Debug.JustUpdateDeviceLine();
_sberr.runMethod(false,"Append",(Object)(RemoteObject.createImmutable(" o bien cuando todos los filtros son relativos al mismo campo."))).runVoidMethod ("Append",(Object)(parent.__c.getField(true,"CRLF")));
 BA.debugLineNum = 3238;BA.debugLine="sbErr.Append(\"Se MODIFICA el tipo de comparador";
Debug.JustUpdateDeviceLine();
_sberr.runVoidMethod ("Append",(Object)(RemoteObject.createImmutable("Se MODIFICA el tipo de comparador a tipo Y.")));
 BA.debugLineNum = 3239;BA.debugLine="Dim msa As Object=xui.MsgboxAsync(sbErr.ToStrin";
Debug.JustUpdateDeviceLine();
_msa = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"MsgboxAsync",__ref.getField(false, "ba"),(Object)(_sberr.runMethod(true,"ToString")),(Object)(RemoteObject.createImmutable("Aviso")));Debug.locals.put("msa", _msa);Debug.locals.put("msa", _msa);
 BA.debugLineNum = 3240;BA.debugLine="Wait For (msa) Msgbox_Result";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","msgbox_result", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "cambioandorfiltro"), _msa);
this.state = 9;
return;
case 9:
//C
this.state = 7;
;
 BA.debugLineNum = 3241;BA.debugLine="cbo.Value=\"Y\"";
Debug.JustUpdateDeviceLine();
_cbo.runMethod(false,"setValue",RemoteObject.createImmutable(("Y")));
 BA.debugLineNum = 3242;BA.debugLine="Return Null";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,parent.__c.getField(false,"Null"));return;};
 if (true) break;

case 7:
//C
this.state = 8;
;
 if (true) break;

case 8:
//C
this.state = -1;
;
 BA.debugLineNum = 3248;BA.debugLine="mDatosFiltro.Put(\"OperadorFiltro\",cbo.Value)";
Debug.JustUpdateDeviceLine();
_mdatosfiltro.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("OperadorFiltro"))),(Object)(_cbo.runMethod(false,"getValue")));
 BA.debugLineNum = 3249;BA.debugLine="p.Tag=mDatosFiltro";
Debug.JustUpdateDeviceLine();
_p.runMethod(false,"setTag",(_mdatosfiltro.getObject()));
 BA.debugLineNum = 3250;BA.debugLine="wait for(ActualizarFiltro) complete (rObj As Obje";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "cambioandorfiltro"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_actualizarfiltro" /*RemoteObject*/ ));
this.state = 10;
return;
case 10:
//C
this.state = -1;
_robj = (RemoteObject) result.getArrayElement(false,RemoteObject.createImmutable(1));Debug.locals.put("rObj", _robj);
;
 BA.debugLineNum = 3251;BA.debugLine="Return Null";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,parent.__c.getField(false,"Null"));return;};
 BA.debugLineNum = 3252;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static RemoteObject  _cambiocampofiltro(RemoteObject __ref,RemoteObject _cbo) throws Exception{
try {
		Debug.PushSubsStack("CambioCampoFiltro (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,2435);
if (RapidSub.canDelegate("cambiocampofiltro")) { return __ref.runUserSub(false, "jamtableclv","cambiocampofiltro", __ref, _cbo);}
ResumableSub_CambioCampoFiltro rsub = new ResumableSub_CambioCampoFiltro(null,__ref,_cbo);
rsub.remoteResumableSub = anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSubForFilter();
rsub.resume(null, null);
return RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.keywords.Common.ResumableSubWrapper"), rsub.remoteResumableSub);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_CambioCampoFiltro extends BA.ResumableSub {
public ResumableSub_CambioCampoFiltro(b4j.docU.jamtableclv parent,RemoteObject __ref,RemoteObject _cbo) {
this.parent = parent;
this.__ref = __ref;
this._cbo = _cbo;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _cbo;
RemoteObject _np = RemoteObject.createImmutable(0);
RemoteObject _p = RemoteObject.declareNull("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
RemoteObject _mdatosfiltro = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
RemoteObject _clviv = RemoteObject.declareNull("b4j.docU.jamtableclv._clvjamtableclvfiltroitemvalue");
RemoteObject _sberr = RemoteObject.declareNull("anywheresoftware.b4a.keywords.StringBuilderWrapper");
RemoteObject _msa = RemoteObject.declareNull("Object");
RemoteObject _robj = RemoteObject.declareNull("Object");
RemoteObject _c = RemoteObject.declareNull("b4j.docU.jamtableclv._campoorigendatosjamtableclv");
RemoteObject _tipocontrolf = RemoteObject.createImmutable("");
RemoteObject _operadorfiltro = RemoteObject.createImmutable("");
RemoteObject _comparadorfiltro = RemoteObject.createImmutable("");
RemoteObject _robject = RemoteObject.declareNull("Object");

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("CambioCampoFiltro (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,2435);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
{
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,RemoteObject.createImmutable(null));return;}
case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
Debug.locals.put("cbo", _cbo);
 BA.debugLineNum = 2436;BA.debugLine="Dim nP As Int=clvFiltros.GetItemFromView(cbo)";
Debug.JustUpdateDeviceLine();
_np = __ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(true,"_getitemfromview",RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper"), _cbo.getObject()));Debug.locals.put("nP", _np);Debug.locals.put("nP", _np);
 BA.debugLineNum = 2437;BA.debugLine="Dim p As Pane=clvFiltros.GetPanel(nP)";
Debug.JustUpdateDeviceLine();
_p = RemoteObject.createNew ("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
_p = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper"), __ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(false,"_getpanel",(Object)(_np)).getObject());Debug.locals.put("p", _p);Debug.locals.put("p", _p);
 BA.debugLineNum = 2438;BA.debugLine="Dim mDatosFiltro As Map=p.Tag";
Debug.JustUpdateDeviceLine();
_mdatosfiltro = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");
_mdatosfiltro = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.collections.Map"), _p.runMethod(false,"getTag"));Debug.locals.put("mDatosFiltro", _mdatosfiltro);Debug.locals.put("mDatosFiltro", _mdatosfiltro);
 BA.debugLineNum = 2439;BA.debugLine="Dim clviv As clvJAMTableCLVFiltroItemValue=clvFil";
Debug.JustUpdateDeviceLine();
_clviv = (__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(false,"_getvalue",(Object)(_np)));Debug.locals.put("clviv", _clviv);Debug.locals.put("clviv", _clviv);
 BA.debugLineNum = 2443;BA.debugLine="If Not(CheckCompatiblidadCampoFiltroConFiltrosOr(";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//if
this.state = 4;
if (parent.__c.runMethod(true,"Not",(Object)(__ref.runClassMethod (b4j.docU.jamtableclv.class, "_checkcompatiblidadcampofiltroconfiltrosor" /*RemoteObject*/ ,(Object)(BA.ObjectToString(_cbo.runMethod(false,"getValue"))),(Object)(_np)))).<Boolean>get().booleanValue()) { 
this.state = 3;
}if (true) break;

case 3:
//C
this.state = 4;
 BA.debugLineNum = 2444;BA.debugLine="Dim sbErr As StringBuilder";
Debug.JustUpdateDeviceLine();
_sberr = RemoteObject.createNew ("anywheresoftware.b4a.keywords.StringBuilderWrapper");Debug.locals.put("sbErr", _sberr);
 BA.debugLineNum = 2445;BA.debugLine="sbErr.Initialize";
Debug.JustUpdateDeviceLine();
_sberr.runVoidMethod ("Initialize");
 BA.debugLineNum = 2446;BA.debugLine="sbErr.Append(\"Sólo puede establecerse un filtro";
Debug.JustUpdateDeviceLine();
_sberr.runVoidMethod ("Append",(Object)(RemoteObject.createImmutable("Sólo puede establecerse un filtro con comparador tipo O, cuando tenemos únicamente 2 filtros,")));
 BA.debugLineNum = 2447;BA.debugLine="sbErr.Append(\" o bien cuando todos los filtros s";
Debug.JustUpdateDeviceLine();
_sberr.runMethod(false,"Append",(Object)(RemoteObject.createImmutable(" o bien cuando todos los filtros son relativos al mismo campo."))).runVoidMethod ("Append",(Object)(parent.__c.getField(true,"CRLF")));
 BA.debugLineNum = 2448;BA.debugLine="Dim msa As Object=xui.MsgboxAsync(sbErr.ToString";
Debug.JustUpdateDeviceLine();
_msa = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"MsgboxAsync",__ref.getField(false, "ba"),(Object)(_sberr.runMethod(true,"ToString")),(Object)(RemoteObject.createImmutable("Aviso")));Debug.locals.put("msa", _msa);Debug.locals.put("msa", _msa);
 BA.debugLineNum = 2449;BA.debugLine="Wait For (msa) Msgbox_Result";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","msgbox_result", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "cambiocampofiltro"), _msa);
this.state = 23;
return;
case 23:
//C
this.state = 4;
;
 BA.debugLineNum = 2450;BA.debugLine="cboCampoFiltroUserChange=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_cbocampofiltrouserchange" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 BA.debugLineNum = 2451;BA.debugLine="cbo.Value=Null";
Debug.JustUpdateDeviceLine();
_cbo.runMethod(false,"setValue",parent.__c.getField(false,"Null"));
 BA.debugLineNum = 2452;BA.debugLine="Return False";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(parent.__c.getField(true,"False")));return;};
 if (true) break;

case 4:
//C
this.state = 5;
;
 BA.debugLineNum = 2459;BA.debugLine="clviv.cbComparadorFiltro.Visible=False";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"cbComparadorFiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"False"));
 BA.debugLineNum = 2460;BA.debugLine="clviv.txtValorFiltro.Visible=False";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"txtValorFiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"False"));
 BA.debugLineNum = 2461;BA.debugLine="clviv.txtValorFiltro.Text=\"\"";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"txtValorFiltro" /*RemoteObject*/ ).runMethod(true,"setText",BA.ObjectToString(""));
 BA.debugLineNum = 2462;BA.debugLine="clviv.txtValorFiltro.editable=False";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"txtValorFiltro" /*RemoteObject*/ ).runMethod(true,"setEditable",parent.__c.getField(true,"False"));
 BA.debugLineNum = 2463;BA.debugLine="clviv.cboValorFiltro.Visible=False";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"cboValorFiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"False"));
 BA.debugLineNum = 2465;BA.debugLine="cboValorFiltroUserChange=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_cbovalorfiltrouserchange" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 BA.debugLineNum = 2466;BA.debugLine="wait for (cboBorrarItems(clviv.cboValorFiltro)) c";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "cambiocampofiltro"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_cboborraritems" /*RemoteObject*/ ,(Object)(_clviv.getField(false,"cboValorFiltro" /*RemoteObject*/ ))));
this.state = 24;
return;
case 24:
//C
this.state = 5;
_robj = (RemoteObject) result.getArrayElement(false,RemoteObject.createImmutable(1));Debug.locals.put("rObj", _robj);
;
 BA.debugLineNum = 2467;BA.debugLine="clviv.btnSelFechaFiltro.Visible=False";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"btnSelFechaFiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"False"));
 BA.debugLineNum = 2468;BA.debugLine="clviv.txtValorFechaFiltro.Visible=False";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"txtValorFechaFiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"False"));
 BA.debugLineNum = 2469;BA.debugLine="clviv.txtValorFechaFiltro.text=\"\"";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"txtValorFechaFiltro" /*RemoteObject*/ ).runMethod(true,"setText",BA.ObjectToString(""));
 BA.debugLineNum = 2470;BA.debugLine="clviv.txtValorFechaFiltro.editable=False";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"txtValorFechaFiltro" /*RemoteObject*/ ).runMethod(true,"setEditable",parent.__c.getField(true,"False"));
 BA.debugLineNum = 2471;BA.debugLine="clviv.chkValorFiltro.Visible=False";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"chkValorFiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"False"));
 BA.debugLineNum = 2473;BA.debugLine="cbComparadorFiltroUserChange=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_cbcomparadorfiltrouserchange" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 BA.debugLineNum = 2475;BA.debugLine="wait for (cbBorrarItems(clviv.cbComparadorFiltro)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "cambiocampofiltro"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_cbborraritems" /*RemoteObject*/ ,(Object)(_clviv.getField(false,"cbComparadorFiltro" /*RemoteObject*/ ))));
this.state = 25;
return;
case 25:
//C
this.state = 5;
_robj = (RemoteObject) result.getArrayElement(false,RemoteObject.createImmutable(1));Debug.locals.put("rObj", _robj);
;
 BA.debugLineNum = 2478;BA.debugLine="Dim c As CampoOrigenDatosJamTableCLV=GetDatosCamp";
Debug.JustUpdateDeviceLine();
_c = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_getdatoscampoorigendatosjamtableclvaliascampo" /*RemoteObject*/ ,(Object)(BA.ObjectToString(_cbo.runMethod(false,"getValue"))));Debug.locals.put("c", _c);Debug.locals.put("c", _c);
 BA.debugLineNum = 2479;BA.debugLine="Log(\"***CampoOrigenDatosJamTableCLV cboCampo \" &";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9164364332",RemoteObject.concat(RemoteObject.createImmutable("***CampoOrigenDatosJamTableCLV cboCampo "),_c),0);
 BA.debugLineNum = 2481;BA.debugLine="If c.AliasCampo<>cbo.Value Then Return False";
Debug.JustUpdateDeviceLine();
if (true) break;

case 5:
//if
this.state = 10;
if (RemoteObject.solveBoolean("!",_c.getField(true,"AliasCampo" /*RemoteObject*/ ),BA.ObjectToString(_cbo.runMethod(false,"getValue")))) { 
this.state = 7;
;}if (true) break;

case 7:
//C
this.state = 10;
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(parent.__c.getField(true,"False")));return;};
if (true) break;

case 10:
//C
this.state = 11;
;
 BA.debugLineNum = 2482;BA.debugLine="If c.Campo=\"\" Then Return False";
Debug.JustUpdateDeviceLine();
if (true) break;

case 11:
//if
this.state = 16;
if (RemoteObject.solveBoolean("=",_c.getField(true,"Campo" /*RemoteObject*/ ),BA.ObjectToString(""))) { 
this.state = 13;
;}if (true) break;

case 13:
//C
this.state = 16;
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(parent.__c.getField(true,"False")));return;};
if (true) break;

case 16:
//C
this.state = 17;
;
 BA.debugLineNum = 2486;BA.debugLine="clviv.cbComparadorFiltro.Visible=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"cbComparadorFiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"True"));
 BA.debugLineNum = 2487;BA.debugLine="Dim TipoControlF As String=c.TipoControlFiltro";
Debug.JustUpdateDeviceLine();
_tipocontrolf = _c.getField(true,"TipoControlFiltro" /*RemoteObject*/ );Debug.locals.put("TipoControlF", _tipocontrolf);Debug.locals.put("TipoControlF", _tipocontrolf);
 BA.debugLineNum = 2522;BA.debugLine="Dim OperadorFiltro As String=mDatosFiltro.Get(\"Op";
Debug.JustUpdateDeviceLine();
_operadorfiltro = BA.ObjectToString(_mdatosfiltro.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("OperadorFiltro")))));Debug.locals.put("OperadorFiltro", _operadorfiltro);Debug.locals.put("OperadorFiltro", _operadorfiltro);
 BA.debugLineNum = 2552;BA.debugLine="If TipoControlF=TipoControlFiltro_CheckBox Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 17:
//if
this.state = 22;
if (RemoteObject.solveBoolean("=",_tipocontrolf,__ref.getField(true,"_tipocontrolfiltro_checkbox" /*RemoteObject*/ ))) { 
this.state = 19;
}else {
this.state = 21;
}if (true) break;

case 19:
//C
this.state = 22;
 BA.debugLineNum = 2561;BA.debugLine="Dim ComparadorFiltro As String=lstComparadoresBo";
Debug.JustUpdateDeviceLine();
_comparadorfiltro = BA.ObjectToString(__ref.getField(false,"_lstcomparadoresbooleanos" /*RemoteObject*/ ).runMethod(false,"Get",(Object)(BA.numberCast(int.class, 0))));Debug.locals.put("ComparadorFiltro", _comparadorfiltro);Debug.locals.put("ComparadorFiltro", _comparadorfiltro);
 BA.debugLineNum = 2563;BA.debugLine="cbComparadorFiltroUserChange=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_cbcomparadorfiltrouserchange" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 BA.debugLineNum = 2565;BA.debugLine="clviv.cbComparadorFiltro.SelectedIndex=clviv.cbC";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"cbComparadorFiltro" /*RemoteObject*/ ).runMethod(true,"setSelectedIndex",_clviv.getField(false,"cbComparadorFiltro" /*RemoteObject*/ ).runMethod(false,"getItems").runMethod(true,"IndexOf",(Object)((_comparadorfiltro))));
 BA.debugLineNum = 2566;BA.debugLine="chkValorFiltroUserChange=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_chkvalorfiltrouserchange" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 BA.debugLineNum = 2567;BA.debugLine="wait for(CambioChkValorFiltro(clviv.chkValorFilt";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "cambiocampofiltro"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_cambiochkvalorfiltro" /*RemoteObject*/ ,(Object)(_clviv.getField(false,"chkValorFiltro" /*RemoteObject*/ ))));
this.state = 26;
return;
case 26:
//C
this.state = 22;
_robject = (RemoteObject) result.getArrayElement(false,RemoteObject.createImmutable(1));Debug.locals.put("rObject", _robject);
;
 BA.debugLineNum = 2568;BA.debugLine="clviv.chkValorFiltro.Visible=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"chkValorFiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"True"));
 BA.debugLineNum = 2569;BA.debugLine="clviv.chkValorFiltro.Enabled=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"chkValorFiltro" /*RemoteObject*/ ).runMethod(true,"setEnabled",parent.__c.getField(true,"True"));
 BA.debugLineNum = 2570;BA.debugLine="p.Tag=DatosFiltro(True,OperadorFiltro,c,Comparad";
Debug.JustUpdateDeviceLine();
_p.runMethod(false,"setTag",(__ref.runClassMethod (b4j.docU.jamtableclv.class, "_datosfiltro" /*RemoteObject*/ ,(Object)(parent.__c.getField(true,"True")),(Object)(_operadorfiltro),(Object)(_c),(Object)(_comparadorfiltro),(Object)(RemoteObject.createImmutable((0)))).getObject()));
 if (true) break;

case 21:
//C
this.state = 22;
 BA.debugLineNum = 2572;BA.debugLine="p.Tag=DatosFiltro(False,OperadorFiltro,c,Null,Nu";
Debug.JustUpdateDeviceLine();
_p.runMethod(false,"setTag",(__ref.runClassMethod (b4j.docU.jamtableclv.class, "_datosfiltro" /*RemoteObject*/ ,(Object)(parent.__c.getField(true,"False")),(Object)(_operadorfiltro),(Object)(_c),(Object)(BA.ObjectToString(parent.__c.getField(false,"Null"))),(Object)(parent.__c.getField(false,"Null"))).getObject()));
 if (true) break;

case 22:
//C
this.state = -1;
;
 BA.debugLineNum = 2575;BA.debugLine="Log(\"Datos filtro despues de cambio en cboCampo \"";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9164364428",RemoteObject.concat(RemoteObject.createImmutable("Datos filtro despues de cambio en cboCampo "),_p.runMethod(false,"getTag")),0);
 BA.debugLineNum = 2576;BA.debugLine="wait for(ActualizarFiltro) complete (rObj As Obje";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "cambiocampofiltro"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_actualizarfiltro" /*RemoteObject*/ ));
this.state = 27;
return;
case 27:
//C
this.state = -1;
_robj = (RemoteObject) result.getArrayElement(false,RemoteObject.createImmutable(1));Debug.locals.put("rObj", _robj);
;
 BA.debugLineNum = 2577;BA.debugLine="Return True";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(parent.__c.getField(true,"True")));return;};
 BA.debugLineNum = 2578;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static RemoteObject  _cambiocbovalorfiltro(RemoteObject __ref,RemoteObject _cbo,RemoteObject _value) throws Exception{
try {
		Debug.PushSubsStack("CambioCboValorFiltro (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,2996);
if (RapidSub.canDelegate("cambiocbovalorfiltro")) { return __ref.runUserSub(false, "jamtableclv","cambiocbovalorfiltro", __ref, _cbo, _value);}
ResumableSub_CambioCboValorFiltro rsub = new ResumableSub_CambioCboValorFiltro(null,__ref,_cbo,_value);
rsub.remoteResumableSub = anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSubForFilter();
rsub.resume(null, null);
return RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.keywords.Common.ResumableSubWrapper"), rsub.remoteResumableSub);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_CambioCboValorFiltro extends BA.ResumableSub {
public ResumableSub_CambioCboValorFiltro(b4j.docU.jamtableclv parent,RemoteObject __ref,RemoteObject _cbo,RemoteObject _value) {
this.parent = parent;
this.__ref = __ref;
this._cbo = _cbo;
this._value = _value;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _cbo;
RemoteObject _value;
RemoteObject _np = RemoteObject.createImmutable(0);
RemoteObject _p = RemoteObject.declareNull("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
RemoteObject _mdatosfiltro = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
RemoteObject _c = RemoteObject.declareNull("b4j.docU.jamtableclv._campoorigendatosjamtableclv");
RemoteObject _operadorfiltro = RemoteObject.createImmutable("");
RemoteObject _comparador = RemoteObject.createImmutable("");
RemoteObject _robj = RemoteObject.declareNull("Object");

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("CambioCboValorFiltro (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,2996);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
{
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,RemoteObject.createImmutable(null));return;}
case 0:
//C
this.state = -1;
Debug.locals.put("_ref", __ref);
Debug.locals.put("cbo", _cbo);
Debug.locals.put("Value", _value);
 BA.debugLineNum = 2997;BA.debugLine="Dim nP As Int=clvFiltros.GetItemFromView(cbo)";
Debug.JustUpdateDeviceLine();
_np = __ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(true,"_getitemfromview",RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper"), _cbo.getObject()));Debug.locals.put("nP", _np);Debug.locals.put("nP", _np);
 BA.debugLineNum = 2998;BA.debugLine="Dim p As Pane=clvFiltros.GetPanel(nP)";
Debug.JustUpdateDeviceLine();
_p = RemoteObject.createNew ("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
_p = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper"), __ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(false,"_getpanel",(Object)(_np)).getObject());Debug.locals.put("p", _p);Debug.locals.put("p", _p);
 BA.debugLineNum = 3000;BA.debugLine="Dim mDatosFiltro As Map=p.Tag";
Debug.JustUpdateDeviceLine();
_mdatosfiltro = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");
_mdatosfiltro = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.collections.Map"), _p.runMethod(false,"getTag"));Debug.locals.put("mDatosFiltro", _mdatosfiltro);Debug.locals.put("mDatosFiltro", _mdatosfiltro);
 BA.debugLineNum = 3007;BA.debugLine="Dim c As CampoOrigenDatosJamTableCLV=mDatosFiltro";
Debug.JustUpdateDeviceLine();
_c = (_mdatosfiltro.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("DatosCampoFiltro")))));Debug.locals.put("c", _c);Debug.locals.put("c", _c);
 BA.debugLineNum = 3009;BA.debugLine="Dim OperadorFiltro As String=mDatosFiltro.Get(\"Op";
Debug.JustUpdateDeviceLine();
_operadorfiltro = BA.ObjectToString(_mdatosfiltro.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("OperadorFiltro")))));Debug.locals.put("OperadorFiltro", _operadorfiltro);Debug.locals.put("OperadorFiltro", _operadorfiltro);
 BA.debugLineNum = 3011;BA.debugLine="Dim Comparador As String=mDatosFiltro.Get(\"Compar";
Debug.JustUpdateDeviceLine();
_comparador = BA.ObjectToString(_mdatosfiltro.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("ComparadorFiltro")))));Debug.locals.put("Comparador", _comparador);Debug.locals.put("Comparador", _comparador);
 BA.debugLineNum = 3012;BA.debugLine="p.Tag=DatosFiltro(True,OperadorFiltro,c,Comparado";
Debug.JustUpdateDeviceLine();
_p.runMethod(false,"setTag",(__ref.runClassMethod (b4j.docU.jamtableclv.class, "_datosfiltro" /*RemoteObject*/ ,(Object)(parent.__c.getField(true,"True")),(Object)(_operadorfiltro),(Object)(_c),(Object)(_comparador),(Object)(_value)).getObject()));
 BA.debugLineNum = 3013;BA.debugLine="wait for(ActualizarFiltro) complete (rObj As Obje";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "cambiocbovalorfiltro"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_actualizarfiltro" /*RemoteObject*/ ));
this.state = 1;
return;
case 1:
//C
this.state = -1;
_robj = (RemoteObject) result.getArrayElement(false,RemoteObject.createImmutable(1));Debug.locals.put("rObj", _robj);
;
 BA.debugLineNum = 3015;BA.debugLine="Return True";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(parent.__c.getField(true,"True")));return;};
 BA.debugLineNum = 3016;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static RemoteObject  _cambiochkvalorfiltro(RemoteObject __ref,RemoteObject _chk) throws Exception{
try {
		Debug.PushSubsStack("CambioChkValorFiltro (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,3117);
if (RapidSub.canDelegate("cambiochkvalorfiltro")) { return __ref.runUserSub(false, "jamtableclv","cambiochkvalorfiltro", __ref, _chk);}
ResumableSub_CambioChkValorFiltro rsub = new ResumableSub_CambioChkValorFiltro(null,__ref,_chk);
rsub.remoteResumableSub = anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSubForFilter();
rsub.resume(null, null);
return RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.keywords.Common.ResumableSubWrapper"), rsub.remoteResumableSub);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_CambioChkValorFiltro extends BA.ResumableSub {
public ResumableSub_CambioChkValorFiltro(b4j.docU.jamtableclv parent,RemoteObject __ref,RemoteObject _chk) {
this.parent = parent;
this.__ref = __ref;
this._chk = _chk;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _chk;
RemoteObject _np = RemoteObject.createImmutable(0);
RemoteObject _p = RemoteObject.declareNull("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
RemoteObject _mdatosfiltro = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
RemoteObject _c = RemoteObject.declareNull("b4j.docU.jamtableclv._campoorigendatosjamtableclv");
RemoteObject _operadorfiltro = RemoteObject.createImmutable("");
RemoteObject _comparador = RemoteObject.createImmutable("");
RemoteObject _valorchecked = RemoteObject.createImmutable(0);
RemoteObject _robj = RemoteObject.declareNull("Object");

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("CambioChkValorFiltro (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,3117);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
{
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,RemoteObject.createImmutable(null));return;}
case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
Debug.locals.put("chk", _chk);
 BA.debugLineNum = 3118;BA.debugLine="Dim nP As Int=clvFiltros.GetItemFromView(chk)";
Debug.JustUpdateDeviceLine();
_np = __ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(true,"_getitemfromview",RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper"), _chk.getObject()));Debug.locals.put("nP", _np);Debug.locals.put("nP", _np);
 BA.debugLineNum = 3119;BA.debugLine="Dim p As Pane=clvFiltros.GetPanel(nP)";
Debug.JustUpdateDeviceLine();
_p = RemoteObject.createNew ("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
_p = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper"), __ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(false,"_getpanel",(Object)(_np)).getObject());Debug.locals.put("p", _p);Debug.locals.put("p", _p);
 BA.debugLineNum = 3120;BA.debugLine="Dim mDatosFiltro As Map=p.Tag";
Debug.JustUpdateDeviceLine();
_mdatosfiltro = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");
_mdatosfiltro = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.collections.Map"), _p.runMethod(false,"getTag"));Debug.locals.put("mDatosFiltro", _mdatosfiltro);Debug.locals.put("mDatosFiltro", _mdatosfiltro);
 BA.debugLineNum = 3124;BA.debugLine="Dim c As CampoOrigenDatosJamTableCLV=mDatosFiltro";
Debug.JustUpdateDeviceLine();
_c = (_mdatosfiltro.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("DatosCampoFiltro")))));Debug.locals.put("c", _c);Debug.locals.put("c", _c);
 BA.debugLineNum = 3126;BA.debugLine="Dim OperadorFiltro As String=mDatosFiltro.Get(\"Op";
Debug.JustUpdateDeviceLine();
_operadorfiltro = BA.ObjectToString(_mdatosfiltro.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("OperadorFiltro")))));Debug.locals.put("OperadorFiltro", _operadorfiltro);Debug.locals.put("OperadorFiltro", _operadorfiltro);
 BA.debugLineNum = 3127;BA.debugLine="Dim Comparador As String=mDatosFiltro.Get(\"Compar";
Debug.JustUpdateDeviceLine();
_comparador = BA.ObjectToString(_mdatosfiltro.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("ComparadorFiltro")))));Debug.locals.put("Comparador", _comparador);Debug.locals.put("Comparador", _comparador);
 BA.debugLineNum = 3129;BA.debugLine="Dim ValorChecked As Int";
Debug.JustUpdateDeviceLine();
_valorchecked = RemoteObject.createImmutable(0);Debug.locals.put("ValorChecked", _valorchecked);
 BA.debugLineNum = 3130;BA.debugLine="If chk.Checked Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//if
this.state = 6;
if (_chk.runMethod(true,"getChecked").<Boolean>get().booleanValue()) { 
this.state = 3;
}else {
this.state = 5;
}if (true) break;

case 3:
//C
this.state = 6;
 BA.debugLineNum = 3131;BA.debugLine="ValorChecked=1";
Debug.JustUpdateDeviceLine();
_valorchecked = BA.numberCast(int.class, 1);Debug.locals.put("ValorChecked", _valorchecked);
 if (true) break;

case 5:
//C
this.state = 6;
 BA.debugLineNum = 3133;BA.debugLine="ValorChecked=0";
Debug.JustUpdateDeviceLine();
_valorchecked = BA.numberCast(int.class, 0);Debug.locals.put("ValorChecked", _valorchecked);
 if (true) break;

case 6:
//C
this.state = -1;
;
 BA.debugLineNum = 3135;BA.debugLine="mDatosFiltro.Put(\"ValorFiltro\",ValorChecked)";
Debug.JustUpdateDeviceLine();
_mdatosfiltro.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("ValorFiltro"))),(Object)((_valorchecked)));
 BA.debugLineNum = 3136;BA.debugLine="p.Tag=DatosFiltro(True,OperadorFiltro,c,Comparado";
Debug.JustUpdateDeviceLine();
_p.runMethod(false,"setTag",(__ref.runClassMethod (b4j.docU.jamtableclv.class, "_datosfiltro" /*RemoteObject*/ ,(Object)(parent.__c.getField(true,"True")),(Object)(_operadorfiltro),(Object)(_c),(Object)(_comparador),(Object)((_valorchecked))).getObject()));
 BA.debugLineNum = 3137;BA.debugLine="wait for(ActualizarFiltro) complete (rObj As Obje";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "cambiochkvalorfiltro"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_actualizarfiltro" /*RemoteObject*/ ));
this.state = 7;
return;
case 7:
//C
this.state = -1;
_robj = (RemoteObject) result.getArrayElement(false,RemoteObject.createImmutable(1));Debug.locals.put("rObj", _robj);
;
 BA.debugLineNum = 3139;BA.debugLine="Return Null";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,parent.__c.getField(false,"Null"));return;};
 BA.debugLineNum = 3140;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static RemoteObject  _cambiocomparadorfiltrochoicebox(RemoteObject __ref,RemoteObject _cb) throws Exception{
try {
		Debug.PushSubsStack("CambioComparadorFiltroChoiceBox (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,2745);
if (RapidSub.canDelegate("cambiocomparadorfiltrochoicebox")) { return __ref.runUserSub(false, "jamtableclv","cambiocomparadorfiltrochoicebox", __ref, _cb);}
ResumableSub_CambioComparadorFiltroChoiceBox rsub = new ResumableSub_CambioComparadorFiltroChoiceBox(null,__ref,_cb);
rsub.remoteResumableSub = anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSubForFilter();
rsub.resume(null, null);
return RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.keywords.Common.ResumableSubWrapper"), rsub.remoteResumableSub);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_CambioComparadorFiltroChoiceBox extends BA.ResumableSub {
public ResumableSub_CambioComparadorFiltroChoiceBox(b4j.docU.jamtableclv parent,RemoteObject __ref,RemoteObject _cb) {
this.parent = parent;
this.__ref = __ref;
this._cb = _cb;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _cb;
RemoteObject _np = RemoteObject.createImmutable(0);
RemoteObject _p = RemoteObject.declareNull("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
RemoteObject _mdatosfiltro = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
RemoteObject _clviv = RemoteObject.declareNull("b4j.docU.jamtableclv._clvjamtableclvfiltroitemvalue");
RemoteObject _c = RemoteObject.declareNull("b4j.docU.jamtableclv._campoorigendatosjamtableclv");
RemoteObject _robj = RemoteObject.declareNull("Object");

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("CambioComparadorFiltroChoiceBox (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,2745);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
{
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,RemoteObject.createImmutable(null));return;}
case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
Debug.locals.put("cb", _cb);
 BA.debugLineNum = 2746;BA.debugLine="Dim nP As Int=clvFiltros.GetItemFromView(cb)";
Debug.JustUpdateDeviceLine();
_np = __ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(true,"_getitemfromview",RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper"), _cb.getObject()));Debug.locals.put("nP", _np);Debug.locals.put("nP", _np);
 BA.debugLineNum = 2747;BA.debugLine="Dim p As Pane=clvFiltros.GetPanel(nP)";
Debug.JustUpdateDeviceLine();
_p = RemoteObject.createNew ("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
_p = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper"), __ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(false,"_getpanel",(Object)(_np)).getObject());Debug.locals.put("p", _p);Debug.locals.put("p", _p);
 BA.debugLineNum = 2748;BA.debugLine="Dim mDatosFiltro As Map=p.Tag";
Debug.JustUpdateDeviceLine();
_mdatosfiltro = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");
_mdatosfiltro = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.collections.Map"), _p.runMethod(false,"getTag"));Debug.locals.put("mDatosFiltro", _mdatosfiltro);Debug.locals.put("mDatosFiltro", _mdatosfiltro);
 BA.debugLineNum = 2750;BA.debugLine="Dim clviv As clvJAMTableCLVFiltroItemValue=clvFil";
Debug.JustUpdateDeviceLine();
_clviv = (__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(false,"_getvalue",(Object)(_np)));Debug.locals.put("clviv", _clviv);Debug.locals.put("clviv", _clviv);
 BA.debugLineNum = 2752;BA.debugLine="Dim c As CampoOrigenDatosJamTableCLV=mDatosFiltro";
Debug.JustUpdateDeviceLine();
_c = (_mdatosfiltro.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("DatosCampoFiltro")))));Debug.locals.put("c", _c);Debug.locals.put("c", _c);
 BA.debugLineNum = 2754;BA.debugLine="If c.EsFecha Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//if
this.state = 14;
if (_c.getField(true,"EsFecha" /*RemoteObject*/ ).<Boolean>get().booleanValue()) { 
this.state = 3;
}else {
this.state = 5;
}if (true) break;

case 3:
//C
this.state = 14;
 BA.debugLineNum = 2755;BA.debugLine="clviv.cboValorFiltro.Visible=False";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"cboValorFiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"False"));
 BA.debugLineNum = 2756;BA.debugLine="clviv.txtValorFechaFiltro.Visible=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"txtValorFechaFiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"True"));
 BA.debugLineNum = 2757;BA.debugLine="clviv.txtValorFechaFiltro.Editable=False";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"txtValorFechaFiltro" /*RemoteObject*/ ).runMethod(true,"setEditable",parent.__c.getField(true,"False"));
 BA.debugLineNum = 2759;BA.debugLine="clviv.btnSelFechaFiltro.Visible=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"btnSelFechaFiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"True"));
 BA.debugLineNum = 2760;BA.debugLine="clviv.chkValorFiltro.Visible=False";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"chkValorFiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"False"));
 if (true) break;

case 5:
//C
this.state = 6;
 BA.debugLineNum = 2762;BA.debugLine="clviv.btnSelFechaFiltro.Visible=False";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"btnSelFechaFiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"False"));
 BA.debugLineNum = 2763;BA.debugLine="Select True";
Debug.JustUpdateDeviceLine();
if (true) break;

case 6:
//select
this.state = 13;
switch (BA.switchObjectToInt(parent.__c.getField(true,"True"),BA.ObjectToBoolean(RemoteObject.solveBoolean("=",_c.getField(true,"TipoControlFiltro" /*RemoteObject*/ ),__ref.getField(true,"_tipocontrolfiltro_combobox" /*RemoteObject*/ ))),BA.ObjectToBoolean(RemoteObject.solveBoolean("=",_c.getField(true,"TipoControlFiltro" /*RemoteObject*/ ),__ref.getField(true,"_tipocontrolfiltro_textfield" /*RemoteObject*/ ))),BA.ObjectToBoolean(RemoteObject.solveBoolean("=",_c.getField(true,"TipoControlFiltro" /*RemoteObject*/ ),__ref.getField(true,"_tipocontrolfiltro_checkbox" /*RemoteObject*/ ))))) {
case 0: {
this.state = 8;
if (true) break;
}
case 1: {
this.state = 10;
if (true) break;
}
case 2: {
this.state = 12;
if (true) break;
}
}
if (true) break;

case 8:
//C
this.state = 13;
 BA.debugLineNum = 2765;BA.debugLine="clviv.txtValorFiltro.Visible=False";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"txtValorFiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"False"));
 BA.debugLineNum = 2766;BA.debugLine="clviv.txtValorFechaFiltro.Visible=False";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"txtValorFechaFiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"False"));
 BA.debugLineNum = 2768;BA.debugLine="clviv.cboValorFiltro.Visible=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"cboValorFiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"True"));
 BA.debugLineNum = 2769;BA.debugLine="clviv.cboValorFiltro.Enabled=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"cboValorFiltro" /*RemoteObject*/ ).runMethod(true,"setEnabled",parent.__c.getField(true,"True"));
 BA.debugLineNum = 2770;BA.debugLine="clviv.chkValorFiltro.Visible=False";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"chkValorFiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"False"));
 BA.debugLineNum = 2771;BA.debugLine="clviv.chkValorFiltro.Enabled=False";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"chkValorFiltro" /*RemoteObject*/ ).runMethod(true,"setEnabled",parent.__c.getField(true,"False"));
 if (true) break;

case 10:
//C
this.state = 13;
 BA.debugLineNum = 2778;BA.debugLine="clviv.txtValorFiltro.Enabled=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"txtValorFiltro" /*RemoteObject*/ ).runMethod(true,"setEnabled",parent.__c.getField(true,"True"));
 BA.debugLineNum = 2779;BA.debugLine="clviv.txtValorFiltro.Visible=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"txtValorFiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"True"));
 BA.debugLineNum = 2780;BA.debugLine="clviv.cboValorFiltro.Visible=False";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"cboValorFiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"False"));
 BA.debugLineNum = 2781;BA.debugLine="clviv.chkValorFiltro.Visible=False";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"chkValorFiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"False"));
 BA.debugLineNum = 2782;BA.debugLine="clviv.chkValorFiltro.Enabled=False";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"chkValorFiltro" /*RemoteObject*/ ).runMethod(true,"setEnabled",parent.__c.getField(true,"False"));
 BA.debugLineNum = 2783;BA.debugLine="clviv.txtValorFechaFiltro.Enabled=False";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"txtValorFechaFiltro" /*RemoteObject*/ ).runMethod(true,"setEnabled",parent.__c.getField(true,"False"));
 BA.debugLineNum = 2784;BA.debugLine="clviv.txtValorFechaFiltro.Visible=False";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"txtValorFechaFiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"False"));
 if (true) break;

case 12:
//C
this.state = 13;
 BA.debugLineNum = 2787;BA.debugLine="clviv.chkValorFiltro.Visible=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"chkValorFiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",parent.__c.getField(true,"True"));
 BA.debugLineNum = 2788;BA.debugLine="clviv.chkValorFiltro.Enabled=True";
Debug.JustUpdateDeviceLine();
_clviv.getField(false,"chkValorFiltro" /*RemoteObject*/ ).runMethod(true,"setEnabled",parent.__c.getField(true,"True"));
 if (true) break;

case 13:
//C
this.state = 14;
;
 if (true) break;

case 14:
//C
this.state = -1;
;
 BA.debugLineNum = 2803;BA.debugLine="mDatosFiltro.Put(\"ComparadorFiltro\",cb.items.get(";
Debug.JustUpdateDeviceLine();
_mdatosfiltro.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("ComparadorFiltro"))),(Object)(_cb.runMethod(false,"getItems").runMethod(false,"Get",(Object)(_cb.runMethod(true,"getSelectedIndex")))));
 BA.debugLineNum = 2804;BA.debugLine="p.Tag=mDatosFiltro";
Debug.JustUpdateDeviceLine();
_p.runMethod(false,"setTag",(_mdatosfiltro.getObject()));
 BA.debugLineNum = 2805;BA.debugLine="wait for(ActualizarFiltro) complete (rObj As Obje";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "cambiocomparadorfiltrochoicebox"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_actualizarfiltro" /*RemoteObject*/ ));
this.state = 15;
return;
case 15:
//C
this.state = -1;
_robj = (RemoteObject) result.getArrayElement(false,RemoteObject.createImmutable(1));Debug.locals.put("rObj", _robj);
;
 BA.debugLineNum = 2806;BA.debugLine="Return Null";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,parent.__c.getField(false,"Null"));return;};
 BA.debugLineNum = 2807;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static RemoteObject  _cambiotxtvalorfiltro(RemoteObject __ref,RemoteObject _tf) throws Exception{
try {
		Debug.PushSubsStack("CambioTxtValorFiltro (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,3050);
if (RapidSub.canDelegate("cambiotxtvalorfiltro")) { return __ref.runUserSub(false, "jamtableclv","cambiotxtvalorfiltro", __ref, _tf);}
ResumableSub_CambioTxtValorFiltro rsub = new ResumableSub_CambioTxtValorFiltro(null,__ref,_tf);
rsub.remoteResumableSub = anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSubForFilter();
rsub.resume(null, null);
return RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.keywords.Common.ResumableSubWrapper"), rsub.remoteResumableSub);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_CambioTxtValorFiltro extends BA.ResumableSub {
public ResumableSub_CambioTxtValorFiltro(b4j.docU.jamtableclv parent,RemoteObject __ref,RemoteObject _tf) {
this.parent = parent;
this.__ref = __ref;
this._tf = _tf;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _tf;
RemoteObject _np = RemoteObject.createImmutable(0);
RemoteObject _p = RemoteObject.declareNull("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
RemoteObject _mdatosfiltro = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
RemoteObject _c = RemoteObject.declareNull("b4j.docU.jamtableclv._campoorigendatosjamtableclv");
RemoteObject _operadorfiltro = RemoteObject.createImmutable("");
RemoteObject _comparador = RemoteObject.createImmutable("");
RemoteObject _robj = RemoteObject.declareNull("Object");

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("CambioTxtValorFiltro (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,3050);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
{
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,RemoteObject.createImmutable(null));return;}
case 0:
//C
this.state = -1;
Debug.locals.put("_ref", __ref);
Debug.locals.put("tF", _tf);
 BA.debugLineNum = 3051;BA.debugLine="Dim nP As Int=clvFiltros.GetItemFromView(tF)";
Debug.JustUpdateDeviceLine();
_np = __ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(true,"_getitemfromview",RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper"), _tf.getObject()));Debug.locals.put("nP", _np);Debug.locals.put("nP", _np);
 BA.debugLineNum = 3052;BA.debugLine="Dim p As Pane=clvFiltros.GetPanel(nP)";
Debug.JustUpdateDeviceLine();
_p = RemoteObject.createNew ("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
_p = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper"), __ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(false,"_getpanel",(Object)(_np)).getObject());Debug.locals.put("p", _p);Debug.locals.put("p", _p);
 BA.debugLineNum = 3055;BA.debugLine="Dim mDatosFiltro As Map=p.Tag";
Debug.JustUpdateDeviceLine();
_mdatosfiltro = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");
_mdatosfiltro = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.collections.Map"), _p.runMethod(false,"getTag"));Debug.locals.put("mDatosFiltro", _mdatosfiltro);Debug.locals.put("mDatosFiltro", _mdatosfiltro);
 BA.debugLineNum = 3065;BA.debugLine="Dim c As CampoOrigenDatosJamTableCLV=mDatosFiltro";
Debug.JustUpdateDeviceLine();
_c = (_mdatosfiltro.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("DatosCampoFiltro")))));Debug.locals.put("c", _c);Debug.locals.put("c", _c);
 BA.debugLineNum = 3067;BA.debugLine="Dim OperadorFiltro As String=mDatosFiltro.Get(\"Op";
Debug.JustUpdateDeviceLine();
_operadorfiltro = BA.ObjectToString(_mdatosfiltro.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("OperadorFiltro")))));Debug.locals.put("OperadorFiltro", _operadorfiltro);Debug.locals.put("OperadorFiltro", _operadorfiltro);
 BA.debugLineNum = 3069;BA.debugLine="Dim Comparador As String=mDatosFiltro.Get(\"Compar";
Debug.JustUpdateDeviceLine();
_comparador = BA.ObjectToString(_mdatosfiltro.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("ComparadorFiltro")))));Debug.locals.put("Comparador", _comparador);Debug.locals.put("Comparador", _comparador);
 BA.debugLineNum = 3070;BA.debugLine="p.Tag=DatosFiltro(True,OperadorFiltro,c,Comparado";
Debug.JustUpdateDeviceLine();
_p.runMethod(false,"setTag",(__ref.runClassMethod (b4j.docU.jamtableclv.class, "_datosfiltro" /*RemoteObject*/ ,(Object)(parent.__c.getField(true,"True")),(Object)(_operadorfiltro),(Object)(_c),(Object)(_comparador),(Object)((_tf.runMethod(true,"getText")))).getObject()));
 BA.debugLineNum = 3071;BA.debugLine="ActualizarFiltroTextFieldAction=True";
Debug.JustUpdateDeviceLine();
__ref.setField ("_actualizarfiltrotextfieldaction" /*RemoteObject*/ ,parent.__c.getField(true,"True"));
 BA.debugLineNum = 3072;BA.debugLine="wait for(ActualizarFiltro) complete (rObj As Obje";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "cambiotxtvalorfiltro"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_actualizarfiltro" /*RemoteObject*/ ));
this.state = 1;
return;
case 1:
//C
this.state = -1;
_robj = (RemoteObject) result.getArrayElement(false,RemoteObject.createImmutable(1));Debug.locals.put("rObj", _robj);
;
 BA.debugLineNum = 3073;BA.debugLine="Return True";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(parent.__c.getField(true,"True")));return;};
 BA.debugLineNum = 3074;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static RemoteObject  _cargaitemscbocamposfiltro(RemoteObject __ref,RemoteObject _cbo) throws Exception{
try {
		Debug.PushSubsStack("CargaItemsCboCamposFiltro (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,3295);
if (RapidSub.canDelegate("cargaitemscbocamposfiltro")) { return __ref.runUserSub(false, "jamtableclv","cargaitemscbocamposfiltro", __ref, _cbo);}
ResumableSub_CargaItemsCboCamposFiltro rsub = new ResumableSub_CargaItemsCboCamposFiltro(null,__ref,_cbo);
rsub.remoteResumableSub = anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSubForFilter();
rsub.resume(null, null);
return RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.keywords.Common.ResumableSubWrapper"), rsub.remoteResumableSub);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_CargaItemsCboCamposFiltro extends BA.ResumableSub {
public ResumableSub_CargaItemsCboCamposFiltro(b4j.docU.jamtableclv parent,RemoteObject __ref,RemoteObject _cbo) {
this.parent = parent;
this.__ref = __ref;
this._cbo = _cbo;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _cbo;
RemoteObject _scampoant = RemoteObject.createImmutable("");
RemoteObject _lstaliascamposcontrolfiltro = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.List");
int _i = 0;
RemoteObject _c = RemoteObject.declareNull("b4j.docU.jamtableclv._campoorigendatosjamtableclv");
int step7;
int limit7;

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("CargaItemsCboCamposFiltro (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,3295);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
{
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,RemoteObject.createImmutable(null));return;}
case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
Debug.locals.put("cbo", _cbo);
 BA.debugLineNum = 3296;BA.debugLine="Dim sCampoAnt As String=cbo.Value";
Debug.JustUpdateDeviceLine();
_scampoant = BA.ObjectToString(_cbo.runMethod(false,"getValue"));Debug.locals.put("sCampoAnt", _scampoant);Debug.locals.put("sCampoAnt", _scampoant);
 BA.debugLineNum = 3297;BA.debugLine="cbo.Items.Clear";
Debug.JustUpdateDeviceLine();
_cbo.runMethod(false,"getItems").runVoidMethod ("Clear");
 BA.debugLineNum = 3298;BA.debugLine="If mLstCamposOrigenDatos.IsInitialized=False Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//if
this.state = 6;
if (RemoteObject.solveBoolean("=",__ref.getField(false,"_mlstcamposorigendatos" /*RemoteObject*/ ).runMethod(true,"IsInitialized"),parent.__c.getField(true,"False"))) { 
this.state = 3;
;}if (true) break;

case 3:
//C
this.state = 6;
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,parent.__c.getField(false,"Null"));return;};
if (true) break;

case 6:
//C
this.state = 7;
;
 BA.debugLineNum = 3300;BA.debugLine="Dim lstAliasCamposControlFiltro As List";
Debug.JustUpdateDeviceLine();
_lstaliascamposcontrolfiltro = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");Debug.locals.put("lstAliasCamposControlFiltro", _lstaliascamposcontrolfiltro);
 BA.debugLineNum = 3301;BA.debugLine="lstAliasCamposControlFiltro.Initialize";
Debug.JustUpdateDeviceLine();
_lstaliascamposcontrolfiltro.runVoidMethod ("Initialize");
 BA.debugLineNum = 3302;BA.debugLine="If mLstCamposOrigenDatos.Size>0 Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 7:
//if
this.state = 18;
if (RemoteObject.solveBoolean(">",__ref.getField(false,"_mlstcamposorigendatos" /*RemoteObject*/ ).runMethod(true,"getSize"),BA.numberCast(double.class, 0))) { 
this.state = 9;
}if (true) break;

case 9:
//C
this.state = 10;
 BA.debugLineNum = 3303;BA.debugLine="For i=0 To mLstCamposOrigenDatos.Size-1";
Debug.JustUpdateDeviceLine();
if (true) break;

case 10:
//for
this.state = 17;
step7 = 1;
limit7 = RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_mlstcamposorigendatos" /*RemoteObject*/ ).runMethod(true,"getSize"),RemoteObject.createImmutable(1)}, "-",1, 1).<Integer>get().intValue();
_i = 0 ;
Debug.locals.put("i", _i);
this.state = 22;
if (true) break;

case 22:
//C
this.state = 17;
if ((step7 > 0 && _i <= limit7) || (step7 < 0 && _i >= limit7)) this.state = 12;
if (true) break;

case 23:
//C
this.state = 22;
_i = ((int)(0 + _i + step7)) ;
Debug.locals.put("i", _i);
if (true) break;

case 12:
//C
this.state = 13;
 BA.debugLineNum = 3305;BA.debugLine="Dim c As CampoOrigenDatosJamTableCLV=mLstCampos";
Debug.JustUpdateDeviceLine();
_c = (__ref.getField(false,"_mlstcamposorigendatos" /*RemoteObject*/ ).runMethod(false,"Get",(Object)(BA.numberCast(int.class, _i))));Debug.locals.put("c", _c);Debug.locals.put("c", _c);
 BA.debugLineNum = 3306;BA.debugLine="If c.TipoControlFiltro<>\"\" Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 13:
//if
this.state = 16;
if (RemoteObject.solveBoolean("!",_c.getField(true,"TipoControlFiltro" /*RemoteObject*/ ),BA.ObjectToString(""))) { 
this.state = 15;
}if (true) break;

case 15:
//C
this.state = 16;
 BA.debugLineNum = 3307;BA.debugLine="lstAliasCamposControlFiltro.Add(c.AliasCampo)";
Debug.JustUpdateDeviceLine();
_lstaliascamposcontrolfiltro.runVoidMethod ("Add",(Object)((_c.getField(true,"AliasCampo" /*RemoteObject*/ ))));
 if (true) break;

case 16:
//C
this.state = 23;
;
 if (true) break;
if (true) break;

case 17:
//C
this.state = 18;
Debug.locals.put("i", _i);
;
 BA.debugLineNum = 3310;BA.debugLine="lstAliasCamposControlFiltro.Sort(True)";
Debug.JustUpdateDeviceLine();
_lstaliascamposcontrolfiltro.runVoidMethod ("Sort",(Object)(parent.__c.getField(true,"True")));
 BA.debugLineNum = 3311;BA.debugLine="cbo.Items.AddAll(lstAliasCamposControlFiltro)";
Debug.JustUpdateDeviceLine();
_cbo.runMethod(false,"getItems").runVoidMethod ("AddAll",(Object)(_lstaliascamposcontrolfiltro));
 if (true) break;
;
 BA.debugLineNum = 3313;BA.debugLine="If FixNull(sCampoAnt)<>\"\" Then";
Debug.JustUpdateDeviceLine();

case 18:
//if
this.state = 21;
if (RemoteObject.solveBoolean("!",__ref.runClassMethod (b4j.docU.jamtableclv.class, "_fixnull" /*RemoteObject*/ ,(Object)((_scampoant))),BA.ObjectToString(""))) { 
this.state = 20;
}if (true) break;

case 20:
//C
this.state = 21;
 BA.debugLineNum = 3314;BA.debugLine="cbo.Value=sCampoAnt";
Debug.JustUpdateDeviceLine();
_cbo.runMethod(false,"setValue",(_scampoant));
 if (true) break;

case 21:
//C
this.state = -1;
;
 BA.debugLineNum = 3316;BA.debugLine="Return Null";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,parent.__c.getField(false,"Null"));return;};
 BA.debugLineNum = 3317;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static RemoteObject  _cargaritemscbcomparadorfiltro(RemoteObject __ref,RemoteObject _cbcomp,RemoteObject _csel,RemoteObject _clvivsel) throws Exception{
try {
		Debug.PushSubsStack("CargarItemsCbComparadorFiltro (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,3383);
if (RapidSub.canDelegate("cargaritemscbcomparadorfiltro")) { return __ref.runUserSub(false, "jamtableclv","cargaritemscbcomparadorfiltro", __ref, _cbcomp, _csel, _clvivsel);}
ResumableSub_CargarItemsCbComparadorFiltro rsub = new ResumableSub_CargarItemsCbComparadorFiltro(null,__ref,_cbcomp,_csel,_clvivsel);
rsub.remoteResumableSub = anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSubForFilter();
rsub.resume(null, null);
return RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.keywords.Common.ResumableSubWrapper"), rsub.remoteResumableSub);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_CargarItemsCbComparadorFiltro extends BA.ResumableSub {
public ResumableSub_CargarItemsCbComparadorFiltro(b4j.docU.jamtableclv parent,RemoteObject __ref,RemoteObject _cbcomp,RemoteObject _csel,RemoteObject _clvivsel) {
this.parent = parent;
this.__ref = __ref;
this._cbcomp = _cbcomp;
this._csel = _csel;
this._clvivsel = _clvivsel;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _cbcomp;
RemoteObject _csel;
RemoteObject _clvivsel;
RemoteObject _scomparadorant = RemoteObject.createImmutable("");
RemoteObject _tipocontrolf = RemoteObject.createImmutable("");

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("CargarItemsCbComparadorFiltro (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,3383);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
{
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,RemoteObject.createImmutable(null));return;}
case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
Debug.locals.put("cbComp", _cbcomp);
Debug.locals.put("cSel", _csel);
Debug.locals.put("clvivSel", _clvivsel);
 BA.debugLineNum = 3384;BA.debugLine="Dim sComparadorAnt As String";
Debug.JustUpdateDeviceLine();
_scomparadorant = RemoteObject.createImmutable("");Debug.locals.put("sComparadorAnt", _scomparadorant);
 BA.debugLineNum = 3385;BA.debugLine="If cbComp.SelectedIndex=-1 Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//if
this.state = 6;
if (RemoteObject.solveBoolean("=",_cbcomp.runMethod(true,"getSelectedIndex"),BA.numberCast(double.class, -(double) (0 + 1)))) { 
this.state = 3;
}else {
this.state = 5;
}if (true) break;

case 3:
//C
this.state = 6;
 BA.debugLineNum = 3386;BA.debugLine="sComparadorAnt=\"\"";
Debug.JustUpdateDeviceLine();
_scomparadorant = BA.ObjectToString("");Debug.locals.put("sComparadorAnt", _scomparadorant);
 if (true) break;

case 5:
//C
this.state = 6;
 BA.debugLineNum = 3388;BA.debugLine="sComparadorAnt=cbComp.items.get(cbComp.SelectedI";
Debug.JustUpdateDeviceLine();
_scomparadorant = BA.ObjectToString(_cbcomp.runMethod(false,"getItems").runMethod(false,"Get",(Object)(_cbcomp.runMethod(true,"getSelectedIndex"))));Debug.locals.put("sComparadorAnt", _scomparadorant);
 if (true) break;

case 6:
//C
this.state = 7;
;
 BA.debugLineNum = 3391;BA.debugLine="cbComp.Items.Clear";
Debug.JustUpdateDeviceLine();
_cbcomp.runMethod(false,"getItems").runVoidMethod ("Clear");
 BA.debugLineNum = 3393;BA.debugLine="Dim TipoControlF As String=cSel.TipoControlFiltro";
Debug.JustUpdateDeviceLine();
_tipocontrolf = _csel.getField(true,"TipoControlFiltro" /*RemoteObject*/ );Debug.locals.put("TipoControlF", _tipocontrolf);Debug.locals.put("TipoControlF", _tipocontrolf);
 BA.debugLineNum = 3396;BA.debugLine="cbComparadorFiltroUserChange=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_cbcomparadorfiltrouserchange" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 BA.debugLineNum = 3397;BA.debugLine="Select True";
Debug.JustUpdateDeviceLine();
if (true) break;

case 7:
//select
this.state = 30;
switch (BA.switchObjectToInt(parent.__c.getField(true,"True"),BA.ObjectToBoolean(RemoteObject.solveBoolean("=",_tipocontrolf,__ref.getField(true,"_tipocontrolfiltro_combobox" /*RemoteObject*/ ))),BA.ObjectToBoolean(RemoteObject.solveBoolean("=",_tipocontrolf,__ref.getField(true,"_tipocontrolfiltro_checkbox" /*RemoteObject*/ ))))) {
case 0: {
this.state = 9;
if (true) break;
}
case 1: {
this.state = 11;
if (true) break;
}
default: {
this.state = 13;
if (true) break;
}
}
if (true) break;

case 9:
//C
this.state = 30;
 BA.debugLineNum = 3400;BA.debugLine="cbComp.Items.AddAll(lstComparadoresCamposTipoCo";
Debug.JustUpdateDeviceLine();
_cbcomp.runMethod(false,"getItems").runVoidMethod ("AddAll",(Object)(__ref.getField(false,"_lstcomparadorescampostipocontrolcombobox" /*RemoteObject*/ )));
 if (true) break;

case 11:
//C
this.state = 30;
 BA.debugLineNum = 3403;BA.debugLine="cbComp.Items.AddAll(lstComparadoresBooleanos)";
Debug.JustUpdateDeviceLine();
_cbcomp.runMethod(false,"getItems").runVoidMethod ("AddAll",(Object)(__ref.getField(false,"_lstcomparadoresbooleanos" /*RemoteObject*/ )));
 if (true) break;

case 13:
//C
this.state = 14;
 BA.debugLineNum = 3405;BA.debugLine="If cSel.TipoDato=\"INTEGER\" Or cSel.TipoDato=\"RE";
Debug.JustUpdateDeviceLine();
if (true) break;

case 14:
//if
this.state = 29;
if (RemoteObject.solveBoolean("=",_csel.getField(true,"TipoDato" /*RemoteObject*/ ),BA.ObjectToString("INTEGER")) || RemoteObject.solveBoolean("=",_csel.getField(true,"TipoDato" /*RemoteObject*/ ),BA.ObjectToString("REAL"))) { 
this.state = 16;
}else {
this.state = 24;
}if (true) break;

case 16:
//C
this.state = 17;
 BA.debugLineNum = 3406;BA.debugLine="If cSel.EsFecha Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 17:
//if
this.state = 22;
if (_csel.getField(true,"EsFecha" /*RemoteObject*/ ).<Boolean>get().booleanValue()) { 
this.state = 19;
}else {
this.state = 21;
}if (true) break;

case 19:
//C
this.state = 22;
 BA.debugLineNum = 3411;BA.debugLine="clvivSel.txtValorFiltro.Editable=False";
Debug.JustUpdateDeviceLine();
_clvivsel.getField(false,"txtValorFiltro" /*RemoteObject*/ ).runMethod(true,"setEditable",parent.__c.getField(true,"False"));
 BA.debugLineNum = 3412;BA.debugLine="clvivSel.txtValorFechaFiltro.Editable=False";
Debug.JustUpdateDeviceLine();
_clvivsel.getField(false,"txtValorFechaFiltro" /*RemoteObject*/ ).runMethod(true,"setEditable",parent.__c.getField(true,"False"));
 BA.debugLineNum = 3413;BA.debugLine="cbComp.Items.AddAll(lstComparadoresFechas)";
Debug.JustUpdateDeviceLine();
_cbcomp.runMethod(false,"getItems").runVoidMethod ("AddAll",(Object)(__ref.getField(false,"_lstcomparadoresfechas" /*RemoteObject*/ )));
 if (true) break;

case 21:
//C
this.state = 22;
 BA.debugLineNum = 3416;BA.debugLine="clvivSel.txtValorFiltro.Editable=True";
Debug.JustUpdateDeviceLine();
_clvivsel.getField(false,"txtValorFiltro" /*RemoteObject*/ ).runMethod(true,"setEditable",parent.__c.getField(true,"True"));
 BA.debugLineNum = 3418;BA.debugLine="cbComp.Items.AddAll(lstComparadoresNumericos)";
Debug.JustUpdateDeviceLine();
_cbcomp.runMethod(false,"getItems").runVoidMethod ("AddAll",(Object)(__ref.getField(false,"_lstcomparadoresnumericos" /*RemoteObject*/ )));
 if (true) break;

case 22:
//C
this.state = 29;
;
 if (true) break;

case 24:
//C
this.state = 25;
 BA.debugLineNum = 3421;BA.debugLine="If cSel.TipoDato= \"TEXT\" Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 25:
//if
this.state = 28;
if (RemoteObject.solveBoolean("=",_csel.getField(true,"TipoDato" /*RemoteObject*/ ),BA.ObjectToString("TEXT"))) { 
this.state = 27;
}if (true) break;

case 27:
//C
this.state = 28;
 BA.debugLineNum = 3423;BA.debugLine="clvivSel.txtValorFiltro.Editable=True";
Debug.JustUpdateDeviceLine();
_clvivsel.getField(false,"txtValorFiltro" /*RemoteObject*/ ).runMethod(true,"setEditable",parent.__c.getField(true,"True"));
 BA.debugLineNum = 3425;BA.debugLine="cbComp.Items.AddAll(lstComparadoresTexto)";
Debug.JustUpdateDeviceLine();
_cbcomp.runMethod(false,"getItems").runVoidMethod ("AddAll",(Object)(__ref.getField(false,"_lstcomparadorestexto" /*RemoteObject*/ )));
 if (true) break;

case 28:
//C
this.state = 29;
;
 if (true) break;

case 29:
//C
this.state = 30;
;
 if (true) break;

case 30:
//C
this.state = 31;
;
 BA.debugLineNum = 3437;BA.debugLine="cbComp.Visible=True";
Debug.JustUpdateDeviceLine();
_cbcomp.runMethod(true,"setVisible",parent.__c.getField(true,"True"));
 BA.debugLineNum = 3438;BA.debugLine="If FixNull(sComparadorAnt)<>\"\" Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 31:
//if
this.state = 34;
if (RemoteObject.solveBoolean("!",__ref.runClassMethod (b4j.docU.jamtableclv.class, "_fixnull" /*RemoteObject*/ ,(Object)((_scomparadorant))),BA.ObjectToString(""))) { 
this.state = 33;
}if (true) break;

case 33:
//C
this.state = 34;
 BA.debugLineNum = 3440;BA.debugLine="cbComp.SelectedIndex=cbComp.items.IndexOf(sCompa";
Debug.JustUpdateDeviceLine();
_cbcomp.runMethod(true,"setSelectedIndex",_cbcomp.runMethod(false,"getItems").runMethod(true,"IndexOf",(Object)((_scomparadorant))));
 if (true) break;

case 34:
//C
this.state = -1;
;
 BA.debugLineNum = 3446;BA.debugLine="Return Null";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,parent.__c.getField(false,"Null"));return;};
 BA.debugLineNum = 3447;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static RemoteObject  _cargaritemscbovalorfiltro(RemoteObject __ref,RemoteObject _cbovf,RemoteObject _aliascampo) throws Exception{
try {
		Debug.PushSubsStack("CargarItemsCboValorFiltro (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,3320);
if (RapidSub.canDelegate("cargaritemscbovalorfiltro")) { return __ref.runUserSub(false, "jamtableclv","cargaritemscbovalorfiltro", __ref, _cbovf, _aliascampo);}
ResumableSub_CargarItemsCboValorFiltro rsub = new ResumableSub_CargarItemsCboValorFiltro(null,__ref,_cbovf,_aliascampo);
rsub.remoteResumableSub = anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSubForFilter();
rsub.resume(null, null);
return RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.keywords.Common.ResumableSubWrapper"), rsub.remoteResumableSub);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_CargarItemsCboValorFiltro extends BA.ResumableSub {
public ResumableSub_CargarItemsCboValorFiltro(b4j.docU.jamtableclv parent,RemoteObject __ref,RemoteObject _cbovf,RemoteObject _aliascampo) {
this.parent = parent;
this.__ref = __ref;
this._cbovf = _cbovf;
this._aliascampo = _aliascampo;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _cbovf;
RemoteObject _aliascampo;
RemoteObject _svalorfiltroant = RemoteObject.declareNull("Object");
RemoteObject _lstvf = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.List");
RemoteObject _lstvaloressincampoanalizado = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.List");
RemoteObject _args = null;
RemoteObject _swhere = RemoteObject.declareNull("anywheresoftware.b4a.keywords.StringBuilderWrapper");
RemoteObject _idxit = RemoteObject.createImmutable(0);
RemoteObject _scampofiltro = RemoteObject.createImmutable("");
RemoteObject _operadorfiltrosql = RemoteObject.createImmutable("");
RemoteObject _scomp = RemoteObject.createImmutable("");
RemoteObject _sobjval = RemoteObject.createImmutable("");
RemoteObject _idxargs = RemoteObject.createImmutable(0);
RemoteObject _sfv = RemoteObject.createImmutable("");
RemoteObject group13;
int index13;
int groupLen13;
RemoteObject group41;
int index41;
int groupLen41;

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("CargarItemsCboValorFiltro (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,3320);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
{
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,RemoteObject.createImmutable(null));return;}
case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
Debug.locals.put("cboVF", _cbovf);
Debug.locals.put("AliasCampo", _aliascampo);
 BA.debugLineNum = 3321;BA.debugLine="Log(\"CargarItemsCboValorFiltro , campo  \" & Alias";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9165871617",RemoteObject.concat(RemoteObject.createImmutable("CargarItemsCboValorFiltro , campo  "),_aliascampo),0);
 BA.debugLineNum = 3323;BA.debugLine="Dim sValorFiltroAnt As Object=cboVF.Value";
Debug.JustUpdateDeviceLine();
_svalorfiltroant = _cbovf.runMethod(false,"getValue");Debug.locals.put("sValorFiltroAnt", _svalorfiltroant);Debug.locals.put("sValorFiltroAnt", _svalorfiltroant);
 BA.debugLineNum = 3324;BA.debugLine="cboVF.Items.Clear";
Debug.JustUpdateDeviceLine();
_cbovf.runMethod(false,"getItems").runVoidMethod ("Clear");
 BA.debugLineNum = 3328;BA.debugLine="If lstValoresFiltros.Size=0 Then  ' si solo hay u";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//if
this.state = 37;
if (RemoteObject.solveBoolean("=",__ref.getField(false,"_lstvaloresfiltros" /*RemoteObject*/ ).runMethod(true,"getSize"),BA.numberCast(double.class, 0))) { 
this.state = 3;
}else {
this.state = 5;
}if (true) break;

case 3:
//C
this.state = 37;
 BA.debugLineNum = 3329;BA.debugLine="Dim lstVF As List=DBUtils.ExecuteList(mSQL,\"sele";
Debug.JustUpdateDeviceLine();
_lstvf = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");
_lstvf = parent._dbutils.runMethod(false,"_executelist" /*RemoteObject*/ ,(Object)(__ref.getField(false,"_msql" /*RemoteObject*/ )),(Object)(RemoteObject.concat(RemoteObject.createImmutable("select distinct ["),_aliascampo,RemoteObject.createImmutable("] from tblOrigenDatos order by ["),_aliascampo,RemoteObject.createImmutable("]"))),(Object)((parent.__c.getField(false,"Null"))),(Object)(BA.numberCast(int.class, 0)));Debug.locals.put("lstVF", _lstvf);Debug.locals.put("lstVF", _lstvf);
 if (true) break;

case 5:
//C
this.state = 6;
 BA.debugLineNum = 3332;BA.debugLine="Dim lstValoresSinCampoAnalizado As List";
Debug.JustUpdateDeviceLine();
_lstvaloressincampoanalizado = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");Debug.locals.put("lstValoresSinCampoAnalizado", _lstvaloressincampoanalizado);
 BA.debugLineNum = 3333;BA.debugLine="lstValoresSinCampoAnalizado.Initialize";
Debug.JustUpdateDeviceLine();
_lstvaloressincampoanalizado.runVoidMethod ("Initialize");
 BA.debugLineNum = 3334;BA.debugLine="Dim Args() As String";
Debug.JustUpdateDeviceLine();
_args = RemoteObject.createNewArray ("String", new int[] {0}, new Object[]{});Debug.locals.put("Args", _args);
 BA.debugLineNum = 3335;BA.debugLine="Dim sWhere As StringBuilder";
Debug.JustUpdateDeviceLine();
_swhere = RemoteObject.createNew ("anywheresoftware.b4a.keywords.StringBuilderWrapper");Debug.locals.put("sWhere", _swhere);
 BA.debugLineNum = 3336;BA.debugLine="sWhere.Initialize";
Debug.JustUpdateDeviceLine();
_swhere.runVoidMethod ("Initialize");
 BA.debugLineNum = 3337;BA.debugLine="Dim iDxIt As Int";
Debug.JustUpdateDeviceLine();
_idxit = RemoteObject.createImmutable(0);Debug.locals.put("iDxIt", _idxit);
 BA.debugLineNum = 3338;BA.debugLine="For Each sCampoFiltro As String In lstCamposFilt";
Debug.JustUpdateDeviceLine();
if (true) break;

case 6:
//for
this.state = 27;
group13 = __ref.getField(false,"_lstcamposfiltros" /*RemoteObject*/ );
index13 = 0;
groupLen13 = group13.runMethod(true,"getSize").<Integer>get();
Debug.locals.put("sCampoFiltro", _scampofiltro);
this.state = 42;
if (true) break;

case 42:
//C
this.state = 27;
if (index13 < groupLen13) {
this.state = 8;
_scampofiltro = BA.ObjectToString(group13.runMethod(false,"Get",index13));Debug.locals.put("sCampoFiltro", _scampofiltro);}
if (true) break;

case 43:
//C
this.state = 42;
index13++;
Debug.locals.put("sCampoFiltro", _scampofiltro);
if (true) break;

case 8:
//C
this.state = 9;
 BA.debugLineNum = 3339;BA.debugLine="If sCampoFiltro=AliasCampo Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 9:
//if
this.state = 26;
if (RemoteObject.solveBoolean("=",_scampofiltro,_aliascampo)) { 
this.state = 11;
}else {
this.state = 13;
}if (true) break;

case 11:
//C
this.state = 26;
 BA.debugLineNum = 3340;BA.debugLine="iDxIt=iDxIt+1";
Debug.JustUpdateDeviceLine();
_idxit = RemoteObject.solve(new RemoteObject[] {_idxit,RemoteObject.createImmutable(1)}, "+",1, 1);Debug.locals.put("iDxIt", _idxit);
 BA.debugLineNum = 3341;BA.debugLine="Continue";
Debug.JustUpdateDeviceLine();
this.state = 43;
if (true) break;;
 if (true) break;

case 13:
//C
this.state = 14;
 BA.debugLineNum = 3343;BA.debugLine="If sWhere.Length>0 Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 14:
//if
this.state = 25;
if (RemoteObject.solveBoolean(">",_swhere.runMethod(true,"getLength"),BA.numberCast(double.class, 0))) { 
this.state = 16;
}else {
this.state = 24;
}if (true) break;

case 16:
//C
this.state = 17;
 BA.debugLineNum = 3344;BA.debugLine="Dim OperadorFiltroSQL As String";
Debug.JustUpdateDeviceLine();
_operadorfiltrosql = RemoteObject.createImmutable("");Debug.locals.put("OperadorFiltroSQL", _operadorfiltrosql);
 BA.debugLineNum = 3345;BA.debugLine="If lstOperadoresFiltros.Get(iDxIt)=\"Y\" Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 17:
//if
this.state = 22;
if (RemoteObject.solveBoolean("=",__ref.getField(false,"_lstoperadoresfiltros" /*RemoteObject*/ ).runMethod(false,"Get",(Object)(_idxit)),RemoteObject.createImmutable(("Y")))) { 
this.state = 19;
}else {
this.state = 21;
}if (true) break;

case 19:
//C
this.state = 22;
 BA.debugLineNum = 3346;BA.debugLine="OperadorFiltroSQL=\"and\"";
Debug.JustUpdateDeviceLine();
_operadorfiltrosql = BA.ObjectToString("and");Debug.locals.put("OperadorFiltroSQL", _operadorfiltrosql);
 if (true) break;

case 21:
//C
this.state = 22;
 BA.debugLineNum = 3348;BA.debugLine="OperadorFiltroSQL=\"or\"";
Debug.JustUpdateDeviceLine();
_operadorfiltrosql = BA.ObjectToString("or");Debug.locals.put("OperadorFiltroSQL", _operadorfiltrosql);
 if (true) break;

case 22:
//C
this.state = 25;
;
 BA.debugLineNum = 3351;BA.debugLine="sWhere.Append(\" \").Append(OperadorFiltroSQL).";
Debug.JustUpdateDeviceLine();
_swhere.runMethod(false,"Append",(Object)(RemoteObject.createImmutable(" "))).runMethod(false,"Append",(Object)(_operadorfiltrosql)).runMethod(false,"Append",(Object)(RemoteObject.createImmutable(" "))).runMethod(false,"Append",(Object)(RemoteObject.createImmutable("["))).runMethod(false,"Append",(Object)(_scampofiltro)).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable("]")));
 if (true) break;

case 24:
//C
this.state = 25;
 BA.debugLineNum = 3353;BA.debugLine="sWhere.Append(\"[\").Append(sCampoFiltro).appen";
Debug.JustUpdateDeviceLine();
_swhere.runMethod(false,"Append",(Object)(RemoteObject.createImmutable("["))).runMethod(false,"Append",(Object)(_scampofiltro)).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable("]")));
 if (true) break;

case 25:
//C
this.state = 26;
;
 BA.debugLineNum = 3355;BA.debugLine="Dim sComp As String=lstComparadoresFiltros.Get";
Debug.JustUpdateDeviceLine();
_scomp = BA.ObjectToString(__ref.getField(false,"_lstcomparadoresfiltros" /*RemoteObject*/ ).runMethod(false,"Get",(Object)(_idxit)));Debug.locals.put("sComp", _scomp);Debug.locals.put("sComp", _scomp);
 BA.debugLineNum = 3356;BA.debugLine="sWhere.Append(\" \").Append(sComp).Append(\" ?\")";
Debug.JustUpdateDeviceLine();
_swhere.runMethod(false,"Append",(Object)(RemoteObject.createImmutable(" "))).runMethod(false,"Append",(Object)(_scomp)).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(" ?")));
 BA.debugLineNum = 3357;BA.debugLine="Dim sObjVal As String=lstValoresFiltros.Get(iD";
Debug.JustUpdateDeviceLine();
_sobjval = BA.ObjectToString(__ref.getField(false,"_lstvaloresfiltros" /*RemoteObject*/ ).runMethod(false,"Get",(Object)(_idxit)));Debug.locals.put("sObjVal", _sobjval);Debug.locals.put("sObjVal", _sobjval);
 BA.debugLineNum = 3358;BA.debugLine="lstValoresSinCampoAnalizado.Add(sObjVal)";
Debug.JustUpdateDeviceLine();
_lstvaloressincampoanalizado.runVoidMethod ("Add",(Object)((_sobjval)));
 if (true) break;

case 26:
//C
this.state = 43;
;
 BA.debugLineNum = 3360;BA.debugLine="iDxIt=iDxIt+1";
Debug.JustUpdateDeviceLine();
_idxit = RemoteObject.solve(new RemoteObject[] {_idxit,RemoteObject.createImmutable(1)}, "+",1, 1);Debug.locals.put("iDxIt", _idxit);
 if (true) break;
if (true) break;
Debug.locals.put("sCampoFiltro", _scampofiltro);
;
 BA.debugLineNum = 3362;BA.debugLine="If lstValoresSinCampoAnalizado.Size=0 Then";
Debug.JustUpdateDeviceLine();

case 27:
//if
this.state = 36;
if (RemoteObject.solveBoolean("=",_lstvaloressincampoanalizado.runMethod(true,"getSize"),BA.numberCast(double.class, 0))) { 
this.state = 29;
}else {
this.state = 31;
}if (true) break;

case 29:
//C
this.state = 36;
 BA.debugLineNum = 3363;BA.debugLine="Dim lstVF As List=DBUtils.ExecuteList(mSQL,\"sel";
Debug.JustUpdateDeviceLine();
_lstvf = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");
_lstvf = parent._dbutils.runMethod(false,"_executelist" /*RemoteObject*/ ,(Object)(__ref.getField(false,"_msql" /*RemoteObject*/ )),(Object)(RemoteObject.concat(RemoteObject.createImmutable("select distinct ["),_aliascampo,RemoteObject.createImmutable("] from tblOrigenDatos order by ["),_aliascampo,RemoteObject.createImmutable("]"))),(Object)((parent.__c.getField(false,"Null"))),(Object)(BA.numberCast(int.class, 0)));Debug.locals.put("lstVF", _lstvf);Debug.locals.put("lstVF", _lstvf);
 if (true) break;

case 31:
//C
this.state = 32;
 BA.debugLineNum = 3365;BA.debugLine="Dim Args(lstValoresSinCampoAnalizado.Size) As S";
Debug.JustUpdateDeviceLine();
_args = RemoteObject.createNewArray ("String", new int[] {_lstvaloressincampoanalizado.runMethod(true,"getSize").<Integer>get().intValue()}, new Object[]{});Debug.locals.put("Args", _args);
 BA.debugLineNum = 3366;BA.debugLine="Dim IDxArgs As Int";
Debug.JustUpdateDeviceLine();
_idxargs = RemoteObject.createImmutable(0);Debug.locals.put("IDxArgs", _idxargs);
 BA.debugLineNum = 3367;BA.debugLine="For Each sFV As String In lstValoresSinCampoAna";
Debug.JustUpdateDeviceLine();
if (true) break;

case 32:
//for
this.state = 35;
group41 = _lstvaloressincampoanalizado;
index41 = 0;
groupLen41 = group41.runMethod(true,"getSize").<Integer>get();
Debug.locals.put("sFV", _sfv);
this.state = 44;
if (true) break;

case 44:
//C
this.state = 35;
if (index41 < groupLen41) {
this.state = 34;
_sfv = BA.ObjectToString(group41.runMethod(false,"Get",index41));Debug.locals.put("sFV", _sfv);}
if (true) break;

case 45:
//C
this.state = 44;
index41++;
Debug.locals.put("sFV", _sfv);
if (true) break;

case 34:
//C
this.state = 45;
 BA.debugLineNum = 3368;BA.debugLine="Args(IDxArgs)=sFV";
Debug.JustUpdateDeviceLine();
_args.setArrayElement (_sfv,_idxargs);
 BA.debugLineNum = 3369;BA.debugLine="IDxArgs=IDxArgs+1";
Debug.JustUpdateDeviceLine();
_idxargs = RemoteObject.solve(new RemoteObject[] {_idxargs,RemoteObject.createImmutable(1)}, "+",1, 1);Debug.locals.put("IDxArgs", _idxargs);
 if (true) break;
if (true) break;

case 35:
//C
this.state = 36;
Debug.locals.put("sFV", _sfv);
;
 BA.debugLineNum = 3371;BA.debugLine="Log(\"sWhere to string \" & sWhere.ToString)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9165871667",RemoteObject.concat(RemoteObject.createImmutable("sWhere to string "),_swhere.runMethod(true,"ToString")),0);
 BA.debugLineNum = 3372;BA.debugLine="Dim lstVF As List=DBUtils.ExecuteList(mSQL,\"sel";
Debug.JustUpdateDeviceLine();
_lstvf = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");
_lstvf = parent._dbutils.runMethod(false,"_executelist" /*RemoteObject*/ ,(Object)(__ref.getField(false,"_msql" /*RemoteObject*/ )),(Object)(RemoteObject.concat(RemoteObject.createImmutable("select distinct ["),_aliascampo,RemoteObject.createImmutable("] from tblOrigenDatos where "),_swhere.runMethod(true,"ToString"),RemoteObject.createImmutable(" order by ["),_aliascampo,RemoteObject.createImmutable("]"))),(Object)(_args),(Object)(BA.numberCast(int.class, 0)));Debug.locals.put("lstVF", _lstvf);Debug.locals.put("lstVF", _lstvf);
 if (true) break;

case 36:
//C
this.state = 37;
;
 if (true) break;

case 37:
//C
this.state = 38;
;
 BA.debugLineNum = 3375;BA.debugLine="cboVF.Items.AddAll(lstVF)";
Debug.JustUpdateDeviceLine();
_cbovf.runMethod(false,"getItems").runVoidMethod ("AddAll",(Object)(_lstvf));
 BA.debugLineNum = 3376;BA.debugLine="If FixNull(sValorFiltroAnt)<>\"\" Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 38:
//if
this.state = 41;
if (RemoteObject.solveBoolean("!",__ref.runClassMethod (b4j.docU.jamtableclv.class, "_fixnull" /*RemoteObject*/ ,(Object)(_svalorfiltroant)),BA.ObjectToString(""))) { 
this.state = 40;
}if (true) break;

case 40:
//C
this.state = 41;
 BA.debugLineNum = 3377;BA.debugLine="cboVF.Value=sValorFiltroAnt";
Debug.JustUpdateDeviceLine();
_cbovf.runMethod(false,"setValue",_svalorfiltroant);
 if (true) break;

case 41:
//C
this.state = -1;
;
 BA.debugLineNum = 3380;BA.debugLine="Return Null";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,parent.__c.getField(false,"Null"));return;};
 BA.debugLineNum = 3381;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static RemoteObject  _cbborraritems(RemoteObject __ref,RemoteObject _cb) throws Exception{
try {
		Debug.PushSubsStack("cbBorrarItems (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,2585);
if (RapidSub.canDelegate("cbborraritems")) { return __ref.runUserSub(false, "jamtableclv","cbborraritems", __ref, _cb);}
ResumableSub_cbBorrarItems rsub = new ResumableSub_cbBorrarItems(null,__ref,_cb);
rsub.remoteResumableSub = anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSubForFilter();
rsub.resume(null, null);
return RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.keywords.Common.ResumableSubWrapper"), rsub.remoteResumableSub);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_cbBorrarItems extends BA.ResumableSub {
public ResumableSub_cbBorrarItems(b4j.docU.jamtableclv parent,RemoteObject __ref,RemoteObject _cb) {
this.parent = parent;
this.__ref = __ref;
this._cb = _cb;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _cb;

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("cbBorrarItems (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,2585);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
{
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,RemoteObject.createImmutable(null));return;}
case 0:
//C
this.state = -1;
Debug.locals.put("_ref", __ref);
Debug.locals.put("cb", _cb);
 BA.debugLineNum = 2586;BA.debugLine="cb.Items.clear";
Debug.JustUpdateDeviceLine();
_cb.runMethod(false,"getItems").runVoidMethod ("Clear");
 BA.debugLineNum = 2587;BA.debugLine="Return Null";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,parent.__c.getField(false,"Null"));return;};
 BA.debugLineNum = 2588;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static void  _cbcomparadorfiltro_mouseclicked(RemoteObject __ref,RemoteObject _eventdata) throws Exception{
try {
		Debug.PushSubsStack("cbComparadorFiltro_MouseClicked (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,2591);
if (RapidSub.canDelegate("cbcomparadorfiltro_mouseclicked")) { __ref.runUserSub(false, "jamtableclv","cbcomparadorfiltro_mouseclicked", __ref, _eventdata); return;}
ResumableSub_cbComparadorFiltro_MouseClicked rsub = new ResumableSub_cbComparadorFiltro_MouseClicked(null,__ref,_eventdata);
rsub.resume(null, null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_cbComparadorFiltro_MouseClicked extends BA.ResumableSub {
public ResumableSub_cbComparadorFiltro_MouseClicked(b4j.docU.jamtableclv parent,RemoteObject __ref,RemoteObject _eventdata) {
this.parent = parent;
this.__ref = __ref;
this._eventdata = _eventdata;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _eventdata;
RemoteObject _cb = RemoteObject.declareNull("anywheresoftware.b4j.objects.ChoiceBoxWrapper");
RemoteObject _np = RemoteObject.createImmutable(0);
RemoteObject _p = RemoteObject.declareNull("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
RemoteObject _mdatosfiltro = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
RemoteObject _clviv = RemoteObject.declareNull("b4j.docU.jamtableclv._clvjamtableclvfiltroitemvalue");
RemoteObject _cbocampofiltrosel = RemoteObject.declareNull("anywheresoftware.b4j.objects.ComboBoxWrapper");
RemoteObject _csel = RemoteObject.declareNull("b4j.docU.jamtableclv._campoorigendatosjamtableclv");
RemoteObject _robj = RemoteObject.declareNull("Object");

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("cbComparadorFiltro_MouseClicked (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,2591);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
return;

case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
Debug.locals.put("EventData", _eventdata);
 BA.debugLineNum = 2592;BA.debugLine="If EventData.SecondaryButtonPressed Then Return";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//if
this.state = 6;
if (_eventdata.runMethod(true,"getSecondaryButtonPressed").<Boolean>get().booleanValue()) { 
this.state = 3;
;}if (true) break;

case 3:
//C
this.state = 6;
if (true) return ;
if (true) break;

case 6:
//C
this.state = 7;
;
 BA.debugLineNum = 2593;BA.debugLine="Dim cb As ChoiceBox=Sender";
Debug.JustUpdateDeviceLine();
_cb = RemoteObject.createNew ("anywheresoftware.b4j.objects.ChoiceBoxWrapper");
_cb = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.ChoiceBoxWrapper"), parent.__c.runMethod(false,"Sender",__ref.getField(false, "ba")));Debug.locals.put("cb", _cb);Debug.locals.put("cb", _cb);
 BA.debugLineNum = 2598;BA.debugLine="If ChoiceBoxCheckListaVisible(cb) Then Return";
Debug.JustUpdateDeviceLine();
if (true) break;

case 7:
//if
this.state = 12;
if (__ref.runClassMethod (b4j.docU.jamtableclv.class, "_choiceboxchecklistavisible" /*RemoteObject*/ ,(Object)(_cb)).<Boolean>get().booleanValue()) { 
this.state = 9;
;}if (true) break;

case 9:
//C
this.state = 12;
if (true) return ;
if (true) break;

case 12:
//C
this.state = 13;
;
 BA.debugLineNum = 2600;BA.debugLine="Dim nP As Int=clvFiltros.GetItemFromView(cb)";
Debug.JustUpdateDeviceLine();
_np = __ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(true,"_getitemfromview",RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper"), _cb.getObject()));Debug.locals.put("nP", _np);Debug.locals.put("nP", _np);
 BA.debugLineNum = 2601;BA.debugLine="Dim p As Pane=clvFiltros.GetPanel(nP)";
Debug.JustUpdateDeviceLine();
_p = RemoteObject.createNew ("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
_p = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper"), __ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(false,"_getpanel",(Object)(_np)).getObject());Debug.locals.put("p", _p);Debug.locals.put("p", _p);
 BA.debugLineNum = 2602;BA.debugLine="Dim mDatosFiltro As Map=p.Tag";
Debug.JustUpdateDeviceLine();
_mdatosfiltro = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");
_mdatosfiltro = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.collections.Map"), _p.runMethod(false,"getTag"));Debug.locals.put("mDatosFiltro", _mdatosfiltro);Debug.locals.put("mDatosFiltro", _mdatosfiltro);
 BA.debugLineNum = 2603;BA.debugLine="Dim clviv As clvJAMTableCLVFiltroItemValue=clvFil";
Debug.JustUpdateDeviceLine();
_clviv = (__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(false,"_getvalue",(Object)(_np)));Debug.locals.put("clviv", _clviv);Debug.locals.put("clviv", _clviv);
 BA.debugLineNum = 2604;BA.debugLine="Dim cboCampoFiltroSel As ComboBox=clviv.cboCampoF";
Debug.JustUpdateDeviceLine();
_cbocampofiltrosel = RemoteObject.createNew ("anywheresoftware.b4j.objects.ComboBoxWrapper");
_cbocampofiltrosel = _clviv.getField(false,"cboCampoFiltro" /*RemoteObject*/ );Debug.locals.put("cboCampoFiltroSel", _cbocampofiltrosel);Debug.locals.put("cboCampoFiltroSel", _cbocampofiltrosel);
 BA.debugLineNum = 2605;BA.debugLine="Dim cboCampoFiltroSel As ComboBox=clviv.cboCampoF";
Debug.JustUpdateDeviceLine();
_cbocampofiltrosel = RemoteObject.createNew ("anywheresoftware.b4j.objects.ComboBoxWrapper");
_cbocampofiltrosel = _clviv.getField(false,"cboCampoFiltro" /*RemoteObject*/ );Debug.locals.put("cboCampoFiltroSel", _cbocampofiltrosel);Debug.locals.put("cboCampoFiltroSel", _cbocampofiltrosel);
 BA.debugLineNum = 2606;BA.debugLine="If FixNull(cboCampoFiltroSel.Value)=\"\" Then Retur";
Debug.JustUpdateDeviceLine();
if (true) break;

case 13:
//if
this.state = 18;
if (RemoteObject.solveBoolean("=",__ref.runClassMethod (b4j.docU.jamtableclv.class, "_fixnull" /*RemoteObject*/ ,(Object)(_cbocampofiltrosel.runMethod(false,"getValue"))),BA.ObjectToString(""))) { 
this.state = 15;
;}if (true) break;

case 15:
//C
this.state = 18;
if (true) return ;
if (true) break;

case 18:
//C
this.state = -1;
;
 BA.debugLineNum = 2607;BA.debugLine="Dim CSel As CampoOrigenDatosJamTableCLV=mDatosFil";
Debug.JustUpdateDeviceLine();
_csel = (_mdatosfiltro.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("DatosCampoFiltro")))));Debug.locals.put("CSel", _csel);Debug.locals.put("CSel", _csel);
 BA.debugLineNum = 2610;BA.debugLine="cbComparadorFiltroUserChange=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_cbcomparadorfiltrouserchange" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 BA.debugLineNum = 2611;BA.debugLine="wait for(CargarItemsCbComparadorFiltro(cb,CSel, c";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "cbcomparadorfiltro_mouseclicked"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_cargaritemscbcomparadorfiltro" /*RemoteObject*/ ,(Object)(_cb),(Object)(_csel),(Object)(_clviv)));
this.state = 19;
return;
case 19:
//C
this.state = -1;
_robj = (RemoteObject) result.getArrayElement(false,RemoteObject.createImmutable(1));Debug.locals.put("rObj", _robj);
;
 BA.debugLineNum = 2614;BA.debugLine="cb.HideChoices";
Debug.JustUpdateDeviceLine();
_cb.runVoidMethod ("HideChoices");
 BA.debugLineNum = 2619;BA.debugLine="cb.ShowChoices";
Debug.JustUpdateDeviceLine();
_cb.runVoidMethod ("ShowChoices");
 BA.debugLineNum = 2623;BA.debugLine="cbComparadorFiltroUserChange=True";
Debug.JustUpdateDeviceLine();
__ref.setField ("_cbcomparadorfiltrouserchange" /*RemoteObject*/ ,parent.__c.getField(true,"True"));
 BA.debugLineNum = 2624;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static void  _cbcomparadorfiltro_selectedindexchanged(RemoteObject __ref,RemoteObject _index,RemoteObject _value) throws Exception{
try {
		Debug.PushSubsStack("cbComparadorFiltro_SelectedIndexChanged (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,2658);
if (RapidSub.canDelegate("cbcomparadorfiltro_selectedindexchanged")) { __ref.runUserSub(false, "jamtableclv","cbcomparadorfiltro_selectedindexchanged", __ref, _index, _value); return;}
ResumableSub_cbComparadorFiltro_SelectedIndexChanged rsub = new ResumableSub_cbComparadorFiltro_SelectedIndexChanged(null,__ref,_index,_value);
rsub.resume(null, null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_cbComparadorFiltro_SelectedIndexChanged extends BA.ResumableSub {
public ResumableSub_cbComparadorFiltro_SelectedIndexChanged(b4j.docU.jamtableclv parent,RemoteObject __ref,RemoteObject _index,RemoteObject _value) {
this.parent = parent;
this.__ref = __ref;
this._index = _index;
this._value = _value;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _index;
RemoteObject _value;
RemoteObject _cb = RemoteObject.declareNull("anywheresoftware.b4j.objects.ChoiceBoxWrapper");
RemoteObject _robject = RemoteObject.declareNull("Object");

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("cbComparadorFiltro_SelectedIndexChanged (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,2658);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
return;

case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
Debug.locals.put("Index", _index);
Debug.locals.put("Value", _value);
 BA.debugLineNum = 2659;BA.debugLine="If cbComparadorFiltroUserChange=False Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//if
this.state = 4;
if (RemoteObject.solveBoolean("=",__ref.getField(true,"_cbcomparadorfiltrouserchange" /*RemoteObject*/ ),parent.__c.getField(true,"False"))) { 
this.state = 3;
}if (true) break;

case 3:
//C
this.state = 4;
 BA.debugLineNum = 2660;BA.debugLine="Return";
Debug.JustUpdateDeviceLine();
if (true) return ;
 if (true) break;
;
 BA.debugLineNum = 2663;BA.debugLine="If Index=-1 Then";
Debug.JustUpdateDeviceLine();

case 4:
//if
this.state = 7;
if (RemoteObject.solveBoolean("=",_index,BA.numberCast(double.class, -(double) (0 + 1)))) { 
this.state = 6;
}if (true) break;

case 6:
//C
this.state = 7;
 BA.debugLineNum = 2665;BA.debugLine="cbComparadorFiltroUserChange=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_cbcomparadorfiltrouserchange" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 BA.debugLineNum = 2666;BA.debugLine="Return";
Debug.JustUpdateDeviceLine();
if (true) return ;
 if (true) break;

case 7:
//C
this.state = -1;
;
 BA.debugLineNum = 2668;BA.debugLine="Dim cb As ChoiceBox=Sender";
Debug.JustUpdateDeviceLine();
_cb = RemoteObject.createNew ("anywheresoftware.b4j.objects.ChoiceBoxWrapper");
_cb = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.ChoiceBoxWrapper"), parent.__c.runMethod(false,"Sender",__ref.getField(false, "ba")));Debug.locals.put("cb", _cb);Debug.locals.put("cb", _cb);
 BA.debugLineNum = 2669;BA.debugLine="wait for (CambioComparadorFiltroChoiceBox(cb)) co";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "cbcomparadorfiltro_selectedindexchanged"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_cambiocomparadorfiltrochoicebox" /*RemoteObject*/ ,(Object)(_cb)));
this.state = 8;
return;
case 8:
//C
this.state = -1;
_robject = (RemoteObject) result.getArrayElement(false,RemoteObject.createImmutable(1));Debug.locals.put("rObject", _robject);
;
 BA.debugLineNum = 2671;BA.debugLine="cbComparadorFiltroUserChange=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_cbcomparadorfiltrouserchange" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 BA.debugLineNum = 2672;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static RemoteObject  _cboandorfiltro_mouseclicked(RemoteObject __ref,RemoteObject _eventdata) throws Exception{
try {
		Debug.PushSubsStack("cboAndOrFiltro_MouseClicked (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,3187);
if (RapidSub.canDelegate("cboandorfiltro_mouseclicked")) { return __ref.runUserSub(false, "jamtableclv","cboandorfiltro_mouseclicked", __ref, _eventdata);}
RemoteObject _cbo = RemoteObject.declareNull("anywheresoftware.b4j.objects.ComboBoxWrapper");
Debug.locals.put("EventData", _eventdata);
 BA.debugLineNum = 3187;BA.debugLine="private Sub cboAndOrFiltro_MouseClicked(EventData";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 3188;BA.debugLine="If EventData.SecondaryButtonPressed Then Return";
Debug.JustUpdateDeviceLine();
if (_eventdata.runMethod(true,"getSecondaryButtonPressed").<Boolean>get().booleanValue()) { 
if (true) return RemoteObject.createImmutable("");};
 BA.debugLineNum = 3190;BA.debugLine="Dim cbo As ComboBox=Sender";
Debug.JustUpdateDeviceLine();
_cbo = RemoteObject.createNew ("anywheresoftware.b4j.objects.ComboBoxWrapper");
_cbo = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.ComboBoxWrapper"), jamtableclv.__c.runMethod(false,"Sender",__ref.getField(false, "ba")));Debug.locals.put("cbo", _cbo);Debug.locals.put("cbo", _cbo);
 BA.debugLineNum = 3191;BA.debugLine="cboAndOrFiltroUserChange=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_cboandorfiltrouserchange" /*RemoteObject*/ ,jamtableclv.__c.getField(true,"False"));
 BA.debugLineNum = 3194;BA.debugLine="If ComboCheckListaVisible(cbo) Then Return";
Debug.JustUpdateDeviceLine();
if (__ref.runClassMethod (b4j.docU.jamtableclv.class, "_combochecklistavisible" /*RemoteObject*/ ,(Object)(_cbo)).<Boolean>get().booleanValue()) { 
if (true) return RemoteObject.createImmutable("");};
 BA.debugLineNum = 3197;BA.debugLine="ComboHideItems(cbo)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_combohideitems" /*RemoteObject*/ ,(Object)(_cbo));
 BA.debugLineNum = 3200;BA.debugLine="ComboShowItems(cbo)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_comboshowitems" /*RemoteObject*/ ,(Object)(_cbo));
 BA.debugLineNum = 3201;BA.debugLine="cboAndOrFiltroUserChange=True";
Debug.JustUpdateDeviceLine();
__ref.setField ("_cboandorfiltrouserchange" /*RemoteObject*/ ,jamtableclv.__c.getField(true,"True"));
 BA.debugLineNum = 3202;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static void  _cboandorfiltro_selectedindexchanged(RemoteObject __ref,RemoteObject _index,RemoteObject _value) throws Exception{
try {
		Debug.PushSubsStack("cboAndOrFiltro_SelectedIndexChanged (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,3205);
if (RapidSub.canDelegate("cboandorfiltro_selectedindexchanged")) { __ref.runUserSub(false, "jamtableclv","cboandorfiltro_selectedindexchanged", __ref, _index, _value); return;}
ResumableSub_cboAndOrFiltro_SelectedIndexChanged rsub = new ResumableSub_cboAndOrFiltro_SelectedIndexChanged(null,__ref,_index,_value);
rsub.resume(null, null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_cboAndOrFiltro_SelectedIndexChanged extends BA.ResumableSub {
public ResumableSub_cboAndOrFiltro_SelectedIndexChanged(b4j.docU.jamtableclv parent,RemoteObject __ref,RemoteObject _index,RemoteObject _value) {
this.parent = parent;
this.__ref = __ref;
this._index = _index;
this._value = _value;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _index;
RemoteObject _value;
RemoteObject _cbo = RemoteObject.declareNull("anywheresoftware.b4j.objects.ComboBoxWrapper");
RemoteObject _robject = RemoteObject.declareNull("Object");

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("cboAndOrFiltro_SelectedIndexChanged (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,3205);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
return;

case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
Debug.locals.put("Index", _index);
Debug.locals.put("Value", _value);
 BA.debugLineNum = 3208;BA.debugLine="If cboAndOrFiltroUserChange=False Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//if
this.state = 4;
if (RemoteObject.solveBoolean("=",__ref.getField(true,"_cboandorfiltrouserchange" /*RemoteObject*/ ),parent.__c.getField(true,"False"))) { 
this.state = 3;
}if (true) break;

case 3:
//C
this.state = 4;
 BA.debugLineNum = 3209;BA.debugLine="Return";
Debug.JustUpdateDeviceLine();
if (true) return ;
 if (true) break;

case 4:
//C
this.state = -1;
;
 BA.debugLineNum = 3212;BA.debugLine="Dim cbo As ComboBox=Sender";
Debug.JustUpdateDeviceLine();
_cbo = RemoteObject.createNew ("anywheresoftware.b4j.objects.ComboBoxWrapper");
_cbo = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.ComboBoxWrapper"), parent.__c.runMethod(false,"Sender",__ref.getField(false, "ba")));Debug.locals.put("cbo", _cbo);Debug.locals.put("cbo", _cbo);
 BA.debugLineNum = 3213;BA.debugLine="wait for (CambioAndOrFiltro(cbo)) complete (rObje";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "cboandorfiltro_selectedindexchanged"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_cambioandorfiltro" /*RemoteObject*/ ,(Object)(_cbo)));
this.state = 5;
return;
case 5:
//C
this.state = -1;
_robject = (RemoteObject) result.getArrayElement(false,RemoteObject.createImmutable(1));Debug.locals.put("rObject", _robject);
;
 BA.debugLineNum = 3223;BA.debugLine="cboAndOrFiltroUserChange=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_cboandorfiltrouserchange" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 BA.debugLineNum = 3224;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static RemoteObject  _cboborraritems(RemoteObject __ref,RemoteObject _cbo) throws Exception{
try {
		Debug.PushSubsStack("cboBorrarItems (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,2580);
if (RapidSub.canDelegate("cboborraritems")) { return __ref.runUserSub(false, "jamtableclv","cboborraritems", __ref, _cbo);}
ResumableSub_cboBorrarItems rsub = new ResumableSub_cboBorrarItems(null,__ref,_cbo);
rsub.remoteResumableSub = anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSubForFilter();
rsub.resume(null, null);
return RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.keywords.Common.ResumableSubWrapper"), rsub.remoteResumableSub);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_cboBorrarItems extends BA.ResumableSub {
public ResumableSub_cboBorrarItems(b4j.docU.jamtableclv parent,RemoteObject __ref,RemoteObject _cbo) {
this.parent = parent;
this.__ref = __ref;
this._cbo = _cbo;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _cbo;

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("cboBorrarItems (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,2580);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
{
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,RemoteObject.createImmutable(null));return;}
case 0:
//C
this.state = -1;
Debug.locals.put("_ref", __ref);
Debug.locals.put("cbo", _cbo);
 BA.debugLineNum = 2581;BA.debugLine="cbo.Items.clear";
Debug.JustUpdateDeviceLine();
_cbo.runMethod(false,"getItems").runVoidMethod ("Clear");
 BA.debugLineNum = 2582;BA.debugLine="Return Null";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,parent.__c.getField(false,"Null"));return;};
 BA.debugLineNum = 2583;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static void  _cbocampofiltro_mouseclicked(RemoteObject __ref,RemoteObject _eventdata) throws Exception{
try {
		Debug.PushSubsStack("cboCampofiltro_MouseClicked (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,2321);
if (RapidSub.canDelegate("cbocampofiltro_mouseclicked")) { __ref.runUserSub(false, "jamtableclv","cbocampofiltro_mouseclicked", __ref, _eventdata); return;}
ResumableSub_cboCampofiltro_MouseClicked rsub = new ResumableSub_cboCampofiltro_MouseClicked(null,__ref,_eventdata);
rsub.resume(null, null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_cboCampofiltro_MouseClicked extends BA.ResumableSub {
public ResumableSub_cboCampofiltro_MouseClicked(b4j.docU.jamtableclv parent,RemoteObject __ref,RemoteObject _eventdata) {
this.parent = parent;
this.__ref = __ref;
this._eventdata = _eventdata;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _eventdata;
RemoteObject _cbo = RemoteObject.declareNull("anywheresoftware.b4j.objects.ComboBoxWrapper");
RemoteObject _robj = RemoteObject.declareNull("Object");

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("cboCampofiltro_MouseClicked (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,2321);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
return;

case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
Debug.locals.put("EventData", _eventdata);
 BA.debugLineNum = 2322;BA.debugLine="If EventData.SecondaryButtonPressed Then Return";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//if
this.state = 6;
if (_eventdata.runMethod(true,"getSecondaryButtonPressed").<Boolean>get().booleanValue()) { 
this.state = 3;
;}if (true) break;

case 3:
//C
this.state = 6;
if (true) return ;
if (true) break;

case 6:
//C
this.state = 7;
;
 BA.debugLineNum = 2324;BA.debugLine="Dim cbo As ComboBox=Sender";
Debug.JustUpdateDeviceLine();
_cbo = RemoteObject.createNew ("anywheresoftware.b4j.objects.ComboBoxWrapper");
_cbo = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.ComboBoxWrapper"), parent.__c.runMethod(false,"Sender",__ref.getField(false, "ba")));Debug.locals.put("cbo", _cbo);Debug.locals.put("cbo", _cbo);
 BA.debugLineNum = 2325;BA.debugLine="cboCampoFiltroUserChange=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_cbocampofiltrouserchange" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 BA.debugLineNum = 2328;BA.debugLine="If ComboCheckListaVisible(cbo) Then Return";
Debug.JustUpdateDeviceLine();
if (true) break;

case 7:
//if
this.state = 12;
if (__ref.runClassMethod (b4j.docU.jamtableclv.class, "_combochecklistavisible" /*RemoteObject*/ ,(Object)(_cbo)).<Boolean>get().booleanValue()) { 
this.state = 9;
;}if (true) break;

case 9:
//C
this.state = 12;
if (true) return ;
if (true) break;

case 12:
//C
this.state = -1;
;
 BA.debugLineNum = 2330;BA.debugLine="wait for (CargaItemsCboCamposFiltro(cbo)) complet";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "cbocampofiltro_mouseclicked"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_cargaitemscbocamposfiltro" /*RemoteObject*/ ,(Object)(_cbo)));
this.state = 13;
return;
case 13:
//C
this.state = -1;
_robj = (RemoteObject) result.getArrayElement(false,RemoteObject.createImmutable(1));Debug.locals.put("rObj", _robj);
;
 BA.debugLineNum = 2331;BA.debugLine="ComboHideItems(cbo)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_combohideitems" /*RemoteObject*/ ,(Object)(_cbo));
 BA.debugLineNum = 2333;BA.debugLine="ComboSetVisibleRowCount(cbo, 8)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_combosetvisiblerowcount" /*RemoteObject*/ ,(Object)(_cbo),(Object)(BA.numberCast(int.class, 8)));
 BA.debugLineNum = 2334;BA.debugLine="ComboShowItems(cbo)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_comboshowitems" /*RemoteObject*/ ,(Object)(_cbo));
 BA.debugLineNum = 2337;BA.debugLine="cboCampoFiltroUserChange=True";
Debug.JustUpdateDeviceLine();
__ref.setField ("_cbocampofiltrouserchange" /*RemoteObject*/ ,parent.__c.getField(true,"True"));
 BA.debugLineNum = 2338;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static void  _cbocampofiltro_valuechanged(RemoteObject __ref,RemoteObject _value) throws Exception{
try {
		Debug.PushSubsStack("cboCampofiltro_ValueChanged (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,2340);
if (RapidSub.canDelegate("cbocampofiltro_valuechanged")) { __ref.runUserSub(false, "jamtableclv","cbocampofiltro_valuechanged", __ref, _value); return;}
ResumableSub_cboCampofiltro_ValueChanged rsub = new ResumableSub_cboCampofiltro_ValueChanged(null,__ref,_value);
rsub.resume(null, null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_cboCampofiltro_ValueChanged extends BA.ResumableSub {
public ResumableSub_cboCampofiltro_ValueChanged(b4j.docU.jamtableclv parent,RemoteObject __ref,RemoteObject _value) {
this.parent = parent;
this.__ref = __ref;
this._value = _value;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _value;
RemoteObject _cbo = RemoteObject.declareNull("anywheresoftware.b4j.objects.ComboBoxWrapper");
RemoteObject _rbool = RemoteObject.createImmutable(false);

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("cboCampofiltro_ValueChanged (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,2340);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
return;

case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
Debug.locals.put("Value", _value);
 BA.debugLineNum = 2343;BA.debugLine="Log(\"cboCampoFiltroUserChange \" & cboCampoFiltroU";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9164298755",RemoteObject.concat(RemoteObject.createImmutable("cboCampoFiltroUserChange "),__ref.getField(true,"_cbocampofiltrouserchange" /*RemoteObject*/ )),0);
 BA.debugLineNum = 2344;BA.debugLine="If cboCampoFiltroUserChange=False Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//if
this.state = 4;
if (RemoteObject.solveBoolean("=",__ref.getField(true,"_cbocampofiltrouserchange" /*RemoteObject*/ ),parent.__c.getField(true,"False"))) { 
this.state = 3;
}if (true) break;

case 3:
//C
this.state = 4;
 BA.debugLineNum = 2345;BA.debugLine="Return";
Debug.JustUpdateDeviceLine();
if (true) return ;
 if (true) break;

case 4:
//C
this.state = -1;
;
 BA.debugLineNum = 2353;BA.debugLine="Dim cbo As ComboBox=Sender";
Debug.JustUpdateDeviceLine();
_cbo = RemoteObject.createNew ("anywheresoftware.b4j.objects.ComboBoxWrapper");
_cbo = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.ComboBoxWrapper"), parent.__c.runMethod(false,"Sender",__ref.getField(false, "ba")));Debug.locals.put("cbo", _cbo);Debug.locals.put("cbo", _cbo);
 BA.debugLineNum = 2354;BA.debugLine="Log(\"***********\")";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9164298766",RemoteObject.createImmutable("***********"),0);
 BA.debugLineNum = 2355;BA.debugLine="Log(\"Valor Campo \" & cbo.Value)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9164298767",RemoteObject.concat(RemoteObject.createImmutable("Valor Campo "),_cbo.runMethod(false,"getValue")),0);
 BA.debugLineNum = 2356;BA.debugLine="Log(\"***********\")";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9164298768",RemoteObject.createImmutable("***********"),0);
 BA.debugLineNum = 2357;BA.debugLine="Wait For (CambioCampoFiltro(cbo)) complete (rBool";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "cbocampofiltro_valuechanged"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_cambiocampofiltro" /*RemoteObject*/ ,(Object)(_cbo)));
this.state = 5;
return;
case 5:
//C
this.state = -1;
_rbool = (RemoteObject) result.getArrayElement(true,RemoteObject.createImmutable(1));Debug.locals.put("rBool", _rbool);
;
 BA.debugLineNum = 2359;BA.debugLine="cboCampoFiltroUserChange=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_cbocampofiltrouserchange" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 BA.debugLineNum = 2433;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static RemoteObject  _cbocampoordenacionsql_valuechanged(RemoteObject __ref,RemoteObject _value) throws Exception{
try {
		Debug.PushSubsStack("cboCampoOrdenacionSQL_ValueChanged (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,5060);
if (RapidSub.canDelegate("cbocampoordenacionsql_valuechanged")) { return __ref.runUserSub(false, "jamtableclv","cbocampoordenacionsql_valuechanged", __ref, _value);}
RemoteObject _idx = RemoteObject.createImmutable(0);
RemoteObject _clviv2 = RemoteObject.declareNull("b4j.docU.jamtableclv._clvjamtableclvordensqlitemvalue");
RemoteObject _bok = RemoteObject.declareNull("anywheresoftware.b4a.objects.B4XViewWrapper");
Debug.locals.put("Value", _value);
 BA.debugLineNum = 5060;BA.debugLine="private Sub cboCampoOrdenacionSQL_ValueChanged (Va";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 5061;BA.debugLine="Dim iDx As Int=CLVOrdenSQLjamTableCLV.GetItemFrom";
Debug.JustUpdateDeviceLine();
_idx = __ref.getField(false,"_clvordensqljamtableclv" /*RemoteObject*/ ).runMethod(true,"_getitemfromview",RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper"), jamtableclv.__c.runMethod(false,"Sender",__ref.getField(false, "ba"))));Debug.locals.put("iDx", _idx);Debug.locals.put("iDx", _idx);
 BA.debugLineNum = 5062;BA.debugLine="Dim clviv2 As clvJAMTableCLVOrdenSQLItemValue=CLV";
Debug.JustUpdateDeviceLine();
_clviv2 = (__ref.getField(false,"_clvordensqljamtableclv" /*RemoteObject*/ ).runMethod(false,"_getvalue",(Object)(_idx)));Debug.locals.put("clviv2", _clviv2);Debug.locals.put("clviv2", _clviv2);
 BA.debugLineNum = 5063;BA.debugLine="Dim bOK As B4XView=Dialog.GetButton(xui.DialogRes";
Debug.JustUpdateDeviceLine();
_bok = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");
_bok = __ref.getField(false,"_dialog" /*RemoteObject*/ ).runClassMethod (b4j.docU.b4xdialog.class, "_getbutton" /*RemoteObject*/ ,(Object)(__ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"DialogResponse_Positive")));Debug.locals.put("bOK", _bok);Debug.locals.put("bOK", _bok);
 BA.debugLineNum = 5066;BA.debugLine="bOK.Enabled=(FixNull(clviv2.cboTipoOrdenacionSQL.";
Debug.JustUpdateDeviceLine();
_bok.runMethod(true,"setEnabled",BA.ObjectToBoolean(RemoteObject.solveBoolean("=",RemoteObject.createImmutable((RemoteObject.solveBoolean("=",__ref.runClassMethod (b4j.docU.jamtableclv.class, "_fixnull" /*RemoteObject*/ ,(Object)(_clviv2.getField(false,"cboTipoOrdenacionSQL" /*RemoteObject*/ ).runMethod(false,"getValue"))),RemoteObject.createImmutable("")))),BA.ObjectToBoolean((RemoteObject.solveBoolean("=",__ref.runClassMethod (b4j.docU.jamtableclv.class, "_fixnull" /*RemoteObject*/ ,(Object)(_clviv2.getField(false,"cboCampoOrdenacionSQL" /*RemoteObject*/ ).runMethod(false,"getValue"))),RemoteObject.createImmutable("")))))));
 BA.debugLineNum = 5069;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _cbotipoordenacionsql_valuechanged(RemoteObject __ref,RemoteObject _value) throws Exception{
try {
		Debug.PushSubsStack("cboTipoOrdenacionSQL_ValueChanged (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,5071);
if (RapidSub.canDelegate("cbotipoordenacionsql_valuechanged")) { return __ref.runUserSub(false, "jamtableclv","cbotipoordenacionsql_valuechanged", __ref, _value);}
RemoteObject _idx = RemoteObject.createImmutable(0);
RemoteObject _clviv2 = RemoteObject.declareNull("b4j.docU.jamtableclv._clvjamtableclvordensqlitemvalue");
RemoteObject _bok = RemoteObject.declareNull("anywheresoftware.b4a.objects.B4XViewWrapper");
Debug.locals.put("Value", _value);
 BA.debugLineNum = 5071;BA.debugLine="private Sub cboTipoOrdenacionSQL_ValueChanged (Val";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 5072;BA.debugLine="Dim iDx As Int=CLVOrdenSQLjamTableCLV.GetItemFrom";
Debug.JustUpdateDeviceLine();
_idx = __ref.getField(false,"_clvordensqljamtableclv" /*RemoteObject*/ ).runMethod(true,"_getitemfromview",RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper"), jamtableclv.__c.runMethod(false,"Sender",__ref.getField(false, "ba"))));Debug.locals.put("iDx", _idx);Debug.locals.put("iDx", _idx);
 BA.debugLineNum = 5073;BA.debugLine="Dim clviv2 As clvJAMTableCLVOrdenSQLItemValue=CLV";
Debug.JustUpdateDeviceLine();
_clviv2 = (__ref.getField(false,"_clvordensqljamtableclv" /*RemoteObject*/ ).runMethod(false,"_getvalue",(Object)(_idx)));Debug.locals.put("clviv2", _clviv2);Debug.locals.put("clviv2", _clviv2);
 BA.debugLineNum = 5074;BA.debugLine="Dim bOK As B4XView=Dialog.GetButton(xui.DialogRes";
Debug.JustUpdateDeviceLine();
_bok = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");
_bok = __ref.getField(false,"_dialog" /*RemoteObject*/ ).runClassMethod (b4j.docU.b4xdialog.class, "_getbutton" /*RemoteObject*/ ,(Object)(__ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"DialogResponse_Positive")));Debug.locals.put("bOK", _bok);Debug.locals.put("bOK", _bok);
 BA.debugLineNum = 5077;BA.debugLine="bOK.Enabled=(FixNull(clviv2.cboTipoOrdenacionSQL.";
Debug.JustUpdateDeviceLine();
_bok.runMethod(true,"setEnabled",BA.ObjectToBoolean(RemoteObject.solveBoolean("=",RemoteObject.createImmutable((RemoteObject.solveBoolean("=",__ref.runClassMethod (b4j.docU.jamtableclv.class, "_fixnull" /*RemoteObject*/ ,(Object)(_clviv2.getField(false,"cboTipoOrdenacionSQL" /*RemoteObject*/ ).runMethod(false,"getValue"))),RemoteObject.createImmutable("")))),BA.ObjectToBoolean((RemoteObject.solveBoolean("=",__ref.runClassMethod (b4j.docU.jamtableclv.class, "_fixnull" /*RemoteObject*/ ,(Object)(_clviv2.getField(false,"cboCampoOrdenacionSQL" /*RemoteObject*/ ).runMethod(false,"getValue"))),RemoteObject.createImmutable("")))))));
 BA.debugLineNum = 5078;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static void  _cbovalorfiltro_mouseclicked(RemoteObject __ref,RemoteObject _eventdata) throws Exception{
try {
		Debug.PushSubsStack("cboValorFiltro_MouseClicked (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,2929);
if (RapidSub.canDelegate("cbovalorfiltro_mouseclicked")) { __ref.runUserSub(false, "jamtableclv","cbovalorfiltro_mouseclicked", __ref, _eventdata); return;}
ResumableSub_cboValorFiltro_MouseClicked rsub = new ResumableSub_cboValorFiltro_MouseClicked(null,__ref,_eventdata);
rsub.resume(null, null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_cboValorFiltro_MouseClicked extends BA.ResumableSub {
public ResumableSub_cboValorFiltro_MouseClicked(b4j.docU.jamtableclv parent,RemoteObject __ref,RemoteObject _eventdata) {
this.parent = parent;
this.__ref = __ref;
this._eventdata = _eventdata;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _eventdata;
RemoteObject _cbo = RemoteObject.declareNull("anywheresoftware.b4j.objects.ComboBoxWrapper");
RemoteObject _p = RemoteObject.declareNull("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
RemoteObject _m = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
RemoteObject _c = RemoteObject.declareNull("b4j.docU.jamtableclv._campoorigendatosjamtableclv");
RemoteObject _robj = RemoteObject.declareNull("Object");

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("cboValorFiltro_MouseClicked (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,2929);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
return;

case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
Debug.locals.put("EventData", _eventdata);
 BA.debugLineNum = 2931;BA.debugLine="If EventData.SecondaryButtonPressed Then Return";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//if
this.state = 6;
if (_eventdata.runMethod(true,"getSecondaryButtonPressed").<Boolean>get().booleanValue()) { 
this.state = 3;
;}if (true) break;

case 3:
//C
this.state = 6;
if (true) return ;
if (true) break;

case 6:
//C
this.state = 7;
;
 BA.debugLineNum = 2933;BA.debugLine="Dim cbo As ComboBox=Sender";
Debug.JustUpdateDeviceLine();
_cbo = RemoteObject.createNew ("anywheresoftware.b4j.objects.ComboBoxWrapper");
_cbo = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.ComboBoxWrapper"), parent.__c.runMethod(false,"Sender",__ref.getField(false, "ba")));Debug.locals.put("cbo", _cbo);Debug.locals.put("cbo", _cbo);
 BA.debugLineNum = 2937;BA.debugLine="If ComboCheckListaVisible(cbo) Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 7:
//if
this.state = 10;
if (__ref.runClassMethod (b4j.docU.jamtableclv.class, "_combochecklistavisible" /*RemoteObject*/ ,(Object)(_cbo)).<Boolean>get().booleanValue()) { 
this.state = 9;
}if (true) break;

case 9:
//C
this.state = 10;
 BA.debugLineNum = 2938;BA.debugLine="Log(\"Lista visible--> ocultar\")";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9164823049",RemoteObject.createImmutable("Lista visible--> ocultar"),0);
 BA.debugLineNum = 2939;BA.debugLine="Return";
Debug.JustUpdateDeviceLine();
if (true) return ;
 if (true) break;

case 10:
//C
this.state = -1;
;
 BA.debugLineNum = 2941;BA.debugLine="Dim p As Pane=clvFiltros.GetPanel(clvFiltros.GetI";
Debug.JustUpdateDeviceLine();
_p = RemoteObject.createNew ("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
_p = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper"), __ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(false,"_getpanel",(Object)(__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(true,"_getitemfromview",RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper"), _cbo.getObject())))).getObject());Debug.locals.put("p", _p);Debug.locals.put("p", _p);
 BA.debugLineNum = 2942;BA.debugLine="Dim m As Map=p.Tag";
Debug.JustUpdateDeviceLine();
_m = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");
_m = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.collections.Map"), _p.runMethod(false,"getTag"));Debug.locals.put("m", _m);Debug.locals.put("m", _m);
 BA.debugLineNum = 2943;BA.debugLine="cboValorFiltroUserChange=False  ' lo pasamos a Fa";
Debug.JustUpdateDeviceLine();
__ref.setField ("_cbovalorfiltrouserchange" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 BA.debugLineNum = 2944;BA.debugLine="Dim c As CampoOrigenDatosJamTableCLV=m.Get(\"Datos";
Debug.JustUpdateDeviceLine();
_c = (_m.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("DatosCampoFiltro")))));Debug.locals.put("c", _c);Debug.locals.put("c", _c);
 BA.debugLineNum = 2945;BA.debugLine="wait for (CargarItemsCboValorFiltro(cbo, c.AliasC";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "cbovalorfiltro_mouseclicked"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_cargaritemscbovalorfiltro" /*RemoteObject*/ ,(Object)(_cbo),(Object)(_c.getField(true,"AliasCampo" /*RemoteObject*/ ))));
this.state = 11;
return;
case 11:
//C
this.state = -1;
_robj = (RemoteObject) result.getArrayElement(false,RemoteObject.createImmutable(1));Debug.locals.put("rObj", _robj);
;
 BA.debugLineNum = 2948;BA.debugLine="ComboHideItems(cbo)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_combohideitems" /*RemoteObject*/ ,(Object)(_cbo));
 BA.debugLineNum = 2949;BA.debugLine="ComboSetVisibleRowCount(cbo, 10)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_combosetvisiblerowcount" /*RemoteObject*/ ,(Object)(_cbo),(Object)(BA.numberCast(int.class, 10)));
 BA.debugLineNum = 2951;BA.debugLine="ComboShowItems(cbo)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_comboshowitems" /*RemoteObject*/ ,(Object)(_cbo));
 BA.debugLineNum = 2953;BA.debugLine="cboValorFiltroUserChange=True";
Debug.JustUpdateDeviceLine();
__ref.setField ("_cbovalorfiltrouserchange" /*RemoteObject*/ ,parent.__c.getField(true,"True"));
 BA.debugLineNum = 2954;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static void  _cbovalorfiltro_valuechanged(RemoteObject __ref,RemoteObject _value) throws Exception{
try {
		Debug.PushSubsStack("cboValorFiltro_ValueChanged (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,2956);
if (RapidSub.canDelegate("cbovalorfiltro_valuechanged")) { __ref.runUserSub(false, "jamtableclv","cbovalorfiltro_valuechanged", __ref, _value); return;}
ResumableSub_cboValorFiltro_ValueChanged rsub = new ResumableSub_cboValorFiltro_ValueChanged(null,__ref,_value);
rsub.resume(null, null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_cboValorFiltro_ValueChanged extends BA.ResumableSub {
public ResumableSub_cboValorFiltro_ValueChanged(b4j.docU.jamtableclv parent,RemoteObject __ref,RemoteObject _value) {
this.parent = parent;
this.__ref = __ref;
this._value = _value;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _value;
RemoteObject _cbo = RemoteObject.declareNull("anywheresoftware.b4j.objects.ComboBoxWrapper");
RemoteObject _rbool = RemoteObject.createImmutable(false);

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("cboValorFiltro_ValueChanged (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,2956);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
return;

case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
Debug.locals.put("Value", _value);
 BA.debugLineNum = 2959;BA.debugLine="Log(\"cboValorFiltro_ValueChanged  valor \" & Value";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9164888579",RemoteObject.concat(RemoteObject.createImmutable("cboValorFiltro_ValueChanged  valor "),_value),0);
 BA.debugLineNum = 2960;BA.debugLine="Log(\"cboValorFiltroUserChange \" & cboValorFiltroU";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9164888580",RemoteObject.concat(RemoteObject.createImmutable("cboValorFiltroUserChange "),__ref.getField(true,"_cbovalorfiltrouserchange" /*RemoteObject*/ )),0);
 BA.debugLineNum = 2961;BA.debugLine="If cboValorFiltroUserChange=False Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//if
this.state = 6;
if (RemoteObject.solveBoolean("=",__ref.getField(true,"_cbovalorfiltrouserchange" /*RemoteObject*/ ),parent.__c.getField(true,"False"))) { 
this.state = 3;
}else {
this.state = 5;
}if (true) break;

case 3:
//C
this.state = 6;
 BA.debugLineNum = 2962;BA.debugLine="Return";
Debug.JustUpdateDeviceLine();
if (true) return ;
 if (true) break;

case 5:
//C
this.state = 6;
 BA.debugLineNum = 2964;BA.debugLine="cboValorFiltroUserChange=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_cbovalorfiltrouserchange" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 if (true) break;

case 6:
//C
this.state = -1;
;
 BA.debugLineNum = 2972;BA.debugLine="Dim cbo As ComboBox=Sender";
Debug.JustUpdateDeviceLine();
_cbo = RemoteObject.createNew ("anywheresoftware.b4j.objects.ComboBoxWrapper");
_cbo = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.ComboBoxWrapper"), parent.__c.runMethod(false,"Sender",__ref.getField(false, "ba")));Debug.locals.put("cbo", _cbo);Debug.locals.put("cbo", _cbo);
 BA.debugLineNum = 2974;BA.debugLine="wait for (CambioCboValorFiltro(cbo,Value)) comple";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "cbovalorfiltro_valuechanged"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_cambiocbovalorfiltro" /*RemoteObject*/ ,(Object)(_cbo),(Object)(_value)));
this.state = 7;
return;
case 7:
//C
this.state = -1;
_rbool = (RemoteObject) result.getArrayElement(true,RemoteObject.createImmutable(1));Debug.locals.put("rBool", _rbool);
;
 BA.debugLineNum = 2994;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static RemoteObject  _cdbl(RemoteObject __ref,RemoteObject _o) throws Exception{
try {
		Debug.PushSubsStack("CDbl (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7865);
if (RapidSub.canDelegate("cdbl")) { return __ref.runUserSub(false, "jamtableclv","cdbl", __ref, _o);}
RemoteObject _ox = RemoteObject.createImmutable("");
Debug.locals.put("o", _o);
 BA.debugLineNum = 7865;BA.debugLine="public Sub CDbl(o As Object) As Double";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 7866;BA.debugLine="Try";
Debug.JustUpdateDeviceLine();
try { BA.debugLineNum = 7867;BA.debugLine="Dim ox As String = o";
Debug.JustUpdateDeviceLine();
_ox = BA.ObjectToString(_o);Debug.locals.put("ox", _ox);Debug.locals.put("ox", _ox);
 BA.debugLineNum = 7868;BA.debugLine="ox = GetNumbers(ox)";
Debug.JustUpdateDeviceLine();
_ox = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_getnumbers" /*RemoteObject*/ ,(Object)(_ox));Debug.locals.put("ox", _ox);
 BA.debugLineNum = 7869;BA.debugLine="If ox = \"\" Then ox = \"0\"";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_ox,BA.ObjectToString(""))) { 
_ox = BA.ObjectToString("0");Debug.locals.put("ox", _ox);};
 BA.debugLineNum = 7870;BA.debugLine="Return ox";
Debug.JustUpdateDeviceLine();
Debug.CheckDeviceExceptions();if (true) return BA.numberCast(double.class, _ox);
 Debug.CheckDeviceExceptions();
} 
       catch (Exception e7) {
			BA.rdebugUtils.runVoidMethod("setLastException",__ref.getField(false, "ba"), e7.toString()); BA.debugLineNum = 7872;BA.debugLine="Return 0";
Debug.JustUpdateDeviceLine();
if (true) return BA.numberCast(double.class, 0);
 };
 BA.debugLineNum = 7874;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(0);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _cflt(RemoteObject __ref,RemoteObject _o) throws Exception{
try {
		Debug.PushSubsStack("CFlt (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7877);
if (RapidSub.canDelegate("cflt")) { return __ref.runUserSub(false, "jamtableclv","cflt", __ref, _o);}
RemoteObject _ox = RemoteObject.createImmutable("");
Debug.locals.put("o", _o);
 BA.debugLineNum = 7877;BA.debugLine="public Sub CFlt(o As Object) As Float";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 7878;BA.debugLine="Try";
Debug.JustUpdateDeviceLine();
try { BA.debugLineNum = 7879;BA.debugLine="Dim ox As String = o";
Debug.JustUpdateDeviceLine();
_ox = BA.ObjectToString(_o);Debug.locals.put("ox", _ox);Debug.locals.put("ox", _ox);
 BA.debugLineNum = 7880;BA.debugLine="ox = GetNumbers(ox)";
Debug.JustUpdateDeviceLine();
_ox = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_getnumbers" /*RemoteObject*/ ,(Object)(_ox));Debug.locals.put("ox", _ox);
 BA.debugLineNum = 7881;BA.debugLine="If ox = \"\" Then ox = \"0\"";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_ox,BA.ObjectToString(""))) { 
_ox = BA.ObjectToString("0");Debug.locals.put("ox", _ox);};
 BA.debugLineNum = 7882;BA.debugLine="Return ox";
Debug.JustUpdateDeviceLine();
Debug.CheckDeviceExceptions();if (true) return BA.numberCast(float.class, _ox);
 Debug.CheckDeviceExceptions();
} 
       catch (Exception e7) {
			BA.rdebugUtils.runVoidMethod("setLastException",__ref.getField(false, "ba"), e7.toString()); BA.debugLineNum = 7884;BA.debugLine="Return 0";
Debug.JustUpdateDeviceLine();
if (true) return BA.numberCast(float.class, 0);
 };
 BA.debugLineNum = 7886;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(0f);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _checkcompatiblidadcampofiltroconfiltrosor(RemoteObject __ref,RemoteObject _aliascampoanalizado,RemoteObject _idxpanel) throws Exception{
try {
		Debug.PushSubsStack("CheckCompatiblidadCampoFiltroConFiltrosOr (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,3274);
if (RapidSub.canDelegate("checkcompatiblidadcampofiltroconfiltrosor")) { return __ref.runUserSub(false, "jamtableclv","checkcompatiblidadcampofiltroconfiltrosor", __ref, _aliascampoanalizado, _idxpanel);}
RemoteObject _numopo = RemoteObject.createImmutable(0);
RemoteObject _lstcamposfiltrados = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.List");
int _clvitemidx = 0;
RemoteObject _p = RemoteObject.declareNull("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
RemoteObject _mdatosfiltro = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
RemoteObject _operadorfiltro = RemoteObject.createImmutable("");
RemoteObject _csel = RemoteObject.declareNull("b4j.docU.jamtableclv._campoorigendatosjamtableclv");
Debug.locals.put("AliasCampoAnalizado", _aliascampoanalizado);
Debug.locals.put("iDxPanel", _idxpanel);
 BA.debugLineNum = 3274;BA.debugLine="private Sub CheckCompatiblidadCampoFiltroConFiltro";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 3275;BA.debugLine="If Not(clvFiltros.Size>2) Then Return True";
Debug.JustUpdateDeviceLine();
if (jamtableclv.__c.runMethod(true,"Not",(Object)(BA.ObjectToBoolean(RemoteObject.solveBoolean(">",__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(true,"_getsize"),BA.numberCast(double.class, 2))))).<Boolean>get().booleanValue()) { 
if (true) return jamtableclv.__c.getField(true,"True");};
 BA.debugLineNum = 3277;BA.debugLine="Dim NumOpO As Int";
Debug.JustUpdateDeviceLine();
_numopo = RemoteObject.createImmutable(0);Debug.locals.put("NumOpO", _numopo);
 BA.debugLineNum = 3278;BA.debugLine="Dim lstCamposFiltrados As List";
Debug.JustUpdateDeviceLine();
_lstcamposfiltrados = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");Debug.locals.put("lstCamposFiltrados", _lstcamposfiltrados);
 BA.debugLineNum = 3279;BA.debugLine="lstCamposFiltrados.Initialize";
Debug.JustUpdateDeviceLine();
_lstcamposfiltrados.runVoidMethod ("Initialize");
 BA.debugLineNum = 3280;BA.debugLine="For clvItemIdx=0 To clvFiltros.Size-1";
Debug.JustUpdateDeviceLine();
{
final int step5 = 1;
final int limit5 = RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(true,"_getsize"),RemoteObject.createImmutable(1)}, "-",1, 1).<Integer>get().intValue();
_clvitemidx = 0 ;
for (;(step5 > 0 && _clvitemidx <= limit5) || (step5 < 0 && _clvitemidx >= limit5) ;_clvitemidx = ((int)(0 + _clvitemidx + step5))  ) {
Debug.locals.put("clvItemIdx", _clvitemidx);
 BA.debugLineNum = 3281;BA.debugLine="Dim p As Pane=clvFiltros.GetPanel(clvItemIdx)";
Debug.JustUpdateDeviceLine();
_p = RemoteObject.createNew ("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
_p = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper"), __ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(false,"_getpanel",(Object)(BA.numberCast(int.class, _clvitemidx))).getObject());Debug.locals.put("p", _p);Debug.locals.put("p", _p);
 BA.debugLineNum = 3282;BA.debugLine="Dim mDatosFiltro As Map=p.Tag";
Debug.JustUpdateDeviceLine();
_mdatosfiltro = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");
_mdatosfiltro = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.collections.Map"), _p.runMethod(false,"getTag"));Debug.locals.put("mDatosFiltro", _mdatosfiltro);Debug.locals.put("mDatosFiltro", _mdatosfiltro);
 BA.debugLineNum = 3283;BA.debugLine="Dim OperadorFiltro As String=mDatosFiltro.Get(\"O";
Debug.JustUpdateDeviceLine();
_operadorfiltro = BA.ObjectToString(_mdatosfiltro.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("OperadorFiltro")))));Debug.locals.put("OperadorFiltro", _operadorfiltro);Debug.locals.put("OperadorFiltro", _operadorfiltro);
 BA.debugLineNum = 3284;BA.debugLine="If OperadorFiltro=\"O\" Then NumOpO=NumOpO+1";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_operadorfiltro,BA.ObjectToString("O"))) { 
_numopo = RemoteObject.solve(new RemoteObject[] {_numopo,RemoteObject.createImmutable(1)}, "+",1, 1);Debug.locals.put("NumOpO", _numopo);};
 BA.debugLineNum = 3285;BA.debugLine="If clvItemIdx<>iDxPanel Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("!",RemoteObject.createImmutable(_clvitemidx),BA.numberCast(double.class, _idxpanel))) { 
 BA.debugLineNum = 3286;BA.debugLine="Dim CSel As CampoOrigenDatosJamTableCLV=mDatosF";
Debug.JustUpdateDeviceLine();
_csel = (_mdatosfiltro.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("DatosCampoFiltro")))));Debug.locals.put("CSel", _csel);Debug.locals.put("CSel", _csel);
 BA.debugLineNum = 3287;BA.debugLine="If lstCamposFiltrados.IndexOf(CSel.AliasCampo)=";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_lstcamposfiltrados.runMethod(true,"IndexOf",(Object)((_csel.getField(true,"AliasCampo" /*RemoteObject*/ )))),BA.numberCast(double.class, -(double) (0 + 1)))) { 
_lstcamposfiltrados.runVoidMethod ("Add",(Object)((_csel.getField(true,"AliasCampo" /*RemoteObject*/ ))));};
 };
 }
}Debug.locals.put("clvItemIdx", _clvitemidx);
;
 BA.debugLineNum = 3290;BA.debugLine="If NumOpO=0 Then Return True";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_numopo,BA.numberCast(double.class, 0))) { 
if (true) return jamtableclv.__c.getField(true,"True");};
 BA.debugLineNum = 3291;BA.debugLine="If lstCamposFiltrados.IndexOf(AliasCampoAnalizado";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_lstcamposfiltrados.runMethod(true,"IndexOf",(Object)((_aliascampoanalizado))),BA.numberCast(double.class, -(double) (0 + 1)))) { 
if (true) return jamtableclv.__c.getField(true,"False");};
 BA.debugLineNum = 3292;BA.debugLine="Return True";
Debug.JustUpdateDeviceLine();
if (true) return jamtableclv.__c.getField(true,"True");
 BA.debugLineNum = 3293;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(false);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _checkposiblefiltroor(RemoteObject __ref,RemoteObject _aliascampoanalizado) throws Exception{
try {
		Debug.PushSubsStack("CheckPosibleFiltroOr (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,3255);
if (RapidSub.canDelegate("checkposiblefiltroor")) { return __ref.runUserSub(false, "jamtableclv","checkposiblefiltroor", __ref, _aliascampoanalizado);}
RemoteObject _flagok = RemoteObject.createImmutable(false);
int _clvitemidx = 0;
RemoteObject _p = RemoteObject.declareNull("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
RemoteObject _mdatosfiltro = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
RemoteObject _csel = RemoteObject.declareNull("b4j.docU.jamtableclv._campoorigendatosjamtableclv");
Debug.locals.put("AliasCampoAnalizado", _aliascampoanalizado);
 BA.debugLineNum = 3255;BA.debugLine="private Sub CheckPosibleFiltroOr(AliasCampoAnaliza";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 3256;BA.debugLine="If clvFiltros.Size=2 Then Return True";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(true,"_getsize"),BA.numberCast(double.class, 2))) { 
if (true) return jamtableclv.__c.getField(true,"True");};
 BA.debugLineNum = 3257;BA.debugLine="Dim FlagOK As Boolean";
Debug.JustUpdateDeviceLine();
_flagok = RemoteObject.createImmutable(false);Debug.locals.put("FlagOK", _flagok);
 BA.debugLineNum = 3258;BA.debugLine="For clvItemIdx=0 To clvFiltros.Size-1";
Debug.JustUpdateDeviceLine();
{
final int step3 = 1;
final int limit3 = RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(true,"_getsize"),RemoteObject.createImmutable(1)}, "-",1, 1).<Integer>get().intValue();
_clvitemidx = 0 ;
for (;(step3 > 0 && _clvitemidx <= limit3) || (step3 < 0 && _clvitemidx >= limit3) ;_clvitemidx = ((int)(0 + _clvitemidx + step3))  ) {
Debug.locals.put("clvItemIdx", _clvitemidx);
 BA.debugLineNum = 3259;BA.debugLine="Dim p As Pane=clvFiltros.GetPanel(clvItemIdx)";
Debug.JustUpdateDeviceLine();
_p = RemoteObject.createNew ("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
_p = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper"), __ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(false,"_getpanel",(Object)(BA.numberCast(int.class, _clvitemidx))).getObject());Debug.locals.put("p", _p);Debug.locals.put("p", _p);
 BA.debugLineNum = 3260;BA.debugLine="Dim mDatosFiltro As Map=p.Tag";
Debug.JustUpdateDeviceLine();
_mdatosfiltro = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");
_mdatosfiltro = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.collections.Map"), _p.runMethod(false,"getTag"));Debug.locals.put("mDatosFiltro", _mdatosfiltro);Debug.locals.put("mDatosFiltro", _mdatosfiltro);
 BA.debugLineNum = 3261;BA.debugLine="Dim CSel As CampoOrigenDatosJamTableCLV=mDatosFi";
Debug.JustUpdateDeviceLine();
_csel = (_mdatosfiltro.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("DatosCampoFiltro")))));Debug.locals.put("CSel", _csel);Debug.locals.put("CSel", _csel);
 BA.debugLineNum = 3262;BA.debugLine="If CSel.AliasCampo<>AliasCampoAnalizado Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("!",_csel.getField(true,"AliasCampo" /*RemoteObject*/ ),_aliascampoanalizado)) { 
 BA.debugLineNum = 3263;BA.debugLine="FlagOK=False";
Debug.JustUpdateDeviceLine();
_flagok = jamtableclv.__c.getField(true,"False");Debug.locals.put("FlagOK", _flagok);
 BA.debugLineNum = 3264;BA.debugLine="Exit";
Debug.JustUpdateDeviceLine();
if (true) break;
 };
 }
}Debug.locals.put("clvItemIdx", _clvitemidx);
;
 BA.debugLineNum = 3267;BA.debugLine="If FlagOK Then";
Debug.JustUpdateDeviceLine();
if (_flagok.<Boolean>get().booleanValue()) { 
 BA.debugLineNum = 3268;BA.debugLine="Return True";
Debug.JustUpdateDeviceLine();
if (true) return jamtableclv.__c.getField(true,"True");
 }else {
 BA.debugLineNum = 3270;BA.debugLine="Return False";
Debug.JustUpdateDeviceLine();
if (true) return jamtableclv.__c.getField(true,"False");
 };
 BA.debugLineNum = 3272;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(false);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static void  _chkvalorfiltro_checkedchange(RemoteObject __ref,RemoteObject _checked) throws Exception{
try {
		Debug.PushSubsStack("chkValorFiltro_CheckedChange (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,3081);
if (RapidSub.canDelegate("chkvalorfiltro_checkedchange")) { __ref.runUserSub(false, "jamtableclv","chkvalorfiltro_checkedchange", __ref, _checked); return;}
ResumableSub_chkValorFiltro_CheckedChange rsub = new ResumableSub_chkValorFiltro_CheckedChange(null,__ref,_checked);
rsub.resume(null, null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_chkValorFiltro_CheckedChange extends BA.ResumableSub {
public ResumableSub_chkValorFiltro_CheckedChange(b4j.docU.jamtableclv parent,RemoteObject __ref,RemoteObject _checked) {
this.parent = parent;
this.__ref = __ref;
this._checked = _checked;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _checked;
RemoteObject _chk = RemoteObject.declareNull("anywheresoftware.b4j.objects.CheckboxWrapper");
RemoteObject _robject = RemoteObject.declareNull("Object");

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("chkValorFiltro_CheckedChange (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,3081);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
return;

case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
Debug.locals.put("Checked", _checked);
 BA.debugLineNum = 3084;BA.debugLine="If chkValorFiltroUserChange=False Then Return";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//if
this.state = 6;
if (RemoteObject.solveBoolean("=",__ref.getField(true,"_chkvalorfiltrouserchange" /*RemoteObject*/ ),parent.__c.getField(true,"False"))) { 
this.state = 3;
;}if (true) break;

case 3:
//C
this.state = 6;
if (true) return ;
if (true) break;

case 6:
//C
this.state = -1;
;
 BA.debugLineNum = 3086;BA.debugLine="Dim chk As CheckBox=Sender";
Debug.JustUpdateDeviceLine();
_chk = RemoteObject.createNew ("anywheresoftware.b4j.objects.CheckboxWrapper");
_chk = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.CheckboxWrapper"), parent.__c.runMethod(false,"Sender",__ref.getField(false, "ba")));Debug.locals.put("chk", _chk);Debug.locals.put("chk", _chk);
 BA.debugLineNum = 3087;BA.debugLine="wait for (CambioChkValorFiltro(chk)) complete (rO";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "chkvalorfiltro_checkedchange"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_cambiochkvalorfiltro" /*RemoteObject*/ ,(Object)(_chk)));
this.state = 7;
return;
case 7:
//C
this.state = -1;
_robject = (RemoteObject) result.getArrayElement(false,RemoteObject.createImmutable(1));Debug.locals.put("rObject", _robject);
;
 BA.debugLineNum = 3088;BA.debugLine="chkValorFiltroUserChange=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_chkvalorfiltrouserchange" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 BA.debugLineNum = 3115;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static RemoteObject  _chkvalorfiltro_mouseclicked(RemoteObject __ref,RemoteObject _eventdata) throws Exception{
try {
		Debug.PushSubsStack("chkValorFiltro_MouseClicked (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,3076);
if (RapidSub.canDelegate("chkvalorfiltro_mouseclicked")) { return __ref.runUserSub(false, "jamtableclv","chkvalorfiltro_mouseclicked", __ref, _eventdata);}
Debug.locals.put("EventData", _eventdata);
 BA.debugLineNum = 3076;BA.debugLine="private Sub chkValorFiltro_MouseClicked(EventData";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 3077;BA.debugLine="If EventData.SecondaryButtonDown Then Return";
Debug.JustUpdateDeviceLine();
if (_eventdata.runMethod(true,"getSecondaryButtonDown").<Boolean>get().booleanValue()) { 
if (true) return RemoteObject.createImmutable("");};
 BA.debugLineNum = 3078;BA.debugLine="chkValorFiltroUserChange=True";
Debug.JustUpdateDeviceLine();
__ref.setField ("_chkvalorfiltrouserchange" /*RemoteObject*/ ,jamtableclv.__c.getField(true,"True"));
 BA.debugLineNum = 3079;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _choiceboxchecklistavisible(RemoteObject __ref,RemoteObject _cb) throws Exception{
try {
		Debug.PushSubsStack("ChoiceBoxCheckListaVisible (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7916);
if (RapidSub.canDelegate("choiceboxchecklistavisible")) { return __ref.runUserSub(false, "jamtableclv","choiceboxchecklistavisible", __ref, _cb);}
RemoteObject _jo = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
RemoteObject _listavisible = RemoteObject.createImmutable(false);
Debug.locals.put("cb", _cb);
 BA.debugLineNum = 7916;BA.debugLine="private Sub ChoiceBoxCheckListaVisible(cb As Choic";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 7917;BA.debugLine="Dim jo As JavaObject = cb";
Debug.JustUpdateDeviceLine();
_jo = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");
_jo = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), _cb.getObject());Debug.locals.put("jo", _jo);Debug.locals.put("jo", _jo);
 BA.debugLineNum = 7918;BA.debugLine="Dim ListaVisible As Boolean=jo.RunMethod(\"isShowi";
Debug.JustUpdateDeviceLine();
_listavisible = BA.ObjectToBoolean(_jo.runMethod(false,"RunMethod",(Object)(BA.ObjectToString("isShowing")),(Object)((jamtableclv.__c.getField(false,"Null")))));Debug.locals.put("ListaVisible", _listavisible);Debug.locals.put("ListaVisible", _listavisible);
 BA.debugLineNum = 7920;BA.debugLine="Log(\"Lista visible ANTES de picar en el ChoiceBox";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("LogImpl","9173473796",RemoteObject.concat(RemoteObject.createImmutable("Lista visible ANTES de picar en el ChoiceBox="),jamtableclv.__c.runMethod(true,"Not",(Object)(_listavisible))),0);
 BA.debugLineNum = 7922;BA.debugLine="If ListaVisible=False Then ' es decir, si ANTES d";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_listavisible,jamtableclv.__c.getField(true,"False"))) { 
 BA.debugLineNum = 7924;BA.debugLine="cb.HideChoices";
Debug.JustUpdateDeviceLine();
_cb.runVoidMethod ("HideChoices");
 };
 BA.debugLineNum = 7926;BA.debugLine="Return Not(ListaVisible)";
Debug.JustUpdateDeviceLine();
if (true) return jamtableclv.__c.runMethod(true,"Not",(Object)(_listavisible));
 BA.debugLineNum = 7927;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(false);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _cint(RemoteObject __ref,RemoteObject _o) throws Exception{
try {
		Debug.PushSubsStack("CInt (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7889);
if (RapidSub.canDelegate("cint")) { return __ref.runUserSub(false, "jamtableclv","cint", __ref, _o);}
RemoteObject _ox = RemoteObject.createImmutable("");
Debug.locals.put("o", _o);
 BA.debugLineNum = 7889;BA.debugLine="public Sub CInt(o As Object) As Int";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 7890;BA.debugLine="Try";
Debug.JustUpdateDeviceLine();
try { BA.debugLineNum = 7891;BA.debugLine="Dim ox As String = o";
Debug.JustUpdateDeviceLine();
_ox = BA.ObjectToString(_o);Debug.locals.put("ox", _ox);Debug.locals.put("ox", _ox);
 BA.debugLineNum = 7892;BA.debugLine="ox = GetNumbers(ox)";
Debug.JustUpdateDeviceLine();
_ox = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_getnumbers" /*RemoteObject*/ ,(Object)(_ox));Debug.locals.put("ox", _ox);
 BA.debugLineNum = 7893;BA.debugLine="If ox = \"\" Then ox = \"0\"";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_ox,BA.ObjectToString(""))) { 
_ox = BA.ObjectToString("0");Debug.locals.put("ox", _ox);};
 BA.debugLineNum = 7894;BA.debugLine="Return Floor(ox)";
Debug.JustUpdateDeviceLine();
Debug.CheckDeviceExceptions();if (true) return BA.numberCast(int.class, jamtableclv.__c.runMethod(true,"Floor",(Object)(BA.numberCast(double.class, _ox))));
 Debug.CheckDeviceExceptions();
} 
       catch (Exception e7) {
			BA.rdebugUtils.runVoidMethod("setLastException",__ref.getField(false, "ba"), e7.toString()); BA.debugLineNum = 7896;BA.debugLine="Return 0";
Debug.JustUpdateDeviceLine();
if (true) return BA.numberCast(int.class, 0);
 };
 BA.debugLineNum = 7898;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(0);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _class_globals(RemoteObject __ref) throws Exception{
 //BA.debugLineNum = 40;BA.debugLine="Sub Class_Globals";
 //BA.debugLineNum = 41;BA.debugLine="Private mEventName As String 'ignore";
jamtableclv._meventname = RemoteObject.createImmutable("");__ref.setField("_meventname",jamtableclv._meventname);
 //BA.debugLineNum = 42;BA.debugLine="Private mCallBack As Object 'ignore";
jamtableclv._mcallback = RemoteObject.createNew ("Object");__ref.setField("_mcallback",jamtableclv._mcallback);
 //BA.debugLineNum = 43;BA.debugLine="Public mBase As B4XView";
jamtableclv._mbase = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");__ref.setField("_mbase",jamtableclv._mbase);
 //BA.debugLineNum = 44;BA.debugLine="Private xui As XUI 'ignore";
jamtableclv._xui = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper.XUI");__ref.setField("_xui",jamtableclv._xui);
 //BA.debugLineNum = 45;BA.debugLine="Public Tag As Object 'ignore";
jamtableclv._tag = RemoteObject.createNew ("Object");__ref.setField("_tag",jamtableclv._tag);
 //BA.debugLineNum = 46;BA.debugLine="Private fx As JFX";
jamtableclv._fx = RemoteObject.createNew ("anywheresoftware.b4j.objects.JFX");__ref.setField("_fx",jamtableclv._fx);
 //BA.debugLineNum = 47;BA.debugLine="Private clvDatos As CustomListView";
jamtableclv._clvdatos = RemoteObject.createNew ("b4j.example.customlistview");__ref.setField("_clvdatos",jamtableclv._clvdatos);
 //BA.debugLineNum = 48;BA.debugLine="Private clvFiltros As CustomListView";
jamtableclv._clvfiltros = RemoteObject.createNew ("b4j.example.customlistview");__ref.setField("_clvfiltros",jamtableclv._clvfiltros);
 //BA.debugLineNum = 49;BA.debugLine="Private pnlMainJamTableCLV As Pane";
jamtableclv._pnlmainjamtableclv = RemoteObject.createNew ("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");__ref.setField("_pnlmainjamtableclv",jamtableclv._pnlmainjamtableclv);
 //BA.debugLineNum = 51;BA.debugLine="Private mAlturaItemFiltro As Int=32dip";
jamtableclv._malturaitemfiltro = jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 32)));__ref.setField("_malturaitemfiltro",jamtableclv._malturaitemfiltro);
 //BA.debugLineNum = 53;BA.debugLine="Private PCLV As PreoptimizedCLV";
jamtableclv._pclv = RemoteObject.createNew ("b4j.docU.preoptimizedclv");__ref.setField("_pclv",jamtableclv._pclv);
 //BA.debugLineNum = 55;BA.debugLine="Private mSQL As SQL";
jamtableclv._msql = RemoteObject.createNew ("anywheresoftware.b4j.objects.SQL");__ref.setField("_msql",jamtableclv._msql);
 //BA.debugLineNum = 57;BA.debugLine="Private LayoutLoaded As Boolean";
jamtableclv._layoutloaded = RemoteObject.createImmutable(false);__ref.setField("_layoutloaded",jamtableclv._layoutloaded);
 //BA.debugLineNum = 58;BA.debugLine="Private mParentForm As Form";
jamtableclv._mparentform = RemoteObject.createNew ("anywheresoftware.b4j.objects.Form");__ref.setField("_mparentform",jamtableclv._mparentform);
 //BA.debugLineNum = 60;BA.debugLine="Private Dialog As B4XDialog";
jamtableclv._dialog = RemoteObject.createNew ("b4j.docU.b4xdialog");__ref.setField("_dialog",jamtableclv._dialog);
 //BA.debugLineNum = 62;BA.debugLine="Private mIncluirBotonSalir As Boolean";
jamtableclv._mincluirbotonsalir = RemoteObject.createImmutable(false);__ref.setField("_mincluirbotonsalir",jamtableclv._mincluirbotonsalir);
 //BA.debugLineNum = 63;BA.debugLine="Private lblMostrarEliminarFiltros As Label";
jamtableclv._lblmostrareliminarfiltros = RemoteObject.createNew ("anywheresoftware.b4j.objects.LabelWrapper");__ref.setField("_lblmostrareliminarfiltros",jamtableclv._lblmostrareliminarfiltros);
 //BA.debugLineNum = 65;BA.debugLine="Private MenuBar As MenuBar";
jamtableclv._menubar = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.MenuBarWrapper");__ref.setField("_menubar",jamtableclv._menubar);
 //BA.debugLineNum = 66;BA.debugLine="Private mEstiloMenu As String ' estilo de los ico";
jamtableclv._mestilomenu = RemoteObject.createImmutable("");__ref.setField("_mestilomenu",jamtableclv._mestilomenu);
 //BA.debugLineNum = 67;BA.debugLine="Private mFontSizeMenuBar As Float";
jamtableclv._mfontsizemenubar = RemoteObject.createImmutable(0f);__ref.setField("_mfontsizemenubar",jamtableclv._mfontsizemenubar);
 //BA.debugLineNum = 68;BA.debugLine="Private mFontSizeLabelRecords As Float";
jamtableclv._mfontsizelabelrecords = RemoteObject.createImmutable(0f);__ref.setField("_mfontsizelabelrecords",jamtableclv._mfontsizelabelrecords);
 //BA.debugLineNum = 70;BA.debugLine="Private lstItemsDefaultMenu As List";
jamtableclv._lstitemsdefaultmenu = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");__ref.setField("_lstitemsdefaultmenu",jamtableclv._lstitemsdefaultmenu);
 //BA.debugLineNum = 71;BA.debugLine="Public MenuBarLinea = \"MenuLineajamTableCLV\", Men";
jamtableclv._menubarlinea = BA.ObjectToString("MenuLineajamTableCLV");__ref.setField("_menubarlinea",jamtableclv._menubarlinea);
jamtableclv._menubaracciones = BA.ObjectToString("MenuAccionesjamTableCLV");__ref.setField("_menubaracciones",jamtableclv._menubaracciones);
jamtableclv._menubartabla = BA.ObjectToString("MenuTablajamTableCLV");__ref.setField("_menubartabla",jamtableclv._menubartabla);
 //BA.debugLineNum = 73;BA.debugLine="Public Const ModoSeleccionIndividualTemp As Strin";
jamtableclv._modoseleccionindividualtemp = BA.ObjectToString("Individual Temp");__ref.setField("_modoseleccionindividualtemp",jamtableclv._modoseleccionindividualtemp);
 //BA.debugLineNum = 74;BA.debugLine="Public const ModoSeleccionIndividualPerm As Strin";
jamtableclv._modoseleccionindividualperm = BA.ObjectToString("Individual Perm");__ref.setField("_modoseleccionindividualperm",jamtableclv._modoseleccionindividualperm);
 //BA.debugLineNum = 75;BA.debugLine="Public const ModoSeleccionMultiple As String=\"Mul";
jamtableclv._modoseleccionmultiple = BA.ObjectToString("Multiple");__ref.setField("_modoseleccionmultiple",jamtableclv._modoseleccionmultiple);
 //BA.debugLineNum = 77;BA.debugLine="Public mUsarPCLV As Boolean";
jamtableclv._musarpclv = RemoteObject.createImmutable(false);__ref.setField("_musarpclv",jamtableclv._musarpclv);
 //BA.debugLineNum = 81;BA.debugLine="Private mMostrarMenuPanelItem As Boolean";
jamtableclv._mmostrarmenupanelitem = RemoteObject.createImmutable(false);__ref.setField("_mmostrarmenupanelitem",jamtableclv._mmostrarmenupanelitem);
 //BA.debugLineNum = 83;BA.debugLine="Private mModoSnap As Boolean=True  ' true: scroll";
jamtableclv._mmodosnap = jamtableclv.__c.getField(true,"True");__ref.setField("_mmodosnap",jamtableclv._mmodosnap);
 //BA.debugLineNum = 85;BA.debugLine="Private btnAddCampoOrdenacionSQL As Button";
jamtableclv._btnaddcampoordenacionsql = RemoteObject.createNew ("anywheresoftware.b4j.objects.ButtonWrapper");__ref.setField("_btnaddcampoordenacionsql",jamtableclv._btnaddcampoordenacionsql);
 //BA.debugLineNum = 86;BA.debugLine="Private btnEliminarCampoOrdenacionSQL As Button";
jamtableclv._btneliminarcampoordenacionsql = RemoteObject.createNew ("anywheresoftware.b4j.objects.ButtonWrapper");__ref.setField("_btneliminarcampoordenacionsql",jamtableclv._btneliminarcampoordenacionsql);
 //BA.debugLineNum = 87;BA.debugLine="Private cboCampoOrdenacionSQL As ComboBox";
jamtableclv._cbocampoordenacionsql = RemoteObject.createNew ("anywheresoftware.b4j.objects.ComboBoxWrapper");__ref.setField("_cbocampoordenacionsql",jamtableclv._cbocampoordenacionsql);
 //BA.debugLineNum = 88;BA.debugLine="Private cboTipoOrdenacionSQL As ComboBox";
jamtableclv._cbotipoordenacionsql = RemoteObject.createNew ("anywheresoftware.b4j.objects.ComboBoxWrapper");__ref.setField("_cbotipoordenacionsql",jamtableclv._cbotipoordenacionsql);
 //BA.debugLineNum = 89;BA.debugLine="Private CLVOrdenSQLjamTableCLV As CustomListView";
jamtableclv._clvordensqljamtableclv = RemoteObject.createNew ("b4j.example.customlistview");__ref.setField("_clvordensqljamtableclv",jamtableclv._clvordensqljamtableclv);
 //BA.debugLineNum = 91;BA.debugLine="Private mModoSeleccionItems As String";
jamtableclv._mmodoseleccionitems = RemoteObject.createImmutable("");__ref.setField("_mmodoseleccionitems",jamtableclv._mmodoseleccionitems);
 //BA.debugLineNum = 92;BA.debugLine="Private mPressedPanelColor As Int";
jamtableclv._mpressedpanelcolor = RemoteObject.createImmutable(0);__ref.setField("_mpressedpanelcolor",jamtableclv._mpressedpanelcolor);
 //BA.debugLineNum = 93;BA.debugLine="Private mSelectedPanelColor As Int";
jamtableclv._mselectedpanelcolor = RemoteObject.createImmutable(0);__ref.setField("_mselectedpanelcolor",jamtableclv._mselectedpanelcolor);
 //BA.debugLineNum = 95;BA.debugLine="Private mLeft As Int";
jamtableclv._mleft = RemoteObject.createImmutable(0);__ref.setField("_mleft",jamtableclv._mleft);
 //BA.debugLineNum = 96;BA.debugLine="Private mTop As Int";
jamtableclv._mtop = RemoteObject.createImmutable(0);__ref.setField("_mtop",jamtableclv._mtop);
 //BA.debugLineNum = 97;BA.debugLine="Private mWidth As Int";
jamtableclv._mwidth = RemoteObject.createImmutable(0);__ref.setField("_mwidth",jamtableclv._mwidth);
 //BA.debugLineNum = 98;BA.debugLine="Private mHeight As Int";
jamtableclv._mheight = RemoteObject.createImmutable(0);__ref.setField("_mheight",jamtableclv._mheight);
 //BA.debugLineNum = 100;BA.debugLine="Type JamTableCLVMyDisplay(Left As Double, Top As";
;
 //BA.debugLineNum = 103;BA.debugLine="Type clvJAMTableCLVFiltroItemValue (cboCampoFiltr";
;
 //BA.debugLineNum = 104;BA.debugLine="Type clvJAMTableCLVOrdenSQLItemValue (cboCampoOrd";
;
 //BA.debugLineNum = 109;BA.debugLine="Type CampoOrigenDatosJamTableCLV (ID As Int, Alia";
;
 //BA.debugLineNum = 112;BA.debugLine="Type CampoPrimaryKeyJamTableCLV (Campo As String,";
;
 //BA.debugLineNum = 113;BA.debugLine="Type ContextMenuItemNodoJamTableCLV (AliasCampo A";
;
 //BA.debugLineNum = 115;BA.debugLine="Type DatosItemCLVJamTableCLV(pnl As Pane, Value A";
;
 //BA.debugLineNum = 116;BA.debugLine="Type DatosItemIndexCLVJamTableCLV(Index As Int, P";
;
 //BA.debugLineNum = 118;BA.debugLine="Type DatosOrdenSQLJamTableCLV (IndiceOrdenSQL As";
;
 //BA.debugLineNum = 120;BA.debugLine="Type DatosItemSeleccionadoJamTableCLV(IndiceItem";
;
 //BA.debugLineNum = 124;BA.debugLine="Private lstMembersCampoOrigenDatosJamTableCLV As";
jamtableclv._lstmemberscampoorigendatosjamtableclv = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");
jamtableclv._lstmemberscampoorigendatosjamtableclv = jamtableclv.__c.runMethod(false, "ArrayToList", (Object)(RemoteObject.createNewArray("Object",new int[] {11},new Object[] {RemoteObject.createImmutable(("ID")),RemoteObject.createImmutable(("AliasCampo")),RemoteObject.createImmutable(("Campo")),RemoteObject.createImmutable(("CampoCalculado")),RemoteObject.createImmutable(("TipoDato")),RemoteObject.createImmutable(("EsFecha")),RemoteObject.createImmutable(("KeyID")),RemoteObject.createImmutable(("NoNulo")),RemoteObject.createImmutable(("ConValorDefecto")),RemoteObject.createImmutable(("ValorDefecto")),(RemoteObject.createImmutable("TipoControlFiltro"))})));__ref.setField("_lstmemberscampoorigendatosjamtableclv",jamtableclv._lstmemberscampoorigendatosjamtableclv);
 //BA.debugLineNum = 126;BA.debugLine="Private mLstCamposOrigenDatos As List  ' lista de";
jamtableclv._mlstcamposorigendatos = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");__ref.setField("_mlstcamposorigendatos",jamtableclv._mlstcamposorigendatos);
 //BA.debugLineNum = 127;BA.debugLine="Private mLstCamposOrigenDatosConfiguracionOrigina";
jamtableclv._mlstcamposorigendatosconfiguracionoriginal = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");__ref.setField("_mlstcamposorigendatosconfiguracionoriginal",jamtableclv._mlstcamposorigendatosconfiguracionoriginal);
 //BA.debugLineNum = 128;BA.debugLine="Private msCampostblOrigenDatos As String";
jamtableclv._mscampostblorigendatos = RemoteObject.createImmutable("");__ref.setField("_mscampostblorigendatos",jamtableclv._mscampostblorigendatos);
 //BA.debugLineNum = 129;BA.debugLine="Private mlstCamposOrigenDatosNoCalculados As List";
jamtableclv._mlstcamposorigendatosnocalculados = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");__ref.setField("_mlstcamposorigendatosnocalculados",jamtableclv._mlstcamposorigendatosnocalculados);
 //BA.debugLineNum = 130;BA.debugLine="Private mlstCamposPrimaryKey As List";
jamtableclv._mlstcamposprimarykey = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");__ref.setField("_mlstcamposprimarykey",jamtableclv._mlstcamposprimarykey);
 //BA.debugLineNum = 132;BA.debugLine="Private NombreJSONOrigenDatos As String";
jamtableclv._nombrejsonorigendatos = RemoteObject.createImmutable("");__ref.setField("_nombrejsonorigendatos",jamtableclv._nombrejsonorigendatos);
 //BA.debugLineNum = 133;BA.debugLine="Private NombreJSONOrigenDatosUsuario As String";
jamtableclv._nombrejsonorigendatosusuario = RemoteObject.createImmutable("");__ref.setField("_nombrejsonorigendatosusuario",jamtableclv._nombrejsonorigendatosusuario);
 //BA.debugLineNum = 134;BA.debugLine="Private FechaUltimaModificacionJSON As Long";
jamtableclv._fechaultimamodificacionjson = RemoteObject.createImmutable(0L);__ref.setField("_fechaultimamodificacionjson",jamtableclv._fechaultimamodificacionjson);
 //BA.debugLineNum = 136;BA.debugLine="Private lblSalirJamTableCLV As Label";
jamtableclv._lblsalirjamtableclv = RemoteObject.createNew ("anywheresoftware.b4j.objects.LabelWrapper");__ref.setField("_lblsalirjamtableclv",jamtableclv._lblsalirjamtableclv);
 //BA.debugLineNum = 137;BA.debugLine="Private imgViewSalirJamTableView As ImageView";
jamtableclv._imgviewsalirjamtableview = RemoteObject.createNew ("anywheresoftware.b4j.objects.ImageViewWrapper");__ref.setField("_imgviewsalirjamtableview",jamtableclv._imgviewsalirjamtableview);
 //BA.debugLineNum = 139;BA.debugLine="Private mlstAliasCamposFiltrables As List";
jamtableclv._mlstaliascamposfiltrables = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");__ref.setField("_mlstaliascamposfiltrables",jamtableclv._mlstaliascamposfiltrables);
 //BA.debugLineNum = 141;BA.debugLine="Public sCamposFiltrados As String";
jamtableclv._scamposfiltrados = RemoteObject.createImmutable("");__ref.setField("_scamposfiltrados",jamtableclv._scamposfiltrados);
 //BA.debugLineNum = 142;BA.debugLine="Private lstOperadoresFiltros As List";
jamtableclv._lstoperadoresfiltros = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");__ref.setField("_lstoperadoresfiltros",jamtableclv._lstoperadoresfiltros);
 //BA.debugLineNum = 143;BA.debugLine="Private lstCamposFiltros As List";
jamtableclv._lstcamposfiltros = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");__ref.setField("_lstcamposfiltros",jamtableclv._lstcamposfiltros);
 //BA.debugLineNum = 144;BA.debugLine="Private lstComparadoresFiltros As List";
jamtableclv._lstcomparadoresfiltros = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");__ref.setField("_lstcomparadoresfiltros",jamtableclv._lstcomparadoresfiltros);
 //BA.debugLineNum = 145;BA.debugLine="Public lstValoresFiltros As List";
jamtableclv._lstvaloresfiltros = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");__ref.setField("_lstvaloresfiltros",jamtableclv._lstvaloresfiltros);
 //BA.debugLineNum = 147;BA.debugLine="Private lstComparadoresTexto As List";
jamtableclv._lstcomparadorestexto = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");__ref.setField("_lstcomparadorestexto",jamtableclv._lstcomparadorestexto);
 //BA.debugLineNum = 148;BA.debugLine="Private lstComparadoresFechas As List";
jamtableclv._lstcomparadoresfechas = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");__ref.setField("_lstcomparadoresfechas",jamtableclv._lstcomparadoresfechas);
 //BA.debugLineNum = 149;BA.debugLine="Private lstComparadoresNumericos As List";
jamtableclv._lstcomparadoresnumericos = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");__ref.setField("_lstcomparadoresnumericos",jamtableclv._lstcomparadoresnumericos);
 //BA.debugLineNum = 150;BA.debugLine="Private lstComparadoresCamposTipoControlComboBox";
jamtableclv._lstcomparadorescampostipocontrolcombobox = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");__ref.setField("_lstcomparadorescampostipocontrolcombobox",jamtableclv._lstcomparadorescampostipocontrolcombobox);
 //BA.debugLineNum = 151;BA.debugLine="Private lstComparadoresBooleanos As List";
jamtableclv._lstcomparadoresbooleanos = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");__ref.setField("_lstcomparadoresbooleanos",jamtableclv._lstcomparadoresbooleanos);
 //BA.debugLineNum = 153;BA.debugLine="Private lblTitleFiltroDonde As Label";
jamtableclv._lbltitlefiltrodonde = RemoteObject.createNew ("anywheresoftware.b4j.objects.LabelWrapper");__ref.setField("_lbltitlefiltrodonde",jamtableclv._lbltitlefiltrodonde);
 //BA.debugLineNum = 154;BA.debugLine="Private cboCampoFiltro As ComboBox";
jamtableclv._cbocampofiltro = RemoteObject.createNew ("anywheresoftware.b4j.objects.ComboBoxWrapper");__ref.setField("_cbocampofiltro",jamtableclv._cbocampofiltro);
 //BA.debugLineNum = 155;BA.debugLine="Private cboCampoFiltroUserChange As Boolean";
jamtableclv._cbocampofiltrouserchange = RemoteObject.createImmutable(false);__ref.setField("_cbocampofiltrouserchange",jamtableclv._cbocampofiltrouserchange);
 //BA.debugLineNum = 156;BA.debugLine="Private cboAndOrFiltro As ComboBox";
jamtableclv._cboandorfiltro = RemoteObject.createNew ("anywheresoftware.b4j.objects.ComboBoxWrapper");__ref.setField("_cboandorfiltro",jamtableclv._cboandorfiltro);
 //BA.debugLineNum = 157;BA.debugLine="Private cboAndOrFiltroUserChange As Boolean";
jamtableclv._cboandorfiltrouserchange = RemoteObject.createImmutable(false);__ref.setField("_cboandorfiltrouserchange",jamtableclv._cboandorfiltrouserchange);
 //BA.debugLineNum = 159;BA.debugLine="Private cbComparadorFiltro As ChoiceBox";
jamtableclv._cbcomparadorfiltro = RemoteObject.createNew ("anywheresoftware.b4j.objects.ChoiceBoxWrapper");__ref.setField("_cbcomparadorfiltro",jamtableclv._cbcomparadorfiltro);
 //BA.debugLineNum = 161;BA.debugLine="Private cbComparadorFiltroUserChange As Boolean";
jamtableclv._cbcomparadorfiltrouserchange = RemoteObject.createImmutable(false);__ref.setField("_cbcomparadorfiltrouserchange",jamtableclv._cbcomparadorfiltrouserchange);
 //BA.debugLineNum = 162;BA.debugLine="Private cboValorFiltro As ComboBox";
jamtableclv._cbovalorfiltro = RemoteObject.createNew ("anywheresoftware.b4j.objects.ComboBoxWrapper");__ref.setField("_cbovalorfiltro",jamtableclv._cbovalorfiltro);
 //BA.debugLineNum = 163;BA.debugLine="Private cboValorFiltroUserChange As Boolean";
jamtableclv._cbovalorfiltrouserchange = RemoteObject.createImmutable(false);__ref.setField("_cbovalorfiltrouserchange",jamtableclv._cbovalorfiltrouserchange);
 //BA.debugLineNum = 164;BA.debugLine="Private txtValorFiltro As TextField";
jamtableclv._txtvalorfiltro = RemoteObject.createNew ("anywheresoftware.b4j.objects.TextInputControlWrapper.TextFieldWrapper");__ref.setField("_txtvalorfiltro",jamtableclv._txtvalorfiltro);
 //BA.debugLineNum = 165;BA.debugLine="Private btnSelFechaFiltro As Button";
jamtableclv._btnselfechafiltro = RemoteObject.createNew ("anywheresoftware.b4j.objects.ButtonWrapper");__ref.setField("_btnselfechafiltro",jamtableclv._btnselfechafiltro);
 //BA.debugLineNum = 166;BA.debugLine="Private txtValorFechaFiltro As TextField";
jamtableclv._txtvalorfechafiltro = RemoteObject.createNew ("anywheresoftware.b4j.objects.TextInputControlWrapper.TextFieldWrapper");__ref.setField("_txtvalorfechafiltro",jamtableclv._txtvalorfechafiltro);
 //BA.debugLineNum = 167;BA.debugLine="Private chkValorFiltro As CheckBox";
jamtableclv._chkvalorfiltro = RemoteObject.createNew ("anywheresoftware.b4j.objects.CheckboxWrapper");__ref.setField("_chkvalorfiltro",jamtableclv._chkvalorfiltro);
 //BA.debugLineNum = 168;BA.debugLine="Private chkValorFiltroUserChange As Boolean";
jamtableclv._chkvalorfiltrouserchange = RemoteObject.createImmutable(false);__ref.setField("_chkvalorfiltrouserchange",jamtableclv._chkvalorfiltrouserchange);
 //BA.debugLineNum = 170;BA.debugLine="Private ActualizarFiltroTextFieldAction As Boolea";
jamtableclv._actualizarfiltrotextfieldaction = RemoteObject.createImmutable(false);__ref.setField("_actualizarfiltrotextfieldaction",jamtableclv._actualizarfiltrotextfieldaction);
 //BA.debugLineNum = 172;BA.debugLine="Private OrigenDatosConfiguradoOK As Boolean";
jamtableclv._origendatosconfiguradook = RemoteObject.createImmutable(false);__ref.setField("_origendatosconfiguradook",jamtableclv._origendatosconfiguradook);
 //BA.debugLineNum = 173;BA.debugLine="Private FiltrosVisibles As Boolean";
jamtableclv._filtrosvisibles = RemoteObject.createImmutable(false);__ref.setField("_filtrosvisibles",jamtableclv._filtrosvisibles);
 //BA.debugLineNum = 175;BA.debugLine="Private lblFirst As Label";
jamtableclv._lblfirst = RemoteObject.createNew ("anywheresoftware.b4j.objects.LabelWrapper");__ref.setField("_lblfirst",jamtableclv._lblfirst);
 //BA.debugLineNum = 176;BA.debugLine="Private lblLast As Label";
jamtableclv._lbllast = RemoteObject.createNew ("anywheresoftware.b4j.objects.LabelWrapper");__ref.setField("_lbllast",jamtableclv._lbllast);
 //BA.debugLineNum = 177;BA.debugLine="Private lblNext As Label";
jamtableclv._lblnext = RemoteObject.createNew ("anywheresoftware.b4j.objects.LabelWrapper");__ref.setField("_lblnext",jamtableclv._lblnext);
 //BA.debugLineNum = 178;BA.debugLine="Private lblPrior As Label";
jamtableclv._lblprior = RemoteObject.createNew ("anywheresoftware.b4j.objects.LabelWrapper");__ref.setField("_lblprior",jamtableclv._lblprior);
 //BA.debugLineNum = 179;BA.debugLine="Private lblRecords As Label";
jamtableclv._lblrecords = RemoteObject.createNew ("anywheresoftware.b4j.objects.LabelWrapper");__ref.setField("_lblrecords",jamtableclv._lblrecords);
 //BA.debugLineNum = 180;BA.debugLine="Private lblPageRecords As Label";
jamtableclv._lblpagerecords = RemoteObject.createNew ("anywheresoftware.b4j.objects.LabelWrapper");__ref.setField("_lblpagerecords",jamtableclv._lblpagerecords);
 //BA.debugLineNum = 181;BA.debugLine="Private pnlNavButtons As Pane";
jamtableclv._pnlnavbuttons = RemoteObject.createNew ("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");__ref.setField("_pnlnavbuttons",jamtableclv._pnlnavbuttons);
 //BA.debugLineNum = 183;BA.debugLine="Private mPaginacion As Boolean";
jamtableclv._mpaginacion = RemoteObject.createImmutable(false);__ref.setField("_mpaginacion",jamtableclv._mpaginacion);
 //BA.debugLineNum = 185;BA.debugLine="Private lstNodosHabilitados As List";
jamtableclv._lstnodoshabilitados = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");__ref.setField("_lstnodoshabilitados",jamtableclv._lstnodoshabilitados);
 //BA.debugLineNum = 188;BA.debugLine="Private mFiltroActual As String";
jamtableclv._mfiltroactual = RemoteObject.createImmutable("");__ref.setField("_mfiltroactual",jamtableclv._mfiltroactual);
 //BA.debugLineNum = 189;BA.debugLine="Private FiltrosVisibles As Boolean";
jamtableclv._filtrosvisibles = RemoteObject.createImmutable(false);__ref.setField("_filtrosvisibles",jamtableclv._filtrosvisibles);
 //BA.debugLineNum = 190;BA.debugLine="Private NumCamposConControlFiltro As Int";
jamtableclv._numcamposconcontrolfiltro = RemoteObject.createImmutable(0);__ref.setField("_numcamposconcontrolfiltro",jamtableclv._numcamposconcontrolfiltro);
 //BA.debugLineNum = 192;BA.debugLine="Private NTotalRegistros, NTotalRegistrosFiltrados";
jamtableclv._ntotalregistros = RemoteObject.createImmutable(0);__ref.setField("_ntotalregistros",jamtableclv._ntotalregistros);
jamtableclv._ntotalregistrosfiltrados = RemoteObject.createImmutable(0);__ref.setField("_ntotalregistrosfiltrados",jamtableclv._ntotalregistrosfiltrados);
jamtableclv._nprimerregistrovisible = RemoteObject.createImmutable(0);__ref.setField("_nprimerregistrovisible",jamtableclv._nprimerregistrovisible);
jamtableclv._nultimoregistrovisible = RemoteObject.createImmutable(0);__ref.setField("_nultimoregistrovisible",jamtableclv._nultimoregistrovisible);
 //BA.debugLineNum = 195;BA.debugLine="Private lstOrdenSQL As List";
jamtableclv._lstordensql = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");__ref.setField("_lstordensql",jamtableclv._lstordensql);
 //BA.debugLineNum = 198;BA.debugLine="Private mlstIndicesItemsVisibles As List";
jamtableclv._mlstindicesitemsvisibles = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");__ref.setField("_mlstindicesitemsvisibles",jamtableclv._mlstindicesitemsvisibles);
 //BA.debugLineNum = 200;BA.debugLine="Private mConfiguracionInicialMenusRealizada As Bo";
jamtableclv._mconfiguracioninicialmenusrealizada = RemoteObject.createImmutable(false);__ref.setField("_mconfiguracioninicialmenusrealizada",jamtableclv._mconfiguracioninicialmenusrealizada);
 //BA.debugLineNum = 201;BA.debugLine="Private mContextMenu As ContextMenu";
jamtableclv._mcontextmenu = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.ContextMenuWrapper");__ref.setField("_mcontextmenu",jamtableclv._mcontextmenu);
 //BA.debugLineNum = 202;BA.debugLine="Private lstContextMenuItemsGenerales As List";
jamtableclv._lstcontextmenuitemsgenerales = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");__ref.setField("_lstcontextmenuitemsgenerales",jamtableclv._lstcontextmenuitemsgenerales);
 //BA.debugLineNum = 203;BA.debugLine="Private lstContextMenuItemsNodo As List";
jamtableclv._lstcontextmenuitemsnodo = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");__ref.setField("_lstcontextmenuitemsnodo",jamtableclv._lstcontextmenuitemsnodo);
 //BA.debugLineNum = 204;BA.debugLine="Private lstContextMenuItemsNodoSeleccionado As Li";
jamtableclv._lstcontextmenuitemsnodoseleccionado = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");__ref.setField("_lstcontextmenuitemsnodoseleccionado",jamtableclv._lstcontextmenuitemsnodoseleccionado);
 //BA.debugLineNum = 208;BA.debugLine="Private mPanelInfoVisible As Boolean";
jamtableclv._mpanelinfovisible = RemoteObject.createImmutable(false);__ref.setField("_mpanelinfovisible",jamtableclv._mpanelinfovisible);
 //BA.debugLineNum = 209;BA.debugLine="Private mPanelHeadersVisible As Boolean";
jamtableclv._mpanelheadersvisible = RemoteObject.createImmutable(false);__ref.setField("_mpanelheadersvisible",jamtableclv._mpanelheadersvisible);
 //BA.debugLineNum = 210;BA.debugLine="Private mAlturaPanelHeaders As Int";
jamtableclv._malturapanelheaders = RemoteObject.createImmutable(0);__ref.setField("_malturapanelheaders",jamtableclv._malturapanelheaders);
 //BA.debugLineNum = 211;BA.debugLine="Private lblInfoJamTableCLV As B4XView";
jamtableclv._lblinfojamtableclv = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");__ref.setField("_lblinfojamtableclv",jamtableclv._lblinfojamtableclv);
 //BA.debugLineNum = 213;BA.debugLine="Private mAlturaItems As Int";
jamtableclv._malturaitems = RemoteObject.createImmutable(0);__ref.setField("_malturaitems",jamtableclv._malturaitems);
 //BA.debugLineNum = 214;BA.debugLine="Private mAlturaSeparadorPaneles As Float";
jamtableclv._malturaseparadorpaneles = RemoteObject.createImmutable(0f);__ref.setField("_malturaseparadorpaneles",jamtableclv._malturaseparadorpaneles);
 //BA.debugLineNum = 216;BA.debugLine="Private mNombreAplicacion As String";
jamtableclv._mnombreaplicacion = RemoteObject.createImmutable("");__ref.setField("_mnombreaplicacion",jamtableclv._mnombreaplicacion);
 //BA.debugLineNum = 217;BA.debugLine="Private mNombreUsuarioWindows As String";
jamtableclv._mnombreusuariowindows = RemoteObject.createImmutable("");__ref.setField("_mnombreusuariowindows",jamtableclv._mnombreusuariowindows);
 //BA.debugLineNum = 219;BA.debugLine="Private lblSalirJamTableCLV As Label";
jamtableclv._lblsalirjamtableclv = RemoteObject.createNew ("anywheresoftware.b4j.objects.LabelWrapper");__ref.setField("_lblsalirjamtableclv",jamtableclv._lblsalirjamtableclv);
 //BA.debugLineNum = 221;BA.debugLine="Private CLVCustomDialogJamTableCLV As CustomListV";
jamtableclv._clvcustomdialogjamtableclv = RemoteObject.createNew ("b4j.example.customlistview");__ref.setField("_clvcustomdialogjamtableclv",jamtableclv._clvcustomdialogjamtableclv);
 //BA.debugLineNum = 223;BA.debugLine="Private jamCircularProgressBarJamTableCLV As jamC";
jamtableclv._jamcircularprogressbarjamtableclv = RemoteObject.createNew ("b4j.docU.jamcircularprogressbar");__ref.setField("_jamcircularprogressbarjamtableclv",jamtableclv._jamcircularprogressbarjamtableclv);
 //BA.debugLineNum = 224;BA.debugLine="Private pnlInfoJamTableCLV As Pane";
jamtableclv._pnlinfojamtableclv = RemoteObject.createNew ("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");__ref.setField("_pnlinfojamtableclv",jamtableclv._pnlinfojamtableclv);
 //BA.debugLineNum = 225;BA.debugLine="Private pnlHeadersJamTableCLV As Pane";
jamtableclv._pnlheadersjamtableclv = RemoteObject.createNew ("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");__ref.setField("_pnlheadersjamtableclv",jamtableclv._pnlheadersjamtableclv);
 //BA.debugLineNum = 227;BA.debugLine="Private TipoControlFiltro_TextField, TipoControlF";
jamtableclv._tipocontrolfiltro_textfield = RemoteObject.createImmutable("");__ref.setField("_tipocontrolfiltro_textfield",jamtableclv._tipocontrolfiltro_textfield);
jamtableclv._tipocontrolfiltro_combobox = RemoteObject.createImmutable("");__ref.setField("_tipocontrolfiltro_combobox",jamtableclv._tipocontrolfiltro_combobox);
jamtableclv._tipocontrolfiltro_checkbox = RemoteObject.createImmutable("");__ref.setField("_tipocontrolfiltro_checkbox",jamtableclv._tipocontrolfiltro_checkbox);
jamtableclv._tipocontrolfiltro_textfieldbuttonselfecha = RemoteObject.createImmutable("");__ref.setField("_tipocontrolfiltro_textfieldbuttonselfecha",jamtableclv._tipocontrolfiltro_textfieldbuttonselfecha);
 //BA.debugLineNum = 228;BA.debugLine="TipoControlFiltro_TextField = \"TextField\"";
__ref.setField ("_tipocontrolfiltro_textfield" /*RemoteObject*/ ,BA.ObjectToString("TextField"));
 //BA.debugLineNum = 229;BA.debugLine="TipoControlFiltro_ComboBox = \"ComboBox\"";
__ref.setField ("_tipocontrolfiltro_combobox" /*RemoteObject*/ ,BA.ObjectToString("ComboBox"));
 //BA.debugLineNum = 230;BA.debugLine="TipoControlFiltro_CheckBox = \"CheckBox\"";
__ref.setField ("_tipocontrolfiltro_checkbox" /*RemoteObject*/ ,BA.ObjectToString("CheckBox"));
 //BA.debugLineNum = 231;BA.debugLine="TipoControlFiltro_TextFieldButtonSelFecha = \"Text";
__ref.setField ("_tipocontrolfiltro_textfieldbuttonselfecha" /*RemoteObject*/ ,BA.ObjectToString("TextFieldBtnSelFecha"));
 //BA.debugLineNum = 233;BA.debugLine="Public ColorFondoPanelInfoInicial As Int";
jamtableclv._colorfondopanelinfoinicial = RemoteObject.createImmutable(0);__ref.setField("_colorfondopanelinfoinicial",jamtableclv._colorfondopanelinfoinicial);
 //BA.debugLineNum = 234;BA.debugLine="Public ColorTextoPanelInfoInicial As Int";
jamtableclv._colortextopanelinfoinicial = RemoteObject.createImmutable(0);__ref.setField("_colortextopanelinfoinicial",jamtableclv._colortextopanelinfoinicial);
 //BA.debugLineNum = 236;BA.debugLine="Public ColorFondoPanelItemsImpares As Int";
jamtableclv._colorfondopanelitemsimpares = RemoteObject.createImmutable(0);__ref.setField("_colorfondopanelitemsimpares",jamtableclv._colorfondopanelitemsimpares);
 //BA.debugLineNum = 237;BA.debugLine="Public ColorFondoPanelItemsPares As Int";
jamtableclv._colorfondopanelitemspares = RemoteObject.createImmutable(0);__ref.setField("_colorfondopanelitemspares",jamtableclv._colorfondopanelitemspares);
 //BA.debugLineNum = 238;BA.debugLine="Private ArrayColoresItems(2) As Int";
jamtableclv._arraycoloresitems = RemoteObject.createNewArray ("int", new int[] {2}, new Object[]{});__ref.setField("_arraycoloresitems",jamtableclv._arraycoloresitems);
 //BA.debugLineNum = 240;BA.debugLine="Public ColorBordeItems As Int";
jamtableclv._colorbordeitems = RemoteObject.createImmutable(0);__ref.setField("_colorbordeitems",jamtableclv._colorbordeitems);
 //BA.debugLineNum = 241;BA.debugLine="Public AnchoBordeItems As Int";
jamtableclv._anchobordeitems = RemoteObject.createImmutable(0);__ref.setField("_anchobordeitems",jamtableclv._anchobordeitems);
 //BA.debugLineNum = 246;BA.debugLine="Private pnlBaseJamCircularProgressBar As B4XView";
jamtableclv._pnlbasejamcircularprogressbar = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");__ref.setField("_pnlbasejamcircularprogressbar",jamtableclv._pnlbasejamcircularprogressbar);
 //BA.debugLineNum = 247;BA.debugLine="Private pnlBaseCLVDatos As B4XView";
jamtableclv._pnlbaseclvdatos = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");__ref.setField("_pnlbaseclvdatos",jamtableclv._pnlbaseclvdatos);
 //BA.debugLineNum = 250;BA.debugLine="Private MeasurementCanvas As B4XCanvas";
jamtableclv._measurementcanvas = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XCanvas");__ref.setField("_measurementcanvas",jamtableclv._measurementcanvas);
 //BA.debugLineNum = 252;BA.debugLine="Private CLVSelections As CLVSelectionsJamTableCLV";
jamtableclv._clvselections = RemoteObject.createNew ("b4j.docU.clvselectionsjamtableclv");__ref.setField("_clvselections",jamtableclv._clvselections);
 //BA.debugLineNum = 253;BA.debugLine="Private JamTableCLVDialogFlexGrid As FlexGrid";
jamtableclv._jamtableclvdialogflexgrid = RemoteObject.createNew ("b4j.example.flexgrid");__ref.setField("_jamtableclvdialogflexgrid",jamtableclv._jamtableclvdialogflexgrid);
 //BA.debugLineNum = 261;BA.debugLine="Private OffsetAnterior As Int=1";
jamtableclv._offsetanterior = BA.numberCast(int.class, 1);__ref.setField("_offsetanterior",jamtableclv._offsetanterior);
 //BA.debugLineNum = 262;BA.debugLine="Private PrimerPanelVisibleAnterior As Int";
jamtableclv._primerpanelvisibleanterior = RemoteObject.createImmutable(0);__ref.setField("_primerpanelvisibleanterior",jamtableclv._primerpanelvisibleanterior);
 //BA.debugLineNum = 267;BA.debugLine="Private ScrollingDown As Boolean";
jamtableclv._scrollingdown = RemoteObject.createImmutable(false);__ref.setField("_scrollingdown",jamtableclv._scrollingdown);
 //BA.debugLineNum = 269;BA.debugLine="Private keycode As JavaObject";
jamtableclv._keycode = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");__ref.setField("_keycode",jamtableclv._keycode);
 //BA.debugLineNum = 271;BA.debugLine="Private xNodeContextMenu As B4XView";
jamtableclv._xnodecontextmenu = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");__ref.setField("_xnodecontextmenu",jamtableclv._xnodecontextmenu);
 //BA.debugLineNum = 275;BA.debugLine="Private WindowsScale As Float";
jamtableclv._windowsscale = RemoteObject.createImmutable(0f);__ref.setField("_windowsscale",jamtableclv._windowsscale);
 //BA.debugLineNum = 277;BA.debugLine="End Sub";
return RemoteObject.createImmutable("");
}
public static RemoteObject  _clear(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("Clear (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6879);
if (RapidSub.canDelegate("clear")) { return __ref.runUserSub(false, "jamtableclv","clear", __ref);}
 BA.debugLineNum = 6879;BA.debugLine="public Sub Clear";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6880;BA.debugLine="CLVSelections.Clear";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvselections" /*RemoteObject*/ ).runClassMethod (b4j.docU.clvselectionsjamtableclv.class, "_clear" /*RemoteObject*/ );
 BA.debugLineNum = 6881;BA.debugLine="clvDatos.Clear";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runVoidMethod ("_clear");
 BA.debugLineNum = 6882;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _clng(RemoteObject __ref,RemoteObject _o) throws Exception{
try {
		Debug.PushSubsStack("CLng (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7853);
if (RapidSub.canDelegate("clng")) { return __ref.runUserSub(false, "jamtableclv","clng", __ref, _o);}
RemoteObject _ox = RemoteObject.createImmutable("");
Debug.locals.put("o", _o);
 BA.debugLineNum = 7853;BA.debugLine="public Sub CLng(o As Object) As Long";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 7854;BA.debugLine="Try";
Debug.JustUpdateDeviceLine();
try { BA.debugLineNum = 7855;BA.debugLine="Dim ox As String = o";
Debug.JustUpdateDeviceLine();
_ox = BA.ObjectToString(_o);Debug.locals.put("ox", _ox);Debug.locals.put("ox", _ox);
 BA.debugLineNum = 7856;BA.debugLine="ox = GetNumbers(ox)";
Debug.JustUpdateDeviceLine();
_ox = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_getnumbers" /*RemoteObject*/ ,(Object)(_ox));Debug.locals.put("ox", _ox);
 BA.debugLineNum = 7857;BA.debugLine="If ox = \"\" Then ox = \"0\"";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_ox,BA.ObjectToString(""))) { 
_ox = BA.ObjectToString("0");Debug.locals.put("ox", _ox);};
 BA.debugLineNum = 7858;BA.debugLine="Return Floor(ox)";
Debug.JustUpdateDeviceLine();
Debug.CheckDeviceExceptions();if (true) return BA.numberCast(long.class, jamtableclv.__c.runMethod(true,"Floor",(Object)(BA.numberCast(double.class, _ox))));
 Debug.CheckDeviceExceptions();
} 
       catch (Exception e7) {
			BA.rdebugUtils.runVoidMethod("setLastException",__ref.getField(false, "ba"), e7.toString()); BA.debugLineNum = 7860;BA.debugLine="Return 0";
Debug.JustUpdateDeviceLine();
if (true) return BA.numberCast(long.class, 0);
 };
 BA.debugLineNum = 7862;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(0L);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _clvdatos_itemclick(RemoteObject __ref,RemoteObject _index,RemoteObject _value) throws Exception{
try {
		Debug.PushSubsStack("clvDatos_ItemClick (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6841);
if (RapidSub.canDelegate("clvdatos_itemclick")) { return __ref.runUserSub(false, "jamtableclv","clvdatos_itemclick", __ref, _index, _value);}
Debug.locals.put("Index", _index);
Debug.locals.put("Value", _value);
 BA.debugLineNum = 6841;BA.debugLine="Private Sub clvDatos_ItemClick (Index As Int, Valu";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6842;BA.debugLine="CLVSelections.ItemClicked(Index)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvselections" /*RemoteObject*/ ).runClassMethod (b4j.docU.clvselectionsjamtableclv.class, "_itemclicked" /*RemoteObject*/ ,(Object)(_index));
 BA.debugLineNum = 6843;BA.debugLine="If SubExists(mCallBack,mEventName & \"_ItemClick\")";
Debug.JustUpdateDeviceLine();
if (jamtableclv.__c.runMethod(true,"SubExists",__ref.getField(false, "ba"),(Object)(__ref.getField(false,"_mcallback" /*RemoteObject*/ )),(Object)(RemoteObject.concat(__ref.getField(true,"_meventname" /*RemoteObject*/ ),RemoteObject.createImmutable("_ItemClick")))).<Boolean>get().booleanValue()) { 
 BA.debugLineNum = 6844;BA.debugLine="CallSubDelayed3(mCallBack, mEventName & \"_ItemCl";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("CallSubDelayed3",__ref.getField(false, "ba"),(Object)(__ref.getField(false,"_mcallback" /*RemoteObject*/ )),(Object)(RemoteObject.concat(__ref.getField(true,"_meventname" /*RemoteObject*/ ),RemoteObject.createImmutable("_ItemClick"))),(Object)((_index)),(Object)(_value));
 };
 BA.debugLineNum = 6846;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _clvdatos_itemlongclick(RemoteObject __ref,RemoteObject _index,RemoteObject _value) throws Exception{
try {
		Debug.PushSubsStack("clvDatos_ItemLongClick (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6849);
if (RapidSub.canDelegate("clvdatos_itemlongclick")) { return __ref.runUserSub(false, "jamtableclv","clvdatos_itemlongclick", __ref, _index, _value);}
Debug.locals.put("Index", _index);
Debug.locals.put("Value", _value);
 BA.debugLineNum = 6849;BA.debugLine="Private Sub clvDatos_ItemLongClick (Index As Int,";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6851;BA.debugLine="If SubExists(mCallBack,mEventName & \"_ItemLongCli";
Debug.JustUpdateDeviceLine();
if (jamtableclv.__c.runMethod(true,"SubExists",__ref.getField(false, "ba"),(Object)(__ref.getField(false,"_mcallback" /*RemoteObject*/ )),(Object)(RemoteObject.concat(__ref.getField(true,"_meventname" /*RemoteObject*/ ),RemoteObject.createImmutable("_ItemLongClick")))).<Boolean>get().booleanValue()) { 
 BA.debugLineNum = 6852;BA.debugLine="CallSubDelayed3(mCallBack, mEventName & \"_ItemLo";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("CallSubDelayed3",__ref.getField(false, "ba"),(Object)(__ref.getField(false,"_mcallback" /*RemoteObject*/ )),(Object)(RemoteObject.concat(__ref.getField(true,"_meventname" /*RemoteObject*/ ),RemoteObject.createImmutable("_ItemLongClick"))),(Object)((_index)),(Object)(_value));
 };
 BA.debugLineNum = 6854;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _clvdatos_reachend(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("clvDatos_ReachEnd (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6856);
if (RapidSub.canDelegate("clvdatos_reachend")) { return __ref.runUserSub(false, "jamtableclv","clvdatos_reachend", __ref);}
 BA.debugLineNum = 6856;BA.debugLine="Private Sub clvDatos_ReachEnd";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6857;BA.debugLine="OffsetAnterior=clvDatos.sv.ScrollViewOffsetY";
Debug.JustUpdateDeviceLine();
__ref.setField ("_offsetanterior" /*RemoteObject*/ ,BA.numberCast(int.class, __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).getField(false,"_sv").runMethod(true,"getScrollViewOffsetY")));
 BA.debugLineNum = 6858;BA.debugLine="If SubExists(mCallBack,mEventName & \"_ReachEnd\")";
Debug.JustUpdateDeviceLine();
if (jamtableclv.__c.runMethod(true,"SubExists",__ref.getField(false, "ba"),(Object)(__ref.getField(false,"_mcallback" /*RemoteObject*/ )),(Object)(RemoteObject.concat(__ref.getField(true,"_meventname" /*RemoteObject*/ ),RemoteObject.createImmutable("_ReachEnd")))).<Boolean>get().booleanValue()) { 
 BA.debugLineNum = 6859;BA.debugLine="CallSubDelayed(mCallBack, mEventName & \"_ReachEn";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("CallSubDelayed",__ref.getField(false, "ba"),(Object)(__ref.getField(false,"_mcallback" /*RemoteObject*/ )),(Object)(RemoteObject.concat(__ref.getField(true,"_meventname" /*RemoteObject*/ ),RemoteObject.createImmutable("_ReachEnd"))));
 };
 BA.debugLineNum = 6861;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _clvdatos_scrollchanged(RemoteObject __ref,RemoteObject _offset) throws Exception{
try {
		Debug.PushSubsStack("clvDatos_ScrollChanged (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6996);
if (RapidSub.canDelegate("clvdatos_scrollchanged")) { return __ref.runUserSub(false, "jamtableclv","clvdatos_scrollchanged", __ref, _offset);}
RemoteObject _i = RemoteObject.createImmutable(0);
RemoteObject _item = RemoteObject.declareNull("b4j.example.customlistview._clvitem");
RemoteObject _visiblepart = RemoteObject.createImmutable(0);
Debug.locals.put("Offset", _offset);
 BA.debugLineNum = 6996;BA.debugLine="Sub clvDatos_ScrollChanged (Offset As Int)";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6997;BA.debugLine="If mModoSnap=False Then Return";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",__ref.getField(true,"_mmodosnap" /*RemoteObject*/ ),jamtableclv.__c.getField(true,"False"))) { 
if (true) return RemoteObject.createImmutable("");};
 BA.debugLineNum = 7001;BA.debugLine="Log(\"clvDatos_ScrollChanged, Offset:\" & Offset)";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("LogImpl","9171114501",RemoteObject.concat(RemoteObject.createImmutable("clvDatos_ScrollChanged, Offset:"),_offset),0);
 BA.debugLineNum = 7004;BA.debugLine="If Offset=OffsetAnterior Then Return";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_offset,BA.numberCast(double.class, __ref.getField(true,"_offsetanterior" /*RemoteObject*/ )))) { 
if (true) return RemoteObject.createImmutable("");};
 BA.debugLineNum = 7006;BA.debugLine="If Offset>OffsetAnterior Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean(">",_offset,BA.numberCast(double.class, __ref.getField(true,"_offsetanterior" /*RemoteObject*/ )))) { 
 BA.debugLineNum = 7007;BA.debugLine="ScrollingDown=True";
Debug.JustUpdateDeviceLine();
__ref.setField ("_scrollingdown" /*RemoteObject*/ ,jamtableclv.__c.getField(true,"True"));
 }else {
 BA.debugLineNum = 7009;BA.debugLine="ScrollingDown=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_scrollingdown" /*RemoteObject*/ ,jamtableclv.__c.getField(true,"False"));
 };
 BA.debugLineNum = 7012;BA.debugLine="Dim i As Int = clvDatos.FirstVisibleIndex";
Debug.JustUpdateDeviceLine();
_i = __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"_getfirstvisibleindex");Debug.locals.put("i", _i);Debug.locals.put("i", _i);
 BA.debugLineNum = 7013;BA.debugLine="Dim item As CLVItem	 = clvDatos.GetRawListItem(i)";
Debug.JustUpdateDeviceLine();
_item = __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(false,"_getrawlistitem",(Object)(_i));Debug.locals.put("item", _item);Debug.locals.put("item", _item);
 BA.debugLineNum = 7014;BA.debugLine="Dim visiblepart As Int = item.Offset + item.Size";
Debug.JustUpdateDeviceLine();
_visiblepart = RemoteObject.solve(new RemoteObject[] {_item.getField(true,"Offset"),_item.getField(true,"Size"),_offset}, "+-",2, 1);Debug.locals.put("visiblepart", _visiblepart);Debug.locals.put("visiblepart", _visiblepart);
 BA.debugLineNum = 7016;BA.debugLine="If visiblepart<item.Size Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("<",_visiblepart,BA.numberCast(double.class, _item.getField(true,"Size")))) { 
 BA.debugLineNum = 7017;BA.debugLine="If ScrollingDown Then";
Debug.JustUpdateDeviceLine();
if (__ref.getField(true,"_scrollingdown" /*RemoteObject*/ ).<Boolean>get().booleanValue()) { 
 BA.debugLineNum = 7019;BA.debugLine="clvDatos.JumpToItem(i+1)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runVoidMethod ("_jumptoitem",(Object)(RemoteObject.solve(new RemoteObject[] {_i,RemoteObject.createImmutable(1)}, "+",1, 1)));
 }else {
 BA.debugLineNum = 7022;BA.debugLine="clvDatos.JumpToItem(i)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runVoidMethod ("_jumptoitem",(Object)(_i));
 };
 }else {
 BA.debugLineNum = 7025;BA.debugLine="OffsetAnterior=Offset";
Debug.JustUpdateDeviceLine();
__ref.setField ("_offsetanterior" /*RemoteObject*/ ,_offset);
 };
 BA.debugLineNum = 7027;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _clvdatos_visiblerangechanged(RemoteObject __ref,RemoteObject _firstindex,RemoteObject _lastindex) throws Exception{
try {
		Debug.PushSubsStack("clvDatos_VisibleRangeChanged (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6414);
if (RapidSub.canDelegate("clvdatos_visiblerangechanged")) { return __ref.runUserSub(false, "jamtableclv","clvdatos_visiblerangechanged", __ref, _firstindex, _lastindex);}
RemoteObject _lstpclvvisiblerangechanged = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.List");
RemoteObject _findex = RemoteObject.createImmutable(0);
RemoteObject _lindex = RemoteObject.createImmutable(0);
int _i = 0;
RemoteObject _item = RemoteObject.declareNull("b4j.example.customlistview._clvitem");
RemoteObject _colorfondopanelactual = RemoteObject.createImmutable(0);
RemoteObject _pnl = RemoteObject.declareNull("anywheresoftware.b4a.objects.B4XViewWrapper");
RemoteObject _mdata = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
RemoteObject _datositem = RemoteObject.declareNull("b4j.docU.jamtableclv._datositemindexclvjamtableclv");
RemoteObject _extrasize = RemoteObject.createImmutable(0);
RemoteObject _lblmenupanelitem = RemoteObject.declareNull("anywheresoftware.b4j.objects.LabelWrapper");
RemoteObject _xlblmenupanelitem = RemoteObject.declareNull("anywheresoftware.b4a.objects.B4XViewWrapper");
RemoteObject _xnode = RemoteObject.declareNull("anywheresoftware.b4a.objects.B4XViewWrapper");
Debug.locals.put("FirstIndex", _firstindex);
Debug.locals.put("LastIndex", _lastindex);
 BA.debugLineNum = 6414;BA.debugLine="private Sub clvDatos_VisibleRangeChanged (FirstInd";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6419;BA.debugLine="Log(\"clvDatos_VisibleRangeChanged\")";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("LogImpl","9168165381",RemoteObject.createImmutable("clvDatos_VisibleRangeChanged"),0);
 BA.debugLineNum = 6425;BA.debugLine="If mUsarPCLV Then";
Debug.JustUpdateDeviceLine();
if (__ref.getField(true,"_musarpclv" /*RemoteObject*/ ).<Boolean>get().booleanValue()) { 
 BA.debugLineNum = 6426;BA.debugLine="Dim lstPCLVVisibleRangeChanged As List=PCLV.Visi";
Debug.JustUpdateDeviceLine();
_lstpclvvisiblerangechanged = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");
_lstpclvvisiblerangechanged = __ref.getField(false,"_pclv" /*RemoteObject*/ ).runClassMethod (b4j.docU.preoptimizedclv.class, "_visiblerangechanged" /*RemoteObject*/ ,(Object)(_firstindex),(Object)(_lastindex));Debug.locals.put("lstPCLVVisibleRangeChanged", _lstpclvvisiblerangechanged);Debug.locals.put("lstPCLVVisibleRangeChanged", _lstpclvvisiblerangechanged);
 BA.debugLineNum = 6427;BA.debugLine="If lstPCLVVisibleRangeChanged.Size=0 Then Return";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_lstpclvvisiblerangechanged.runMethod(true,"getSize"),BA.numberCast(double.class, 0))) { 
if (true) return RemoteObject.createImmutable("");};
 BA.debugLineNum = 6428;BA.debugLine="Dim fIndex As Int=lstPCLVVisibleRangeChanged.Get";
Debug.JustUpdateDeviceLine();
_findex = BA.numberCast(int.class, _lstpclvvisiblerangechanged.runMethod(false,"Get",(Object)(BA.numberCast(int.class, 0))));Debug.locals.put("fIndex", _findex);Debug.locals.put("fIndex", _findex);
 BA.debugLineNum = 6429;BA.debugLine="Dim lIndex As Int=lstPCLVVisibleRangeChanged.Get";
Debug.JustUpdateDeviceLine();
_lindex = BA.numberCast(int.class, _lstpclvvisiblerangechanged.runMethod(false,"Get",(Object)(RemoteObject.solve(new RemoteObject[] {_lstpclvvisiblerangechanged.runMethod(true,"getSize"),RemoteObject.createImmutable(1)}, "-",1, 1))));Debug.locals.put("lIndex", _lindex);Debug.locals.put("lIndex", _lindex);
 BA.debugLineNum = 6431;BA.debugLine="For i=fIndex To lIndex";
Debug.JustUpdateDeviceLine();
{
final int step7 = 1;
final int limit7 = _lindex.<Integer>get().intValue();
_i = _findex.<Integer>get().intValue() ;
for (;(step7 > 0 && _i <= limit7) || (step7 < 0 && _i >= limit7) ;_i = ((int)(0 + _i + step7))  ) {
Debug.locals.put("i", _i);
 BA.debugLineNum = 6439;BA.debugLine="Dim item As CLVItem = clvDatos.GetRawListItem(i";
Debug.JustUpdateDeviceLine();
_item = __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(false,"_getrawlistitem",(Object)(BA.numberCast(int.class, _i)));Debug.locals.put("item", _item);Debug.locals.put("item", _item);
 BA.debugLineNum = 6443;BA.debugLine="Dim ColorFondoPanelActual As Int";
Debug.JustUpdateDeviceLine();
_colorfondopanelactual = RemoteObject.createImmutable(0);Debug.locals.put("ColorFondoPanelActual", _colorfondopanelactual);
 BA.debugLineNum = 6444;BA.debugLine="If (i Mod 2)=0  Then   ' empieza en el 0";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",(RemoteObject.solve(new RemoteObject[] {RemoteObject.createImmutable(_i),RemoteObject.createImmutable(2)}, "%",0, 1)),BA.numberCast(double.class, 0))) { 
 BA.debugLineNum = 6445;BA.debugLine="ColorFondoPanelActual=ColorFondoPanelItemsImpa";
Debug.JustUpdateDeviceLine();
_colorfondopanelactual = __ref.getField(true,"_colorfondopanelitemsimpares" /*RemoteObject*/ );Debug.locals.put("ColorFondoPanelActual", _colorfondopanelactual);
 }else {
 BA.debugLineNum = 6447;BA.debugLine="ColorFondoPanelActual=ColorFondoPanelItemsPare";
Debug.JustUpdateDeviceLine();
_colorfondopanelactual = __ref.getField(true,"_colorfondopanelitemspares" /*RemoteObject*/ );Debug.locals.put("ColorFondoPanelActual", _colorfondopanelactual);
 };
 BA.debugLineNum = 6450;BA.debugLine="Dim pnl As B4XView = xui.CreatePanel(\"\")";
Debug.JustUpdateDeviceLine();
_pnl = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");
_pnl = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"CreatePanel",__ref.getField(false, "ba"),(Object)(RemoteObject.createImmutable("")));Debug.locals.put("pnl", _pnl);Debug.locals.put("pnl", _pnl);
 BA.debugLineNum = 6451;BA.debugLine="item.Panel.AddView(pnl, 0, 0, item.Panel.Width,";
Debug.JustUpdateDeviceLine();
_item.getField(false,"Panel").runVoidMethod ("AddView",(Object)((_pnl.getObject())),(Object)(BA.numberCast(double.class, 0)),(Object)(BA.numberCast(double.class, 0)),(Object)(_item.getField(false,"Panel").runMethod(true,"getWidth")),(Object)(_item.getField(false,"Panel").runMethod(true,"getHeight")));
 BA.debugLineNum = 6452;BA.debugLine="pnl.SetColorAndBorder(ColorFondoPanelActual,Anc";
Debug.JustUpdateDeviceLine();
_pnl.runVoidMethod ("SetColorAndBorder",(Object)(_colorfondopanelactual),(Object)(BA.numberCast(double.class, __ref.getField(true,"_anchobordeitems" /*RemoteObject*/ ))),(Object)(__ref.getField(true,"_colorbordeitems" /*RemoteObject*/ )),(Object)(BA.numberCast(double.class, 0)));
 BA.debugLineNum = 6454;BA.debugLine="Dim mData As Map = clvDatos.GetValue(i)";
Debug.JustUpdateDeviceLine();
_mdata = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");
_mdata = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.collections.Map"), __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(false,"_getvalue",(Object)(BA.numberCast(int.class, _i))));Debug.locals.put("mData", _mdata);Debug.locals.put("mData", _mdata);
 BA.debugLineNum = 6456;BA.debugLine="Dim DatosItem As DatosItemIndexCLVJamTableCLV";
Debug.JustUpdateDeviceLine();
_datositem = RemoteObject.createNew ("b4j.docU.jamtableclv._datositemindexclvjamtableclv");Debug.locals.put("DatosItem", _datositem);
 BA.debugLineNum = 6457;BA.debugLine="DatosItem.Index=i";
Debug.JustUpdateDeviceLine();
_datositem.setField ("Index" /*RemoteObject*/ ,BA.numberCast(int.class, _i));
 BA.debugLineNum = 6458;BA.debugLine="DatosItem.panel=pnl";
Debug.JustUpdateDeviceLine();
_datositem.setField ("Panel" /*RemoteObject*/ ,_pnl);
 BA.debugLineNum = 6459;BA.debugLine="DatosItem.Value=mData";
Debug.JustUpdateDeviceLine();
_datositem.setField ("Value" /*RemoteObject*/ ,(_mdata.getObject()));
 BA.debugLineNum = 6461;BA.debugLine="CallSub2(mCallBack, mEventName &  \"_LoadLayoutP";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runMethodAndSync(false,"CallSubNew2",__ref.getField(false, "ba"),(Object)(__ref.getField(false,"_mcallback" /*RemoteObject*/ )),(Object)(RemoteObject.concat(__ref.getField(true,"_meventname" /*RemoteObject*/ ),RemoteObject.createImmutable("_LoadLayoutPanelItem"))),(Object)((_datositem)));
 }
}Debug.locals.put("i", _i);
;
 BA.debugLineNum = 6465;BA.debugLine="CLVSelections.VisibleRangeChanged(FirstIndex, La";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvselections" /*RemoteObject*/ ).runClassMethod (b4j.docU.clvselectionsjamtableclv.class, "_visiblerangechanged" /*RemoteObject*/ ,(Object)(_firstindex),(Object)(_lastindex));
 }else {
 BA.debugLineNum = 6468;BA.debugLine="Dim ExtraSize As Int = (clvDatos.AsView.Height/m";
Debug.JustUpdateDeviceLine();
_extrasize = BA.numberCast(int.class, RemoteObject.solve(new RemoteObject[] {(RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(false,"_asview").runMethod(true,"getHeight"),__ref.getField(true,"_malturaitems" /*RemoteObject*/ )}, "/",0, 0)),RemoteObject.createImmutable(20)}, "+",1, 0));Debug.locals.put("ExtraSize", _extrasize);Debug.locals.put("ExtraSize", _extrasize);
 BA.debugLineNum = 6469;BA.debugLine="For i = Max(0, FirstIndex - ExtraSize) To Min(La";
Debug.JustUpdateDeviceLine();
{
final int step28 = 1;
final int limit28 = (int) (0 + jamtableclv.__c.runMethod(true,"Min",(Object)(BA.numberCast(double.class, RemoteObject.solve(new RemoteObject[] {_lastindex,_extrasize}, "+",1, 1))),(Object)(BA.numberCast(double.class, RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"_getsize"),RemoteObject.createImmutable(1)}, "-",1, 1)))).<Double>get().doubleValue());
_i = (int) (0 + jamtableclv.__c.runMethod(true,"Max",(Object)(BA.numberCast(double.class, 0)),(Object)(BA.numberCast(double.class, RemoteObject.solve(new RemoteObject[] {_firstindex,_extrasize}, "-",1, 1)))).<Double>get().doubleValue()) ;
for (;(step28 > 0 && _i <= limit28) || (step28 < 0 && _i >= limit28) ;_i = ((int)(0 + _i + step28))  ) {
Debug.locals.put("i", _i);
 BA.debugLineNum = 6470;BA.debugLine="Dim pnl As B4XView = clvDatos.GetPanel(i) 'Decl";
Debug.JustUpdateDeviceLine();
_pnl = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");
_pnl = __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(false,"_getpanel",(Object)(BA.numberCast(int.class, _i)));Debug.locals.put("pnl", _pnl);Debug.locals.put("pnl", _pnl);
 BA.debugLineNum = 6477;BA.debugLine="If i > FirstIndex - ExtraSize And i < LastIndex";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean(">",RemoteObject.createImmutable(_i),BA.numberCast(double.class, RemoteObject.solve(new RemoteObject[] {_firstindex,_extrasize}, "-",1, 1))) && RemoteObject.solveBoolean("<",RemoteObject.createImmutable(_i),BA.numberCast(double.class, RemoteObject.solve(new RemoteObject[] {_lastindex,_extrasize}, "+",1, 1)))) { 
 BA.debugLineNum = 6479;BA.debugLine="If pnl.NumberOfViews = 0 Then 'Add items to th";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_pnl.runMethod(true,"getNumberOfViews"),BA.numberCast(double.class, 0))) { 
 BA.debugLineNum = 6484;BA.debugLine="Dim mData As Map = clvDatos.GetValue(i) 'Get";
Debug.JustUpdateDeviceLine();
_mdata = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");
_mdata = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.collections.Map"), __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(false,"_getvalue",(Object)(BA.numberCast(int.class, _i))));Debug.locals.put("mData", _mdata);Debug.locals.put("mData", _mdata);
 BA.debugLineNum = 6485;BA.debugLine="Dim DatosItem As DatosItemIndexCLVJamTableCLV";
Debug.JustUpdateDeviceLine();
_datositem = RemoteObject.createNew ("b4j.docU.jamtableclv._datositemindexclvjamtableclv");Debug.locals.put("DatosItem", _datositem);
 BA.debugLineNum = 6486;BA.debugLine="DatosItem.Index=i";
Debug.JustUpdateDeviceLine();
_datositem.setField ("Index" /*RemoteObject*/ ,BA.numberCast(int.class, _i));
 BA.debugLineNum = 6487;BA.debugLine="DatosItem.Panel=pnl";
Debug.JustUpdateDeviceLine();
_datositem.setField ("Panel" /*RemoteObject*/ ,_pnl);
 BA.debugLineNum = 6488;BA.debugLine="DatosItem.Value=mData";
Debug.JustUpdateDeviceLine();
_datositem.setField ("Value" /*RemoteObject*/ ,(_mdata.getObject()));
 BA.debugLineNum = 6490;BA.debugLine="CallSub2(mCallBack, mEventName &  \"_LoadLayou";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runMethodAndSync(false,"CallSubNew2",__ref.getField(false, "ba"),(Object)(__ref.getField(false,"_mcallback" /*RemoteObject*/ )),(Object)(RemoteObject.concat(__ref.getField(true,"_meventname" /*RemoteObject*/ ),RemoteObject.createImmutable("_LoadLayoutPanelItem"))),(Object)((_datositem)));
 BA.debugLineNum = 6491;BA.debugLine="If mMostrarMenuPanelItem Then";
Debug.JustUpdateDeviceLine();
if (__ref.getField(true,"_mmostrarmenupanelitem" /*RemoteObject*/ ).<Boolean>get().booleanValue()) { 
 BA.debugLineNum = 6492;BA.debugLine="Dim lblMenuPanelItem As Label";
Debug.JustUpdateDeviceLine();
_lblmenupanelitem = RemoteObject.createNew ("anywheresoftware.b4j.objects.LabelWrapper");Debug.locals.put("lblMenuPanelItem", _lblmenupanelitem);
 BA.debugLineNum = 6493;BA.debugLine="lblMenuPanelItem.Initialize(\"lblMenuPanelIte";
Debug.JustUpdateDeviceLine();
_lblmenupanelitem.runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(RemoteObject.createImmutable("lblMenuPanelItem")));
 BA.debugLineNum = 6494;BA.debugLine="Dim xlblMenuPanelItem As B4XView=lblMenuPane";
Debug.JustUpdateDeviceLine();
_xlblmenupanelitem = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");
_xlblmenupanelitem = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper"), _lblmenupanelitem.getObject());Debug.locals.put("xlblMenuPanelItem", _xlblmenupanelitem);Debug.locals.put("xlblMenuPanelItem", _xlblmenupanelitem);
 BA.debugLineNum = 6495;BA.debugLine="xlblMenuPanelItem.TextColor=xui.Color_White";
Debug.JustUpdateDeviceLine();
_xlblmenupanelitem.runMethod(true,"setTextColor",__ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"Color_White"));
 BA.debugLineNum = 6496;BA.debugLine="xlblMenuPanelItem.SetColorAndBorder(0xFFB222";
Debug.JustUpdateDeviceLine();
_xlblmenupanelitem.runVoidMethod ("SetColorAndBorder",(Object)(BA.numberCast(int.class, ((int)0xffb22222))),(Object)(BA.numberCast(double.class, 1)),(Object)(__ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"Color_LightGray")),(Object)(BA.numberCast(double.class, 3)));
 BA.debugLineNum = 6497;BA.debugLine="xlblMenuPanelItem.Font=xui.CreateMaterialIco";
Debug.JustUpdateDeviceLine();
_xlblmenupanelitem.runMethod(false,"setFont",__ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"CreateMaterialIcons",(Object)(BA.numberCast(float.class, 15))));
 BA.debugLineNum = 6498;BA.debugLine="xlblMenuPanelItem.Text=Chr(0xE5D2)";
Debug.JustUpdateDeviceLine();
_xlblmenupanelitem.runMethod(true,"setText",BA.ObjectToString(jamtableclv.__c.runMethod(true,"Chr",(Object)(BA.numberCast(int.class, ((int)0xe5d2))))));
 BA.debugLineNum = 6499;BA.debugLine="xlblMenuPanelItem.SetTextAlignment(\"CENTER\",";
Debug.JustUpdateDeviceLine();
_xlblmenupanelitem.runVoidMethod ("SetTextAlignment",(Object)(BA.ObjectToString("CENTER")),(Object)(RemoteObject.createImmutable("CENTER")));
 BA.debugLineNum = 6500;BA.debugLine="pnl.AddView(xlblMenuPanelItem.As(Label),2,2,";
Debug.JustUpdateDeviceLine();
_pnl.runVoidMethod ("AddView",(Object)(((RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.LabelWrapper"), _xlblmenupanelitem.getObject())).getObject())),(Object)(BA.numberCast(double.class, 2)),(Object)(BA.numberCast(double.class, 2)),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 25))))),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 25))))));
 };
 BA.debugLineNum = 6518;BA.debugLine="For Each xNode As B4XView In pnl.GetAllViews";
Debug.JustUpdateDeviceLine();
_xnode = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");
{
final RemoteObject group49 = _pnl.runMethod(false,"GetAllViewsRecursive");
final int groupLen49 = group49.runMethod(true,"getSize").<Integer>get()
;int index49 = 0;
;
for (; index49 < groupLen49;index49++){
_xnode = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper"), group49.runMethod(false,"Get",index49));Debug.locals.put("xNode", _xnode);
Debug.locals.put("xNode", _xnode);
 BA.debugLineNum = 6520;BA.debugLine="If xNode.Tag<>\"\" Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("!",_xnode.runMethod(false,"getTag"),RemoteObject.createImmutable(("")))) { 
 BA.debugLineNum = 6521;BA.debugLine="CrearMenuContextualNodo(xNode)  ' si se h";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_crearmenucontextualnodo" /*RemoteObject*/ ,(Object)(_xnode));
 BA.debugLineNum = 6522;BA.debugLine="SetHandlerMouseClicked(xNode)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_sethandlermouseclicked" /*RemoteObject*/ ,RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.NodeWrapper.ConcreteNodeWrapper"), _xnode.getObject()));
 };
 }
}Debug.locals.put("xNode", _xnode);
;
 };
 }else {
 BA.debugLineNum = 6528;BA.debugLine="If pnl.NumberOfViews > 0 Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean(">",_pnl.runMethod(true,"getNumberOfViews"),BA.numberCast(double.class, 0))) { 
 BA.debugLineNum = 6529;BA.debugLine="pnl.RemoveAllViews 'Remove none visible item";
Debug.JustUpdateDeviceLine();
_pnl.runVoidMethod ("RemoveAllViews");
 };
 };
 }
}Debug.locals.put("i", _i);
;
 BA.debugLineNum = 6543;BA.debugLine="CLVSelections.VisibleRangeChanged(FirstIndex, La";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvselections" /*RemoteObject*/ ).runClassMethod (b4j.docU.clvselectionsjamtableclv.class, "_visiblerangechanged" /*RemoteObject*/ ,(Object)(_firstindex),(Object)(_lastindex));
 };
 BA.debugLineNum = 6545;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _collectmenuitems(RemoteObject __ref,RemoteObject _menus,RemoteObject _items) throws Exception{
try {
		Debug.PushSubsStack("CollectMenuItems (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,1745);
if (RapidSub.canDelegate("collectmenuitems")) { return __ref.runUserSub(false, "jamtableclv","collectmenuitems", __ref, _menus, _items);}
RemoteObject _mi = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");
RemoteObject _mn = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper");
Debug.locals.put("Menus", _menus);
Debug.locals.put("Items", _items);
 BA.debugLineNum = 1745;BA.debugLine="Private Sub CollectMenuItems(Menus As Map, Items A";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 1746;BA.debugLine="For Each mi As MenuItem In Items";
Debug.JustUpdateDeviceLine();
_mi = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");
{
final RemoteObject group1 = _items;
final int groupLen1 = group1.runMethod(true,"getSize").<Integer>get()
;int index1 = 0;
;
for (; index1 < groupLen1;index1++){
_mi = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper"), group1.runMethod(false,"Get",index1));Debug.locals.put("mi", _mi);
Debug.locals.put("mi", _mi);
 BA.debugLineNum = 1747;BA.debugLine="If mi.Tag <> Null And mi.Tag <> \"\" Then Menus.Pu";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("N",_mi.runMethod(false,"getTag")) && RemoteObject.solveBoolean("!",_mi.runMethod(false,"getTag"),RemoteObject.createImmutable(("")))) { 
_menus.runVoidMethod ("Put",(Object)(_mi.runMethod(false,"getTag")),(Object)((_mi.getObject())));};
 BA.debugLineNum = 1748;BA.debugLine="If mi Is Menu Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("i",_mi.getObjectOrNull(), RemoteObject.createImmutable("javafx.scene.control.Menu"))) { 
 BA.debugLineNum = 1749;BA.debugLine="Dim mn As Menu = mi";
Debug.JustUpdateDeviceLine();
_mn = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper");
_mn = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper"), _mi.getObject());Debug.locals.put("mn", _mn);Debug.locals.put("mn", _mn);
 BA.debugLineNum = 1750;BA.debugLine="CollectMenuItems(Menus, mn.MenuItems)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_collectmenuitems" /*RemoteObject*/ ,(Object)(_menus),(Object)(_mn.runMethod(false,"getMenuItems")));
 };
 }
}Debug.locals.put("mi", _mi);
;
 BA.debugLineNum = 1753;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _combochecklistavisible(RemoteObject __ref,RemoteObject _cbo) throws Exception{
try {
		Debug.PushSubsStack("ComboCheckListaVisible (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7932);
if (RapidSub.canDelegate("combochecklistavisible")) { return __ref.runUserSub(false, "jamtableclv","combochecklistavisible", __ref, _cbo);}
RemoteObject _jo = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
RemoteObject _listavisible = RemoteObject.createImmutable(false);
Debug.locals.put("cbo", _cbo);
 BA.debugLineNum = 7932;BA.debugLine="private Sub ComboCheckListaVisible(cbo As ComboBox";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 7933;BA.debugLine="Dim jo As JavaObject = cbo";
Debug.JustUpdateDeviceLine();
_jo = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");
_jo = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), _cbo.getObject());Debug.locals.put("jo", _jo);Debug.locals.put("jo", _jo);
 BA.debugLineNum = 7934;BA.debugLine="Dim ListaVisible As Boolean=jo.RunMethod(\"isShowi";
Debug.JustUpdateDeviceLine();
_listavisible = BA.ObjectToBoolean(_jo.runMethod(false,"RunMethod",(Object)(BA.ObjectToString("isShowing")),(Object)((jamtableclv.__c.getField(false,"Null")))));Debug.locals.put("ListaVisible", _listavisible);Debug.locals.put("ListaVisible", _listavisible);
 BA.debugLineNum = 7936;BA.debugLine="Log(\"Lista visible ANTES de picar en el combobox=";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("LogImpl","9173539332",RemoteObject.concat(RemoteObject.createImmutable("Lista visible ANTES de picar en el combobox="),jamtableclv.__c.runMethod(true,"Not",(Object)(_listavisible))),0);
 BA.debugLineNum = 7938;BA.debugLine="If ListaVisible=False Then ' es decir, si ANTES d";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_listavisible,jamtableclv.__c.getField(true,"False"))) { 
 BA.debugLineNum = 7939;BA.debugLine="ComboHideItems(cbo)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_combohideitems" /*RemoteObject*/ ,(Object)(_cbo));
 };
 BA.debugLineNum = 7941;BA.debugLine="Return Not(ListaVisible)";
Debug.JustUpdateDeviceLine();
if (true) return jamtableclv.__c.runMethod(true,"Not",(Object)(_listavisible));
 BA.debugLineNum = 7942;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(false);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _combohideitems(RemoteObject __ref,RemoteObject _cb) throws Exception{
try {
		Debug.PushSubsStack("ComboHideItems (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7954);
if (RapidSub.canDelegate("combohideitems")) { return __ref.runUserSub(false, "jamtableclv","combohideitems", __ref, _cb);}
RemoteObject _jo = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
Debug.locals.put("cb", _cb);
 BA.debugLineNum = 7954;BA.debugLine="private Sub ComboHideItems(cb As ComboBox)";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 7956;BA.debugLine="Dim jo As JavaObject = cb";
Debug.JustUpdateDeviceLine();
_jo = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");
_jo = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), _cb.getObject());Debug.locals.put("jo", _jo);Debug.locals.put("jo", _jo);
 BA.debugLineNum = 7957;BA.debugLine="jo.RunMethod(\"hide\",Null)";
Debug.JustUpdateDeviceLine();
_jo.runVoidMethod ("RunMethod",(Object)(BA.ObjectToString("hide")),(Object)((jamtableclv.__c.getField(false,"Null"))));
 BA.debugLineNum = 7958;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _combosetvisiblerowcount(RemoteObject __ref,RemoteObject _cb,RemoteObject _arg) throws Exception{
try {
		Debug.PushSubsStack("ComboSetVisibleRowCount (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7944);
if (RapidSub.canDelegate("combosetvisiblerowcount")) { return __ref.runUserSub(false, "jamtableclv","combosetvisiblerowcount", __ref, _cb, _arg);}
RemoteObject _jo = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
Debug.locals.put("cb", _cb);
Debug.locals.put("arg", _arg);
 BA.debugLineNum = 7944;BA.debugLine="private Sub ComboSetVisibleRowCount(cb As ComboBox";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 7945;BA.debugLine="Dim jo As JavaObject = cb";
Debug.JustUpdateDeviceLine();
_jo = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");
_jo = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), _cb.getObject());Debug.locals.put("jo", _jo);Debug.locals.put("jo", _jo);
 BA.debugLineNum = 7946;BA.debugLine="jo.RunMethod(\"setVisibleRowCount\",Array(arg))";
Debug.JustUpdateDeviceLine();
_jo.runVoidMethod ("RunMethod",(Object)(BA.ObjectToString("setVisibleRowCount")),(Object)(RemoteObject.createNewArray("Object",new int[] {1},new Object[] {(_arg)})));
 BA.debugLineNum = 7948;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _comboshowitems(RemoteObject __ref,RemoteObject _cb) throws Exception{
try {
		Debug.PushSubsStack("ComboShowItems (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7950);
if (RapidSub.canDelegate("comboshowitems")) { return __ref.runUserSub(false, "jamtableclv","comboshowitems", __ref, _cb);}
RemoteObject _jo = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
Debug.locals.put("cb", _cb);
 BA.debugLineNum = 7950;BA.debugLine="private Sub ComboShowItems(cb As ComboBox)";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 7951;BA.debugLine="Dim jo As JavaObject = cb";
Debug.JustUpdateDeviceLine();
_jo = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");
_jo = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), _cb.getObject());Debug.locals.put("jo", _jo);Debug.locals.put("jo", _jo);
 BA.debugLineNum = 7952;BA.debugLine="jo.RunMethod(\"show\",Null)";
Debug.JustUpdateDeviceLine();
_jo.runVoidMethod ("RunMethod",(Object)(BA.ObjectToString("show")),(Object)((jamtableclv.__c.getField(false,"Null"))));
 BA.debugLineNum = 7953;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _configuracioninicialmenus(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("ConfiguracionInicialMenus (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,678);
if (RapidSub.canDelegate("configuracioninicialmenus")) { return __ref.runUserSub(false, "jamtableclv","configuracioninicialmenus", __ref);}
 BA.debugLineNum = 678;BA.debugLine="Private Sub ConfiguracionInicialMenus";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 679;BA.debugLine="If mConfiguracionInicialMenusRealizada=False Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",__ref.getField(true,"_mconfiguracioninicialmenusrealizada" /*RemoteObject*/ ),jamtableclv.__c.getField(true,"False"))) { 
 BA.debugLineNum = 680;BA.debugLine="mConfiguracionInicialMenusRealizada=True";
Debug.JustUpdateDeviceLine();
__ref.setField ("_mconfiguracioninicialmenusrealizada" /*RemoteObject*/ ,jamtableclv.__c.getField(true,"True"));
 BA.debugLineNum = 681;BA.debugLine="MenusBasicos";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_menusbasicos" /*RemoteObject*/ );
 };
 BA.debugLineNum = 684;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _configurartableclv(RemoteObject __ref,RemoteObject _nombreficherojson) throws Exception{
try {
		Debug.PushSubsStack("ConfigurarTableCLV (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,5101);
if (RapidSub.canDelegate("configurartableclv")) { return __ref.runUserSub(false, "jamtableclv","configurartableclv", __ref, _nombreficherojson);}
ResumableSub_ConfigurarTableCLV rsub = new ResumableSub_ConfigurarTableCLV(null,__ref,_nombreficherojson);
rsub.remoteResumableSub = anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSubForFilter();
rsub.resume(null, null);
return RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.keywords.Common.ResumableSubWrapper"), rsub.remoteResumableSub);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_ConfigurarTableCLV extends BA.ResumableSub {
public ResumableSub_ConfigurarTableCLV(b4j.docU.jamtableclv parent,RemoteObject __ref,RemoteObject _nombreficherojson) {
this.parent = parent;
this.__ref = __ref;
this._nombreficherojson = _nombreficherojson;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _nombreficherojson;
RemoteObject _joba = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
RemoteObject _spackage = RemoteObject.createImmutable("");
RemoteObject _packagename = null;
RemoteObject _mresultconfigurartableclv = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
RemoteObject _mresultsetorigendatos = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
RemoteObject _answ = RemoteObject.declareNull("Object");
RemoteObject _result = RemoteObject.createImmutable(0);

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("ConfigurarTableCLV (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,5101);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
{
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,RemoteObject.createImmutable(null));return;}
case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
Debug.locals.put("NombreFicheroJSON", _nombreficherojson);
 BA.debugLineNum = 5102;BA.debugLine="LogColor(\"clvDatos.IsInitialized (configurar Tabl";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9167641089",RemoteObject.concat(RemoteObject.createImmutable("clvDatos.IsInitialized (configurar TableCLV "),__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"IsInitialized")),__ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"Color_Magenta"));
 BA.debugLineNum = 5103;BA.debugLine="Dim joBA As JavaObject";
Debug.JustUpdateDeviceLine();
_joba = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");Debug.locals.put("joBA", _joba);
 BA.debugLineNum = 5104;BA.debugLine="joBA.InitializeStatic(\"anywheresoftware.b4a.BA\")";
Debug.JustUpdateDeviceLine();
_joba.runVoidMethod ("InitializeStatic",(Object)(RemoteObject.createImmutable("anywheresoftware.b4a.BA")));
 BA.debugLineNum = 5105;BA.debugLine="Log(\"Packagename: \" & joBA.GetField(\"packageName\"";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9167641092",RemoteObject.concat(RemoteObject.createImmutable("Packagename: "),_joba.runMethod(false,"GetField",(Object)(RemoteObject.createImmutable("packageName")))),0);
 BA.debugLineNum = 5106;BA.debugLine="Dim sPackage As String=joBA.GetField(\"packageName";
Debug.JustUpdateDeviceLine();
_spackage = BA.ObjectToString(_joba.runMethod(false,"GetField",(Object)(RemoteObject.createImmutable("packageName"))));Debug.locals.put("sPackage", _spackage);Debug.locals.put("sPackage", _spackage);
 BA.debugLineNum = 5107;BA.debugLine="Dim PackageName() As String=Regex.Split(\"\\.\",sPac";
Debug.JustUpdateDeviceLine();
_packagename = parent.__c.getField(false,"Regex").runMethod(false,"Split",(Object)(BA.ObjectToString("\\.")),(Object)(_spackage));Debug.locals.put("PackageName", _packagename);Debug.locals.put("PackageName", _packagename);
 BA.debugLineNum = 5108;BA.debugLine="mNombreAplicacion=PackageName(PackageName.Length-";
Debug.JustUpdateDeviceLine();
__ref.setField ("_mnombreaplicacion" /*RemoteObject*/ ,_packagename.getArrayElement(true,RemoteObject.solve(new RemoteObject[] {_packagename.getField(true,"length"),RemoteObject.createImmutable(1)}, "-",1, 1)));
 BA.debugLineNum = 5110;BA.debugLine="Log(\"NombreAplicacion \"& mNombreAplicacion)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9167641097",RemoteObject.concat(RemoteObject.createImmutable("NombreAplicacion "),__ref.getField(true,"_mnombreaplicacion" /*RemoteObject*/ )),0);
 BA.debugLineNum = 5113;BA.debugLine="mNombreUsuarioWindows=GetSystemProperty(\"user.nam";
Debug.JustUpdateDeviceLine();
__ref.setField ("_mnombreusuariowindows" /*RemoteObject*/ ,parent.__c.runMethod(true,"GetSystemProperty",(Object)(BA.ObjectToString("user.name")),(Object)(RemoteObject.createImmutable("default"))));
 BA.debugLineNum = 5115;BA.debugLine="If File.Exists(File.DirData(mNombreAplicacion),\"\"";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//if
this.state = 4;
if (RemoteObject.solveBoolean("=",parent.__c.getField(false,"File").runMethod(true,"Exists",(Object)(parent.__c.getField(false,"File").runMethod(true,"DirData",(Object)(__ref.getField(true,"_mnombreaplicacion" /*RemoteObject*/ )))),(Object)(RemoteObject.createImmutable(""))),parent.__c.getField(true,"False"))) { 
this.state = 3;
}if (true) break;

case 3:
//C
this.state = 4;
 BA.debugLineNum = 5116;BA.debugLine="File.MakeDir(File.DirData(mNombreAplicacion),\"\")";
Debug.JustUpdateDeviceLine();
parent.__c.getField(false,"File").runVoidMethod ("MakeDir",(Object)(parent.__c.getField(false,"File").runMethod(true,"DirData",(Object)(__ref.getField(true,"_mnombreaplicacion" /*RemoteObject*/ )))),(Object)(RemoteObject.createImmutable("")));
 if (true) break;

case 4:
//C
this.state = 5;
;
 BA.debugLineNum = 5119;BA.debugLine="Dim mResultConfigurarTableCLV As Map";
Debug.JustUpdateDeviceLine();
_mresultconfigurartableclv = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");Debug.locals.put("mResultConfigurarTableCLV", _mresultconfigurartableclv);
 BA.debugLineNum = 5120;BA.debugLine="mResultConfigurarTableCLV.Initialize";
Debug.JustUpdateDeviceLine();
_mresultconfigurartableclv.runVoidMethod ("Initialize");
 BA.debugLineNum = 5121;BA.debugLine="mResultConfigurarTableCLV.put(\"FlagOK\", True)  '";
Debug.JustUpdateDeviceLine();
_mresultconfigurartableclv.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("FlagOK"))),(Object)((parent.__c.getField(true,"True"))));
 BA.debugLineNum = 5125;BA.debugLine="ReiniciarFiltros";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_reiniciarfiltros" /*RemoteObject*/ );
 BA.debugLineNum = 5128;BA.debugLine="Dim mResultSetOrigenDatos As Map=SetOrigenDatos(N";
Debug.JustUpdateDeviceLine();
_mresultsetorigendatos = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");
_mresultsetorigendatos = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_setorigendatos" /*RemoteObject*/ ,(Object)(_nombreficherojson));Debug.locals.put("mResultSetOrigenDatos", _mresultsetorigendatos);Debug.locals.put("mResultSetOrigenDatos", _mresultsetorigendatos);
 BA.debugLineNum = 5130;BA.debugLine="If  Not(mResultSetOrigenDatos.get(\"FlagOK\")) Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 5:
//if
this.state = 14;
if (parent.__c.runMethod(true,"Not",(Object)(BA.ObjectToBoolean(_mresultsetorigendatos.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("FlagOK"))))))).<Boolean>get().booleanValue()) { 
this.state = 7;
}else {
this.state = 13;
}if (true) break;

case 7:
//C
this.state = 8;
 BA.debugLineNum = 5132;BA.debugLine="Dim answ As Object =xui.Msgbox2Async(mResultSetO";
Debug.JustUpdateDeviceLine();
_answ = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"Msgbox2Async",__ref.getField(false, "ba"),(Object)(RemoteObject.concat(_mresultsetorigendatos.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("msgError")))),parent.__c.getField(true,"CRLF"),parent.__c.getField(true,"CRLF"),RemoteObject.createImmutable("¿Abrir CamposBuilder con el JSON correspondiente?"))),(Object)(BA.ObjectToString("Error Origen de datos")),(Object)(BA.ObjectToString("Sí")),(Object)(BA.ObjectToString("")),(Object)(BA.ObjectToString("No")),(Object)((parent.__c.getField(false,"Null"))));Debug.locals.put("answ", _answ);Debug.locals.put("answ", _answ);
 BA.debugLineNum = 5133;BA.debugLine="Wait For (answ) Msgbox_Result (Result As Int)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","msgbox_result", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "configurartableclv"), _answ);
this.state = 15;
return;
case 15:
//C
this.state = 8;
_result = (RemoteObject) result.getArrayElement(true,RemoteObject.createImmutable(1));Debug.locals.put("Result", _result);
;
 BA.debugLineNum = 5134;BA.debugLine="If Result =xui.DialogResponse_Positive Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 8:
//if
this.state = 11;
if (RemoteObject.solveBoolean("=",_result,BA.numberCast(double.class, __ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"DialogResponse_Positive")))) { 
this.state = 10;
}if (true) break;

case 10:
//C
this.state = 11;
 BA.debugLineNum = 5135;BA.debugLine="AbrirCamposBuilderEdicion";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_abrircamposbuilderedicion" /*RemoteObject*/ );
 if (true) break;

case 11:
//C
this.state = 14;
;
 BA.debugLineNum = 5137;BA.debugLine="Return mResultSetOrigenDatos";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(_mresultsetorigendatos));return;};
 if (true) break;

case 13:
//C
this.state = 14;
 BA.debugLineNum = 5143;BA.debugLine="OrigenDatosConfiguradoOK=True";
Debug.JustUpdateDeviceLine();
__ref.setField ("_origendatosconfiguradook" /*RemoteObject*/ ,parent.__c.getField(true,"True"));
 BA.debugLineNum = 5144;BA.debugLine="Return mResultConfigurarTableCLV";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(_mresultconfigurartableclv));return;};
 if (true) break;

case 14:
//C
this.state = -1;
;
 BA.debugLineNum = 5147;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static void  _contextmenuitemnodo_action(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("ContextMenuItemNodo_Action (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,1250);
if (RapidSub.canDelegate("contextmenuitemnodo_action")) { __ref.runUserSub(false, "jamtableclv","contextmenuitemnodo_action", __ref); return;}
ResumableSub_ContextMenuItemNodo_Action rsub = new ResumableSub_ContextMenuItemNodo_Action(null,__ref);
rsub.resume(null, null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_ContextMenuItemNodo_Action extends BA.ResumableSub {
public ResumableSub_ContextMenuItemNodo_Action(b4j.docU.jamtableclv parent,RemoteObject __ref) {
this.parent = parent;
this.__ref = __ref;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _mi = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");
RemoteObject _aliascamponodo = RemoteObject.createImmutable("");
RemoteObject _value = RemoteObject.declareNull("Object");
RemoteObject _cbo = RemoteObject.declareNull("anywheresoftware.b4j.objects.ComboBoxWrapper");
RemoteObject _rbool = RemoteObject.createImmutable(false);
RemoteObject _robj = RemoteObject.declareNull("Object");
RemoteObject _c = RemoteObject.declareNull("b4j.docU.jamtableclv._campoorigendatosjamtableclv");

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("ContextMenuItemNodo_Action (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,1250);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
return;

case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
 BA.debugLineNum = 1251;BA.debugLine="Dim mI As MenuItem=Sender";
Debug.JustUpdateDeviceLine();
_mi = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");
_mi = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper"), parent.__c.runMethod(false,"Sender",__ref.getField(false, "ba")));Debug.locals.put("mI", _mi);Debug.locals.put("mI", _mi);
 BA.debugLineNum = 1252;BA.debugLine="Log(\"Tag MenuItem: \" & mI.Tag)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9162201602",RemoteObject.concat(RemoteObject.createImmutable("Tag MenuItem: "),_mi.runMethod(false,"getTag")),0);
 BA.debugLineNum = 1253;BA.debugLine="Select Case mI.Tag";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//select
this.state = 42;
switch (BA.switchObjectToInt(_mi.runMethod(false,"getTag"),RemoteObject.createImmutable(("SeleccionarTodoTextoNodoMenuContextual")),RemoteObject.createImmutable(("CopiarTextoNodoMenuContextual")),RemoteObject.createImmutable(("FiltrarAEsteValor")),RemoteObject.createImmutable(("QuitarTodosFiltros")),RemoteObject.createImmutable(("SumaTotalesCampoNodoSeleccionado")),RemoteObject.createImmutable(("PromedioTotalesCampoNodoSeleccionado")),RemoteObject.createImmutable(("MaxTotalesCampoNodoSeleccionado")),RemoteObject.createImmutable(("MinTotalesCampoNodoSeleccionado")),RemoteObject.createImmutable(("FiltroAvanzadoCampo")))) {
case 0: {
this.state = 3;
if (true) break;
}
case 1: {
this.state = 5;
if (true) break;
}
case 2: {
this.state = 7;
if (true) break;
}
case 3: {
this.state = 17;
if (true) break;
}
case 4: {
this.state = 19;
if (true) break;
}
case 5: {
this.state = 21;
if (true) break;
}
case 6: {
this.state = 23;
if (true) break;
}
case 7: {
this.state = 25;
if (true) break;
}
case 8: {
this.state = 27;
if (true) break;
}
default: {
this.state = 37;
if (true) break;
}
}
if (true) break;

case 3:
//C
this.state = 42;
 BA.debugLineNum = 1255;BA.debugLine="SeleccionarTodoTextoNodo(xNodeContextMenu)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_seleccionartodotextonodo" /*RemoteObject*/ ,(Object)(__ref.getField(false,"_xnodecontextmenu" /*RemoteObject*/ )));
 if (true) break;

case 5:
//C
this.state = 42;
 BA.debugLineNum = 1257;BA.debugLine="CopiarTextoSeleccionadoNodo(xNodeContextMenu)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_copiartextoseleccionadonodo" /*RemoteObject*/ ,(Object)(__ref.getField(false,"_xnodecontextmenu" /*RemoteObject*/ )));
 if (true) break;

case 7:
//C
this.state = 8;
 BA.debugLineNum = 1260;BA.debugLine="Dim AliasCampoNodo As String=xNodeContextMenu.T";
Debug.JustUpdateDeviceLine();
_aliascamponodo = BA.ObjectToString(__ref.getField(false,"_xnodecontextmenu" /*RemoteObject*/ ).runMethod(false,"getTag"));Debug.locals.put("AliasCampoNodo", _aliascamponodo);Debug.locals.put("AliasCampoNodo", _aliascamponodo);
 BA.debugLineNum = 1261;BA.debugLine="Dim value As Object";
Debug.JustUpdateDeviceLine();
_value = RemoteObject.createNew ("Object");Debug.locals.put("value", _value);
 BA.debugLineNum = 1262;BA.debugLine="Select True";
Debug.JustUpdateDeviceLine();
if (true) break;

case 8:
//select
this.state = 15;
switch (BA.switchObjectToInt(parent.__c.getField(true,"True"),BA.ObjectToBoolean(RemoteObject.solveBoolean("i",__ref.getField(false,"_xnodecontextmenu" /*RemoteObject*/ ).getObjectOrNull(), RemoteObject.createImmutable("javafx.scene.control.TextField"))),BA.ObjectToBoolean(RemoteObject.solveBoolean("i",__ref.getField(false,"_xnodecontextmenu" /*RemoteObject*/ ).getObjectOrNull(), RemoteObject.createImmutable("javafx.scene.control.ComboBox"))),BA.ObjectToBoolean(RemoteObject.solveBoolean("i",__ref.getField(false,"_xnodecontextmenu" /*RemoteObject*/ ).getObjectOrNull(), RemoteObject.createImmutable("javafx.scene.control.CheckBox"))))) {
case 0: {
this.state = 10;
if (true) break;
}
case 1: {
this.state = 12;
if (true) break;
}
case 2: {
this.state = 14;
if (true) break;
}
}
if (true) break;

case 10:
//C
this.state = 15;
 BA.debugLineNum = 1264;BA.debugLine="value=xNodeContextMenu.Text";
Debug.JustUpdateDeviceLine();
_value = (__ref.getField(false,"_xnodecontextmenu" /*RemoteObject*/ ).runMethod(true,"getText"));Debug.locals.put("value", _value);
 if (true) break;

case 12:
//C
this.state = 15;
 BA.debugLineNum = 1266;BA.debugLine="Dim cbo As ComboBox=xNodeContextMenu";
Debug.JustUpdateDeviceLine();
_cbo = RemoteObject.createNew ("anywheresoftware.b4j.objects.ComboBoxWrapper");
_cbo = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.ComboBoxWrapper"), __ref.getField(false,"_xnodecontextmenu" /*RemoteObject*/ ).getObject());Debug.locals.put("cbo", _cbo);Debug.locals.put("cbo", _cbo);
 BA.debugLineNum = 1267;BA.debugLine="value=cbo.Value";
Debug.JustUpdateDeviceLine();
_value = _cbo.runMethod(false,"getValue");Debug.locals.put("value", _value);
 if (true) break;

case 14:
//C
this.state = 15;
 BA.debugLineNum = 1269;BA.debugLine="value=xNodeContextMenu.Checked";
Debug.JustUpdateDeviceLine();
_value = (__ref.getField(false,"_xnodecontextmenu" /*RemoteObject*/ ).runMethod(true,"getChecked"));Debug.locals.put("value", _value);
 if (true) break;

case 15:
//C
this.state = 42;
;
 BA.debugLineNum = 1271;BA.debugLine="wait for(AddFiltroCampoValorSeleccionado(AliasC";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "contextmenuitemnodo_action"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_addfiltrocampovalorseleccionado" /*RemoteObject*/ ,(Object)(_aliascamponodo),(Object)(_value),(Object)(__ref.getField(false,"_xnodecontextmenu" /*RemoteObject*/ ))));
this.state = 43;
return;
case 43:
//C
this.state = 42;
_rbool = (RemoteObject) result.getArrayElement(true,RemoteObject.createImmutable(1));Debug.locals.put("rBool", _rbool);
;
 if (true) break;

case 17:
//C
this.state = 42;
 BA.debugLineNum = 1274;BA.debugLine="wait for(QuitarFiltros) complete (rObj As Objec";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "contextmenuitemnodo_action"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_quitarfiltros" /*RemoteObject*/ ));
this.state = 44;
return;
case 44:
//C
this.state = 42;
_robj = (RemoteObject) result.getArrayElement(false,RemoteObject.createImmutable(1));Debug.locals.put("rObj", _robj);
;
 if (true) break;

case 19:
//C
this.state = 42;
 BA.debugLineNum = 1277;BA.debugLine="Dim c As CampoOrigenDatosJamTableCLV=GetDatosCa";
Debug.JustUpdateDeviceLine();
_c = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_getdatoscampoorigendatosjamtableclvaliascampo" /*RemoteObject*/ ,(Object)(BA.ObjectToString(__ref.getField(false,"_xnodecontextmenu" /*RemoteObject*/ ).runMethod(false,"getTag"))));Debug.locals.put("c", _c);Debug.locals.put("c", _c);
 BA.debugLineNum = 1279;BA.debugLine="TotalesCampoNodoSeleccionado(c,\"sum\")";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_totalescamponodoseleccionado" /*RemoteObject*/ ,(Object)(_c),(Object)(RemoteObject.createImmutable("sum")));
 if (true) break;

case 21:
//C
this.state = 42;
 BA.debugLineNum = 1282;BA.debugLine="Dim c As CampoOrigenDatosJamTableCLV=GetDatosCa";
Debug.JustUpdateDeviceLine();
_c = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_getdatoscampoorigendatosjamtableclvaliascampo" /*RemoteObject*/ ,(Object)(BA.ObjectToString(__ref.getField(false,"_xnodecontextmenu" /*RemoteObject*/ ).runMethod(false,"getTag"))));Debug.locals.put("c", _c);Debug.locals.put("c", _c);
 BA.debugLineNum = 1284;BA.debugLine="TotalesCampoNodoSeleccionado(c,\"avg\")";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_totalescamponodoseleccionado" /*RemoteObject*/ ,(Object)(_c),(Object)(RemoteObject.createImmutable("avg")));
 if (true) break;

case 23:
//C
this.state = 42;
 BA.debugLineNum = 1287;BA.debugLine="Dim c As CampoOrigenDatosJamTableCLV=GetDatosCa";
Debug.JustUpdateDeviceLine();
_c = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_getdatoscampoorigendatosjamtableclvaliascampo" /*RemoteObject*/ ,(Object)(BA.ObjectToString(__ref.getField(false,"_xnodecontextmenu" /*RemoteObject*/ ).runMethod(false,"getTag"))));Debug.locals.put("c", _c);Debug.locals.put("c", _c);
 BA.debugLineNum = 1289;BA.debugLine="TotalesCampoNodoSeleccionado(c,\"max\")";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_totalescamponodoseleccionado" /*RemoteObject*/ ,(Object)(_c),(Object)(RemoteObject.createImmutable("max")));
 if (true) break;

case 25:
//C
this.state = 42;
 BA.debugLineNum = 1292;BA.debugLine="Dim c As CampoOrigenDatosJamTableCLV=GetDatosCa";
Debug.JustUpdateDeviceLine();
_c = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_getdatoscampoorigendatosjamtableclvaliascampo" /*RemoteObject*/ ,(Object)(BA.ObjectToString(__ref.getField(false,"_xnodecontextmenu" /*RemoteObject*/ ).runMethod(false,"getTag"))));Debug.locals.put("c", _c);Debug.locals.put("c", _c);
 BA.debugLineNum = 1294;BA.debugLine="TotalesCampoNodoSeleccionado(c,\"min\")";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_totalescamponodoseleccionado" /*RemoteObject*/ ,(Object)(_c),(Object)(RemoteObject.createImmutable("min")));
 if (true) break;

case 27:
//C
this.state = 28;
 BA.debugLineNum = 1297;BA.debugLine="Dim AliasCampoNodo As String=xNodeContextMenu.T";
Debug.JustUpdateDeviceLine();
_aliascamponodo = BA.ObjectToString(__ref.getField(false,"_xnodecontextmenu" /*RemoteObject*/ ).runMethod(false,"getTag"));Debug.locals.put("AliasCampoNodo", _aliascamponodo);Debug.locals.put("AliasCampoNodo", _aliascamponodo);
 BA.debugLineNum = 1298;BA.debugLine="Dim value As Object";
Debug.JustUpdateDeviceLine();
_value = RemoteObject.createNew ("Object");Debug.locals.put("value", _value);
 BA.debugLineNum = 1299;BA.debugLine="Select True";
Debug.JustUpdateDeviceLine();
if (true) break;

case 28:
//select
this.state = 35;
switch (BA.switchObjectToInt(parent.__c.getField(true,"True"),BA.ObjectToBoolean(RemoteObject.solveBoolean("i",__ref.getField(false,"_xnodecontextmenu" /*RemoteObject*/ ).getObjectOrNull(), RemoteObject.createImmutable("javafx.scene.control.TextField"))),BA.ObjectToBoolean(RemoteObject.solveBoolean("i",__ref.getField(false,"_xnodecontextmenu" /*RemoteObject*/ ).getObjectOrNull(), RemoteObject.createImmutable("javafx.scene.control.ComboBox"))),BA.ObjectToBoolean(RemoteObject.solveBoolean("i",__ref.getField(false,"_xnodecontextmenu" /*RemoteObject*/ ).getObjectOrNull(), RemoteObject.createImmutable("javafx.scene.control.CheckBox"))))) {
case 0: {
this.state = 30;
if (true) break;
}
case 1: {
this.state = 32;
if (true) break;
}
case 2: {
this.state = 34;
if (true) break;
}
}
if (true) break;

case 30:
//C
this.state = 35;
 BA.debugLineNum = 1301;BA.debugLine="value=xNodeContextMenu.Text";
Debug.JustUpdateDeviceLine();
_value = (__ref.getField(false,"_xnodecontextmenu" /*RemoteObject*/ ).runMethod(true,"getText"));Debug.locals.put("value", _value);
 if (true) break;

case 32:
//C
this.state = 35;
 BA.debugLineNum = 1303;BA.debugLine="Dim cbo As ComboBox=xNodeContextMenu";
Debug.JustUpdateDeviceLine();
_cbo = RemoteObject.createNew ("anywheresoftware.b4j.objects.ComboBoxWrapper");
_cbo = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.ComboBoxWrapper"), __ref.getField(false,"_xnodecontextmenu" /*RemoteObject*/ ).getObject());Debug.locals.put("cbo", _cbo);Debug.locals.put("cbo", _cbo);
 BA.debugLineNum = 1304;BA.debugLine="value=cbo.Value";
Debug.JustUpdateDeviceLine();
_value = _cbo.runMethod(false,"getValue");Debug.locals.put("value", _value);
 if (true) break;

case 34:
//C
this.state = 35;
 BA.debugLineNum = 1306;BA.debugLine="value=xNodeContextMenu.Checked";
Debug.JustUpdateDeviceLine();
_value = (__ref.getField(false,"_xnodecontextmenu" /*RemoteObject*/ ).runMethod(true,"getChecked"));Debug.locals.put("value", _value);
 if (true) break;

case 35:
//C
this.state = 42;
;
 BA.debugLineNum = 1308;BA.debugLine="wait for(AddFiltroAvanzadoCampoValorSeleccionad";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "contextmenuitemnodo_action"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_addfiltroavanzadocampovalorseleccionado" /*RemoteObject*/ ,(Object)(_aliascamponodo),(Object)(_mi.runMethod(true,"getText")),(Object)(_value),(Object)(__ref.getField(false,"_xnodecontextmenu" /*RemoteObject*/ ))));
this.state = 45;
return;
case 45:
//C
this.state = 42;
_rbool = (RemoteObject) result.getArrayElement(true,RemoteObject.createImmutable(1));Debug.locals.put("rBool", _rbool);
;
 if (true) break;

case 37:
//C
this.state = 38;
 BA.debugLineNum = 1311;BA.debugLine="If SubExists(mCallBack,mEventName & \"_ContextMe";
Debug.JustUpdateDeviceLine();
if (true) break;

case 38:
//if
this.state = 41;
if (parent.__c.runMethod(true,"SubExists",__ref.getField(false, "ba"),(Object)(__ref.getField(false,"_mcallback" /*RemoteObject*/ )),(Object)(RemoteObject.concat(__ref.getField(true,"_meventname" /*RemoteObject*/ ),RemoteObject.createImmutable("_ContextMenuItemNodo_Action")))).<Boolean>get().booleanValue()) { 
this.state = 40;
}if (true) break;

case 40:
//C
this.state = 41;
 BA.debugLineNum = 1312;BA.debugLine="CallSub3(mCallBack,mEventName & \"_ContextMenuI";
Debug.JustUpdateDeviceLine();
parent.__c.runMethodAndSync(false,"CallSubNew3",__ref.getField(false, "ba"),(Object)(__ref.getField(false,"_mcallback" /*RemoteObject*/ )),(Object)(RemoteObject.concat(__ref.getField(true,"_meventname" /*RemoteObject*/ ),RemoteObject.createImmutable("_ContextMenuItemNodo_Action"))),(Object)(_mi.runMethod(false,"getTag")),(Object)((__ref.getField(false,"_xnodecontextmenu" /*RemoteObject*/ ))));
 if (true) break;

case 41:
//C
this.state = 42;
;
 if (true) break;

case 42:
//C
this.state = -1;
;
 BA.debugLineNum = 1316;BA.debugLine="mContextMenu.MenuItems.Clear";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_mcontextmenu" /*RemoteObject*/ ).runMethod(false,"getMenuItems").runVoidMethod ("Clear");
 BA.debugLineNum = 1317;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static RemoteObject  _copiartextoseleccionadonodo(RemoteObject __ref,RemoteObject _xnode) throws Exception{
try {
		Debug.PushSubsStack("CopiarTextoSeleccionadoNodo (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,1321);
if (RapidSub.canDelegate("copiartextoseleccionadonodo")) { return __ref.runUserSub(false, "jamtableclv","copiartextoseleccionadonodo", __ref, _xnode);}
RemoteObject _textoseleccionado = RemoteObject.createImmutable("");
RemoteObject _cbo = RemoteObject.declareNull("anywheresoftware.b4j.objects.ComboBoxWrapper");
Debug.locals.put("xNode", _xnode);
 BA.debugLineNum = 1321;BA.debugLine="private Sub CopiarTextoSeleccionadoNodo(xNode As B";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 1322;BA.debugLine="Dim TextoSeleccionado As String";
Debug.JustUpdateDeviceLine();
_textoseleccionado = RemoteObject.createImmutable("");Debug.locals.put("TextoSeleccionado", _textoseleccionado);
 BA.debugLineNum = 1323;BA.debugLine="Select True";
Debug.JustUpdateDeviceLine();
switch (BA.switchObjectToInt(jamtableclv.__c.getField(true,"True"),BA.ObjectToBoolean(RemoteObject.solveBoolean("i",_xnode.getObjectOrNull(), RemoteObject.createImmutable("javafx.scene.control.TextField")) || RemoteObject.solveBoolean("i",_xnode.getObjectOrNull(), RemoteObject.createImmutable("javafx.scene.control.TextArea"))),BA.ObjectToBoolean(RemoteObject.solveBoolean("i",_xnode.getObjectOrNull(), RemoteObject.createImmutable("javafx.scene.control.ComboBox"))))) {
case 0: {
 BA.debugLineNum = 1325;BA.debugLine="If xNode.SelectionLength>0 Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean(">",_xnode.runMethod(true,"getSelectionLength"),BA.numberCast(double.class, 0))) { 
 BA.debugLineNum = 1326;BA.debugLine="TextoSeleccionado=xNode.Text.SubString2(xNode";
Debug.JustUpdateDeviceLine();
_textoseleccionado = _xnode.runMethod(true,"getText").runMethod(true,"substring",(Object)(_xnode.runMethod(true,"getSelectionStart")),(Object)((RemoteObject.solve(new RemoteObject[] {_xnode.runMethod(true,"getSelectionStart"),_xnode.runMethod(true,"getSelectionLength")}, "+",1, 1))));Debug.locals.put("TextoSeleccionado", _textoseleccionado);
 }else {
 BA.debugLineNum = 1328;BA.debugLine="Return";
Debug.JustUpdateDeviceLine();
if (true) return RemoteObject.createImmutable("");
 };
 break; }
case 1: {
 BA.debugLineNum = 1331;BA.debugLine="Dim cbo As ComboBox=xNode";
Debug.JustUpdateDeviceLine();
_cbo = RemoteObject.createNew ("anywheresoftware.b4j.objects.ComboBoxWrapper");
_cbo = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.ComboBoxWrapper"), _xnode.getObject());Debug.locals.put("cbo", _cbo);Debug.locals.put("cbo", _cbo);
 BA.debugLineNum = 1332;BA.debugLine="If cbo.Value<>Null Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("N",_cbo.runMethod(false,"getValue"))) { 
 BA.debugLineNum = 1333;BA.debugLine="TextoSeleccionado=cbo.Value";
Debug.JustUpdateDeviceLine();
_textoseleccionado = BA.ObjectToString(_cbo.runMethod(false,"getValue"));Debug.locals.put("TextoSeleccionado", _textoseleccionado);
 }else {
 BA.debugLineNum = 1335;BA.debugLine="Return";
Debug.JustUpdateDeviceLine();
if (true) return RemoteObject.createImmutable("");
 };
 break; }
}
;
 BA.debugLineNum = 1338;BA.debugLine="fx.Clipboard.SetString(TextoSeleccionado)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_fx" /*RemoteObject*/ ).getField(false,"Clipboard").runVoidMethod ("SetString",(Object)(_textoseleccionado));
 BA.debugLineNum = 1339;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _copyobject(RemoteObject __ref,RemoteObject _o) throws Exception{
try {
		Debug.PushSubsStack("CopyObject (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,5479);
if (RapidSub.canDelegate("copyobject")) { return __ref.runUserSub(false, "jamtableclv","copyobject", __ref, _o);}
RemoteObject _s = RemoteObject.declareNull("anywheresoftware.b4a.randomaccessfile.B4XSerializator");
Debug.locals.put("o", _o);
 BA.debugLineNum = 5479;BA.debugLine="private Sub CopyObject(o As Object) As Object";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 5480;BA.debugLine="Dim s As B4XSerializator";
Debug.JustUpdateDeviceLine();
_s = RemoteObject.createNew ("anywheresoftware.b4a.randomaccessfile.B4XSerializator");Debug.locals.put("s", _s);
 BA.debugLineNum = 5481;BA.debugLine="Return s.ConvertBytesToObject(s.ConvertObjectToBy";
Debug.JustUpdateDeviceLine();
if (true) return _s.runMethod(false,"ConvertBytesToObject",(Object)(_s.runMethod(false,"ConvertObjectToBytes",(Object)(_o))));
 BA.debugLineNum = 5482;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _crearmenucontextualnodo(RemoteObject __ref,RemoteObject _xnode) throws Exception{
try {
		Debug.PushSubsStack("CrearMenuContextualNodo (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,1004);
if (RapidSub.canDelegate("crearmenucontextualnodo")) { return __ref.runUserSub(false, "jamtableclv","crearmenucontextualnodo", __ref, _xnode);}
RemoteObject _txtarea = RemoteObject.declareNull("anywheresoftware.b4j.objects.TextInputControlWrapper.TextAreaWrapper");
RemoteObject _tf = RemoteObject.declareNull("anywheresoftware.b4j.objects.TextInputControlWrapper.TextFieldWrapper");
RemoteObject _cbo = RemoteObject.declareNull("anywheresoftware.b4j.objects.ComboBoxWrapper");
RemoteObject _chkb = RemoteObject.declareNull("anywheresoftware.b4j.objects.CheckboxWrapper");
Debug.locals.put("xNode", _xnode);
 BA.debugLineNum = 1004;BA.debugLine="private Sub CrearMenuContextualNodo(xNode As B4XVi";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 1005;BA.debugLine="If xNode Is TextArea Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("i",_xnode.getObjectOrNull(), RemoteObject.createImmutable("javafx.scene.control.TextArea"))) { 
 BA.debugLineNum = 1006;BA.debugLine="Dim txtArea As TextArea=xNode";
Debug.JustUpdateDeviceLine();
_txtarea = RemoteObject.createNew ("anywheresoftware.b4j.objects.TextInputControlWrapper.TextAreaWrapper");
_txtarea = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.TextInputControlWrapper.TextAreaWrapper"), _xnode.getObject());Debug.locals.put("txtArea", _txtarea);Debug.locals.put("txtArea", _txtarea);
 BA.debugLineNum = 1007;BA.debugLine="If txtArea.ContextMenu.IsInitialized=False Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_txtarea.runMethod(false,"getContextMenu").runMethod(true,"IsInitialized"),jamtableclv.__c.getField(true,"False"))) { 
 BA.debugLineNum = 1011;BA.debugLine="txtArea.ContextMenu=mContextMenu";
Debug.JustUpdateDeviceLine();
_txtarea.runMethod(false,"setContextMenu",__ref.getField(false,"_mcontextmenu" /*RemoteObject*/ ));
 };
 BA.debugLineNum = 1013;BA.debugLine="Return";
Debug.JustUpdateDeviceLine();
if (true) return RemoteObject.createImmutable("");
 };
 BA.debugLineNum = 1016;BA.debugLine="If xNode Is TextField Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("i",_xnode.getObjectOrNull(), RemoteObject.createImmutable("javafx.scene.control.TextField"))) { 
 BA.debugLineNum = 1017;BA.debugLine="Dim tF As TextField=xNode";
Debug.JustUpdateDeviceLine();
_tf = RemoteObject.createNew ("anywheresoftware.b4j.objects.TextInputControlWrapper.TextFieldWrapper");
_tf = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.TextInputControlWrapper.TextFieldWrapper"), _xnode.getObject());Debug.locals.put("tF", _tf);Debug.locals.put("tF", _tf);
 BA.debugLineNum = 1018;BA.debugLine="If tF.ContextMenu.IsInitialized=False Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_tf.runMethod(false,"getContextMenu").runMethod(true,"IsInitialized"),jamtableclv.__c.getField(true,"False"))) { 
 BA.debugLineNum = 1022;BA.debugLine="tF.ContextMenu=mContextMenu";
Debug.JustUpdateDeviceLine();
_tf.runMethod(false,"setContextMenu",__ref.getField(false,"_mcontextmenu" /*RemoteObject*/ ));
 };
 BA.debugLineNum = 1024;BA.debugLine="Return";
Debug.JustUpdateDeviceLine();
if (true) return RemoteObject.createImmutable("");
 };
 BA.debugLineNum = 1027;BA.debugLine="If xNode Is ComboBox Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("i",_xnode.getObjectOrNull(), RemoteObject.createImmutable("javafx.scene.control.ComboBox"))) { 
 BA.debugLineNum = 1028;BA.debugLine="Dim cbo As ComboBox=xNode";
Debug.JustUpdateDeviceLine();
_cbo = RemoteObject.createNew ("anywheresoftware.b4j.objects.ComboBoxWrapper");
_cbo = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.ComboBoxWrapper"), _xnode.getObject());Debug.locals.put("cbo", _cbo);Debug.locals.put("cbo", _cbo);
 BA.debugLineNum = 1029;BA.debugLine="If cbo.ContextMenu.IsInitialized=False Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_cbo.runMethod(false,"getContextMenu").runMethod(true,"IsInitialized"),jamtableclv.__c.getField(true,"False"))) { 
 BA.debugLineNum = 1033;BA.debugLine="cbo.ContextMenu=mContextMenu";
Debug.JustUpdateDeviceLine();
_cbo.runMethod(false,"setContextMenu",__ref.getField(false,"_mcontextmenu" /*RemoteObject*/ ));
 };
 BA.debugLineNum = 1035;BA.debugLine="Return";
Debug.JustUpdateDeviceLine();
if (true) return RemoteObject.createImmutable("");
 };
 BA.debugLineNum = 1038;BA.debugLine="If xNode Is CheckBox Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("i",_xnode.getObjectOrNull(), RemoteObject.createImmutable("javafx.scene.control.CheckBox"))) { 
 BA.debugLineNum = 1039;BA.debugLine="Dim chkb As CheckBox=xNode";
Debug.JustUpdateDeviceLine();
_chkb = RemoteObject.createNew ("anywheresoftware.b4j.objects.CheckboxWrapper");
_chkb = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.CheckboxWrapper"), _xnode.getObject());Debug.locals.put("chkb", _chkb);Debug.locals.put("chkb", _chkb);
 BA.debugLineNum = 1040;BA.debugLine="If chkb.ContextMenu.IsInitialized=False Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_chkb.runMethod(false,"getContextMenu").runMethod(true,"IsInitialized"),jamtableclv.__c.getField(true,"False"))) { 
 BA.debugLineNum = 1044;BA.debugLine="chkb.ContextMenu=mContextMenu";
Debug.JustUpdateDeviceLine();
_chkb.runMethod(false,"setContextMenu",__ref.getField(false,"_mcontextmenu" /*RemoteObject*/ ));
 };
 BA.debugLineNum = 1046;BA.debugLine="Return";
Debug.JustUpdateDeviceLine();
if (true) return RemoteObject.createImmutable("");
 };
 BA.debugLineNum = 1048;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _creartablasqlite(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("CrearTablaSQLite (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,5484);
if (RapidSub.canDelegate("creartablasqlite")) { return __ref.runUserSub(false, "jamtableclv","creartablasqlite", __ref);}
RemoteObject _sbcreartabla = RemoteObject.declareNull("anywheresoftware.b4a.keywords.StringBuilderWrapper");
RemoteObject _sbparametros = RemoteObject.declareNull("anywheresoftware.b4a.keywords.StringBuilderWrapper");
RemoteObject _sbprimarykey = RemoteObject.declareNull("anywheresoftware.b4a.keywords.StringBuilderWrapper");
RemoteObject _c = RemoteObject.declareNull("b4j.docU.jamtableclv._campoorigendatosjamtableclv");
RemoteObject _query = RemoteObject.createImmutable("");
 BA.debugLineNum = 5484;BA.debugLine="private Sub CrearTablaSQLite";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 5486;BA.debugLine="If mSQL.IsInitialized Then mSQL.Close";
Debug.JustUpdateDeviceLine();
if (__ref.getField(false,"_msql" /*RemoteObject*/ ).runMethod(true,"IsInitialized").<Boolean>get().booleanValue()) { 
__ref.getField(false,"_msql" /*RemoteObject*/ ).runVoidMethod ("Close");};
 BA.debugLineNum = 5488;BA.debugLine="mSQL.InitializeSQLite(\"\", \":memory:\", True)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_msql" /*RemoteObject*/ ).runVoidMethod ("InitializeSQLite",(Object)(BA.ObjectToString("")),(Object)(BA.ObjectToString(":memory:")),(Object)(jamtableclv.__c.getField(true,"True")));
 BA.debugLineNum = 5493;BA.debugLine="Log(\"version SQLite: \" & mSQL.ExecQuerySingleResu";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("LogImpl","9167837705",RemoteObject.concat(RemoteObject.createImmutable("version SQLite: "),__ref.getField(false,"_msql" /*RemoteObject*/ ).runMethod(true,"ExecQuerySingleResult",(Object)(RemoteObject.createImmutable("SELECT sqlite_version();")))),0);
 BA.debugLineNum = 5496;BA.debugLine="DBUtils.DropTable(mSQL,\"tblOrigenDatos\")";
Debug.JustUpdateDeviceLine();
jamtableclv._dbutils.runVoidMethod ("_droptable" /*RemoteObject*/ ,(Object)(__ref.getField(false,"_msql" /*RemoteObject*/ )),(Object)(RemoteObject.createImmutable("tblOrigenDatos")));
 BA.debugLineNum = 5499;BA.debugLine="Dim sbCrearTabla As StringBuilder";
Debug.JustUpdateDeviceLine();
_sbcreartabla = RemoteObject.createNew ("anywheresoftware.b4a.keywords.StringBuilderWrapper");Debug.locals.put("sbCrearTabla", _sbcreartabla);
 BA.debugLineNum = 5500;BA.debugLine="sbCrearTabla.Initialize";
Debug.JustUpdateDeviceLine();
_sbcreartabla.runVoidMethod ("Initialize");
 BA.debugLineNum = 5505;BA.debugLine="Dim sbParametros As StringBuilder";
Debug.JustUpdateDeviceLine();
_sbparametros = RemoteObject.createNew ("anywheresoftware.b4a.keywords.StringBuilderWrapper");Debug.locals.put("sbParametros", _sbparametros);
 BA.debugLineNum = 5506;BA.debugLine="sbParametros.Initialize";
Debug.JustUpdateDeviceLine();
_sbparametros.runVoidMethod ("Initialize");
 BA.debugLineNum = 5508;BA.debugLine="If mlstCamposPrimaryKey.Size>0 Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean(">",__ref.getField(false,"_mlstcamposprimarykey" /*RemoteObject*/ ).runMethod(true,"getSize"),BA.numberCast(double.class, 0))) { 
 BA.debugLineNum = 5509;BA.debugLine="Dim sbPrimaryKey As StringBuilder";
Debug.JustUpdateDeviceLine();
_sbprimarykey = RemoteObject.createNew ("anywheresoftware.b4a.keywords.StringBuilderWrapper");Debug.locals.put("sbPrimaryKey", _sbprimarykey);
 BA.debugLineNum = 5510;BA.debugLine="sbPrimaryKey.Initialize";
Debug.JustUpdateDeviceLine();
_sbprimarykey.runVoidMethod ("Initialize");
 BA.debugLineNum = 5511;BA.debugLine="sbPrimaryKey.Append(\", PRIMARY KEY (\")";
Debug.JustUpdateDeviceLine();
_sbprimarykey.runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(", PRIMARY KEY (")));
 };
 BA.debugLineNum = 5518;BA.debugLine="sbParametros.Append(\"?,\")";
Debug.JustUpdateDeviceLine();
_sbparametros.runVoidMethod ("Append",(Object)(RemoteObject.createImmutable("?,")));
 BA.debugLineNum = 5526;BA.debugLine="For Each c As CampoOrigenDatosJamTableCLV In mLst";
Debug.JustUpdateDeviceLine();
{
final RemoteObject group15 = __ref.getField(false,"_mlstcamposorigendatos" /*RemoteObject*/ );
final int groupLen15 = group15.runMethod(true,"getSize").<Integer>get()
;int index15 = 0;
;
for (; index15 < groupLen15;index15++){
_c = (group15.runMethod(false,"Get",index15));Debug.locals.put("c", _c);
Debug.locals.put("c", _c);
 BA.debugLineNum = 5530;BA.debugLine="If sbCrearTabla.Length>0 Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean(">",_sbcreartabla.runMethod(true,"getLength"),BA.numberCast(double.class, 0))) { 
 BA.debugLineNum = 5531;BA.debugLine="sbCrearTabla.Append(\", \")";
Debug.JustUpdateDeviceLine();
_sbcreartabla.runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(", ")));
 };
 BA.debugLineNum = 5550;BA.debugLine="If c.CampoCalculado=False Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_c.getField(true,"CampoCalculado" /*RemoteObject*/ ),jamtableclv.__c.getField(true,"False"))) { 
 BA.debugLineNum = 5552;BA.debugLine="If c.EsBooleano Then";
Debug.JustUpdateDeviceLine();
if (_c.getField(true,"EsBooleano" /*RemoteObject*/ ).<Boolean>get().booleanValue()) { 
 BA.debugLineNum = 5553;BA.debugLine="sbCrearTabla.Append(EscapeField(c.AliasCampo))";
Debug.JustUpdateDeviceLine();
_sbcreartabla.runMethod(false,"Append",(Object)(__ref.runClassMethod (b4j.docU.jamtableclv.class, "_escapefield" /*RemoteObject*/ ,(Object)(_c.getField(true,"AliasCampo" /*RemoteObject*/ ))))).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(" INTEGER")));
 }else {
 BA.debugLineNum = 5555;BA.debugLine="sbCrearTabla.Append(EscapeField(c.AliasCampo))";
Debug.JustUpdateDeviceLine();
_sbcreartabla.runMethod(false,"Append",(Object)(__ref.runClassMethod (b4j.docU.jamtableclv.class, "_escapefield" /*RemoteObject*/ ,(Object)(_c.getField(true,"AliasCampo" /*RemoteObject*/ ))))).runMethod(false,"Append",(Object)(RemoteObject.createImmutable(" "))).runVoidMethod ("Append",(Object)(_c.getField(true,"TipoDato" /*RemoteObject*/ )));
 BA.debugLineNum = 5556;BA.debugLine="If c.TipoDato=\"TEXT\" Then sbCrearTabla.Append(";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_c.getField(true,"TipoDato" /*RemoteObject*/ ),BA.ObjectToString("TEXT"))) { 
_sbcreartabla.runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(" COLLATE NOCASE")));};
 };
 }else {
 BA.debugLineNum = 5561;BA.debugLine="sbCrearTabla.Append(EscapeField(c.AliasCampo)).";
Debug.JustUpdateDeviceLine();
_sbcreartabla.runMethod(false,"Append",(Object)(__ref.runClassMethod (b4j.docU.jamtableclv.class, "_escapefield" /*RemoteObject*/ ,(Object)(_c.getField(true,"AliasCampo" /*RemoteObject*/ ))))).runMethod(false,"Append",(Object)(RemoteObject.createImmutable(" "))).runMethod(false,"Append",(Object)(_c.getField(true,"TipoDato" /*RemoteObject*/ ))).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(" ")));
 BA.debugLineNum = 5562;BA.debugLine="If c.TipoDato=\"TEXT\" Then sbCrearTabla.Append(\"";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_c.getField(true,"TipoDato" /*RemoteObject*/ ),BA.ObjectToString("TEXT"))) { 
_sbcreartabla.runVoidMethod ("Append",(Object)(RemoteObject.createImmutable("COLLATE NOCASE ")));};
 BA.debugLineNum = 5563;BA.debugLine="sbCrearTabla.Append(\"GENERATED ALWAYS AS (\").Ap";
Debug.JustUpdateDeviceLine();
_sbcreartabla.runMethod(false,"Append",(Object)(RemoteObject.createImmutable("GENERATED ALWAYS AS ("))).runMethod(false,"Append",(Object)(_c.getField(true,"Campo" /*RemoteObject*/ ))).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(") ")));
 };
 BA.debugLineNum = 5567;BA.debugLine="sbCrearTabla.Append(\" NOT NULL\")";
Debug.JustUpdateDeviceLine();
_sbcreartabla.runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(" NOT NULL")));
 BA.debugLineNum = 5587;BA.debugLine="If c.KeyID>0 Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean(">",_c.getField(true,"KeyID" /*RemoteObject*/ ),BA.numberCast(double.class, 0))) { 
 BA.debugLineNum = 5588;BA.debugLine="sbPrimaryKey.Append(EscapeField(c.AliasCampo)).";
Debug.JustUpdateDeviceLine();
_sbprimarykey.runMethod(false,"Append",(Object)(__ref.runClassMethod (b4j.docU.jamtableclv.class, "_escapefield" /*RemoteObject*/ ,(Object)(_c.getField(true,"AliasCampo" /*RemoteObject*/ ))))).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(",")));
 };
 BA.debugLineNum = 5592;BA.debugLine="sbParametros.Append(\"?,\")";
Debug.JustUpdateDeviceLine();
_sbparametros.runVoidMethod ("Append",(Object)(RemoteObject.createImmutable("?,")));
 }
}Debug.locals.put("c", _c);
;
 BA.debugLineNum = 5595;BA.debugLine="sbParametros.Remove(sbParametros.Length-1,sbParam";
Debug.JustUpdateDeviceLine();
_sbparametros.runVoidMethod ("Remove",(Object)(RemoteObject.solve(new RemoteObject[] {_sbparametros.runMethod(true,"getLength"),RemoteObject.createImmutable(1)}, "-",1, 1)),(Object)(_sbparametros.runMethod(true,"getLength")));
 BA.debugLineNum = 5607;BA.debugLine="Dim query As String = \"CREATE TABLE IF NOT EXISTS";
Debug.JustUpdateDeviceLine();
_query = RemoteObject.concat(RemoteObject.createImmutable("CREATE TABLE IF NOT EXISTS tblOrigenDatos ("),_sbcreartabla.runMethod(true,"ToString"));Debug.locals.put("query", _query);Debug.locals.put("query", _query);
 BA.debugLineNum = 5633;BA.debugLine="If mlstCamposPrimaryKey.size>0 Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean(">",__ref.getField(false,"_mlstcamposprimarykey" /*RemoteObject*/ ).runMethod(true,"getSize"),BA.numberCast(double.class, 0))) { 
 BA.debugLineNum = 5634;BA.debugLine="sbPrimaryKey=sbPrimaryKey.Remove(sbPrimaryKey.Le";
Debug.JustUpdateDeviceLine();
_sbprimarykey = _sbprimarykey.runMethod(false,"Remove",(Object)(RemoteObject.solve(new RemoteObject[] {_sbprimarykey.runMethod(true,"getLength"),RemoteObject.createImmutable(1)}, "-",1, 1)),(Object)(_sbprimarykey.runMethod(true,"getLength")));Debug.locals.put("sbPrimaryKey", _sbprimarykey);
 BA.debugLineNum = 5635;BA.debugLine="sbPrimaryKey.Append(\")\")";
Debug.JustUpdateDeviceLine();
_sbprimarykey.runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(")")));
 BA.debugLineNum = 5636;BA.debugLine="query=query & sbPrimaryKey.ToString";
Debug.JustUpdateDeviceLine();
_query = RemoteObject.concat(_query,_sbprimarykey.runMethod(true,"ToString"));Debug.locals.put("query", _query);
 };
 BA.debugLineNum = 5639;BA.debugLine="query=query & \")\"";
Debug.JustUpdateDeviceLine();
_query = RemoteObject.concat(_query,RemoteObject.createImmutable(")"));Debug.locals.put("query", _query);
 BA.debugLineNum = 5641;BA.debugLine="Log(\"Query crear tabla \" & query)";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("LogImpl","9167837853",RemoteObject.concat(RemoteObject.createImmutable("Query crear tabla "),_query),0);
 BA.debugLineNum = 5644;BA.debugLine="Try";
Debug.JustUpdateDeviceLine();
try { BA.debugLineNum = 5645;BA.debugLine="mSQL.ExecNonQuery(query)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_msql" /*RemoteObject*/ ).runVoidMethod ("ExecNonQuery",(Object)(_query));
 Debug.CheckDeviceExceptions();
} 
       catch (Exception e49) {
			BA.rdebugUtils.runVoidMethod("setLastException",__ref.getField(false, "ba"), e49.toString()); BA.debugLineNum = 5647;BA.debugLine="LogColor(LastException.Message, xui.Color_Red)";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("LogImpl","9167837859",jamtableclv.__c.runMethod(false,"LastException",__ref.getField(false, "ba")).runMethod(true,"getMessage"),__ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"Color_Red"));
 BA.debugLineNum = 5648;BA.debugLine="fx.Msgbox(mParentForm, \"Error SQLite en la creac";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_fx" /*RemoteObject*/ ).runVoidMethodAndSync ("Msgbox",(Object)(__ref.getField(false,"_mparentform" /*RemoteObject*/ )),(Object)(RemoteObject.concat(RemoteObject.createImmutable("Error SQLite en la creación de la tabla tblOrigenDatos :"),jamtableclv.__c.getField(true,"CRLF"),jamtableclv.__c.getField(true,"CRLF"),_query,jamtableclv.__c.getField(true,"CRLF"),jamtableclv.__c.getField(true,"CRLF"),jamtableclv.__c.runMethod(false,"LastException",__ref.getField(false, "ba")).runMethod(true,"getMessage"),jamtableclv.__c.getField(true,"CRLF"),RemoteObject.createImmutable("Avisa al administrador de la aplicación."))),(Object)(RemoteObject.createImmutable("Error")));
 BA.debugLineNum = 5649;BA.debugLine="ExitApplication";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("ExitApplication");
 };
 BA.debugLineNum = 5652;BA.debugLine="Log(\"CrearTablaSQLite \" & query)";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("LogImpl","9167837864",RemoteObject.concat(RemoteObject.createImmutable("CrearTablaSQLite "),_query),0);
 BA.debugLineNum = 5655;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _createitemfiltro(RemoteObject __ref,RemoteObject _primerfiltro,RemoteObject _clviv) throws Exception{
try {
		Debug.PushSubsStack("CreateItemFiltro (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,2218);
if (RapidSub.canDelegate("createitemfiltro")) { return __ref.runUserSub(false, "jamtableclv","createitemfiltro", __ref, _primerfiltro, _clviv);}
RemoteObject _p = RemoteObject.declareNull("anywheresoftware.b4a.objects.B4XViewWrapper");
RemoteObject _operadorfiltro = RemoteObject.createImmutable("");
RemoteObject _c = RemoteObject.declareNull("b4j.docU.jamtableclv._campoorigendatosjamtableclv");
Debug.locals.put("PrimerFiltro", _primerfiltro);
Debug.locals.put("clvIV", _clviv);
 BA.debugLineNum = 2218;BA.debugLine="private Sub CreateItemFiltro(PrimerFiltro As Boole";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 2219;BA.debugLine="Dim p As B4XView =xui.CreatePanel(\"\")";
Debug.JustUpdateDeviceLine();
_p = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");
_p = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"CreatePanel",__ref.getField(false, "ba"),(Object)(RemoteObject.createImmutable("")));Debug.locals.put("p", _p);Debug.locals.put("p", _p);
 BA.debugLineNum = 2220;BA.debugLine="p.LoadLayout(\"scrFiltroCampojamTableCLV\")";
Debug.JustUpdateDeviceLine();
_p.runVoidMethodAndSync ("LoadLayout",(Object)(RemoteObject.createImmutable("scrFiltroCampojamTableCLV")),__ref.getField(false, "ba"));
 BA.debugLineNum = 2221;BA.debugLine="CSSUtils.SetBackgroundColor(p,fx.Colors.From32Bit";
Debug.JustUpdateDeviceLine();
jamtableclv._cssutils.runVoidMethod ("_setbackgroundcolor",RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.NodeWrapper.ConcreteNodeWrapper"), _p.getObject()),RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.JFX.PaintWrapper"), __ref.getField(false,"_fx" /*RemoteObject*/ ).getField(false,"Colors").runMethod(false,"From32Bit",(Object)(BA.numberCast(int.class, ((int)0x00ffffff))))));
 BA.debugLineNum = 2222;BA.debugLine="p.SetLayoutAnimated(0, 0, 0, p.Width, mAlturaItem";
Debug.JustUpdateDeviceLine();
_p.runVoidMethod ("SetLayoutAnimated",(Object)(BA.numberCast(int.class, 0)),(Object)(BA.numberCast(double.class, 0)),(Object)(BA.numberCast(double.class, 0)),(Object)(_p.runMethod(true,"getWidth")),(Object)(BA.numberCast(double.class, __ref.getField(true,"_malturaitemfiltro" /*RemoteObject*/ ))));
 BA.debugLineNum = 2224;BA.debugLine="clvIV.btnSelFechaFiltro=btnSelFechaFiltro";
Debug.JustUpdateDeviceLine();
_clviv.setField ("btnSelFechaFiltro" /*RemoteObject*/ ,__ref.getField(false,"_btnselfechafiltro" /*RemoteObject*/ ));
 BA.debugLineNum = 2225;BA.debugLine="clvIV.txtValorFechaFiltro=txtValorFechaFiltro";
Debug.JustUpdateDeviceLine();
_clviv.setField ("txtValorFechaFiltro" /*RemoteObject*/ ,__ref.getField(false,"_txtvalorfechafiltro" /*RemoteObject*/ ));
 BA.debugLineNum = 2226;BA.debugLine="clvIV.cboAndOrFiltro=cboAndOrFiltro";
Debug.JustUpdateDeviceLine();
_clviv.setField ("cboAndOrFiltro" /*RemoteObject*/ ,__ref.getField(false,"_cboandorfiltro" /*RemoteObject*/ ));
 BA.debugLineNum = 2227;BA.debugLine="clvIV.cboCampoFiltro=cboCampoFiltro";
Debug.JustUpdateDeviceLine();
_clviv.setField ("cboCampoFiltro" /*RemoteObject*/ ,__ref.getField(false,"_cbocampofiltro" /*RemoteObject*/ ));
 BA.debugLineNum = 2229;BA.debugLine="clvIV.cbComparadorFiltro=cbComparadorFiltro";
Debug.JustUpdateDeviceLine();
_clviv.setField ("cbComparadorFiltro" /*RemoteObject*/ ,__ref.getField(false,"_cbcomparadorfiltro" /*RemoteObject*/ ));
 BA.debugLineNum = 2230;BA.debugLine="clvIV.cboValorFiltro=cboValorFiltro";
Debug.JustUpdateDeviceLine();
_clviv.setField ("cboValorFiltro" /*RemoteObject*/ ,__ref.getField(false,"_cbovalorfiltro" /*RemoteObject*/ ));
 BA.debugLineNum = 2231;BA.debugLine="clvIV.txtValorFiltro=txtValorFiltro";
Debug.JustUpdateDeviceLine();
_clviv.setField ("txtValorFiltro" /*RemoteObject*/ ,__ref.getField(false,"_txtvalorfiltro" /*RemoteObject*/ ));
 BA.debugLineNum = 2232;BA.debugLine="clvIV.chkValorFiltro=chkValorFiltro";
Debug.JustUpdateDeviceLine();
_clviv.setField ("chkValorFiltro" /*RemoteObject*/ ,__ref.getField(false,"_chkvalorfiltro" /*RemoteObject*/ ));
 BA.debugLineNum = 2234;BA.debugLine="Dim OperadorFiltro As String";
Debug.JustUpdateDeviceLine();
_operadorfiltro = RemoteObject.createImmutable("");Debug.locals.put("OperadorFiltro", _operadorfiltro);
 BA.debugLineNum = 2235;BA.debugLine="If PrimerFiltro Then";
Debug.JustUpdateDeviceLine();
if (_primerfiltro.<Boolean>get().booleanValue()) { 
 BA.debugLineNum = 2237;BA.debugLine="OperadorFiltro=\"\"";
Debug.JustUpdateDeviceLine();
_operadorfiltro = BA.ObjectToString("");Debug.locals.put("OperadorFiltro", _operadorfiltro);
 BA.debugLineNum = 2238;BA.debugLine="lblTitleFiltroDonde.Left=70";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lbltitlefiltrodonde" /*RemoteObject*/ ).runMethod(true,"setLeft",BA.numberCast(double.class, 70));
 BA.debugLineNum = 2239;BA.debugLine="lblTitleFiltroDonde.prefWidth=105";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lbltitlefiltrodonde" /*RemoteObject*/ ).runMethod(true,"setPrefWidth",BA.numberCast(double.class, 105));
 BA.debugLineNum = 2240;BA.debugLine="cboAndOrFiltro.Visible=False";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_cboandorfiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",jamtableclv.__c.getField(true,"False"));
 BA.debugLineNum = 2241;BA.debugLine="lblTitleFiltroDonde.Text=\"Filtrar donde\"";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lbltitlefiltrodonde" /*RemoteObject*/ ).runMethod(true,"setText",BA.ObjectToString("Filtrar donde"));
 }else {
 BA.debugLineNum = 2244;BA.debugLine="lblTitleFiltroDonde.Left=128";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lbltitlefiltrodonde" /*RemoteObject*/ ).runMethod(true,"setLeft",BA.numberCast(double.class, 128));
 BA.debugLineNum = 2245;BA.debugLine="lblTitleFiltroDonde.PrefWidth=50";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lbltitlefiltrodonde" /*RemoteObject*/ ).runMethod(true,"setPrefWidth",BA.numberCast(double.class, 50));
 BA.debugLineNum = 2246;BA.debugLine="cboAndOrFiltro.Visible=True";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_cboandorfiltro" /*RemoteObject*/ ).runMethod(true,"setVisible",jamtableclv.__c.getField(true,"True"));
 BA.debugLineNum = 2248;BA.debugLine="cboAndOrFiltro.Items.Add(\"Y\")";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_cboandorfiltro" /*RemoteObject*/ ).runMethod(false,"getItems").runVoidMethod ("Add",(Object)((RemoteObject.createImmutable("Y"))));
 BA.debugLineNum = 2249;BA.debugLine="cboAndOrFiltro.Items.Add(\"O\")";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_cboandorfiltro" /*RemoteObject*/ ).runMethod(false,"getItems").runVoidMethod ("Add",(Object)((RemoteObject.createImmutable("O"))));
 BA.debugLineNum = 2250;BA.debugLine="OperadorFiltro=\"Y\"";
Debug.JustUpdateDeviceLine();
_operadorfiltro = BA.ObjectToString("Y");Debug.locals.put("OperadorFiltro", _operadorfiltro);
 BA.debugLineNum = 2251;BA.debugLine="cboAndOrFiltro.Value=\"Y\"";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_cboandorfiltro" /*RemoteObject*/ ).runMethod(false,"setValue",RemoteObject.createImmutable(("Y")));
 BA.debugLineNum = 2252;BA.debugLine="lblTitleFiltroDonde.Text=\"donde\"";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lbltitlefiltrodonde" /*RemoteObject*/ ).runMethod(true,"setText",BA.ObjectToString("donde"));
 };
 BA.debugLineNum = 2260;BA.debugLine="Dim c As CampoOrigenDatosJamTableCLV";
Debug.JustUpdateDeviceLine();
_c = RemoteObject.createNew ("b4j.docU.jamtableclv._campoorigendatosjamtableclv");Debug.locals.put("c", _c);
 BA.debugLineNum = 2261;BA.debugLine="c.Initialize";
Debug.JustUpdateDeviceLine();
_c.runVoidMethod ("Initialize");
 BA.debugLineNum = 2262;BA.debugLine="p.Tag=DatosFiltro(False,OperadorFiltro,c,Null,Nul";
Debug.JustUpdateDeviceLine();
_p.runMethod(false,"setTag",(__ref.runClassMethod (b4j.docU.jamtableclv.class, "_datosfiltro" /*RemoteObject*/ ,(Object)(jamtableclv.__c.getField(true,"False")),(Object)(_operadorfiltro),(Object)(_c),(Object)(BA.ObjectToString(jamtableclv.__c.getField(false,"Null"))),(Object)(jamtableclv.__c.getField(false,"Null"))).getObject()));
 BA.debugLineNum = 2263;BA.debugLine="Return p";
Debug.JustUpdateDeviceLine();
if (true) return _p;
 BA.debugLineNum = 2264;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _createitemordensql(RemoteObject __ref,RemoteObject _dosql,RemoteObject _clviv2) throws Exception{
try {
		Debug.PushSubsStack("CreateItemOrdenSQL (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,4972);
if (RapidSub.canDelegate("createitemordensql")) { return __ref.runUserSub(false, "jamtableclv","createitemordensql", __ref, _dosql, _clviv2);}
RemoteObject _p = RemoteObject.declareNull("anywheresoftware.b4a.objects.B4XViewWrapper");
Debug.locals.put("dOSQL", _dosql);
Debug.locals.put("clviv2", _clviv2);
 BA.debugLineNum = 4972;BA.debugLine="private Sub CreateItemOrdenSQL(dOSQL As DatosOrden";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 4973;BA.debugLine="Dim p As B4XView =xui.CreatePanel(\"\")";
Debug.JustUpdateDeviceLine();
_p = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");
_p = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"CreatePanel",__ref.getField(false, "ba"),(Object)(RemoteObject.createImmutable("")));Debug.locals.put("p", _p);Debug.locals.put("p", _p);
 BA.debugLineNum = 4974;BA.debugLine="p.LoadLayout(\"scrItemOrdenacionSQLJamTableCLV\")";
Debug.JustUpdateDeviceLine();
_p.runVoidMethodAndSync ("LoadLayout",(Object)(RemoteObject.createImmutable("scrItemOrdenacionSQLJamTableCLV")),__ref.getField(false, "ba"));
 BA.debugLineNum = 4975;BA.debugLine="CSSUtils.SetBackgroundColor(p,fx.Colors.From32Bit";
Debug.JustUpdateDeviceLine();
jamtableclv._cssutils.runVoidMethod ("_setbackgroundcolor",RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.NodeWrapper.ConcreteNodeWrapper"), _p.getObject()),RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.JFX.PaintWrapper"), __ref.getField(false,"_fx" /*RemoteObject*/ ).getField(false,"Colors").runMethod(false,"From32Bit",(Object)(BA.numberCast(int.class, ((int)0x00ffffff))))));
 BA.debugLineNum = 4976;BA.debugLine="p.SetLayoutAnimated(0, 0, 0, CLVOrdenSQLjamTableC";
Debug.JustUpdateDeviceLine();
_p.runVoidMethod ("SetLayoutAnimated",(Object)(BA.numberCast(int.class, 0)),(Object)(BA.numberCast(double.class, 0)),(Object)(BA.numberCast(double.class, 0)),(Object)(__ref.getField(false,"_clvordensqljamtableclv" /*RemoteObject*/ ).runMethod(false,"_asview").runMethod(true,"getWidth")),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 70))))));
 BA.debugLineNum = 4978;BA.debugLine="clviv2.cboCampoOrdenacionSQL=cboCampoOrdenacionSQ";
Debug.JustUpdateDeviceLine();
_clviv2.setField ("cboCampoOrdenacionSQL" /*RemoteObject*/ ,__ref.getField(false,"_cbocampoordenacionsql" /*RemoteObject*/ ));
 BA.debugLineNum = 4979;BA.debugLine="clviv2.cboTipoOrdenacionSQL=cboTipoOrdenacionSQL";
Debug.JustUpdateDeviceLine();
_clviv2.setField ("cboTipoOrdenacionSQL" /*RemoteObject*/ ,__ref.getField(false,"_cbotipoordenacionsql" /*RemoteObject*/ ));
 BA.debugLineNum = 4981;BA.debugLine="cboCampoOrdenacionSQL.Items.Addall(RestoCamposOrd";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_cbocampoordenacionsql" /*RemoteObject*/ ).runMethod(false,"getItems").runVoidMethod ("AddAll",(Object)(__ref.runClassMethod (b4j.docU.jamtableclv.class, "_restocamposordensqlcbo" /*RemoteObject*/ )));
 BA.debugLineNum = 4982;BA.debugLine="cboTipoOrdenacionSQL.Items.AddAll(Array As String";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_cbotipoordenacionsql" /*RemoteObject*/ ).runMethod(false,"getItems").runVoidMethod ("AddAll",(Object)(jamtableclv.__c.runMethod(false, "ArrayToList", (Object)(RemoteObject.createNewArray("String",new int[] {2},new Object[] {BA.ObjectToString("Ascendente"),RemoteObject.createImmutable("Descendente")})))));
 BA.debugLineNum = 4984;BA.debugLine="cboCampoOrdenacionSQL.Value=dOSQL.AliasCampoOrden";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_cbocampoordenacionsql" /*RemoteObject*/ ).runMethod(false,"setValue",(_dosql.getField(true,"AliasCampoOrdenSQL" /*RemoteObject*/ )));
 BA.debugLineNum = 4985;BA.debugLine="cboTipoOrdenacionSQL.Value=dOSQL.TipoOrdenSQL";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_cbotipoordenacionsql" /*RemoteObject*/ ).runMethod(false,"setValue",(_dosql.getField(true,"TipoOrdenSQL" /*RemoteObject*/ )));
 BA.debugLineNum = 4986;BA.debugLine="cboTipoOrdenacionSQL.Value=\"Ascendente\"";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_cbotipoordenacionsql" /*RemoteObject*/ ).runMethod(false,"setValue",RemoteObject.createImmutable(("Ascendente")));
 BA.debugLineNum = 4988;BA.debugLine="cboCampoOrdenacionSQL.Value=dOSQL.AliasCampoOrden";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_cbocampoordenacionsql" /*RemoteObject*/ ).runMethod(false,"setValue",(_dosql.getField(true,"AliasCampoOrdenSQL" /*RemoteObject*/ )));
 BA.debugLineNum = 4989;BA.debugLine="cboTipoOrdenacionSQL.Value=dOSQL.TipoOrdenSQL";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_cbotipoordenacionsql" /*RemoteObject*/ ).runMethod(false,"setValue",(_dosql.getField(true,"TipoOrdenSQL" /*RemoteObject*/ )));
 BA.debugLineNum = 4991;BA.debugLine="Return p";
Debug.JustUpdateDeviceLine();
if (true) return _p;
 BA.debugLineNum = 4992;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _cstr(RemoteObject __ref,RemoteObject _o) throws Exception{
try {
		Debug.PushSubsStack("CStr (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7848);
if (RapidSub.canDelegate("cstr")) { return __ref.runUserSub(false, "jamtableclv","cstr", __ref, _o);}
Debug.locals.put("o", _o);
 BA.debugLineNum = 7848;BA.debugLine="public Sub CStr(o As Object) As String";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 7849;BA.debugLine="Return \"\" & o";
Debug.JustUpdateDeviceLine();
if (true) return RemoteObject.concat(RemoteObject.createImmutable(""),_o);
 BA.debugLineNum = 7850;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _currentscreenidx(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("CurrentScreeniDx (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,8477);
if (RapidSub.canDelegate("currentscreenidx")) { return __ref.runUserSub(false, "jamtableclv","currentscreenidx", __ref);}
RemoteObject _idxcurrentscreen = RemoteObject.createImmutable(0);
RemoteObject _xcurrmouse = RemoteObject.createImmutable(0);
RemoteObject _ycurrmouse = RemoteObject.createImmutable(0);
RemoteObject _desktop = null;
RemoteObject _cnt = RemoteObject.createImmutable(0);
RemoteObject _o = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
RemoteObject _bounds = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
RemoteObject _minx = RemoteObject.createImmutable(0);
RemoteObject _miny = RemoteObject.createImmutable(0);
RemoteObject _width = RemoteObject.createImmutable(0);
RemoteObject _height = RemoteObject.createImmutable(0);
 BA.debugLineNum = 8477;BA.debugLine="Public Sub CurrentScreeniDx As Int";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 8478;BA.debugLine="Dim iDxCurrentScreen As Int";
Debug.JustUpdateDeviceLine();
_idxcurrentscreen = RemoteObject.createImmutable(0);Debug.locals.put("iDxCurrentScreen", _idxcurrentscreen);
 BA.debugLineNum = 8479;BA.debugLine="Dim xCurrMouse As Double=PosicionActualRaton(0)";
Debug.JustUpdateDeviceLine();
_xcurrmouse = BA.numberCast(double.class, __ref.runClassMethod (b4j.docU.jamtableclv.class, "_posicionactualraton" /*RemoteObject*/ ).getArrayElement(true,BA.numberCast(int.class, 0)));Debug.locals.put("xCurrMouse", _xcurrmouse);Debug.locals.put("xCurrMouse", _xcurrmouse);
 BA.debugLineNum = 8480;BA.debugLine="Dim yCurrMouse As Double=PosicionActualRaton(1)";
Debug.JustUpdateDeviceLine();
_ycurrmouse = BA.numberCast(double.class, __ref.runClassMethod (b4j.docU.jamtableclv.class, "_posicionactualraton" /*RemoteObject*/ ).getArrayElement(true,BA.numberCast(int.class, 1)));Debug.locals.put("yCurrMouse", _ycurrmouse);Debug.locals.put("yCurrMouse", _ycurrmouse);
 BA.debugLineNum = 8482;BA.debugLine="Private Desktop(10) As JamTableCLVMyDisplay";
Debug.JustUpdateDeviceLine();
_desktop = RemoteObject.createNewArray ("b4j.docU.jamtableclv._jamtableclvmydisplay", new int[] {10}, new Object[]{});Debug.locals.put("Desktop", _desktop);
 BA.debugLineNum = 8483;BA.debugLine="Private cnt As Int = 0";
Debug.JustUpdateDeviceLine();
_cnt = BA.numberCast(int.class, 0);Debug.locals.put("cnt", _cnt);Debug.locals.put("cnt", _cnt);
 BA.debugLineNum = 8484;BA.debugLine="For Each o As JavaObject In fx.Screens";
Debug.JustUpdateDeviceLine();
_o = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");
{
final RemoteObject group6 = __ref.getField(false,"_fx" /*RemoteObject*/ ).runMethod(false,"getScreens");
final int groupLen6 = group6.runMethod(true,"getSize").<Integer>get()
;int index6 = 0;
;
for (; index6 < groupLen6;index6++){
_o = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), group6.runMethod(false,"Get",index6));Debug.locals.put("o", _o);
Debug.locals.put("o", _o);
 BA.debugLineNum = 8485;BA.debugLine="Dim bounds As JavaObject = o.RunMethodjo(\"";
Debug.JustUpdateDeviceLine();
_bounds = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");
_bounds = _o.runMethod(false,"RunMethodJO",(Object)(BA.ObjectToString("getBounds")),(Object)((jamtableclv.__c.getField(false,"Null"))));Debug.locals.put("bounds", _bounds);Debug.locals.put("bounds", _bounds);
 BA.debugLineNum = 8486;BA.debugLine="Dim minX As Double = bounds.RunMethod(\"get";
Debug.JustUpdateDeviceLine();
_minx = BA.numberCast(double.class, _bounds.runMethod(false,"RunMethod",(Object)(BA.ObjectToString("getMinX")),(Object)((jamtableclv.__c.getField(false,"Null")))));Debug.locals.put("minX", _minx);Debug.locals.put("minX", _minx);
 BA.debugLineNum = 8487;BA.debugLine="Dim minY As Double = bounds.RunMethod(\"get";
Debug.JustUpdateDeviceLine();
_miny = BA.numberCast(double.class, _bounds.runMethod(false,"RunMethod",(Object)(BA.ObjectToString("getMinY")),(Object)((jamtableclv.__c.getField(false,"Null")))));Debug.locals.put("minY", _miny);Debug.locals.put("minY", _miny);
 BA.debugLineNum = 8488;BA.debugLine="Dim width As Double = bounds.RunMethod(\"ge";
Debug.JustUpdateDeviceLine();
_width = BA.numberCast(double.class, _bounds.runMethod(false,"RunMethod",(Object)(BA.ObjectToString("getWidth")),(Object)((jamtableclv.__c.getField(false,"Null")))));Debug.locals.put("width", _width);Debug.locals.put("width", _width);
 BA.debugLineNum = 8489;BA.debugLine="Dim height As Double = bounds.RunMethod(\"g";
Debug.JustUpdateDeviceLine();
_height = BA.numberCast(double.class, _bounds.runMethod(false,"RunMethod",(Object)(BA.ObjectToString("getHeight")),(Object)((jamtableclv.__c.getField(false,"Null")))));Debug.locals.put("height", _height);Debug.locals.put("height", _height);
 BA.debugLineNum = 8490;BA.debugLine="Log($\"Screen is ${width} x ${height} pixel";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("LogImpl","9175767565",(RemoteObject.concat(RemoteObject.createImmutable("Screen is "),jamtableclv.__c.runMethod(true,"SmartStringFormatter",(Object)(BA.ObjectToString("")),(Object)((_width))),RemoteObject.createImmutable(" x "),jamtableclv.__c.runMethod(true,"SmartStringFormatter",(Object)(BA.ObjectToString("")),(Object)((_height))),RemoteObject.createImmutable(" pixels"))),0);
 BA.debugLineNum = 8491;BA.debugLine="Log($\"minimum X: ${minX}  minimum Y: ${min";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("LogImpl","9175767566",(RemoteObject.concat(RemoteObject.createImmutable("minimum X: "),jamtableclv.__c.runMethod(true,"SmartStringFormatter",(Object)(BA.ObjectToString("")),(Object)((_minx))),RemoteObject.createImmutable("  minimum Y: "),jamtableclv.__c.runMethod(true,"SmartStringFormatter",(Object)(BA.ObjectToString("")),(Object)((_miny))),RemoteObject.createImmutable(""))),0);
 BA.debugLineNum = 8492;BA.debugLine="Desktop(cnt).Left = minX ' required";
Debug.JustUpdateDeviceLine();
_desktop.getArrayElement(false, /*RemoteObject*/ _cnt).setField ("Left" /*RemoteObject*/ ,_minx);
 BA.debugLineNum = 8493;BA.debugLine="Desktop(cnt).Top = minY ' required";
Debug.JustUpdateDeviceLine();
_desktop.getArrayElement(false, /*RemoteObject*/ _cnt).setField ("Top" /*RemoteObject*/ ,_miny);
 BA.debugLineNum = 8494;BA.debugLine="Desktop(cnt).Width = width ' required";
Debug.JustUpdateDeviceLine();
_desktop.getArrayElement(false, /*RemoteObject*/ _cnt).setField ("Width" /*RemoteObject*/ ,_width);
 BA.debugLineNum = 8495;BA.debugLine="Desktop(cnt).Height = height ' required";
Debug.JustUpdateDeviceLine();
_desktop.getArrayElement(false, /*RemoteObject*/ _cnt).setField ("Height" /*RemoteObject*/ ,_height);
 BA.debugLineNum = 8496;BA.debugLine="cnt = cnt + 1  ' required";
Debug.JustUpdateDeviceLine();
_cnt = RemoteObject.solve(new RemoteObject[] {_cnt,RemoteObject.createImmutable(1)}, "+",1, 1);Debug.locals.put("cnt", _cnt);
 BA.debugLineNum = 8497;BA.debugLine="If xCurrMouse>=minX And xCurrMouse<=minX+width A";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("g",_xcurrmouse,_minx) && RemoteObject.solveBoolean("k",_xcurrmouse,RemoteObject.solve(new RemoteObject[] {_minx,_width}, "+",1, 0)) && RemoteObject.solveBoolean("g",_ycurrmouse,_miny) && RemoteObject.solveBoolean("k",_ycurrmouse,RemoteObject.solve(new RemoteObject[] {_miny,_height}, "+",1, 0))) { 
 BA.debugLineNum = 8498;BA.debugLine="iDxCurrentScreen=cnt";
Debug.JustUpdateDeviceLine();
_idxcurrentscreen = _cnt;Debug.locals.put("iDxCurrentScreen", _idxcurrentscreen);
 };
 }
}Debug.locals.put("o", _o);
;
 BA.debugLineNum = 8501;BA.debugLine="Return iDxCurrentScreen";
Debug.JustUpdateDeviceLine();
if (true) return _idxcurrentscreen;
 BA.debugLineNum = 8502;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(0);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _datosfiltro(RemoteObject __ref,RemoteObject _filtrocompleto,RemoteObject _operadorfiltro,RemoteObject _campofiltrojam,RemoteObject _comparadorfiltro,RemoteObject _valorfiltro) throws Exception{
try {
		Debug.PushSubsStack("DatosFiltro (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,2206);
if (RapidSub.canDelegate("datosfiltro")) { return __ref.runUserSub(false, "jamtableclv","datosfiltro", __ref, _filtrocompleto, _operadorfiltro, _campofiltrojam, _comparadorfiltro, _valorfiltro);}
RemoteObject _m = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
Debug.locals.put("FiltroCompleto", _filtrocompleto);
Debug.locals.put("OperadorFiltro", _operadorfiltro);
Debug.locals.put("CampoFiltroJAM", _campofiltrojam);
Debug.locals.put("ComparadorFiltro", _comparadorfiltro);
Debug.locals.put("ValorFiltro", _valorfiltro);
 BA.debugLineNum = 2206;BA.debugLine="private Sub DatosFiltro(FiltroCompleto As Boolean,";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 2207;BA.debugLine="Dim m As Map";
Debug.JustUpdateDeviceLine();
_m = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");Debug.locals.put("m", _m);
 BA.debugLineNum = 2208;BA.debugLine="m.Initialize";
Debug.JustUpdateDeviceLine();
_m.runVoidMethod ("Initialize");
 BA.debugLineNum = 2209;BA.debugLine="m.Put(\"FiltroCompleto\",FiltroCompleto)";
Debug.JustUpdateDeviceLine();
_m.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("FiltroCompleto"))),(Object)((_filtrocompleto)));
 BA.debugLineNum = 2210;BA.debugLine="m.Put(\"OperadorFiltro\",OperadorFiltro)";
Debug.JustUpdateDeviceLine();
_m.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("OperadorFiltro"))),(Object)((_operadorfiltro)));
 BA.debugLineNum = 2212;BA.debugLine="m.Put(\"DatosCampoFiltro\",CampoFiltroJAM)";
Debug.JustUpdateDeviceLine();
_m.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("DatosCampoFiltro"))),(Object)((_campofiltrojam)));
 BA.debugLineNum = 2213;BA.debugLine="m.Put(\"ComparadorFiltro\",ComparadorFiltro)";
Debug.JustUpdateDeviceLine();
_m.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("ComparadorFiltro"))),(Object)((_comparadorfiltro)));
 BA.debugLineNum = 2214;BA.debugLine="m.Put(\"ValorFiltro\",ValorFiltro)";
Debug.JustUpdateDeviceLine();
_m.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("ValorFiltro"))),(Object)(_valorfiltro));
 BA.debugLineNum = 2215;BA.debugLine="Return m";
Debug.JustUpdateDeviceLine();
if (true) return _m;
 BA.debugLineNum = 2216;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _deshabilitartableclv(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("DeshabilitarTableCLV (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6791);
if (RapidSub.canDelegate("deshabilitartableclv")) { return __ref.runUserSub(false, "jamtableclv","deshabilitartableclv", __ref);}
RemoteObject _n = RemoteObject.declareNull("anywheresoftware.b4j.objects.NodeWrapper.ConcreteNodeWrapper");
 BA.debugLineNum = 6791;BA.debugLine="Sub DeshabilitarTableCLV";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6792;BA.debugLine="If lstNodosHabilitados.IsInitialized=False Then l";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",__ref.getField(false,"_lstnodoshabilitados" /*RemoteObject*/ ).runMethod(true,"IsInitialized"),jamtableclv.__c.getField(true,"False"))) { 
__ref.getField(false,"_lstnodoshabilitados" /*RemoteObject*/ ).runVoidMethod ("Initialize");};
 BA.debugLineNum = 6794;BA.debugLine="For Each n As Node In pnlMainJamTableCLV";
Debug.JustUpdateDeviceLine();
_n = RemoteObject.createNew ("anywheresoftware.b4j.objects.NodeWrapper.ConcreteNodeWrapper");
{
final RemoteObject group2 = __ref.getField(false,"_pnlmainjamtableclv" /*RemoteObject*/ );
final int groupLen2 = group2.runMethod(true,"getSize").<Integer>get()
;int index2 = 0;
;
for (; index2 < groupLen2;index2++){
_n = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.NodeWrapper.ConcreteNodeWrapper"), group2.runMethod(false,"Get",index2));Debug.locals.put("n", _n);
Debug.locals.put("n", _n);
 BA.debugLineNum = 6795;BA.debugLine="If n.Enabled Then lstNodosHabilitados.Add(n)";
Debug.JustUpdateDeviceLine();
if (_n.runMethod(true,"getEnabled").<Boolean>get().booleanValue()) { 
__ref.getField(false,"_lstnodoshabilitados" /*RemoteObject*/ ).runVoidMethod ("Add",(Object)((_n.getObject())));};
 BA.debugLineNum = 6796;BA.debugLine="n.Enabled=False";
Debug.JustUpdateDeviceLine();
_n.runMethod(true,"setEnabled",jamtableclv.__c.getField(true,"False"));
 }
}Debug.locals.put("n", _n);
;
 BA.debugLineNum = 6799;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static void  _designercreateview(RemoteObject __ref,RemoteObject _base,RemoteObject _lbl,RemoteObject _props) throws Exception{
try {
		Debug.PushSubsStack("DesignerCreateView (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,300);
if (RapidSub.canDelegate("designercreateview")) { __ref.runUserSub(false, "jamtableclv","designercreateview", __ref, _base, _lbl, _props); return;}
ResumableSub_DesignerCreateView rsub = new ResumableSub_DesignerCreateView(null,__ref,_base,_lbl,_props);
rsub.resume(null, null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_DesignerCreateView extends BA.ResumableSub {
public ResumableSub_DesignerCreateView(b4j.docU.jamtableclv parent,RemoteObject __ref,RemoteObject _base,RemoteObject _lbl,RemoteObject _props) {
this.parent = parent;
this.__ref = __ref;
this._base = _base;
this._lbl = _lbl;
this._props = _props;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _base;
RemoteObject _lbl;
RemoteObject _props;
RemoteObject _flagversionsqlite = RemoteObject.createImmutable(false);
RemoteObject _sqliteversion = RemoteObject.createImmutable("");
RemoteObject _componentesversionsqlite = null;
RemoteObject _v = RemoteObject.createImmutable(0);
RemoteObject _sv = RemoteObject.createImmutable(0);
RemoteObject _joctxm = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
RemoteObject _xlblfiltros = RemoteObject.declareNull("anywheresoftware.b4a.objects.B4XViewWrapper");
RemoteObject _robj = RemoteObject.declareNull("Object");

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("DesignerCreateView (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,300);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
return;

case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
Debug.locals.put("Base", _base);
Debug.locals.put("Lbl", _lbl);
Debug.locals.put("Props", _props);
 BA.debugLineNum = 301;BA.debugLine="LayoutLoaded = False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_layoutloaded" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 BA.debugLineNum = 303;BA.debugLine="mBase = Base";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_mbase" /*RemoteObject*/ ).setObject (_base);
 BA.debugLineNum = 304;BA.debugLine="Tag = mBase.Tag";
Debug.JustUpdateDeviceLine();
__ref.setField ("_tag" /*RemoteObject*/ ,__ref.getField(false,"_mbase" /*RemoteObject*/ ).runMethod(false,"getTag"));
 BA.debugLineNum = 305;BA.debugLine="mBase.Tag = Me";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_mbase" /*RemoteObject*/ ).runMethod(false,"setTag",__ref);
 BA.debugLineNum = 309;BA.debugLine="mLeft=mBase.Left";
Debug.JustUpdateDeviceLine();
__ref.setField ("_mleft" /*RemoteObject*/ ,BA.numberCast(int.class, __ref.getField(false,"_mbase" /*RemoteObject*/ ).runMethod(true,"getLeft")));
 BA.debugLineNum = 310;BA.debugLine="mTop=mBase.top";
Debug.JustUpdateDeviceLine();
__ref.setField ("_mtop" /*RemoteObject*/ ,BA.numberCast(int.class, __ref.getField(false,"_mbase" /*RemoteObject*/ ).runMethod(true,"getTop")));
 BA.debugLineNum = 311;BA.debugLine="mWidth=mBase.Width";
Debug.JustUpdateDeviceLine();
__ref.setField ("_mwidth" /*RemoteObject*/ ,BA.numberCast(int.class, __ref.getField(false,"_mbase" /*RemoteObject*/ ).runMethod(true,"getWidth")));
 BA.debugLineNum = 312;BA.debugLine="mHeight=mBase.Height";
Debug.JustUpdateDeviceLine();
__ref.setField ("_mheight" /*RemoteObject*/ ,BA.numberCast(int.class, __ref.getField(false,"_mbase" /*RemoteObject*/ ).runMethod(true,"getHeight")));
 BA.debugLineNum = 317;BA.debugLine="If Props<>Null Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//if
this.state = 4;
if (RemoteObject.solveBoolean("N",_props)) { 
this.state = 3;
}if (true) break;

case 3:
//C
this.state = 4;
 BA.debugLineNum = 318;BA.debugLine="mParentForm=Props.Get(\"Form\")";
Debug.JustUpdateDeviceLine();
__ref.setField ("_mparentform" /*RemoteObject*/ ,(_props.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("Form"))))));
 BA.debugLineNum = 319;BA.debugLine="mFontSizeMenuBar=Props.Getdefault(\"FontSizeMenuB";
Debug.JustUpdateDeviceLine();
__ref.setField ("_mfontsizemenubar" /*RemoteObject*/ ,BA.numberCast(float.class, _props.runMethod(false,"GetDefault",(Object)(RemoteObject.createImmutable(("FontSizeMenuBar"))),(Object)(RemoteObject.createImmutable((12))))));
 BA.debugLineNum = 320;BA.debugLine="mFontSizeLabelRecords=Props.Getdefault(\"FontSize";
Debug.JustUpdateDeviceLine();
__ref.setField ("_mfontsizelabelrecords" /*RemoteObject*/ ,BA.numberCast(float.class, _props.runMethod(false,"GetDefault",(Object)(RemoteObject.createImmutable(("FontSizeLabelRecords"))),(Object)(RemoteObject.createImmutable((12))))));
 BA.debugLineNum = 321;BA.debugLine="mEstiloMenu=Props.Getdefault(\"EstiloMenu\",\"Mater";
Debug.JustUpdateDeviceLine();
__ref.setField ("_mestilomenu" /*RemoteObject*/ ,BA.ObjectToString(_props.runMethod(false,"GetDefault",(Object)(RemoteObject.createImmutable(("EstiloMenu"))),(Object)((RemoteObject.createImmutable("MaterialIcons"))))));
 BA.debugLineNum = 322;BA.debugLine="mIncluirBotonSalir=Props.Getdefault(\"IncluirBoto";
Debug.JustUpdateDeviceLine();
__ref.setField ("_mincluirbotonsalir" /*RemoteObject*/ ,BA.ObjectToBoolean(_props.runMethod(false,"GetDefault",(Object)(RemoteObject.createImmutable(("IncluirBotonSalir"))),(Object)((parent.__c.getField(true,"False"))))));
 BA.debugLineNum = 323;BA.debugLine="mPanelInfoVisible=Props.Getdefault(\"PanelInfoVis";
Debug.JustUpdateDeviceLine();
__ref.setField ("_mpanelinfovisible" /*RemoteObject*/ ,BA.ObjectToBoolean(_props.runMethod(false,"GetDefault",(Object)(RemoteObject.createImmutable(("PanelInfoVisible"))),(Object)((parent.__c.getField(true,"False"))))));
 BA.debugLineNum = 324;BA.debugLine="mPanelHeadersVisible=Props.Getdefault(\"PanelHead";
Debug.JustUpdateDeviceLine();
__ref.setField ("_mpanelheadersvisible" /*RemoteObject*/ ,BA.ObjectToBoolean(_props.runMethod(false,"GetDefault",(Object)(RemoteObject.createImmutable(("PanelHeadersVisible"))),(Object)((parent.__c.getField(true,"False"))))));
 BA.debugLineNum = 325;BA.debugLine="mAlturaPanelHeaders=Props.Getdefault(\"AlturaPane";
Debug.JustUpdateDeviceLine();
__ref.setField ("_malturapanelheaders" /*RemoteObject*/ ,BA.numberCast(int.class, _props.runMethod(false,"GetDefault",(Object)(RemoteObject.createImmutable(("AlturaPanelHeaders"))),(Object)((parent.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 30))))))));
 BA.debugLineNum = 326;BA.debugLine="mAlturaItems=Props.Getdefault(\"AlturaItems\",100d";
Debug.JustUpdateDeviceLine();
__ref.setField ("_malturaitems" /*RemoteObject*/ ,BA.numberCast(int.class, _props.runMethod(false,"GetDefault",(Object)(RemoteObject.createImmutable(("AlturaItems"))),(Object)((parent.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 100))))))));
 BA.debugLineNum = 327;BA.debugLine="mAlturaSeparadorPaneles=Props.Getdefault(\"Altura";
Debug.JustUpdateDeviceLine();
__ref.setField ("_malturaseparadorpaneles" /*RemoteObject*/ ,BA.numberCast(float.class, _props.runMethod(false,"GetDefault",(Object)(RemoteObject.createImmutable(("AlturaSeparadorPaneles"))),(Object)((parent.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 1))))))));
 BA.debugLineNum = 329;BA.debugLine="mModoSeleccionItems=Props.GetDefault(\"ModoSelecc";
Debug.JustUpdateDeviceLine();
__ref.setField ("_mmodoseleccionitems" /*RemoteObject*/ ,BA.ObjectToString(_props.runMethod(false,"GetDefault",(Object)(RemoteObject.createImmutable(("ModoSeleccionItems"))),(Object)((RemoteObject.createImmutable("Individual Temp"))))));
 BA.debugLineNum = 330;BA.debugLine="mMostrarMenuPanelItem=Props.GetDefault(\"MostrarM";
Debug.JustUpdateDeviceLine();
__ref.setField ("_mmostrarmenupanelitem" /*RemoteObject*/ ,BA.ObjectToBoolean(_props.runMethod(false,"GetDefault",(Object)(RemoteObject.createImmutable(("MostrarMenuPanelItem"))),(Object)((parent.__c.getField(true,"False"))))));
 BA.debugLineNum = 331;BA.debugLine="mUsarPCLV=Props.GetDefault(\"UsarPCLV\",False)";
Debug.JustUpdateDeviceLine();
__ref.setField ("_musarpclv" /*RemoteObject*/ ,BA.ObjectToBoolean(_props.runMethod(false,"GetDefault",(Object)(RemoteObject.createImmutable(("UsarPCLV"))),(Object)((parent.__c.getField(true,"False"))))));
 BA.debugLineNum = 333;BA.debugLine="mPressedPanelColor=xui.PaintOrColorToColor(Props";
Debug.JustUpdateDeviceLine();
__ref.setField ("_mpressedpanelcolor" /*RemoteObject*/ ,__ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(true,"PaintOrColorToColor",(Object)(_props.runMethod(false,"GetDefault",(Object)(RemoteObject.createImmutable(("PressedColor"))),(Object)(RemoteObject.createImmutable((((int)0xff87cefa))))))));
 BA.debugLineNum = 334;BA.debugLine="mSelectedPanelColor=xui.PaintOrColorToColor(Prop";
Debug.JustUpdateDeviceLine();
__ref.setField ("_mselectedpanelcolor" /*RemoteObject*/ ,__ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(true,"PaintOrColorToColor",(Object)(_props.runMethod(false,"GetDefault",(Object)(RemoteObject.createImmutable(("SelectedColor"))),(Object)(RemoteObject.createImmutable((((int)0xff87cefa))))))));
 if (true) break;

case 4:
//C
this.state = 5;
;
 BA.debugLineNum = 337;BA.debugLine="mPaginacion=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_mpaginacion" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 BA.debugLineNum = 339;BA.debugLine="If mParentForm=Null Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 5:
//if
this.state = 14;
if (RemoteObject.solveBoolean("n",__ref.getField(false,"_mparentform" /*RemoteObject*/ ))) { 
this.state = 7;
}if (true) break;

case 7:
//C
this.state = 8;
 BA.debugLineNum = 341;BA.debugLine="If SubExists(mCallBack, \"getForm\")= False Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 8:
//if
this.state = 13;
if (RemoteObject.solveBoolean("=",parent.__c.runMethod(true,"SubExists",__ref.getField(false, "ba"),(Object)(__ref.getField(false,"_mcallback" /*RemoteObject*/ )),(Object)(RemoteObject.createImmutable("getForm"))),parent.__c.getField(true,"False"))) { 
this.state = 10;
}else {
this.state = 12;
}if (true) break;

case 10:
//C
this.state = 13;
 BA.debugLineNum = 342;BA.debugLine="LogColor(\"En algunos casos, por ejemplo usando";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9159973418",BA.ObjectToString("En algunos casos, por ejemplo usando TabPanes, Props.Get(Form) devuelve NULL."),__ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"Color_Blue"));
 BA.debugLineNum = 343;BA.debugLine="LogColor(\"Hay que crear una sub en el CallBack:";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9159973419",BA.ObjectToString("Hay que crear una sub en el CallBack:"),__ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"Color_Blue"));
 BA.debugLineNum = 344;BA.debugLine="Log(\"\")";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9159973420",RemoteObject.createImmutable(""),0);
 BA.debugLineNum = 345;BA.debugLine="LogColor(\"   sub getForm as Form\",xui.Color_Blu";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9159973421",BA.ObjectToString("   sub getForm as Form"),__ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"Color_Blue"));
 BA.debugLineNum = 346;BA.debugLine="Log(\"\")";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9159973422",RemoteObject.createImmutable(""),0);
 BA.debugLineNum = 347;BA.debugLine="LogColor(\"   Return frm End sub\",xui.Color_Blue";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9159973423",BA.ObjectToString("   Return frm End sub"),__ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"Color_Blue"));
 BA.debugLineNum = 348;BA.debugLine="fx.Msgbox(Null,\"No se ha definido método getFor";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_fx" /*RemoteObject*/ ).runVoidMethodAndSync ("Msgbox",(Object)((parent.__c.getField(false,"Null"))),(Object)(RemoteObject.concat(RemoteObject.createImmutable("No se ha definido método getForm en el módulo Callback."),parent.__c.getField(true,"CRLF"),RemoteObject.createImmutable("(necesario cuando hay más de 1 jamTableCLV en el mismo formulario)"),parent.__c.getField(true,"CRLF"),parent.__c.getField(true,"CRLF"),RemoteObject.createImmutable("Avisa al administrador de la aplicación."))),(Object)(RemoteObject.createImmutable("Error")));
 BA.debugLineNum = 349;BA.debugLine="ExitApplication";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("ExitApplication");
 if (true) break;

case 12:
//C
this.state = 13;
 BA.debugLineNum = 351;BA.debugLine="mParentForm=CallSub(mCallBack,\"getForm\")";
Debug.JustUpdateDeviceLine();
__ref.setField ("_mparentform" /*RemoteObject*/ ,(parent.__c.runMethodAndSync(false,"CallSubNew",__ref.getField(false, "ba"),(Object)(__ref.getField(false,"_mcallback" /*RemoteObject*/ )),(Object)(RemoteObject.createImmutable("getForm")))));
 if (true) break;

case 13:
//C
this.state = 14;
;
 if (true) break;
;
 BA.debugLineNum = 361;BA.debugLine="If SubExists(mCallBack, mEventName &  \"_LoadLayou";
Debug.JustUpdateDeviceLine();

case 14:
//if
this.state = 17;
if (RemoteObject.solveBoolean("=",parent.__c.runMethod(true,"SubExists",__ref.getField(false, "ba"),(Object)(__ref.getField(false,"_mcallback" /*RemoteObject*/ )),(Object)(RemoteObject.concat(__ref.getField(true,"_meventname" /*RemoteObject*/ ),RemoteObject.createImmutable("_LoadLayoutPanelItem")))),parent.__c.getField(true,"False"))) { 
this.state = 16;
}if (true) break;

case 16:
//C
this.state = 17;
 BA.debugLineNum = 362;BA.debugLine="LogColor(\"No se ha definido método LoadLayoutPan";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9159973438",BA.ObjectToString("No se ha definido método LoadLayoutPanelItem en el módulo Callback."),__ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"Color_Red"));
 BA.debugLineNum = 363;BA.debugLine="fx.Msgbox(Null,\"No se ha definido método LoadLay";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_fx" /*RemoteObject*/ ).runVoidMethodAndSync ("Msgbox",(Object)((parent.__c.getField(false,"Null"))),(Object)(RemoteObject.concat(RemoteObject.createImmutable("No se ha definido método LoadLayoutPanelItem en el módulo Callback."),parent.__c.getField(true,"CRLF"),RemoteObject.createImmutable("(necesario para la carga de Items en el CLV)"),parent.__c.getField(true,"CRLF"),parent.__c.getField(true,"CRLF"),RemoteObject.createImmutable("Avisa al administrador de la aplicación."))),(Object)(RemoteObject.createImmutable("Aviso")));
 if (true) break;
;
 BA.debugLineNum = 367;BA.debugLine="If mSQL.IsInitialized Then mSQL.Close";
Debug.JustUpdateDeviceLine();

case 17:
//if
this.state = 22;
if (__ref.getField(false,"_msql" /*RemoteObject*/ ).runMethod(true,"IsInitialized").<Boolean>get().booleanValue()) { 
this.state = 19;
;}if (true) break;

case 19:
//C
this.state = 22;
__ref.getField(false,"_msql" /*RemoteObject*/ ).runVoidMethod ("Close");
if (true) break;

case 22:
//C
this.state = 23;
;
 BA.debugLineNum = 369;BA.debugLine="mSQL.InitializeSQLite(\"\", \":memory:\", True)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_msql" /*RemoteObject*/ ).runVoidMethod ("InitializeSQLite",(Object)(BA.ObjectToString("")),(Object)(BA.ObjectToString(":memory:")),(Object)(parent.__c.getField(true,"True")));
 BA.debugLineNum = 374;BA.debugLine="Dim FlagVersionSQLite As Boolean=True";
Debug.JustUpdateDeviceLine();
_flagversionsqlite = parent.__c.getField(true,"True");Debug.locals.put("FlagVersionSQLite", _flagversionsqlite);Debug.locals.put("FlagVersionSQLite", _flagversionsqlite);
 BA.debugLineNum = 375;BA.debugLine="Log(\"version SQLite: \" & mSQL.ExecQuerySingleResu";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9159973451",RemoteObject.concat(RemoteObject.createImmutable("version SQLite: "),__ref.getField(false,"_msql" /*RemoteObject*/ ).runMethod(true,"ExecQuerySingleResult",(Object)(RemoteObject.createImmutable("SELECT sqlite_version();")))),0);
 BA.debugLineNum = 376;BA.debugLine="Dim SQLiteVersion As String=mSQL.ExecQuerySingleR";
Debug.JustUpdateDeviceLine();
_sqliteversion = __ref.getField(false,"_msql" /*RemoteObject*/ ).runMethod(true,"ExecQuerySingleResult",(Object)(RemoteObject.createImmutable("SELECT sqlite_version();")));Debug.locals.put("SQLiteVersion", _sqliteversion);Debug.locals.put("SQLiteVersion", _sqliteversion);
 BA.debugLineNum = 377;BA.debugLine="SQLiteVersion=SQLiteVersion.Replace(\".\",\",\")";
Debug.JustUpdateDeviceLine();
_sqliteversion = _sqliteversion.runMethod(true,"replace",(Object)(BA.ObjectToString(".")),(Object)(RemoteObject.createImmutable(",")));Debug.locals.put("SQLiteVersion", _sqliteversion);
 BA.debugLineNum = 378;BA.debugLine="mSQL.Close";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_msql" /*RemoteObject*/ ).runVoidMethod ("Close");
 BA.debugLineNum = 379;BA.debugLine="Dim ComponentesVersionSQLite() As String";
Debug.JustUpdateDeviceLine();
_componentesversionsqlite = RemoteObject.createNewArray ("String", new int[] {0}, new Object[]{});Debug.locals.put("ComponentesVersionSQLite", _componentesversionsqlite);
 BA.debugLineNum = 380;BA.debugLine="ComponentesVersionSQLite=Regex.Split(\",\",SQLiteVe";
Debug.JustUpdateDeviceLine();
_componentesversionsqlite = parent.__c.getField(false,"Regex").runMethod(false,"Split",(Object)(BA.ObjectToString(",")),(Object)(_sqliteversion));Debug.locals.put("ComponentesVersionSQLite", _componentesversionsqlite);
 BA.debugLineNum = 381;BA.debugLine="Dim V As Int=ComponentesVersionSQLite(0)";
Debug.JustUpdateDeviceLine();
_v = BA.numberCast(int.class, _componentesversionsqlite.getArrayElement(true,BA.numberCast(int.class, 0)));Debug.locals.put("V", _v);Debug.locals.put("V", _v);
 BA.debugLineNum = 382;BA.debugLine="If V<3 Then FlagVersionSQLite=False";
Debug.JustUpdateDeviceLine();
if (true) break;

case 23:
//if
this.state = 28;
if (RemoteObject.solveBoolean("<",_v,BA.numberCast(double.class, 3))) { 
this.state = 25;
;}if (true) break;

case 25:
//C
this.state = 28;
_flagversionsqlite = parent.__c.getField(true,"False");Debug.locals.put("FlagVersionSQLite", _flagversionsqlite);
if (true) break;

case 28:
//C
this.state = 29;
;
 BA.debugLineNum = 383;BA.debugLine="Dim sV As Int=ComponentesVersionSQLite(1)";
Debug.JustUpdateDeviceLine();
_sv = BA.numberCast(int.class, _componentesversionsqlite.getArrayElement(true,BA.numberCast(int.class, 1)));Debug.locals.put("sV", _sv);Debug.locals.put("sV", _sv);
 BA.debugLineNum = 384;BA.debugLine="If sV<31 Then FlagVersionSQLite=False";
Debug.JustUpdateDeviceLine();
if (true) break;

case 29:
//if
this.state = 34;
if (RemoteObject.solveBoolean("<",_sv,BA.numberCast(double.class, 31))) { 
this.state = 31;
;}if (true) break;

case 31:
//C
this.state = 34;
_flagversionsqlite = parent.__c.getField(true,"False");Debug.locals.put("FlagVersionSQLite", _flagversionsqlite);
if (true) break;

case 34:
//C
this.state = 35;
;
 BA.debugLineNum = 385;BA.debugLine="If Not(FlagVersionSQLite) Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 35:
//if
this.state = 38;
if (parent.__c.runMethod(true,"Not",(Object)(_flagversionsqlite)).<Boolean>get().booleanValue()) { 
this.state = 37;
}if (true) break;

case 37:
//C
this.state = 38;
 BA.debugLineNum = 386;BA.debugLine="fx.Msgbox(mParentForm,\"La versión de SQLite de l";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_fx" /*RemoteObject*/ ).runVoidMethodAndSync ("Msgbox",(Object)(__ref.getField(false,"_mparentform" /*RemoteObject*/ )),(Object)(RemoteObject.concat(RemoteObject.createImmutable("La versión de SQLite de la aplicación ("),_sqliteversion,RemoteObject.createImmutable(") es inferior a la mínima (3.31)."),parent.__c.getField(true,"CRLF"),parent.__c.getField(true,"CRLF"),RemoteObject.createImmutable("Avisa al administrador de la aplicación."))),(Object)(RemoteObject.createImmutable("Error")));
 BA.debugLineNum = 387;BA.debugLine="ExitApplication";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("ExitApplication");
 if (true) break;

case 38:
//C
this.state = -1;
;
 BA.debugLineNum = 391;BA.debugLine="OrigenDatosConfiguradoOK=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_origendatosconfiguradook" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 BA.debugLineNum = 393;BA.debugLine="mConfiguracionInicialMenusRealizada=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_mconfiguracioninicialmenusrealizada" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 BA.debugLineNum = 395;BA.debugLine="FiltrosVisibles=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_filtrosvisibles" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 BA.debugLineNum = 397;BA.debugLine="lstOperadoresFiltros.Initialize";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstoperadoresfiltros" /*RemoteObject*/ ).runVoidMethod ("Initialize");
 BA.debugLineNum = 398;BA.debugLine="lstCamposFiltros.Initialize";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstcamposfiltros" /*RemoteObject*/ ).runVoidMethod ("Initialize");
 BA.debugLineNum = 399;BA.debugLine="lstComparadoresFiltros.Initialize";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstcomparadoresfiltros" /*RemoteObject*/ ).runVoidMethod ("Initialize");
 BA.debugLineNum = 400;BA.debugLine="lstValoresFiltros.Initialize";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstvaloresfiltros" /*RemoteObject*/ ).runVoidMethod ("Initialize");
 BA.debugLineNum = 402;BA.debugLine="mContextMenu.Initialize(\"ContextMenu\")";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_mcontextmenu" /*RemoteObject*/ ).runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(RemoteObject.createImmutable("ContextMenu")));
 BA.debugLineNum = 403;BA.debugLine="Dim joCtxM As JavaObject=mContextMenu";
Debug.JustUpdateDeviceLine();
_joctxm = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");
_joctxm = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), __ref.getField(false,"_mcontextmenu" /*RemoteObject*/ ).getObject());Debug.locals.put("joCtxM", _joctxm);Debug.locals.put("joCtxM", _joctxm);
 BA.debugLineNum = 404;BA.debugLine="joCtxM.RunMethod(\"setAutoHide\",Array(True))";
Debug.JustUpdateDeviceLine();
_joctxm.runVoidMethod ("RunMethod",(Object)(BA.ObjectToString("setAutoHide")),(Object)(RemoteObject.createNewArray("Object",new int[] {1},new Object[] {(parent.__c.getField(true,"True"))})));
 BA.debugLineNum = 406;BA.debugLine="lblMostrarEliminarFiltros.Initialize(\"lblMostrarE";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lblmostrareliminarfiltros" /*RemoteObject*/ ).runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(RemoteObject.createImmutable("lblMostrarEliminarFiltros")));
 BA.debugLineNum = 410;BA.debugLine="Dim xLblFiltros As B4XView=lblMostrarEliminarFilt";
Debug.JustUpdateDeviceLine();
_xlblfiltros = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");
_xlblfiltros = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper"), __ref.getField(false,"_lblmostrareliminarfiltros" /*RemoteObject*/ ).getObject());Debug.locals.put("xLblFiltros", _xlblfiltros);Debug.locals.put("xLblFiltros", _xlblfiltros);
 BA.debugLineNum = 411;BA.debugLine="xLblFiltros.Width=16dip";
Debug.JustUpdateDeviceLine();
_xlblfiltros.runMethod(true,"setWidth",BA.numberCast(double.class, parent.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 16)))));
 BA.debugLineNum = 412;BA.debugLine="xLblFiltros.Height=16dip";
Debug.JustUpdateDeviceLine();
_xlblfiltros.runMethod(true,"setHeight",BA.numberCast(double.class, parent.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 16)))));
 BA.debugLineNum = 419;BA.debugLine="Dialog.Initialize(mParentForm.RootPane)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_dialog" /*RemoteObject*/ ).runClassMethod (b4j.docU.b4xdialog.class, "_initialize" /*RemoteObject*/ ,__ref.getField(false, "ba"),RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper"), __ref.getField(false,"_mparentform" /*RemoteObject*/ ).runMethod(false,"getRootPane").getObject()));
 BA.debugLineNum = 421;BA.debugLine="lstComparadoresTexto.Initialize";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstcomparadorestexto" /*RemoteObject*/ ).runVoidMethod ("Initialize");
 BA.debugLineNum = 422;BA.debugLine="lstComparadoresTexto.AddAll(Array As String(\"Es i";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstcomparadorestexto" /*RemoteObject*/ ).runVoidMethod ("AddAll",(Object)(parent.__c.runMethod(false, "ArrayToList", (Object)(RemoteObject.createNewArray("String",new int[] {6},new Object[] {BA.ObjectToString("Es igual a"),BA.ObjectToString("No es igual a"),BA.ObjectToString("Comienza por"),BA.ObjectToString("Termina con"),BA.ObjectToString("Contiene"),RemoteObject.createImmutable("No contiene")})))));
 BA.debugLineNum = 423;BA.debugLine="lstComparadoresFechas.Initialize";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstcomparadoresfechas" /*RemoteObject*/ ).runVoidMethod ("Initialize");
 BA.debugLineNum = 424;BA.debugLine="lstComparadoresFechas.AddAll(Array As String(\"Es";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstcomparadoresfechas" /*RemoteObject*/ ).runVoidMethod ("AddAll",(Object)(parent.__c.runMethod(false, "ArrayToList", (Object)(RemoteObject.createNewArray("String",new int[] {6},new Object[] {BA.ObjectToString("Es igual a"),BA.ObjectToString("No es igual a"),BA.ObjectToString("Anterior a"),BA.ObjectToString("Anterior o igual a"),BA.ObjectToString("Posterior a"),RemoteObject.createImmutable("Posterior o igual a")})))));
 BA.debugLineNum = 425;BA.debugLine="lstComparadoresNumericos.Initialize";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstcomparadoresnumericos" /*RemoteObject*/ ).runVoidMethod ("Initialize");
 BA.debugLineNum = 426;BA.debugLine="lstComparadoresNumericos.AddAll(Array As String(\"";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstcomparadoresnumericos" /*RemoteObject*/ ).runVoidMethod ("AddAll",(Object)(parent.__c.runMethod(false, "ArrayToList", (Object)(RemoteObject.createNewArray("String",new int[] {6},new Object[] {BA.ObjectToString("Es igual a"),BA.ObjectToString("No es igual a"),BA.ObjectToString("Mayor que"),BA.ObjectToString("Mayor o igual que"),BA.ObjectToString("Menor que"),RemoteObject.createImmutable("Menor o igual que")})))));
 BA.debugLineNum = 427;BA.debugLine="lstComparadoresCamposTipoControlComboBox.Initiali";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstcomparadorescampostipocontrolcombobox" /*RemoteObject*/ ).runVoidMethod ("Initialize");
 BA.debugLineNum = 428;BA.debugLine="lstComparadoresCamposTipoControlComboBox.AddAll(A";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstcomparadorescampostipocontrolcombobox" /*RemoteObject*/ ).runVoidMethod ("AddAll",(Object)(parent.__c.runMethod(false, "ArrayToList", (Object)(RemoteObject.createNewArray("String",new int[] {2},new Object[] {BA.ObjectToString("Es igual a"),RemoteObject.createImmutable("No es igual a")})))));
 BA.debugLineNum = 429;BA.debugLine="lstComparadoresBooleanos.Initialize";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstcomparadoresbooleanos" /*RemoteObject*/ ).runVoidMethod ("Initialize");
 BA.debugLineNum = 430;BA.debugLine="lstComparadoresBooleanos.addall(Array As String(\"";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstcomparadoresbooleanos" /*RemoteObject*/ ).runVoidMethod ("AddAll",(Object)(parent.__c.runMethod(false, "ArrayToList", (Object)(RemoteObject.createNewArray("String",new int[] {1},new Object[] {RemoteObject.createImmutable("Es igual a")})))));
 BA.debugLineNum = 432;BA.debugLine="cboAndOrFiltroUserChange=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_cboandorfiltrouserchange" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 BA.debugLineNum = 433;BA.debugLine="cboCampoFiltroUserChange=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_cbocampofiltrouserchange" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 BA.debugLineNum = 435;BA.debugLine="cbComparadorFiltroUserChange=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_cbcomparadorfiltrouserchange" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 BA.debugLineNum = 436;BA.debugLine="cboValorFiltroUserChange=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_cbovalorfiltrouserchange" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 BA.debugLineNum = 437;BA.debugLine="chkValorFiltroUserChange=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_chkvalorfiltrouserchange" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 BA.debugLineNum = 439;BA.debugLine="lstContextMenuItemsGenerales.Initialize  ' lista";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstcontextmenuitemsgenerales" /*RemoteObject*/ ).runVoidMethod ("Initialize");
 BA.debugLineNum = 440;BA.debugLine="lstContextMenuItemsNodo.Initialize  ' lista de me";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstcontextmenuitemsnodo" /*RemoteObject*/ ).runVoidMethod ("Initialize");
 BA.debugLineNum = 443;BA.debugLine="Log(\"antes loadlayout jamTableCLV\")";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9159973519",RemoteObject.createImmutable("antes loadlayout jamTableCLV"),0);
 BA.debugLineNum = 448;BA.debugLine="Wait For(AfterLoadLayout) complete (rObj As Objec";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "designercreateview"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_afterloadlayout" /*RemoteObject*/ ));
this.state = 39;
return;
case 39:
//C
this.state = -1;
_robj = (RemoteObject) result.getArrayElement(false,RemoteObject.createImmutable(1));Debug.locals.put("rObj", _robj);
;
 BA.debugLineNum = 450;BA.debugLine="Log(\"después de loadlayout jamTableCLV\")";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9159973526",RemoteObject.createImmutable("después de loadlayout jamTableCLV"),0);
 BA.debugLineNum = 452;BA.debugLine="LayoutLoaded = True";
Debug.JustUpdateDeviceLine();
__ref.setField ("_layoutloaded" /*RemoteObject*/ ,parent.__c.getField(true,"True"));
 BA.debugLineNum = 457;BA.debugLine="InitClass";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_initclass" /*void*/ );
 BA.debugLineNum = 458;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static RemoteObject  _detectos(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("DetectOS (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,4581);
if (RapidSub.canDelegate("detectos")) { return __ref.runUserSub(false, "jamtableclv","detectos", __ref);}
RemoteObject _os = RemoteObject.createImmutable("");
 BA.debugLineNum = 4581;BA.debugLine="private Sub DetectOS As String";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 4582;BA.debugLine="Dim os As String = GetSystemProperty(\"os.name\", \"";
Debug.JustUpdateDeviceLine();
_os = jamtableclv.__c.runMethod(true,"GetSystemProperty",(Object)(BA.ObjectToString("os.name")),(Object)(RemoteObject.createImmutable(""))).runMethod(true,"toLowerCase");Debug.locals.put("os", _os);Debug.locals.put("os", _os);
 BA.debugLineNum = 4583;BA.debugLine="If os.Contains(\"win\") Then";
Debug.JustUpdateDeviceLine();
if (_os.runMethod(true,"contains",(Object)(RemoteObject.createImmutable("win"))).<Boolean>get().booleanValue()) { 
 BA.debugLineNum = 4584;BA.debugLine="Return \"windows\"";
Debug.JustUpdateDeviceLine();
if (true) return BA.ObjectToString("windows");
 }else 
{ BA.debugLineNum = 4585;BA.debugLine="Else If os.Contains(\"mac\") Then";
Debug.JustUpdateDeviceLine();
if (_os.runMethod(true,"contains",(Object)(RemoteObject.createImmutable("mac"))).<Boolean>get().booleanValue()) { 
 BA.debugLineNum = 4586;BA.debugLine="Return \"mac\"";
Debug.JustUpdateDeviceLine();
if (true) return BA.ObjectToString("mac");
 }else {
 BA.debugLineNum = 4588;BA.debugLine="Return \"linux\"";
Debug.JustUpdateDeviceLine();
if (true) return BA.ObjectToString("linux");
 }}
;
 BA.debugLineNum = 4590;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static void  _devolverfocoatxtvalorfiltroerrorvalor(RemoteObject __ref,RemoteObject _strvalortxtfiltro) throws Exception{
try {
		Debug.PushSubsStack("DevolverFocoAtxtValorFiltroErrorValor (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,3180);
if (RapidSub.canDelegate("devolverfocoatxtvalorfiltroerrorvalor")) { __ref.runUserSub(false, "jamtableclv","devolverfocoatxtvalorfiltroerrorvalor", __ref, _strvalortxtfiltro); return;}
ResumableSub_DevolverFocoAtxtValorFiltroErrorValor rsub = new ResumableSub_DevolverFocoAtxtValorFiltroErrorValor(null,__ref,_strvalortxtfiltro);
rsub.resume(null, null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_DevolverFocoAtxtValorFiltroErrorValor extends BA.ResumableSub {
public ResumableSub_DevolverFocoAtxtValorFiltroErrorValor(b4j.docU.jamtableclv parent,RemoteObject __ref,RemoteObject _strvalortxtfiltro) {
this.parent = parent;
this.__ref = __ref;
this._strvalortxtfiltro = _strvalortxtfiltro;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _strvalortxtfiltro;
RemoteObject _msa = RemoteObject.declareNull("Object");

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("DevolverFocoAtxtValorFiltroErrorValor (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,3180);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
return;

case 0:
//C
this.state = -1;
Debug.locals.put("_ref", __ref);
Debug.locals.put("strValortxtfiltro", _strvalortxtfiltro);
 BA.debugLineNum = 3181;BA.debugLine="Dim msa As Object= xui.MsgboxAsync(strValortxtfil";
Debug.JustUpdateDeviceLine();
_msa = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"MsgboxAsync",__ref.getField(false, "ba"),(Object)(RemoteObject.concat(_strvalortxtfiltro,RemoteObject.createImmutable(" no es un valor de filtro válido"))),(Object)(RemoteObject.createImmutable("Error")));Debug.locals.put("msa", _msa);Debug.locals.put("msa", _msa);
 BA.debugLineNum = 3182;BA.debugLine="Wait For (msa) Msgbox_Result";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","msgbox_result", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "devolverfocoatxtvalorfiltroerrorvalor"), _msa);
this.state = 1;
return;
case 1:
//C
this.state = -1;
;
 BA.debugLineNum = 3184;BA.debugLine="txtValorFiltro.RequestFocus";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_txtvalorfiltro" /*RemoteObject*/ ).runVoidMethod ("RequestFocus");
 BA.debugLineNum = 3185;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static RemoteObject  _dialogoordenarsql(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("DialogoOrdenarSQL (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,4909);
if (RapidSub.canDelegate("dialogoordenarsql")) { return __ref.runUserSub(false, "jamtableclv","dialogoordenarsql", __ref);}
ResumableSub_DialogoOrdenarSQL rsub = new ResumableSub_DialogoOrdenarSQL(null,__ref);
rsub.remoteResumableSub = anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSubForFilter();
rsub.resume(null, null);
return RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.keywords.Common.ResumableSubWrapper"), rsub.remoteResumableSub);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_DialogoOrdenarSQL extends BA.ResumableSub {
public ResumableSub_DialogoOrdenarSQL(b4j.docU.jamtableclv parent,RemoteObject __ref) {
this.parent = parent;
this.__ref = __ref;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _pbaseclv = RemoteObject.declareNull("anywheresoftware.b4a.objects.B4XViewWrapper");
RemoteObject _rsub = RemoteObject.declareNull("anywheresoftware.b4a.keywords.Common.ResumableSubWrapper");
RemoteObject _bok = RemoteObject.declareNull("anywheresoftware.b4a.objects.B4XViewWrapper");
RemoteObject _bcancel = RemoteObject.declareNull("anywheresoftware.b4a.objects.B4XViewWrapper");
RemoteObject _clviv2 = RemoteObject.declareNull("b4j.docU.jamtableclv._clvjamtableclvordensqlitemvalue");
RemoteObject _dord = RemoteObject.declareNull("b4j.docU.jamtableclv._datosordensqljamtableclv");
RemoteObject _rint = RemoteObject.createImmutable(0);
int _i = 0;
RemoteObject _dol = RemoteObject.declareNull("b4j.docU.jamtableclv._datosordensqljamtableclv");
RemoteObject _c = RemoteObject.declareNull("b4j.docU.jamtableclv._campoorigendatosjamtableclv");
RemoteObject _robj = RemoteObject.declareNull("Object");
RemoteObject group22;
int index22;
int groupLen22;
int step30;
int limit30;
RemoteObject group37;
int index37;
int groupLen37;

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("DialogoOrdenarSQL (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,4909);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
{
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,RemoteObject.createImmutable(null));return;}
case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
 BA.debugLineNum = 4911;BA.debugLine="Dialog.Title=\"Ordenar tabla de datos\"";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_dialog" /*RemoteObject*/ ).setField ("_title" /*RemoteObject*/ ,RemoteObject.createImmutable(("Ordenar tabla de datos")));
 BA.debugLineNum = 4912;BA.debugLine="Dialog.BlurBackground=False";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_dialog" /*RemoteObject*/ ).setField ("_blurbackground" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 BA.debugLineNum = 4913;BA.debugLine="Dim pBaseCLV As B4XView = xui.CreatePanel(\"\")";
Debug.JustUpdateDeviceLine();
_pbaseclv = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");
_pbaseclv = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"CreatePanel",__ref.getField(false, "ba"),(Object)(RemoteObject.createImmutable("")));Debug.locals.put("pBaseCLV", _pbaseclv);Debug.locals.put("pBaseCLV", _pbaseclv);
 BA.debugLineNum = 4914;BA.debugLine="pBaseCLV.SetLayoutAnimated(0, 0, 0, 580dip, 500di";
Debug.JustUpdateDeviceLine();
_pbaseclv.runVoidMethod ("SetLayoutAnimated",(Object)(BA.numberCast(int.class, 0)),(Object)(BA.numberCast(double.class, 0)),(Object)(BA.numberCast(double.class, 0)),(Object)(BA.numberCast(double.class, parent.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 580))))),(Object)(BA.numberCast(double.class, parent.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 500))))));
 BA.debugLineNum = 4915;BA.debugLine="pBaseCLV.LoadLayout(\"scrCLVOrdenSQLJamTableCLV\")";
Debug.JustUpdateDeviceLine();
_pbaseclv.runVoidMethodAndSync ("LoadLayout",(Object)(RemoteObject.createImmutable("scrCLVOrdenSQLJamTableCLV")),__ref.getField(false, "ba"));
 BA.debugLineNum = 4916;BA.debugLine="Dim rSub As ResumableSub=Dialog.ShowCustom(pBaseC";
Debug.JustUpdateDeviceLine();
_rsub = RemoteObject.createNew ("anywheresoftware.b4a.keywords.Common.ResumableSubWrapper");
_rsub = __ref.getField(false,"_dialog" /*RemoteObject*/ ).runClassMethod (b4j.docU.b4xdialog.class, "_showcustom" /*RemoteObject*/ ,(Object)(_pbaseclv),(Object)(RemoteObject.createImmutable(("OK"))),(Object)(RemoteObject.createImmutable((""))),(Object)((RemoteObject.createImmutable("Cancelar"))));Debug.locals.put("rSub", _rsub);Debug.locals.put("rSub", _rsub);
 BA.debugLineNum = 4917;BA.debugLine="Dim bOk As B4XView=Dialog.GetButton(xui.DialogRes";
Debug.JustUpdateDeviceLine();
_bok = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");
_bok = __ref.getField(false,"_dialog" /*RemoteObject*/ ).runClassMethod (b4j.docU.b4xdialog.class, "_getbutton" /*RemoteObject*/ ,(Object)(__ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"DialogResponse_Positive")));Debug.locals.put("bOk", _bok);Debug.locals.put("bOk", _bok);
 BA.debugLineNum = 4918;BA.debugLine="bOk.Left=5dip";
Debug.JustUpdateDeviceLine();
_bok.runMethod(true,"setLeft",BA.numberCast(double.class, parent.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 5)))));
 BA.debugLineNum = 4919;BA.debugLine="bOk.TextSize=16";
Debug.JustUpdateDeviceLine();
_bok.runMethod(true,"setTextSize",BA.numberCast(double.class, 16));
 BA.debugLineNum = 4921;BA.debugLine="Dim bCancel As B4XView=Dialog.GetButton(xui.Dialo";
Debug.JustUpdateDeviceLine();
_bcancel = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");
_bcancel = __ref.getField(false,"_dialog" /*RemoteObject*/ ).runClassMethod (b4j.docU.b4xdialog.class, "_getbutton" /*RemoteObject*/ ,(Object)(__ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"DialogResponse_Cancel")));Debug.locals.put("bCancel", _bcancel);Debug.locals.put("bCancel", _bcancel);
 BA.debugLineNum = 4922;BA.debugLine="bCancel.left=bCancel.left-20dip";
Debug.JustUpdateDeviceLine();
_bcancel.runMethod(true,"setLeft",RemoteObject.solve(new RemoteObject[] {_bcancel.runMethod(true,"getLeft"),parent.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 20)))}, "-",1, 0));
 BA.debugLineNum = 4923;BA.debugLine="bCancel.Width=bCancel.Width+20dip";
Debug.JustUpdateDeviceLine();
_bcancel.runMethod(true,"setWidth",RemoteObject.solve(new RemoteObject[] {_bcancel.runMethod(true,"getWidth"),parent.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 20)))}, "+",1, 0));
 BA.debugLineNum = 4924;BA.debugLine="bCancel.Textsize=16";
Debug.JustUpdateDeviceLine();
_bcancel.runMethod(true,"setTextSize",BA.numberCast(double.class, 16));
 BA.debugLineNum = 4925;BA.debugLine="If lstOrdenSQL.Size=0 Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//if
this.state = 10;
if (RemoteObject.solveBoolean("=",__ref.getField(false,"_lstordensql" /*RemoteObject*/ ).runMethod(true,"getSize"),BA.numberCast(double.class, 0))) { 
this.state = 3;
}else {
this.state = 5;
}if (true) break;

case 3:
//C
this.state = 10;
 BA.debugLineNum = 4926;BA.debugLine="Dim clviv2 As clvJAMTableCLVOrdenSQLItemValue";
Debug.JustUpdateDeviceLine();
_clviv2 = RemoteObject.createNew ("b4j.docU.jamtableclv._clvjamtableclvordensqlitemvalue");Debug.locals.put("clviv2", _clviv2);
 BA.debugLineNum = 4927;BA.debugLine="clviv2.Initialize";
Debug.JustUpdateDeviceLine();
_clviv2.runVoidMethod ("Initialize");
 BA.debugLineNum = 4928;BA.debugLine="Dim dOrd As DatosOrdenSQLJamTableCLV";
Debug.JustUpdateDeviceLine();
_dord = RemoteObject.createNew ("b4j.docU.jamtableclv._datosordensqljamtableclv");Debug.locals.put("dOrd", _dord);
 BA.debugLineNum = 4929;BA.debugLine="dOrd.Initialize";
Debug.JustUpdateDeviceLine();
_dord.runVoidMethod ("Initialize");
 BA.debugLineNum = 4930;BA.debugLine="CLVOrdenSQLjamTableCLV.Add(CreateItemOrdenSQL(dO";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvordensqljamtableclv" /*RemoteObject*/ ).runVoidMethod ("_add",(Object)(__ref.runClassMethod (b4j.docU.jamtableclv.class, "_createitemordensql" /*RemoteObject*/ ,(Object)(_dord),(Object)(_clviv2))),(Object)((_clviv2)));
 if (true) break;

case 5:
//C
this.state = 6;
 BA.debugLineNum = 4932;BA.debugLine="lstOrdenSQL.SortType(\"IndiceOrdenSQL\",True)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstordensql" /*RemoteObject*/ ).runVoidMethod ("SortType",(Object)(BA.ObjectToString("IndiceOrdenSQL")),(Object)(parent.__c.getField(true,"True")));
 BA.debugLineNum = 4933;BA.debugLine="For Each dOrd As DatosOrdenSQLJamTableCLV In lst";
Debug.JustUpdateDeviceLine();
if (true) break;

case 6:
//for
this.state = 9;
group22 = __ref.getField(false,"_lstordensql" /*RemoteObject*/ );
index22 = 0;
groupLen22 = group22.runMethod(true,"getSize").<Integer>get();
Debug.locals.put("dOrd", _dord);
this.state = 33;
if (true) break;

case 33:
//C
this.state = 9;
if (index22 < groupLen22) {
this.state = 8;
_dord = (group22.runMethod(false,"Get",index22));Debug.locals.put("dOrd", _dord);}
if (true) break;

case 34:
//C
this.state = 33;
index22++;
Debug.locals.put("dOrd", _dord);
if (true) break;

case 8:
//C
this.state = 34;
 BA.debugLineNum = 4934;BA.debugLine="Dim clviv2 As clvJAMTableCLVOrdenSQLItemValue";
Debug.JustUpdateDeviceLine();
_clviv2 = RemoteObject.createNew ("b4j.docU.jamtableclv._clvjamtableclvordensqlitemvalue");Debug.locals.put("clviv2", _clviv2);
 BA.debugLineNum = 4935;BA.debugLine="CLVOrdenSQLjamTableCLV.Add(CreateItemOrdenSQL(d";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvordensqljamtableclv" /*RemoteObject*/ ).runVoidMethod ("_add",(Object)(__ref.runClassMethod (b4j.docU.jamtableclv.class, "_createitemordensql" /*RemoteObject*/ ,(Object)(_dord),(Object)(_clviv2))),(Object)((_clviv2)));
 if (true) break;
if (true) break;

case 9:
//C
this.state = 10;
Debug.locals.put("dOrd", _dord);
;
 if (true) break;

case 10:
//C
this.state = 11;
;
 BA.debugLineNum = 4939;BA.debugLine="wait for (rSub) complete (rint As Int)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "dialogoordenarsql"), _rsub);
this.state = 35;
return;
case 35:
//C
this.state = 11;
_rint = (RemoteObject) result.getArrayElement(true,RemoteObject.createImmutable(1));Debug.locals.put("rint", _rint);
;
 BA.debugLineNum = 4940;BA.debugLine="If rint=xui.DialogResponse_Positive Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 11:
//if
this.state = 32;
if (RemoteObject.solveBoolean("=",_rint,BA.numberCast(double.class, __ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"DialogResponse_Positive")))) { 
this.state = 13;
}else {
this.state = 31;
}if (true) break;

case 13:
//C
this.state = 14;
 BA.debugLineNum = 4941;BA.debugLine="lstOrdenSQL.Initialize";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstordensql" /*RemoteObject*/ ).runVoidMethod ("Initialize");
 BA.debugLineNum = 4942;BA.debugLine="For i=0 To CLVOrdenSQLjamTableCLV.Size-1";
Debug.JustUpdateDeviceLine();
if (true) break;

case 14:
//for
this.state = 29;
step30 = 1;
limit30 = RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvordensqljamtableclv" /*RemoteObject*/ ).runMethod(true,"_getsize"),RemoteObject.createImmutable(1)}, "-",1, 1).<Integer>get().intValue();
_i = 0 ;
Debug.locals.put("i", _i);
this.state = 36;
if (true) break;

case 36:
//C
this.state = 29;
if ((step30 > 0 && _i <= limit30) || (step30 < 0 && _i >= limit30)) this.state = 16;
if (true) break;

case 37:
//C
this.state = 36;
_i = ((int)(0 + _i + step30)) ;
Debug.locals.put("i", _i);
if (true) break;

case 16:
//C
this.state = 17;
 BA.debugLineNum = 4943;BA.debugLine="Dim clviv2 As clvJAMTableCLVOrdenSQLItemValue=C";
Debug.JustUpdateDeviceLine();
_clviv2 = (__ref.getField(false,"_clvordensqljamtableclv" /*RemoteObject*/ ).runMethod(false,"_getvalue",(Object)(BA.numberCast(int.class, _i))));Debug.locals.put("clviv2", _clviv2);Debug.locals.put("clviv2", _clviv2);
 BA.debugLineNum = 4944;BA.debugLine="Dim dOL As DatosOrdenSQLJamTableCLV";
Debug.JustUpdateDeviceLine();
_dol = RemoteObject.createNew ("b4j.docU.jamtableclv._datosordensqljamtableclv");Debug.locals.put("dOL", _dol);
 BA.debugLineNum = 4945;BA.debugLine="dOL.IndiceOrdenSQL=i";
Debug.JustUpdateDeviceLine();
_dol.setField ("IndiceOrdenSQL" /*RemoteObject*/ ,BA.numberCast(int.class, _i));
 BA.debugLineNum = 4946;BA.debugLine="dOL.AliasCampoOrdenSQL=clviv2.cboCampoOrdenacio";
Debug.JustUpdateDeviceLine();
_dol.setField ("AliasCampoOrdenSQL" /*RemoteObject*/ ,BA.ObjectToString(_clviv2.getField(false,"cboCampoOrdenacionSQL" /*RemoteObject*/ ).runMethod(false,"getValue")));
 BA.debugLineNum = 4947;BA.debugLine="If dOL.AliasCampoOrdenSQL<>\"\" Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 17:
//if
this.state = 28;
if (RemoteObject.solveBoolean("!",_dol.getField(true,"AliasCampoOrdenSQL" /*RemoteObject*/ ),BA.ObjectToString(""))) { 
this.state = 19;
}if (true) break;

case 19:
//C
this.state = 20;
 BA.debugLineNum = 4948;BA.debugLine="dOL.TipoOrdenSQL=clviv2.cboTipoOrdenacionSQL.V";
Debug.JustUpdateDeviceLine();
_dol.setField ("TipoOrdenSQL" /*RemoteObject*/ ,BA.ObjectToString(_clviv2.getField(false,"cboTipoOrdenacionSQL" /*RemoteObject*/ ).runMethod(false,"getValue")));
 BA.debugLineNum = 4949;BA.debugLine="For Each c As CampoOrigenDatosJamTableCLV In m";
Debug.JustUpdateDeviceLine();
if (true) break;

case 20:
//for
this.state = 27;
group37 = __ref.getField(false,"_mlstcamposorigendatos" /*RemoteObject*/ );
index37 = 0;
groupLen37 = group37.runMethod(true,"getSize").<Integer>get();
Debug.locals.put("c", _c);
this.state = 38;
if (true) break;

case 38:
//C
this.state = 27;
if (index37 < groupLen37) {
this.state = 22;
_c = (group37.runMethod(false,"Get",index37));Debug.locals.put("c", _c);}
if (true) break;

case 39:
//C
this.state = 38;
index37++;
Debug.locals.put("c", _c);
if (true) break;

case 22:
//C
this.state = 23;
 BA.debugLineNum = 4950;BA.debugLine="If c.AliasCampo=dOL.AliasCampoOrdenSQL Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 23:
//if
this.state = 26;
if (RemoteObject.solveBoolean("=",_c.getField(true,"AliasCampo" /*RemoteObject*/ ),_dol.getField(true,"AliasCampoOrdenSQL" /*RemoteObject*/ ))) { 
this.state = 25;
}if (true) break;

case 25:
//C
this.state = 26;
 BA.debugLineNum = 4951;BA.debugLine="dOL.CampoOrdenSQL=c.Campo";
Debug.JustUpdateDeviceLine();
_dol.setField ("CampoOrdenSQL" /*RemoteObject*/ ,_c.getField(true,"Campo" /*RemoteObject*/ ));
 BA.debugLineNum = 4952;BA.debugLine="Exit";
Debug.JustUpdateDeviceLine();
this.state = 27;
if (true) break;
 if (true) break;

case 26:
//C
this.state = 39;
;
 if (true) break;
if (true) break;

case 27:
//C
this.state = 28;
Debug.locals.put("c", _c);
;
 BA.debugLineNum = 4955;BA.debugLine="lstOrdenSQL.Add(dOL)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstordensql" /*RemoteObject*/ ).runVoidMethod ("Add",(Object)((_dol)));
 if (true) break;

case 28:
//C
this.state = 37;
;
 if (true) break;
if (true) break;

case 29:
//C
this.state = 32;
Debug.locals.put("i", _i);
;
 BA.debugLineNum = 4959;BA.debugLine="WAIT FOR (ActualizarTableCLV(True)) COMPLETE (rO";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "dialogoordenarsql"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_actualizartableclv" /*RemoteObject*/ ,(Object)(parent.__c.getField(true,"True"))));
this.state = 40;
return;
case 40:
//C
this.state = 32;
_robj = (RemoteObject) result.getArrayElement(false,RemoteObject.createImmutable(1));Debug.locals.put("rObj", _robj);
;
 BA.debugLineNum = 4962;BA.debugLine="Return True";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(parent.__c.getField(true,"True")));return;};
 if (true) break;

case 31:
//C
this.state = 32;
 BA.debugLineNum = 4964;BA.debugLine="Return False";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(parent.__c.getField(true,"False")));return;};
 if (true) break;

case 32:
//C
this.state = -1;
;
 BA.debugLineNum = 4966;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static RemoteObject  _eliminaritem(RemoteObject __ref,RemoteObject _indexitem) throws Exception{
try {
		Debug.PushSubsStack("EliminarItem (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,8020);
if (RapidSub.canDelegate("eliminaritem")) { return __ref.runUserSub(false, "jamtableclv","eliminaritem", __ref, _indexitem);}
Debug.locals.put("IndexItem", _indexitem);
 BA.debugLineNum = 8020;BA.debugLine="public Sub EliminarItem(IndexItem As Int)";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 8021;BA.debugLine="clvDatos.RemoveAt(IndexItem)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runVoidMethod ("_removeat",(Object)(_indexitem));
 BA.debugLineNum = 8022;BA.debugLine="If mUsarPCLV Then PCLV.ListChangedExternally";
Debug.JustUpdateDeviceLine();
if (__ref.getField(true,"_musarpclv" /*RemoteObject*/ ).<Boolean>get().booleanValue()) { 
__ref.getField(false,"_pclv" /*RemoteObject*/ ).runClassMethod (b4j.docU.preoptimizedclv.class, "_listchangedexternally" /*void*/ );};
 BA.debugLineNum = 8023;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _escapefield(RemoteObject __ref,RemoteObject _f) throws Exception{
try {
		Debug.PushSubsStack("EscapeField (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7645);
if (RapidSub.canDelegate("escapefield")) { return __ref.runUserSub(false, "jamtableclv","escapefield", __ref, _f);}
Debug.locals.put("f", _f);
 BA.debugLineNum = 7645;BA.debugLine="Private Sub EscapeField(f As String) As String";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 7646;BA.debugLine="Return \"[\" & f & \"]\"";
Debug.JustUpdateDeviceLine();
if (true) return RemoteObject.concat(RemoteObject.createImmutable("["),_f,RemoteObject.createImmutable("]"));
 BA.debugLineNum = 7647;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _estadomenuitem(RemoteObject __ref,RemoteObject _tagmenuitem,RemoteObject _habilitado) throws Exception{
try {
		Debug.PushSubsStack("EstadoMenuItem (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,2076);
if (RapidSub.canDelegate("estadomenuitem")) { return __ref.runUserSub(false, "jamtableclv","estadomenuitem", __ref, _tagmenuitem, _habilitado);}
RemoteObject _mi = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");
Debug.locals.put("TagMenuItem", _tagmenuitem);
Debug.locals.put("Habilitado", _habilitado);
 BA.debugLineNum = 2076;BA.debugLine="public Sub EstadoMenuItem(TagMenuItem As String, H";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 2077;BA.debugLine="Dim mI As MenuItem=GetMenuBarMenuItem(TagMenuItem";
Debug.JustUpdateDeviceLine();
_mi = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");
_mi = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_getmenubarmenuitem" /*RemoteObject*/ ,(Object)(_tagmenuitem));Debug.locals.put("mI", _mi);Debug.locals.put("mI", _mi);
 BA.debugLineNum = 2078;BA.debugLine="mI.Enabled=Habilitado";
Debug.JustUpdateDeviceLine();
_mi.runMethod(true,"setEnabled",_habilitado);
 BA.debugLineNum = 2079;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _exportarorigendatosaexcel(RemoteObject __ref,RemoteObject _directorioficheroexcel,RemoteObject _nombreficheroexcel,RemoteObject _nombrehojaexcel) throws Exception{
try {
		Debug.PushSubsStack("ExportarOrigenDatosAExcel (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,4713);
if (RapidSub.canDelegate("exportarorigendatosaexcel")) { return __ref.runUserSub(false, "jamtableclv","exportarorigendatosaexcel", __ref, _directorioficheroexcel, _nombreficheroexcel, _nombrehojaexcel);}
RemoteObject _wb = RemoteObject.declareNull("anywheresoftware.b4j.objects.PoiWorkbookWrapper");
RemoteObject _sheet1 = RemoteObject.declareNull("anywheresoftware.b4j.objects.PoiSheetWrapper");
RemoteObject _jo = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
RemoteObject _csfecha = RemoteObject.declareNull("anywheresoftware.b4j.objects.PoiCellStyleWrapper");
RemoteObject _fnegritaazul = RemoteObject.declareNull("anywheresoftware.b4j.objects.PoiFontWrapper");
RemoteObject _csencabezado = RemoteObject.declareNull("anywheresoftware.b4j.objects.PoiCellStyleWrapper");
RemoteObject _sbcamposdecontrolesvisibles = RemoteObject.declareNull("anywheresoftware.b4a.keywords.StringBuilderWrapper");
RemoteObject _c = RemoteObject.declareNull("b4j.docU.jamtableclv._campoorigendatosjamtableclv");
RemoteObject _numeroregistros = RemoteObject.createImmutable(0);
RemoteObject _rsregistrosfiltradostabla = RemoteObject.declareNull("anywheresoftware.b4j.objects.SQL.ResultSetWrapper");
RemoteObject _filaencabezados = RemoteObject.declareNull("anywheresoftware.b4j.objects.PoiRowWrapper");
RemoteObject _idx = RemoteObject.createImmutable(0);
RemoteObject _cact = RemoteObject.declareNull("anywheresoftware.b4j.objects.PoiCellWrapper");
RemoteObject _fact = RemoteObject.createImmutable(0);
RemoteObject _filaexcel = RemoteObject.declareNull("anywheresoftware.b4j.objects.PoiRowWrapper");
RemoteObject _columnaexcel = RemoteObject.createImmutable(0);
RemoteObject _vi = RemoteObject.createImmutable(0);
RemoteObject _vl = RemoteObject.createImmutable(0L);
RemoteObject _fechaexcel = RemoteObject.createImmutable(0);
RemoteObject _cellf = RemoteObject.declareNull("anywheresoftware.b4j.objects.PoiCellWrapper");
RemoteObject _vr = RemoteObject.createImmutable(0);
RemoteObject _vs = RemoteObject.createImmutable("");
int _k = 0;
RemoteObject _celreng = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
Debug.locals.put("DirectorioFicheroExcel", _directorioficheroexcel);
Debug.locals.put("NombreHojaExcel", _nombrehojaexcel);
 BA.debugLineNum = 4713;BA.debugLine="private Sub ExportarOrigenDatosAExcel(DirectorioFi";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 4717;BA.debugLine="Dim wb As PoiWorkbook";
Debug.JustUpdateDeviceLine();
_wb = RemoteObject.createNew ("anywheresoftware.b4j.objects.PoiWorkbookWrapper");Debug.locals.put("wb", _wb);
 BA.debugLineNum = 4718;BA.debugLine="wb.InitializeNew(True) 'crear nuevo libro";
Debug.JustUpdateDeviceLine();
_wb.runVoidMethod ("InitializeNew",(Object)(jamtableclv.__c.getField(true,"True")));
 BA.debugLineNum = 4721;BA.debugLine="Dim sheet1 As PoiSheet";
Debug.JustUpdateDeviceLine();
_sheet1 = RemoteObject.createNew ("anywheresoftware.b4j.objects.PoiSheetWrapper");Debug.locals.put("sheet1", _sheet1);
 BA.debugLineNum = 4722;BA.debugLine="sheet1 = wb.AddSheet(NombreHojaExcel,0)";
Debug.JustUpdateDeviceLine();
_sheet1 = _wb.runMethod(false,"AddSheet",(Object)(_nombrehojaexcel),(Object)(BA.numberCast(int.class, 0)));Debug.locals.put("sheet1", _sheet1);
 BA.debugLineNum = 4724;BA.debugLine="Dim jo As JavaObject=sheet1";
Debug.JustUpdateDeviceLine();
_jo = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");
_jo = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), _sheet1.getObject());Debug.locals.put("jo", _jo);Debug.locals.put("jo", _jo);
 BA.debugLineNum = 4731;BA.debugLine="Dim csFecha As PoiCellStyle";
Debug.JustUpdateDeviceLine();
_csfecha = RemoteObject.createNew ("anywheresoftware.b4j.objects.PoiCellStyleWrapper");Debug.locals.put("csFecha", _csfecha);
 BA.debugLineNum = 4732;BA.debugLine="csFecha.Initialize(wb)";
Debug.JustUpdateDeviceLine();
_csfecha.runVoidMethod ("Initialize",(Object)(_wb));
 BA.debugLineNum = 4733;BA.debugLine="csFecha.SetDataFormat(wb,\"dd/MM/yyyy\")";
Debug.JustUpdateDeviceLine();
_csfecha.runVoidMethod ("SetDataFormat",(Object)(_wb),(Object)(RemoteObject.createImmutable("dd/MM/yyyy")));
 BA.debugLineNum = 4735;BA.debugLine="Dim fNegritaAzul As PoiFont";
Debug.JustUpdateDeviceLine();
_fnegritaazul = RemoteObject.createNew ("anywheresoftware.b4j.objects.PoiFontWrapper");Debug.locals.put("fNegritaAzul", _fnegritaazul);
 BA.debugLineNum = 4736;BA.debugLine="fNegritaAzul.Initialize(wb)";
Debug.JustUpdateDeviceLine();
_fnegritaazul.runVoidMethod ("Initialize",(Object)(_wb));
 BA.debugLineNum = 4737;BA.debugLine="fNegritaAzul.Bold = True";
Debug.JustUpdateDeviceLine();
_fnegritaazul.runMethod(true,"setBold",jamtableclv.__c.getField(true,"True"));
 BA.debugLineNum = 4739;BA.debugLine="fNegritaAzul.SetColor(0xFF1E90FF)";
Debug.JustUpdateDeviceLine();
_fnegritaazul.runVoidMethod ("SetColor",(Object)(BA.numberCast(int.class, ((int)0xff1e90ff))));
 BA.debugLineNum = 4741;BA.debugLine="Dim csEncabezado As PoiCellStyle";
Debug.JustUpdateDeviceLine();
_csencabezado = RemoteObject.createNew ("anywheresoftware.b4j.objects.PoiCellStyleWrapper");Debug.locals.put("csEncabezado", _csencabezado);
 BA.debugLineNum = 4742;BA.debugLine="csEncabezado.Initialize(wb)";
Debug.JustUpdateDeviceLine();
_csencabezado.runVoidMethod ("Initialize",(Object)(_wb));
 BA.debugLineNum = 4743;BA.debugLine="csEncabezado.SetFont(fNegritaAzul)";
Debug.JustUpdateDeviceLine();
_csencabezado.runVoidMethod ("SetFont",(Object)(_fnegritaazul));
 BA.debugLineNum = 4753;BA.debugLine="Dim sbCamposDeControlesVisibles As StringBuilder";
Debug.JustUpdateDeviceLine();
_sbcamposdecontrolesvisibles = RemoteObject.createNew ("anywheresoftware.b4a.keywords.StringBuilderWrapper");Debug.locals.put("sbCamposDeControlesVisibles", _sbcamposdecontrolesvisibles);
 BA.debugLineNum = 4754;BA.debugLine="sbCamposDeControlesVisibles.Initialize";
Debug.JustUpdateDeviceLine();
_sbcamposdecontrolesvisibles.runVoidMethod ("Initialize");
 BA.debugLineNum = 4758;BA.debugLine="For Each c As CampoOrigenDatosJamTableCLV In mLst";
Debug.JustUpdateDeviceLine();
{
final RemoteObject group18 = __ref.getField(false,"_mlstcamposorigendatos" /*RemoteObject*/ );
final int groupLen18 = group18.runMethod(true,"getSize").<Integer>get()
;int index18 = 0;
;
for (; index18 < groupLen18;index18++){
_c = (group18.runMethod(false,"Get",index18));Debug.locals.put("c", _c);
Debug.locals.put("c", _c);
 BA.debugLineNum = 4766;BA.debugLine="sbCamposDeControlesVisibles.append(\"[\").Append(";
Debug.JustUpdateDeviceLine();
_sbcamposdecontrolesvisibles.runMethod(false,"Append",(Object)(RemoteObject.createImmutable("["))).runMethod(false,"Append",(Object)(_c.getField(true,"AliasCampo" /*RemoteObject*/ ))).runMethod(false,"Append",(Object)(RemoteObject.createImmutable("]"))).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(",")));
 }
}Debug.locals.put("c", _c);
;
 BA.debugLineNum = 4770;BA.debugLine="sbCamposDeControlesVisibles.Remove(sbCamposDeCont";
Debug.JustUpdateDeviceLine();
_sbcamposdecontrolesvisibles.runVoidMethod ("Remove",(Object)(RemoteObject.solve(new RemoteObject[] {_sbcamposdecontrolesvisibles.runMethod(true,"getLength"),RemoteObject.createImmutable(1)}, "-",1, 1)),(Object)(_sbcamposdecontrolesvisibles.runMethod(true,"getLength")));
 BA.debugLineNum = 4772;BA.debugLine="Dim NumeroRegistros As Int";
Debug.JustUpdateDeviceLine();
_numeroregistros = RemoteObject.createImmutable(0);Debug.locals.put("NumeroRegistros", _numeroregistros);
 BA.debugLineNum = 4773;BA.debugLine="Dim rsRegistrosFiltradosTabla As ResultSet";
Debug.JustUpdateDeviceLine();
_rsregistrosfiltradostabla = RemoteObject.createNew ("anywheresoftware.b4j.objects.SQL.ResultSetWrapper");Debug.locals.put("rsRegistrosFiltradosTabla", _rsregistrosfiltradostabla);
 BA.debugLineNum = 4774;BA.debugLine="If lstValoresFiltros.Size>0 Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean(">",__ref.getField(false,"_lstvaloresfiltros" /*RemoteObject*/ ).runMethod(true,"getSize"),BA.numberCast(double.class, 0))) { 
 BA.debugLineNum = 4775;BA.debugLine="rsRegistrosFiltradosTabla=mSQL.ExecQuery2(\"selec";
Debug.JustUpdateDeviceLine();
_rsregistrosfiltradostabla = __ref.getField(false,"_msql" /*RemoteObject*/ ).runMethod(false,"ExecQuery2",(Object)(RemoteObject.concat(RemoteObject.createImmutable("select "),_sbcamposdecontrolesvisibles.runMethod(true,"ToString"),RemoteObject.createImmutable(" from tblOrigenDatos where "),__ref.getField(true,"_scamposfiltrados" /*RemoteObject*/ ))),(Object)(__ref.getField(false,"_lstvaloresfiltros" /*RemoteObject*/ )));Debug.locals.put("rsRegistrosFiltradosTabla", _rsregistrosfiltradostabla);
 BA.debugLineNum = 4776;BA.debugLine="NumeroRegistros=mSQL.ExecQuerySingleResult2(\"sel";
Debug.JustUpdateDeviceLine();
_numeroregistros = BA.numberCast(int.class, __ref.getField(false,"_msql" /*RemoteObject*/ ).runMethod(true,"ExecQuerySingleResult2",(Object)(RemoteObject.concat(RemoteObject.createImmutable("select count(*) from tblOrigenDatos where "),__ref.getField(true,"_scamposfiltrados" /*RemoteObject*/ ))),(Object)(__ref.getField(false,"_lstvaloresfiltros" /*RemoteObject*/ ))));Debug.locals.put("NumeroRegistros", _numeroregistros);
 }else {
 BA.debugLineNum = 4778;BA.debugLine="rsRegistrosFiltradosTabla=mSQL.ExecQuery(\"select";
Debug.JustUpdateDeviceLine();
_rsregistrosfiltradostabla = __ref.getField(false,"_msql" /*RemoteObject*/ ).runMethod(false,"ExecQuery",(Object)(RemoteObject.concat(RemoteObject.createImmutable("select "),_sbcamposdecontrolesvisibles.runMethod(true,"ToString"),RemoteObject.createImmutable(" from tblOrigenDatos"))));Debug.locals.put("rsRegistrosFiltradosTabla", _rsregistrosfiltradostabla);
 BA.debugLineNum = 4779;BA.debugLine="NumeroRegistros=mSQL.ExecQuerySingleResult(\"sele";
Debug.JustUpdateDeviceLine();
_numeroregistros = BA.numberCast(int.class, __ref.getField(false,"_msql" /*RemoteObject*/ ).runMethod(true,"ExecQuerySingleResult",(Object)(RemoteObject.createImmutable("select count(*) from tblOrigenDatos"))));Debug.locals.put("NumeroRegistros", _numeroregistros);
 };
 BA.debugLineNum = 4784;BA.debugLine="Dim FilaEncabezados As PoiRow = sheet1.CreateRow(";
Debug.JustUpdateDeviceLine();
_filaencabezados = RemoteObject.createNew ("anywheresoftware.b4j.objects.PoiRowWrapper");
_filaencabezados = _sheet1.runMethod(false,"CreateRow",(Object)(BA.numberCast(int.class, 0)));Debug.locals.put("FilaEncabezados", _filaencabezados);Debug.locals.put("FilaEncabezados", _filaencabezados);
 BA.debugLineNum = 4786;BA.debugLine="Dim iDx As Int";
Debug.JustUpdateDeviceLine();
_idx = RemoteObject.createImmutable(0);Debug.locals.put("iDx", _idx);
 BA.debugLineNum = 4787;BA.debugLine="For Each c As CampoOrigenDatosJamTableCLV In mLst";
Debug.JustUpdateDeviceLine();
{
final RemoteObject group33 = __ref.getField(false,"_mlstcamposorigendatos" /*RemoteObject*/ );
final int groupLen33 = group33.runMethod(true,"getSize").<Integer>get()
;int index33 = 0;
;
for (; index33 < groupLen33;index33++){
_c = (group33.runMethod(false,"Get",index33));Debug.locals.put("c", _c);
Debug.locals.put("c", _c);
 BA.debugLineNum = 4790;BA.debugLine="FilaEncabezados.CreateCellString(iDx, c.AliasCa";
Debug.JustUpdateDeviceLine();
_filaencabezados.runVoidMethod ("CreateCellString",(Object)(_idx),(Object)(_c.getField(true,"AliasCampo" /*RemoteObject*/ )));
 BA.debugLineNum = 4791;BA.debugLine="Dim cAct As PoiCell=FilaEncabezados.GetCell(iDx";
Debug.JustUpdateDeviceLine();
_cact = RemoteObject.createNew ("anywheresoftware.b4j.objects.PoiCellWrapper");
_cact = _filaencabezados.runMethod(false,"GetCell",(Object)(_idx));Debug.locals.put("cAct", _cact);Debug.locals.put("cAct", _cact);
 BA.debugLineNum = 4792;BA.debugLine="cAct.CellStyle=csEncabezado";
Debug.JustUpdateDeviceLine();
_cact.runMethod(false,"setCellStyle",_csencabezado);
 BA.debugLineNum = 4793;BA.debugLine="iDx=iDx+1";
Debug.JustUpdateDeviceLine();
_idx = RemoteObject.solve(new RemoteObject[] {_idx,RemoteObject.createImmutable(1)}, "+",1, 1);Debug.locals.put("iDx", _idx);
 }
}Debug.locals.put("c", _c);
;
 BA.debugLineNum = 4801;BA.debugLine="Dim FAct As Int=1";
Debug.JustUpdateDeviceLine();
_fact = BA.numberCast(int.class, 1);Debug.locals.put("FAct", _fact);Debug.locals.put("FAct", _fact);
 BA.debugLineNum = 4803;BA.debugLine="Do While rsRegistrosFiltradosTabla.NextRow";
Debug.JustUpdateDeviceLine();
while (_rsregistrosfiltradostabla.runMethod(true,"NextRow").<Boolean>get().booleanValue()) {
 BA.debugLineNum = 4804;BA.debugLine="Dim FilaExcel As PoiRow = sheet1.CreateRow(FAct)";
Debug.JustUpdateDeviceLine();
_filaexcel = RemoteObject.createNew ("anywheresoftware.b4j.objects.PoiRowWrapper");
_filaexcel = _sheet1.runMethod(false,"CreateRow",(Object)(_fact));Debug.locals.put("FilaExcel", _filaexcel);Debug.locals.put("FilaExcel", _filaexcel);
 BA.debugLineNum = 4806;BA.debugLine="Dim ColumnaExcel As Int = 0";
Debug.JustUpdateDeviceLine();
_columnaexcel = BA.numberCast(int.class, 0);Debug.locals.put("ColumnaExcel", _columnaexcel);Debug.locals.put("ColumnaExcel", _columnaexcel);
 BA.debugLineNum = 4828;BA.debugLine="For Each c As CampoOrigenDatosJamTableCLV In mLs";
Debug.JustUpdateDeviceLine();
{
final RemoteObject group43 = __ref.getField(false,"_mlstcamposorigendatos" /*RemoteObject*/ );
final int groupLen43 = group43.runMethod(true,"getSize").<Integer>get()
;int index43 = 0;
;
for (; index43 < groupLen43;index43++){
_c = (group43.runMethod(false,"Get",index43));Debug.locals.put("c", _c);
Debug.locals.put("c", _c);
 BA.debugLineNum = 4834;BA.debugLine="Select True";
Debug.JustUpdateDeviceLine();
switch (BA.switchObjectToInt(jamtableclv.__c.getField(true,"True"),BA.ObjectToBoolean(RemoteObject.solveBoolean("=",_c.getField(true,"TipoDato" /*RemoteObject*/ ),BA.ObjectToString("INTEGER"))),BA.ObjectToBoolean(RemoteObject.solveBoolean("=",_c.getField(true,"TipoDato" /*RemoteObject*/ ),BA.ObjectToString("REAL"))),BA.ObjectToBoolean(RemoteObject.solveBoolean("=",_c.getField(true,"TipoDato" /*RemoteObject*/ ),BA.ObjectToString("TEXT"))))) {
case 0: {
 BA.debugLineNum = 4837;BA.debugLine="Dim vi As Int=rsRegistrosFiltradosTabla.GetI";
Debug.JustUpdateDeviceLine();
_vi = _rsregistrosfiltradostabla.runMethod(true,"GetInt",(Object)(_c.getField(true,"AliasCampo" /*RemoteObject*/ )));Debug.locals.put("vi", _vi);Debug.locals.put("vi", _vi);
 BA.debugLineNum = 4838;BA.debugLine="FilaExcel.CreateCellNumeric(ColumnaExcel,vi)";
Debug.JustUpdateDeviceLine();
_filaexcel.runVoidMethod ("CreateCellNumeric",(Object)(_columnaexcel),(Object)(BA.numberCast(double.class, _vi)));
 break; }
case 1: {
 BA.debugLineNum = 4844;BA.debugLine="If c.EsFecha Then";
Debug.JustUpdateDeviceLine();
if (_c.getField(true,"EsFecha" /*RemoteObject*/ ).<Boolean>get().booleanValue()) { 
 BA.debugLineNum = 4845;BA.debugLine="Dim vL As Long=rsRegistrosFiltradosTabla.Ge";
Debug.JustUpdateDeviceLine();
_vl = _rsregistrosfiltradostabla.runMethod(true,"GetLong",(Object)(_c.getField(true,"AliasCampo" /*RemoteObject*/ )));Debug.locals.put("vL", _vl);Debug.locals.put("vL", _vl);
 BA.debugLineNum = 4846;BA.debugLine="Dim FechaExcel As Double=TicksToExcelDate(v";
Debug.JustUpdateDeviceLine();
_fechaexcel = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_tickstoexceldate" /*RemoteObject*/ ,(Object)(_vl));Debug.locals.put("FechaExcel", _fechaexcel);Debug.locals.put("FechaExcel", _fechaexcel);
 BA.debugLineNum = 4848;BA.debugLine="FilaExcel.CreateCellNumeric(ColumnaExcel,Fe";
Debug.JustUpdateDeviceLine();
_filaexcel.runVoidMethod ("CreateCellNumeric",(Object)(_columnaexcel),(Object)(_fechaexcel));
 BA.debugLineNum = 4849;BA.debugLine="Dim cellF As PoiCell=FilaExcel.GetCell(Colu";
Debug.JustUpdateDeviceLine();
_cellf = RemoteObject.createNew ("anywheresoftware.b4j.objects.PoiCellWrapper");
_cellf = _filaexcel.runMethod(false,"GetCell",(Object)(_columnaexcel));Debug.locals.put("cellF", _cellf);Debug.locals.put("cellF", _cellf);
 BA.debugLineNum = 4850;BA.debugLine="cellF.CellStyle=csFecha";
Debug.JustUpdateDeviceLine();
_cellf.runMethod(false,"setCellStyle",_csfecha);
 }else {
 BA.debugLineNum = 4852;BA.debugLine="Dim vr As Double=rsRegistrosFiltradosTabla.";
Debug.JustUpdateDeviceLine();
_vr = _rsregistrosfiltradostabla.runMethod(true,"GetDouble",(Object)(_c.getField(true,"AliasCampo" /*RemoteObject*/ )));Debug.locals.put("vr", _vr);Debug.locals.put("vr", _vr);
 BA.debugLineNum = 4853;BA.debugLine="FilaExcel.CreateCellNumeric(ColumnaExcel,vr";
Debug.JustUpdateDeviceLine();
_filaexcel.runVoidMethod ("CreateCellNumeric",(Object)(_columnaexcel),(Object)(_vr));
 };
 break; }
case 2: {
 BA.debugLineNum = 4857;BA.debugLine="Dim vs As String=rsRegistrosFiltradosTabla.G";
Debug.JustUpdateDeviceLine();
_vs = _rsregistrosfiltradostabla.runMethod(true,"GetString",(Object)(_c.getField(true,"AliasCampo" /*RemoteObject*/ )));Debug.locals.put("vs", _vs);Debug.locals.put("vs", _vs);
 BA.debugLineNum = 4858;BA.debugLine="FilaExcel.CreateCellString(ColumnaExcel,vs)";
Debug.JustUpdateDeviceLine();
_filaexcel.runVoidMethod ("CreateCellString",(Object)(_columnaexcel),(Object)(_vs));
 break; }
}
;
 BA.debugLineNum = 4860;BA.debugLine="ColumnaExcel = ColumnaExcel  + 1";
Debug.JustUpdateDeviceLine();
_columnaexcel = RemoteObject.solve(new RemoteObject[] {_columnaexcel,RemoteObject.createImmutable(1)}, "+",1, 1);Debug.locals.put("ColumnaExcel", _columnaexcel);
 }
}Debug.locals.put("c", _c);
;
 BA.debugLineNum = 4869;BA.debugLine="FAct=FAct+1";
Debug.JustUpdateDeviceLine();
_fact = RemoteObject.solve(new RemoteObject[] {_fact,RemoteObject.createImmutable(1)}, "+",1, 1);Debug.locals.put("FAct", _fact);
 }
;
 BA.debugLineNum = 4871;BA.debugLine="rsRegistrosFiltradosTabla.Close";
Debug.JustUpdateDeviceLine();
_rsregistrosfiltradostabla.runVoidMethod ("Close");
 BA.debugLineNum = 4873;BA.debugLine="For k=0 To ColumnaExcel-1";
Debug.JustUpdateDeviceLine();
{
final int step68 = 1;
final int limit68 = RemoteObject.solve(new RemoteObject[] {_columnaexcel,RemoteObject.createImmutable(1)}, "-",1, 1).<Integer>get().intValue();
_k = 0 ;
for (;(step68 > 0 && _k <= limit68) || (step68 < 0 && _k >= limit68) ;_k = ((int)(0 + _k + step68))  ) {
Debug.locals.put("k", _k);
 BA.debugLineNum = 4874;BA.debugLine="Try";
Debug.JustUpdateDeviceLine();
try { BA.debugLineNum = 4875;BA.debugLine="jo.RunMethod(\"autoSizeColumn\",Array(k))";
Debug.JustUpdateDeviceLine();
_jo.runVoidMethod ("RunMethod",(Object)(BA.ObjectToString("autoSizeColumn")),(Object)(RemoteObject.createNewArray("Object",new int[] {1},new Object[] {RemoteObject.createImmutable((_k))})));
 Debug.CheckDeviceExceptions();
} 
       catch (Exception e72) {
			BA.rdebugUtils.runVoidMethod("setLastException",__ref.getField(false, "ba"), e72.toString()); BA.debugLineNum = 4877;BA.debugLine="LogColor(LastException.Message, xui.Color_Red)";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("LogImpl","9167116964",jamtableclv.__c.runMethod(false,"LastException",__ref.getField(false, "ba")).runMethod(true,"getMessage"),__ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"Color_Red"));
 };
 }
}Debug.locals.put("k", _k);
;
 BA.debugLineNum = 4882;BA.debugLine="Dim CelReng As JavaObject";
Debug.JustUpdateDeviceLine();
_celreng = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");Debug.locals.put("CelReng", _celreng);
 BA.debugLineNum = 4884;BA.debugLine="CelReng.InitializeNewInstance(\"org.apache.poi.ss.";
Debug.JustUpdateDeviceLine();
_celreng.runVoidMethod ("InitializeNewInstance",(Object)(BA.ObjectToString("org.apache.poi.ss.util.CellRangeAddress")),(Object)(RemoteObject.createNewArray("Object",new int[] {4},new Object[] {RemoteObject.createImmutable((0)),RemoteObject.createImmutable((0)),RemoteObject.createImmutable((0)),(RemoteObject.solve(new RemoteObject[] {_columnaexcel,RemoteObject.createImmutable(1)}, "-",1, 1))})));
 BA.debugLineNum = 4885;BA.debugLine="jo.RunMethod(\"setAutoFilter\",Array(CelReng))";
Debug.JustUpdateDeviceLine();
_jo.runVoidMethod ("RunMethod",(Object)(BA.ObjectToString("setAutoFilter")),(Object)(RemoteObject.createNewArray("Object",new int[] {1},new Object[] {(_celreng.getObject())})));
 BA.debugLineNum = 4891;BA.debugLine="Dim NombreFicheroExcel As String=NombreFicheroExc";
Debug.JustUpdateDeviceLine();
_nombreficheroexcel = _nombreficheroexcel;Debug.locals.put("NombreFicheroExcel", _nombreficheroexcel);Debug.locals.put("NombreFicheroExcel", _nombreficheroexcel);
 BA.debugLineNum = 4893;BA.debugLine="Try";
Debug.JustUpdateDeviceLine();
try { BA.debugLineNum = 4897;BA.debugLine="wb.Save(DirectorioFicheroExcel.Replace(\"\\\",\"/\"),";
Debug.JustUpdateDeviceLine();
_wb.runVoidMethod ("Save",(Object)(_directorioficheroexcel.runMethod(true,"replace",(Object)(BA.ObjectToString("\\")),(Object)(RemoteObject.createImmutable("/")))),(Object)(_nombreficheroexcel));
 BA.debugLineNum = 4898;BA.debugLine="wb.Close";
Debug.JustUpdateDeviceLine();
_wb.runVoidMethod ("Close");
 BA.debugLineNum = 4899;BA.debugLine="Return True";
Debug.JustUpdateDeviceLine();
Debug.CheckDeviceExceptions();if (true) return jamtableclv.__c.getField(true,"True");
 Debug.CheckDeviceExceptions();
} 
       catch (Exception e84) {
			BA.rdebugUtils.runVoidMethod("setLastException",__ref.getField(false, "ba"), e84.toString()); BA.debugLineNum = 4901;BA.debugLine="Return False";
Debug.JustUpdateDeviceLine();
if (true) return jamtableclv.__c.getField(true,"False");
 };
 BA.debugLineNum = 4905;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(false);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _exportartablaaexcel(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("ExportarTablaAExcel (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,4593);
if (RapidSub.canDelegate("exportartablaaexcel")) { return __ref.runUserSub(false, "jamtableclv","exportartablaaexcel", __ref);}
ResumableSub_ExportarTablaAExcel rsub = new ResumableSub_ExportarTablaAExcel(null,__ref);
rsub.remoteResumableSub = anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSubForFilter();
rsub.resume(null, null);
return RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.keywords.Common.ResumableSubWrapper"), rsub.remoteResumableSub);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_ExportarTablaAExcel extends BA.ResumableSub {
public ResumableSub_ExportarTablaAExcel(b4j.docU.jamtableclv parent,RemoteObject __ref) {
this.parent = parent;
this.__ref = __ref;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _answ = RemoteObject.declareNull("Object");
RemoteObject _result = RemoteObject.createImmutable(0);
RemoteObject _msa = RemoteObject.declareNull("Object");
RemoteObject _userdocfolder = RemoteObject.createImmutable("");
RemoteObject _fc = RemoteObject.declareNull("anywheresoftware.b4j.objects.FileChooserWrapper");
RemoteObject _filename = RemoteObject.createImmutable("");
RemoteObject _nombreficheroexcel = RemoteObject.createImmutable("");
RemoteObject _dirficheroexcel = RemoteObject.createImmutable("");

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("ExportarTablaAExcel (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,4593);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
{
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,RemoteObject.createImmutable(null));return;}
case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
 BA.debugLineNum = 4595;BA.debugLine="Dim answ As Object =xui.Msgbox2Async(\"Se exportar";
Debug.JustUpdateDeviceLine();
_answ = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"Msgbox2Async",__ref.getField(false, "ba"),(Object)(BA.ObjectToString("Se exportarán a excel los datos de la tabla ( sólo los registros FILTRADOS. Si la tabla no está filtrada, se exportarán todos los registros)")),(Object)(BA.ObjectToString("Exportación a excel")),(Object)(BA.ObjectToString("Sí")),(Object)(BA.ObjectToString("Cancelar")),(Object)(BA.ObjectToString("")),(Object)((parent.__c.getField(false,"Null"))));Debug.locals.put("answ", _answ);Debug.locals.put("answ", _answ);
 BA.debugLineNum = 4596;BA.debugLine="Wait For (answ) Msgbox_Result (Result As Int)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","msgbox_result", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "exportartablaaexcel"), _answ);
this.state = 23;
return;
case 23:
//C
this.state = 1;
_result = (RemoteObject) result.getArrayElement(true,RemoteObject.createImmutable(1));Debug.locals.put("Result", _result);
;
 BA.debugLineNum = 4597;BA.debugLine="If Result <>xui.DialogResponse_Positive Then Retu";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//if
this.state = 6;
if (RemoteObject.solveBoolean("!",_result,BA.numberCast(double.class, __ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"DialogResponse_Positive")))) { 
this.state = 3;
;}if (true) break;

case 3:
//C
this.state = 6;
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(parent.__c.getField(true,"False")));return;};
if (true) break;

case 6:
//C
this.state = 7;
;
 BA.debugLineNum = 4600;BA.debugLine="If clvDatos.Size=0 Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 7:
//if
this.state = 10;
if (RemoteObject.solveBoolean("=",__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"_getsize"),BA.numberCast(double.class, 0))) { 
this.state = 9;
}if (true) break;

case 9:
//C
this.state = 10;
 BA.debugLineNum = 4601;BA.debugLine="Dim msa As Object=xui.MsgboxAsync(\"No hay regist";
Debug.JustUpdateDeviceLine();
_msa = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"MsgboxAsync",__ref.getField(false, "ba"),(Object)(BA.ObjectToString("No hay registros seleccionados para exportar a excel")),(Object)(RemoteObject.createImmutable("Aviso")));Debug.locals.put("msa", _msa);Debug.locals.put("msa", _msa);
 BA.debugLineNum = 4602;BA.debugLine="Wait For (msa) Msgbox_Result";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","msgbox_result", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "exportartablaaexcel"), _msa);
this.state = 24;
return;
case 24:
//C
this.state = 10;
;
 BA.debugLineNum = 4603;BA.debugLine="Return False";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(parent.__c.getField(true,"False")));return;};
 if (true) break;

case 10:
//C
this.state = 11;
;
 BA.debugLineNum = 4615;BA.debugLine="Dim UserDocFolder As String=FindUserDocumentsFold";
Debug.JustUpdateDeviceLine();
_userdocfolder = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_finduserdocumentsfolder" /*RemoteObject*/ );Debug.locals.put("UserDocFolder", _userdocfolder);Debug.locals.put("UserDocFolder", _userdocfolder);
 BA.debugLineNum = 4616;BA.debugLine="Dim fc As FileChooser";
Debug.JustUpdateDeviceLine();
_fc = RemoteObject.createNew ("anywheresoftware.b4j.objects.FileChooserWrapper");Debug.locals.put("fc", _fc);
 BA.debugLineNum = 4617;BA.debugLine="fc.Initialize";
Debug.JustUpdateDeviceLine();
_fc.runVoidMethod ("Initialize");
 BA.debugLineNum = 4618;BA.debugLine="fc.Title=\"Exportación Excel\"";
Debug.JustUpdateDeviceLine();
_fc.runMethod(true,"setTitle",BA.ObjectToString("Exportación Excel"));
 BA.debugLineNum = 4619;BA.debugLine="fc.SetExtensionFilter(\"Ficheros Excel\", Array As";
Debug.JustUpdateDeviceLine();
_fc.runVoidMethod ("SetExtensionFilter",(Object)(BA.ObjectToString("Ficheros Excel")),(Object)(parent.__c.runMethod(false, "ArrayToList", (Object)(RemoteObject.createNewArray("String",new int[] {3},new Object[] {BA.ObjectToString("*.xlsx"),BA.ObjectToString("*.xlsm"),RemoteObject.createImmutable("*.xls")})))));
 BA.debugLineNum = 4621;BA.debugLine="fc.InitialDirectory=UserDocFolder";
Debug.JustUpdateDeviceLine();
_fc.runMethod(true,"setInitialDirectory",_userdocfolder);
 BA.debugLineNum = 4622;BA.debugLine="Dim fileName As String = fc.ShowSave(mParentForm)";
Debug.JustUpdateDeviceLine();
_filename = _fc.runMethodAndSync(true,"ShowSave",(Object)(__ref.getField(false,"_mparentform" /*RemoteObject*/ )));Debug.locals.put("fileName", _filename);Debug.locals.put("fileName", _filename);
 BA.debugLineNum = 4623;BA.debugLine="If fileName = \"\" Then Return False";
Debug.JustUpdateDeviceLine();
if (true) break;

case 11:
//if
this.state = 16;
if (RemoteObject.solveBoolean("=",_filename,BA.ObjectToString(""))) { 
this.state = 13;
;}if (true) break;

case 13:
//C
this.state = 16;
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(parent.__c.getField(true,"False")));return;};
if (true) break;

case 16:
//C
this.state = 17;
;
 BA.debugLineNum = 4626;BA.debugLine="Dim NombreFicheroExcel As String=File.GetName(fil";
Debug.JustUpdateDeviceLine();
_nombreficheroexcel = parent.__c.getField(false,"File").runMethod(true,"GetName",(Object)(_filename));Debug.locals.put("NombreFicheroExcel", _nombreficheroexcel);Debug.locals.put("NombreFicheroExcel", _nombreficheroexcel);
 BA.debugLineNum = 4627;BA.debugLine="Dim DirFicheroExcel As String=File.GetFileParent(";
Debug.JustUpdateDeviceLine();
_dirficheroexcel = parent.__c.getField(false,"File").runMethod(true,"GetFileParent",(Object)(_filename));Debug.locals.put("DirFicheroExcel", _dirficheroexcel);Debug.locals.put("DirFicheroExcel", _dirficheroexcel);
 BA.debugLineNum = 4645;BA.debugLine="If ExportarOrigenDatosAExcel(DirFicheroExcel, Nom";
Debug.JustUpdateDeviceLine();
if (true) break;

case 17:
//if
this.state = 22;
if (__ref.runClassMethod (b4j.docU.jamtableclv.class, "_exportarorigendatosaexcel" /*RemoteObject*/ ,(Object)(_dirficheroexcel),(Object)(_nombreficheroexcel),(Object)(RemoteObject.createImmutable("Hoja1"))).<Boolean>get().booleanValue()) { 
this.state = 19;
}else {
this.state = 21;
}if (true) break;

case 19:
//C
this.state = 22;
 BA.debugLineNum = 4650;BA.debugLine="Dim msa As Object=xui.MsgboxAsync(\"Fichero excel";
Debug.JustUpdateDeviceLine();
_msa = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"MsgboxAsync",__ref.getField(false, "ba"),(Object)(RemoteObject.concat(RemoteObject.createImmutable("Fichero excel "),_filename,RemoteObject.createImmutable(" grabado."),parent.__c.getField(true,"CRLF"),parent.__c.getField(true,"CRLF"),RemoteObject.createImmutable("."))),(Object)(RemoteObject.createImmutable("Aviso")));Debug.locals.put("msa", _msa);Debug.locals.put("msa", _msa);
 BA.debugLineNum = 4651;BA.debugLine="Wait For (msa) Msgbox_Result";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","msgbox_result", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "exportartablaaexcel"), _msa);
this.state = 25;
return;
case 25:
//C
this.state = 22;
;
 BA.debugLineNum = 4702;BA.debugLine="fx.ShowExternalDocument(File.GetUri(DirFicheroEx";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_fx" /*RemoteObject*/ ).runVoidMethod ("ShowExternalDocument",(Object)(parent.__c.getField(false,"File").runMethod(true,"GetUri",(Object)(_dirficheroexcel),(Object)(_nombreficheroexcel))));
 BA.debugLineNum = 4703;BA.debugLine="Return True";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(parent.__c.getField(true,"True")));return;};
 if (true) break;

case 21:
//C
this.state = 22;
 BA.debugLineNum = 4705;BA.debugLine="Dim msa As Object=xui.MsgboxAsync(\"No ha sido po";
Debug.JustUpdateDeviceLine();
_msa = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"MsgboxAsync",__ref.getField(false, "ba"),(Object)(RemoteObject.concat(RemoteObject.createImmutable("No ha sido posible grabar el fichero. Verifica si tienes excel en el equipo, y que no esté abierto ya un fichero con el nombre "),_nombreficheroexcel,RemoteObject.createImmutable(".xlsx"))),(Object)(RemoteObject.createImmutable("Error")));Debug.locals.put("msa", _msa);Debug.locals.put("msa", _msa);
 BA.debugLineNum = 4706;BA.debugLine="Wait For (msa) Msgbox_Result";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","msgbox_result", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "exportartablaaexcel"), _msa);
this.state = 26;
return;
case 26:
//C
this.state = 22;
;
 BA.debugLineNum = 4707;BA.debugLine="Return False";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(parent.__c.getField(true,"False")));return;};
 if (true) break;

case 22:
//C
this.state = -1;
;
 BA.debugLineNum = 4711;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static RemoteObject  _fillimagetoview(RemoteObject __ref,RemoteObject _bmp,RemoteObject _imageview) throws Exception{
try {
		Debug.PushSubsStack("FillImageToView (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,8093);
if (RapidSub.canDelegate("fillimagetoview")) { return __ref.runUserSub(false, "jamtableclv","fillimagetoview", __ref, _bmp, _imageview);}
RemoteObject _bmpratio = RemoteObject.createImmutable(0f);
RemoteObject _viewratio = RemoteObject.createImmutable(0f);
RemoteObject _newheight = RemoteObject.createImmutable(0);
RemoteObject _newwidth = RemoteObject.createImmutable(0);
RemoteObject _scale = RemoteObject.createImmutable(0f);
Debug.locals.put("bmp", _bmp);
Debug.locals.put("ImageView", _imageview);
 BA.debugLineNum = 8093;BA.debugLine="Sub FillImageToView(bmp As B4XBitmap, ImageView As";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 8094;BA.debugLine="Dim bmpRatio As Float = bmp.Width / bmp.Height";
Debug.JustUpdateDeviceLine();
_bmpratio = BA.numberCast(float.class, RemoteObject.solve(new RemoteObject[] {_bmp.runMethod(true,"getWidth"),_bmp.runMethod(true,"getHeight")}, "/",0, 0));Debug.locals.put("bmpRatio", _bmpratio);Debug.locals.put("bmpRatio", _bmpratio);
 BA.debugLineNum = 8095;BA.debugLine="Dim viewRatio As Float = ImageView.Width / ImageV";
Debug.JustUpdateDeviceLine();
_viewratio = BA.numberCast(float.class, RemoteObject.solve(new RemoteObject[] {_imageview.runMethod(true,"getWidth"),_imageview.runMethod(true,"getHeight")}, "/",0, 0));Debug.locals.put("viewRatio", _viewratio);Debug.locals.put("viewRatio", _viewratio);
 BA.debugLineNum = 8096;BA.debugLine="If viewRatio > bmpRatio Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean(">",_viewratio,BA.numberCast(double.class, _bmpratio))) { 
 BA.debugLineNum = 8097;BA.debugLine="Dim NewHeight As Int = bmp.Width / viewRatio";
Debug.JustUpdateDeviceLine();
_newheight = BA.numberCast(int.class, RemoteObject.solve(new RemoteObject[] {_bmp.runMethod(true,"getWidth"),_viewratio}, "/",0, 0));Debug.locals.put("NewHeight", _newheight);Debug.locals.put("NewHeight", _newheight);
 BA.debugLineNum = 8098;BA.debugLine="bmp = bmp.Crop(0, bmp.Height / 2 - NewHeight / 2";
Debug.JustUpdateDeviceLine();
_bmp = _bmp.runMethod(false,"Crop",(Object)(BA.numberCast(int.class, 0)),(Object)(BA.numberCast(int.class, RemoteObject.solve(new RemoteObject[] {_bmp.runMethod(true,"getHeight"),RemoteObject.createImmutable(2),_newheight,RemoteObject.createImmutable(2)}, "/-/",1, 0))),(Object)(BA.numberCast(int.class, _bmp.runMethod(true,"getWidth"))),(Object)(_newheight));Debug.locals.put("bmp", _bmp);
 }else 
{ BA.debugLineNum = 8099;BA.debugLine="Else if viewRatio < bmpRatio Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("<",_viewratio,BA.numberCast(double.class, _bmpratio))) { 
 BA.debugLineNum = 8100;BA.debugLine="Dim NewWidth As Int = bmp.Height * viewRatio";
Debug.JustUpdateDeviceLine();
_newwidth = BA.numberCast(int.class, RemoteObject.solve(new RemoteObject[] {_bmp.runMethod(true,"getHeight"),_viewratio}, "*",0, 0));Debug.locals.put("NewWidth", _newwidth);Debug.locals.put("NewWidth", _newwidth);
 BA.debugLineNum = 8101;BA.debugLine="bmp = bmp.Crop(bmp.Width / 2 - NewWidth / 2, 0,";
Debug.JustUpdateDeviceLine();
_bmp = _bmp.runMethod(false,"Crop",(Object)(BA.numberCast(int.class, RemoteObject.solve(new RemoteObject[] {_bmp.runMethod(true,"getWidth"),RemoteObject.createImmutable(2),_newwidth,RemoteObject.createImmutable(2)}, "/-/",1, 0))),(Object)(BA.numberCast(int.class, 0)),(Object)(_newwidth),(Object)(BA.numberCast(int.class, _bmp.runMethod(true,"getHeight"))));Debug.locals.put("bmp", _bmp);
 }}
;
 BA.debugLineNum = 8103;BA.debugLine="Dim scale As Float = 1";
Debug.JustUpdateDeviceLine();
_scale = BA.numberCast(float.class, 1);Debug.locals.put("scale", _scale);Debug.locals.put("scale", _scale);
 BA.debugLineNum = 8107;BA.debugLine="ImageView.SetBitmap(bmp.Resize(ImageView.Width *";
Debug.JustUpdateDeviceLine();
_imageview.runVoidMethod ("SetBitmap",(Object)((_bmp.runMethod(false,"Resize",(Object)(BA.numberCast(int.class, RemoteObject.solve(new RemoteObject[] {_imageview.runMethod(true,"getWidth"),_scale}, "*",0, 0))),(Object)(BA.numberCast(int.class, RemoteObject.solve(new RemoteObject[] {_imageview.runMethod(true,"getHeight"),_scale}, "*",0, 0))),(Object)(jamtableclv.__c.getField(true,"True"))).getObject())));
 BA.debugLineNum = 8108;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _finduserdocumentsfolder(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("FindUserDocumentsFolder (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,4571);
if (RapidSub.canDelegate("finduserdocumentsfolder")) { return __ref.runUserSub(false, "jamtableclv","finduserdocumentsfolder", __ref);}
RemoteObject _jo = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
RemoteObject _fs = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
 BA.debugLineNum = 4571;BA.debugLine="private Sub FindUserDocumentsFolder As String";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 4572;BA.debugLine="If DetectOS = \"windows\" Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",__ref.runClassMethod (b4j.docU.jamtableclv.class, "_detectos" /*RemoteObject*/ ),BA.ObjectToString("windows"))) { 
 BA.debugLineNum = 4573;BA.debugLine="Dim jo As JavaObject";
Debug.JustUpdateDeviceLine();
_jo = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");Debug.locals.put("jo", _jo);
 BA.debugLineNum = 4574;BA.debugLine="Dim fs As JavaObject = jo.InitializeStatic(\"java";
Debug.JustUpdateDeviceLine();
_fs = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");
_fs = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), _jo.runMethod(false,"InitializeStatic",(Object)(RemoteObject.createImmutable("javax.swing.filechooser.FileSystemView"))).runMethod(false,"RunMethod",(Object)(BA.ObjectToString("getFileSystemView")),(Object)((jamtableclv.__c.getField(false,"Null")))));Debug.locals.put("fs", _fs);Debug.locals.put("fs", _fs);
 BA.debugLineNum = 4575;BA.debugLine="Return fs.RunMethodJO(\"getDefaultDirectory\", Nul";
Debug.JustUpdateDeviceLine();
if (true) return BA.ObjectToString(_fs.runMethod(false,"RunMethodJO",(Object)(BA.ObjectToString("getDefaultDirectory")),(Object)((jamtableclv.__c.getField(false,"Null")))).runMethod(false,"RunMethod",(Object)(BA.ObjectToString("getPath")),(Object)((jamtableclv.__c.getField(false,"Null")))));
 }else {
 BA.debugLineNum = 4577;BA.debugLine="Return GetSystemProperty(\"user.home\", \"\") & \"/Do";
Debug.JustUpdateDeviceLine();
if (true) return RemoteObject.concat(jamtableclv.__c.runMethod(true,"GetSystemProperty",(Object)(BA.ObjectToString("user.home")),(Object)(RemoteObject.createImmutable(""))),RemoteObject.createImmutable("/Documents"));
 };
 BA.debugLineNum = 4579;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _fitimagetoview(RemoteObject __ref,RemoteObject _bmp,RemoteObject _imageview) throws Exception{
try {
		Debug.PushSubsStack("FitImageToView (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,8084);
if (RapidSub.canDelegate("fitimagetoview")) { return __ref.runUserSub(false, "jamtableclv","fitimagetoview", __ref, _bmp, _imageview);}
RemoteObject _scale = RemoteObject.createImmutable(0f);
Debug.locals.put("bmp", _bmp);
Debug.locals.put("ImageView", _imageview);
 BA.debugLineNum = 8084;BA.debugLine="Sub FitImageToView(bmp As B4XBitmap, ImageView As";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 8085;BA.debugLine="Dim scale As Float = 1";
Debug.JustUpdateDeviceLine();
_scale = BA.numberCast(float.class, 1);Debug.locals.put("scale", _scale);Debug.locals.put("scale", _scale);
 BA.debugLineNum = 8089;BA.debugLine="ImageView.SetBitmap(bmp.Resize(ImageView.Width *";
Debug.JustUpdateDeviceLine();
_imageview.runVoidMethod ("SetBitmap",(Object)((_bmp.runMethod(false,"Resize",(Object)(BA.numberCast(int.class, RemoteObject.solve(new RemoteObject[] {_imageview.runMethod(true,"getWidth"),_scale}, "*",0, 0))),(Object)(BA.numberCast(int.class, RemoteObject.solve(new RemoteObject[] {_imageview.runMethod(true,"getHeight"),_scale}, "*",0, 0))),(Object)(jamtableclv.__c.getField(true,"True"))).getObject())));
 BA.debugLineNum = 8090;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _fixnull(RemoteObject __ref,RemoteObject _sobj) throws Exception{
try {
		Debug.PushSubsStack("FixNull (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7795);
if (RapidSub.canDelegate("fixnull")) { return __ref.runUserSub(false, "jamtableclv","fixnull", __ref, _sobj);}
RemoteObject _svalue = RemoteObject.createImmutable("");
Debug.locals.put("sObj", _sobj);
 BA.debugLineNum = 7795;BA.debugLine="public Sub FixNull(sObj As Object) As String";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 7796;BA.debugLine="Dim sValue As String";
Debug.JustUpdateDeviceLine();
_svalue = RemoteObject.createImmutable("");Debug.locals.put("sValue", _svalue);
 BA.debugLineNum = 7797;BA.debugLine="If sObj = Null Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("n",_sobj)) { 
 BA.debugLineNum = 7798;BA.debugLine="sValue = \"\"";
Debug.JustUpdateDeviceLine();
_svalue = BA.ObjectToString("");Debug.locals.put("sValue", _svalue);
 }else {
 BA.debugLineNum = 7800;BA.debugLine="sValue = CStr(sObj)";
Debug.JustUpdateDeviceLine();
_svalue = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_cstr" /*RemoteObject*/ ,(Object)(_sobj));Debug.locals.put("sValue", _svalue);
 };
 BA.debugLineNum = 7802;BA.debugLine="sValue = sValue.Replace(\"NULL\",\"\").Replace(\"null\"";
Debug.JustUpdateDeviceLine();
_svalue = _svalue.runMethod(true,"replace",(Object)(BA.ObjectToString("NULL")),(Object)(RemoteObject.createImmutable(""))).runMethod(true,"replace",(Object)(BA.ObjectToString("null")),(Object)(RemoteObject.createImmutable("")));Debug.locals.put("sValue", _svalue);
 BA.debugLineNum = 7803;BA.debugLine="Return sValue";
Debug.JustUpdateDeviceLine();
if (true) return _svalue;
 BA.debugLineNum = 7804;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _fixnulldouble(RemoteObject __ref,RemoteObject _sobj) throws Exception{
try {
		Debug.PushSubsStack("FixNullDouble (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7806);
if (RapidSub.canDelegate("fixnulldouble")) { return __ref.runUserSub(false, "jamtableclv","fixnulldouble", __ref, _sobj);}
RemoteObject _dvalue = RemoteObject.createImmutable(0);
Debug.locals.put("sObj", _sobj);
 BA.debugLineNum = 7806;BA.debugLine="public Sub FixNullDouble(sObj As Object) As Double";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 7807;BA.debugLine="Dim dValue As Double";
Debug.JustUpdateDeviceLine();
_dvalue = RemoteObject.createImmutable(0);Debug.locals.put("dValue", _dvalue);
 BA.debugLineNum = 7808;BA.debugLine="If sObj = Null Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("n",_sobj)) { 
 BA.debugLineNum = 7809;BA.debugLine="dValue = 0";
Debug.JustUpdateDeviceLine();
_dvalue = BA.numberCast(double.class, 0);Debug.locals.put("dValue", _dvalue);
 }else {
 BA.debugLineNum = 7811;BA.debugLine="dValue = CDbl(sObj)";
Debug.JustUpdateDeviceLine();
_dvalue = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_cdbl" /*RemoteObject*/ ,(Object)(_sobj));Debug.locals.put("dValue", _dvalue);
 };
 BA.debugLineNum = 7813;BA.debugLine="Return dValue";
Debug.JustUpdateDeviceLine();
if (true) return _dvalue;
 BA.debugLineNum = 7814;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(0);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _fixnullfloat(RemoteObject __ref,RemoteObject _sobj) throws Exception{
try {
		Debug.PushSubsStack("FixNullFloat (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7816);
if (RapidSub.canDelegate("fixnullfloat")) { return __ref.runUserSub(false, "jamtableclv","fixnullfloat", __ref, _sobj);}
RemoteObject _fvalue = RemoteObject.createImmutable(0f);
Debug.locals.put("sObj", _sobj);
 BA.debugLineNum = 7816;BA.debugLine="public Sub FixNullFloat(sObj As Object) As Float";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 7817;BA.debugLine="Dim fValue As Float";
Debug.JustUpdateDeviceLine();
_fvalue = RemoteObject.createImmutable(0f);Debug.locals.put("fValue", _fvalue);
 BA.debugLineNum = 7818;BA.debugLine="If sObj = Null Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("n",_sobj)) { 
 BA.debugLineNum = 7819;BA.debugLine="fValue = 0";
Debug.JustUpdateDeviceLine();
_fvalue = BA.numberCast(float.class, 0);Debug.locals.put("fValue", _fvalue);
 }else {
 BA.debugLineNum = 7821;BA.debugLine="fValue = CFlt(sObj)";
Debug.JustUpdateDeviceLine();
_fvalue = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_cflt" /*RemoteObject*/ ,(Object)(_sobj));Debug.locals.put("fValue", _fvalue);
 };
 BA.debugLineNum = 7823;BA.debugLine="Return fValue";
Debug.JustUpdateDeviceLine();
if (true) return _fvalue;
 BA.debugLineNum = 7824;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(0f);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _fixnullint(RemoteObject __ref,RemoteObject _sobj) throws Exception{
try {
		Debug.PushSubsStack("FixNullInt (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7836);
if (RapidSub.canDelegate("fixnullint")) { return __ref.runUserSub(false, "jamtableclv","fixnullint", __ref, _sobj);}
RemoteObject _dvalue = RemoteObject.createImmutable(0);
Debug.locals.put("sObj", _sobj);
 BA.debugLineNum = 7836;BA.debugLine="public Sub FixNullInt(sObj As Object) As Int";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 7837;BA.debugLine="Dim dValue As Int";
Debug.JustUpdateDeviceLine();
_dvalue = RemoteObject.createImmutable(0);Debug.locals.put("dValue", _dvalue);
 BA.debugLineNum = 7838;BA.debugLine="If sObj = Null Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("n",_sobj)) { 
 BA.debugLineNum = 7839;BA.debugLine="dValue = 0";
Debug.JustUpdateDeviceLine();
_dvalue = BA.numberCast(int.class, 0);Debug.locals.put("dValue", _dvalue);
 }else {
 BA.debugLineNum = 7841;BA.debugLine="dValue = CInt(sObj)";
Debug.JustUpdateDeviceLine();
_dvalue = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_cint" /*RemoteObject*/ ,(Object)(_sobj));Debug.locals.put("dValue", _dvalue);
 };
 BA.debugLineNum = 7843;BA.debugLine="Return dValue";
Debug.JustUpdateDeviceLine();
if (true) return _dvalue;
 BA.debugLineNum = 7844;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(0);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _fixnulllong(RemoteObject __ref,RemoteObject _sobj) throws Exception{
try {
		Debug.PushSubsStack("FixNullLong (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7826);
if (RapidSub.canDelegate("fixnulllong")) { return __ref.runUserSub(false, "jamtableclv","fixnulllong", __ref, _sobj);}
RemoteObject _dvalue = RemoteObject.createImmutable(0L);
Debug.locals.put("sObj", _sobj);
 BA.debugLineNum = 7826;BA.debugLine="public Sub FixNullLong(sObj As Object) As Double";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 7827;BA.debugLine="Dim dValue As Long";
Debug.JustUpdateDeviceLine();
_dvalue = RemoteObject.createImmutable(0L);Debug.locals.put("dValue", _dvalue);
 BA.debugLineNum = 7828;BA.debugLine="If sObj = Null Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("n",_sobj)) { 
 BA.debugLineNum = 7829;BA.debugLine="dValue = 0";
Debug.JustUpdateDeviceLine();
_dvalue = BA.numberCast(long.class, 0);Debug.locals.put("dValue", _dvalue);
 }else {
 BA.debugLineNum = 7831;BA.debugLine="dValue = CLng(sObj)";
Debug.JustUpdateDeviceLine();
_dvalue = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_clng" /*RemoteObject*/ ,(Object)(_sobj));Debug.locals.put("dValue", _dvalue);
 };
 BA.debugLineNum = 7833;BA.debugLine="Return dValue";
Debug.JustUpdateDeviceLine();
if (true) return BA.numberCast(double.class, _dvalue);
 BA.debugLineNum = 7834;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(0);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _formatonumerico(RemoteObject __ref,RemoteObject _numero,RemoteObject _minintegers,RemoteObject _maxfracciones) throws Exception{
try {
		Debug.PushSubsStack("FormatoNumerico (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,8391);
if (RapidSub.canDelegate("formatonumerico")) { return __ref.runUserSub(false, "jamtableclv","formatonumerico", __ref, _numero, _minintegers, _maxfracciones);}
RemoteObject _formatter = RemoteObject.declareNull("b4j.docU.b4xformatter");
Debug.locals.put("Numero", _numero);
Debug.locals.put("MinIntegers", _minintegers);
Debug.locals.put("MaxFracciones", _maxfracciones);
 BA.debugLineNum = 8391;BA.debugLine="Public Sub FormatoNumerico(Numero As Double, MinIn";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 8392;BA.debugLine="Dim formatter As B4XFormatter";
Debug.JustUpdateDeviceLine();
_formatter = RemoteObject.createNew ("b4j.docU.b4xformatter");Debug.locals.put("formatter", _formatter);
 BA.debugLineNum = 8393;BA.debugLine="formatter.Initialize";
Debug.JustUpdateDeviceLine();
_formatter.runClassMethod (b4j.docU.b4xformatter.class, "_initialize" /*RemoteObject*/ ,__ref.getField(false, "ba"));
 BA.debugLineNum = 8394;BA.debugLine="formatter.GetDefaultFormat.MinimumIntegers = MinI";
Debug.JustUpdateDeviceLine();
_formatter.runClassMethod (b4j.docU.b4xformatter.class, "_getdefaultformat" /*RemoteObject*/ ).setField ("MinimumIntegers" /*RemoteObject*/ ,_minintegers);
 BA.debugLineNum = 8395;BA.debugLine="formatter.GetDefaultFormat.MaximumFractions = Max";
Debug.JustUpdateDeviceLine();
_formatter.runClassMethod (b4j.docU.b4xformatter.class, "_getdefaultformat" /*RemoteObject*/ ).setField ("MaximumFractions" /*RemoteObject*/ ,_maxfracciones);
 BA.debugLineNum = 8396;BA.debugLine="formatter.GetDefaultFormat.DecimalPoint=\",\"";
Debug.JustUpdateDeviceLine();
_formatter.runClassMethod (b4j.docU.b4xformatter.class, "_getdefaultformat" /*RemoteObject*/ ).setField ("DecimalPoint" /*RemoteObject*/ ,BA.ObjectToString(","));
 BA.debugLineNum = 8397;BA.debugLine="Return formatter.Format(Numero)";
Debug.JustUpdateDeviceLine();
if (true) return _formatter.runClassMethod (b4j.docU.b4xformatter.class, "_format" /*RemoteObject*/ ,(Object)(_numero));
 BA.debugLineNum = 8398;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _formatonumerico2(RemoteObject __ref,RemoteObject _numero,RemoteObject _minintegers,RemoteObject _maxfracciones,RemoteObject _minfracciones,RemoteObject _usaragrupacion) throws Exception{
try {
		Debug.PushSubsStack("FormatoNumerico2 (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,8402);
if (RapidSub.canDelegate("formatonumerico2")) { return __ref.runUserSub(false, "jamtableclv","formatonumerico2", __ref, _numero, _minintegers, _maxfracciones, _minfracciones, _usaragrupacion);}
RemoteObject _formatter = RemoteObject.declareNull("b4j.docU.b4xformatter");
Debug.locals.put("Numero", _numero);
Debug.locals.put("MinIntegers", _minintegers);
Debug.locals.put("MaxFracciones", _maxfracciones);
Debug.locals.put("MinFracciones", _minfracciones);
Debug.locals.put("UsarAgrupacion", _usaragrupacion);
 BA.debugLineNum = 8402;BA.debugLine="Public Sub FormatoNumerico2(Numero As Double, MinI";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 8403;BA.debugLine="Dim formatter As B4XFormatter";
Debug.JustUpdateDeviceLine();
_formatter = RemoteObject.createNew ("b4j.docU.b4xformatter");Debug.locals.put("formatter", _formatter);
 BA.debugLineNum = 8404;BA.debugLine="formatter.Initialize";
Debug.JustUpdateDeviceLine();
_formatter.runClassMethod (b4j.docU.b4xformatter.class, "_initialize" /*RemoteObject*/ ,__ref.getField(false, "ba"));
 BA.debugLineNum = 8405;BA.debugLine="formatter.GetDefaultFormat.MinimumIntegers = MinI";
Debug.JustUpdateDeviceLine();
_formatter.runClassMethod (b4j.docU.b4xformatter.class, "_getdefaultformat" /*RemoteObject*/ ).setField ("MinimumIntegers" /*RemoteObject*/ ,_minintegers);
 BA.debugLineNum = 8406;BA.debugLine="formatter.GetDefaultFormat.MaximumFractions = Max";
Debug.JustUpdateDeviceLine();
_formatter.runClassMethod (b4j.docU.b4xformatter.class, "_getdefaultformat" /*RemoteObject*/ ).setField ("MaximumFractions" /*RemoteObject*/ ,_maxfracciones);
 BA.debugLineNum = 8407;BA.debugLine="formatter.GetDefaultFormat.MinimumFractions = Min";
Debug.JustUpdateDeviceLine();
_formatter.runClassMethod (b4j.docU.b4xformatter.class, "_getdefaultformat" /*RemoteObject*/ ).setField ("MinimumFractions" /*RemoteObject*/ ,_minfracciones);
 BA.debugLineNum = 8408;BA.debugLine="formatter.GetDefaultFormat.DecimalPoint=\",\"";
Debug.JustUpdateDeviceLine();
_formatter.runClassMethod (b4j.docU.b4xformatter.class, "_getdefaultformat" /*RemoteObject*/ ).setField ("DecimalPoint" /*RemoteObject*/ ,BA.ObjectToString(","));
 BA.debugLineNum = 8409;BA.debugLine="If UsarAgrupacion Then formatter.GetDefaultFormat";
Debug.JustUpdateDeviceLine();
if (_usaragrupacion.<Boolean>get().booleanValue()) { 
_formatter.runClassMethod (b4j.docU.b4xformatter.class, "_getdefaultformat" /*RemoteObject*/ ).setField ("GroupingCharacter" /*RemoteObject*/ ,BA.ObjectToString("."));};
 BA.debugLineNum = 8410;BA.debugLine="Return formatter.Format(Numero)";
Debug.JustUpdateDeviceLine();
if (true) return _formatter.runClassMethod (b4j.docU.b4xformatter.class, "_format" /*RemoteObject*/ ,(Object)(_numero));
 BA.debugLineNum = 8411;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _formatonumerico3(RemoteObject __ref,RemoteObject _numero,RemoteObject _minintegers,RemoteObject _maxfracciones,RemoteObject _minfracciones,RemoteObject _usaragrupacion,RemoteObject _prefijo,RemoteObject _sufijo) throws Exception{
try {
		Debug.PushSubsStack("FormatoNumerico3 (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,8416);
if (RapidSub.canDelegate("formatonumerico3")) { return __ref.runUserSub(false, "jamtableclv","formatonumerico3", __ref, _numero, _minintegers, _maxfracciones, _minfracciones, _usaragrupacion, _prefijo, _sufijo);}
RemoteObject _formatter = RemoteObject.declareNull("b4j.docU.b4xformatter");
Debug.locals.put("Numero", _numero);
Debug.locals.put("MinIntegers", _minintegers);
Debug.locals.put("MaxFracciones", _maxfracciones);
Debug.locals.put("MinFracciones", _minfracciones);
Debug.locals.put("UsarAgrupacion", _usaragrupacion);
Debug.locals.put("Prefijo", _prefijo);
Debug.locals.put("Sufijo", _sufijo);
 BA.debugLineNum = 8416;BA.debugLine="Public Sub FormatoNumerico3(Numero As Double, MinI";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 8418;BA.debugLine="Dim formatter As B4XFormatter";
Debug.JustUpdateDeviceLine();
_formatter = RemoteObject.createNew ("b4j.docU.b4xformatter");Debug.locals.put("formatter", _formatter);
 BA.debugLineNum = 8419;BA.debugLine="formatter.Initialize";
Debug.JustUpdateDeviceLine();
_formatter.runClassMethod (b4j.docU.b4xformatter.class, "_initialize" /*RemoteObject*/ ,__ref.getField(false, "ba"));
 BA.debugLineNum = 8420;BA.debugLine="formatter.GetDefaultFormat.MinimumIntegers = MinI";
Debug.JustUpdateDeviceLine();
_formatter.runClassMethod (b4j.docU.b4xformatter.class, "_getdefaultformat" /*RemoteObject*/ ).setField ("MinimumIntegers" /*RemoteObject*/ ,_minintegers);
 BA.debugLineNum = 8421;BA.debugLine="formatter.GetDefaultFormat.MaximumFractions = Max";
Debug.JustUpdateDeviceLine();
_formatter.runClassMethod (b4j.docU.b4xformatter.class, "_getdefaultformat" /*RemoteObject*/ ).setField ("MaximumFractions" /*RemoteObject*/ ,_maxfracciones);
 BA.debugLineNum = 8422;BA.debugLine="formatter.GetDefaultFormat.MinimumFractions = Min";
Debug.JustUpdateDeviceLine();
_formatter.runClassMethod (b4j.docU.b4xformatter.class, "_getdefaultformat" /*RemoteObject*/ ).setField ("MinimumFractions" /*RemoteObject*/ ,_minfracciones);
 BA.debugLineNum = 8423;BA.debugLine="formatter.GetDefaultFormat.DecimalPoint=\",\"";
Debug.JustUpdateDeviceLine();
_formatter.runClassMethod (b4j.docU.b4xformatter.class, "_getdefaultformat" /*RemoteObject*/ ).setField ("DecimalPoint" /*RemoteObject*/ ,BA.ObjectToString(","));
 BA.debugLineNum = 8424;BA.debugLine="If UsarAgrupacion Then formatter.GetDefaultFormat";
Debug.JustUpdateDeviceLine();
if (_usaragrupacion.<Boolean>get().booleanValue()) { 
_formatter.runClassMethod (b4j.docU.b4xformatter.class, "_getdefaultformat" /*RemoteObject*/ ).setField ("GroupingCharacter" /*RemoteObject*/ ,BA.ObjectToString("."));};
 BA.debugLineNum = 8425;BA.debugLine="If Prefijo<>\"\" Then formatter.GetDefaultFormat.Pr";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("!",_prefijo,BA.ObjectToString(""))) { 
_formatter.runClassMethod (b4j.docU.b4xformatter.class, "_getdefaultformat" /*RemoteObject*/ ).setField ("Prefix" /*RemoteObject*/ ,_prefijo);};
 BA.debugLineNum = 8426;BA.debugLine="If Sufijo<>\"\" Then formatter.GetDefaultFormat.Pos";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("!",_sufijo,BA.ObjectToString(""))) { 
_formatter.runClassMethod (b4j.docU.b4xformatter.class, "_getdefaultformat" /*RemoteObject*/ ).setField ("Postfix" /*RemoteObject*/ ,_sufijo);};
 BA.debugLineNum = 8427;BA.debugLine="Return formatter.Format(Numero)";
Debug.JustUpdateDeviceLine();
if (true) return _formatter.runClassMethod (b4j.docU.b4xformatter.class, "_format" /*RemoteObject*/ ,(Object)(_numero));
 BA.debugLineNum = 8428;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _getalturaitems(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("getAlturaItems (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6909);
if (RapidSub.canDelegate("getalturaitems")) { return __ref.runUserSub(false, "jamtableclv","getalturaitems", __ref);}
 BA.debugLineNum = 6909;BA.debugLine="public Sub getAlturaItems As Int";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6910;BA.debugLine="Return mAlturaItems";
Debug.JustUpdateDeviceLine();
if (true) return __ref.getField(true,"_malturaitems" /*RemoteObject*/ );
 BA.debugLineNum = 6911;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(0);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _getalturapanelheaders(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("getAlturaPanelHeaders (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6937);
if (RapidSub.canDelegate("getalturapanelheaders")) { return __ref.runUserSub(false, "jamtableclv","getalturapanelheaders", __ref);}
 BA.debugLineNum = 6937;BA.debugLine="public Sub getAlturaPanelHeaders As Double";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6938;BA.debugLine="Return mAlturaPanelHeaders";
Debug.JustUpdateDeviceLine();
if (true) return BA.numberCast(double.class, __ref.getField(true,"_malturapanelheaders" /*RemoteObject*/ ));
 BA.debugLineNum = 6939;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(0);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _getalturaseparadorpaneles(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("getAlturaSeparadorPaneles (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6917);
if (RapidSub.canDelegate("getalturaseparadorpaneles")) { return __ref.runUserSub(false, "jamtableclv","getalturaseparadorpaneles", __ref);}
 BA.debugLineNum = 6917;BA.debugLine="public Sub getAlturaSeparadorPaneles As Float";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6918;BA.debugLine="Return mAlturaSeparadorPaneles";
Debug.JustUpdateDeviceLine();
if (true) return __ref.getField(true,"_malturaseparadorpaneles" /*RemoteObject*/ );
 BA.debugLineNum = 6919;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(0f);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _getclvdatos(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("getCLVDatos (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,686);
if (RapidSub.canDelegate("getclvdatos")) { return __ref.runUserSub(false, "jamtableclv","getclvdatos", __ref);}
 BA.debugLineNum = 686;BA.debugLine="Sub getCLVDatos As CustomListView";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 687;BA.debugLine="Return clvDatos";
Debug.JustUpdateDeviceLine();
if (true) return __ref.getField(false,"_clvdatos" /*RemoteObject*/ );
 BA.debugLineNum = 688;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _getcolorfondoactualpanelinfojamtableclv(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("GetColorFondoActualPanelInfoJamTableCLV (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,4526);
if (RapidSub.canDelegate("getcolorfondoactualpanelinfojamtableclv")) { return __ref.runUserSub(false, "jamtableclv","getcolorfondoactualpanelinfojamtableclv", __ref);}
RemoteObject _pi = RemoteObject.declareNull("anywheresoftware.b4a.objects.B4XViewWrapper");
 BA.debugLineNum = 4526;BA.debugLine="Public Sub GetColorFondoActualPanelInfoJamTableCLV";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 4527;BA.debugLine="Dim pI As B4XView=pnlInfoJamTableCLV";
Debug.JustUpdateDeviceLine();
_pi = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");
_pi = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper"), __ref.getField(false,"_pnlinfojamtableclv" /*RemoteObject*/ ).getObject());Debug.locals.put("pI", _pi);Debug.locals.put("pI", _pi);
 BA.debugLineNum = 4528;BA.debugLine="Return pI.Color";
Debug.JustUpdateDeviceLine();
if (true) return _pi.runMethod(true,"getColor");
 BA.debugLineNum = 4529;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(0);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _getcolorfondoinicialpanelinfojamtableclv(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("GetColorFondoInicialPanelInfoJamTableCLV (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,4537);
if (RapidSub.canDelegate("getcolorfondoinicialpanelinfojamtableclv")) { return __ref.runUserSub(false, "jamtableclv","getcolorfondoinicialpanelinfojamtableclv", __ref);}
 BA.debugLineNum = 4537;BA.debugLine="Public Sub GetColorFondoInicialPanelInfoJamTableCL";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 4538;BA.debugLine="Return ColorFondoPanelInfoInicial";
Debug.JustUpdateDeviceLine();
if (true) return __ref.getField(true,"_colorfondopanelinfoinicial" /*RemoteObject*/ );
 BA.debugLineNum = 4539;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(0);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _getcolorpanelpresionado(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("getColorPanelPresionado (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6964);
if (RapidSub.canDelegate("getcolorpanelpresionado")) { return __ref.runUserSub(false, "jamtableclv","getcolorpanelpresionado", __ref);}
 BA.debugLineNum = 6964;BA.debugLine="public Sub getColorPanelPresionado As Int";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6965;BA.debugLine="Return mPressedPanelColor";
Debug.JustUpdateDeviceLine();
if (true) return __ref.getField(true,"_mpressedpanelcolor" /*RemoteObject*/ );
 BA.debugLineNum = 6966;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(0);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _getcolorpanelseleccionado(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("getColorPanelSeleccionado (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6976);
if (RapidSub.canDelegate("getcolorpanelseleccionado")) { return __ref.runUserSub(false, "jamtableclv","getcolorpanelseleccionado", __ref);}
 BA.debugLineNum = 6976;BA.debugLine="public Sub getColorPanelSeleccionado As Int";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6977;BA.debugLine="Return mSelectedPanelColor";
Debug.JustUpdateDeviceLine();
if (true) return __ref.getField(true,"_mselectedpanelcolor" /*RemoteObject*/ );
 BA.debugLineNum = 6978;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(0);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _getcolortextoactualpanelinfojamtableclv(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("GetColorTextoActualPanelInfoJamTableCLV (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,4532);
if (RapidSub.canDelegate("getcolortextoactualpanelinfojamtableclv")) { return __ref.runUserSub(false, "jamtableclv","getcolortextoactualpanelinfojamtableclv", __ref);}
 BA.debugLineNum = 4532;BA.debugLine="Public Sub GetColorTextoActualPanelInfoJamTableCLV";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 4533;BA.debugLine="Return lblInfoJamTableCLV.Color";
Debug.JustUpdateDeviceLine();
if (true) return __ref.getField(false,"_lblinfojamtableclv" /*RemoteObject*/ ).runMethod(true,"getColor");
 BA.debugLineNum = 4534;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(0);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _getcolortextoinicialpanelinfojamtableclv(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("GetColorTextoInicialPanelInfoJamTableCLV (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,4542);
if (RapidSub.canDelegate("getcolortextoinicialpanelinfojamtableclv")) { return __ref.runUserSub(false, "jamtableclv","getcolortextoinicialpanelinfojamtableclv", __ref);}
 BA.debugLineNum = 4542;BA.debugLine="Public Sub GetColorTextoInicialPanelInfoJamTableCL";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 4543;BA.debugLine="Return ColorTextoPanelInfoInicial";
Debug.JustUpdateDeviceLine();
if (true) return __ref.getField(true,"_colortextopanelinfoinicial" /*RemoteObject*/ );
 BA.debugLineNum = 4544;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(0);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _getcurrentscreenwindowsscale(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("GetCurrentScreenWindowsScale (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,8504);
if (RapidSub.canDelegate("getcurrentscreenwindowsscale")) { return __ref.runUserSub(false, "jamtableclv","getcurrentscreenwindowsscale", __ref);}
RemoteObject _currscr = RemoteObject.createImmutable(0);
RemoteObject _joscreen = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
RemoteObject _dpi = RemoteObject.createImmutable(0);
 BA.debugLineNum = 8504;BA.debugLine="Public Sub GetCurrentScreenWindowsScale As Double";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 8505;BA.debugLine="Dim CurrScr As Int=CurrentScreeniDx";
Debug.JustUpdateDeviceLine();
_currscr = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_currentscreenidx" /*RemoteObject*/ );Debug.locals.put("CurrScr", _currscr);Debug.locals.put("CurrScr", _currscr);
 BA.debugLineNum = 8506;BA.debugLine="Dim JOScreen As JavaObject=fx.Screens.get(CurrScr";
Debug.JustUpdateDeviceLine();
_joscreen = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");
_joscreen = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), __ref.getField(false,"_fx" /*RemoteObject*/ ).runMethod(false,"getScreens").runMethod(false,"Get",(Object)(_currscr)));Debug.locals.put("JOScreen", _joscreen);Debug.locals.put("JOScreen", _joscreen);
 BA.debugLineNum = 8507;BA.debugLine="Dim dpi As Double=JOScreen.RunMethod(\"getDpi\",Nul";
Debug.JustUpdateDeviceLine();
_dpi = BA.numberCast(double.class, _joscreen.runMethod(false,"RunMethod",(Object)(BA.ObjectToString("getDpi")),(Object)((jamtableclv.__c.getField(false,"Null")))));Debug.locals.put("dpi", _dpi);Debug.locals.put("dpi", _dpi);
 BA.debugLineNum = 8508;BA.debugLine="Return dpi";
Debug.JustUpdateDeviceLine();
if (true) return _dpi;
 BA.debugLineNum = 8509;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(0);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _getdatoscampoorigendatosjamtableclvaliascampo(RemoteObject __ref,RemoteObject _aliascamposel) throws Exception{
try {
		Debug.PushSubsStack("GetDatosCampoOrigenDatosJamTableCLVAliasCampo (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7970);
if (RapidSub.canDelegate("getdatoscampoorigendatosjamtableclvaliascampo")) { return __ref.runUserSub(false, "jamtableclv","getdatoscampoorigendatosjamtableclvaliascampo", __ref, _aliascamposel);}
RemoteObject _flagok = RemoteObject.createImmutable(false);
RemoteObject _c = RemoteObject.declareNull("b4j.docU.jamtableclv._campoorigendatosjamtableclv");
Debug.locals.put("AliasCampoSel", _aliascamposel);
 BA.debugLineNum = 7970;BA.debugLine="Public Sub GetDatosCampoOrigenDatosJamTableCLVAlia";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 7971;BA.debugLine="Dim FlagOk As Boolean=False";
Debug.JustUpdateDeviceLine();
_flagok = jamtableclv.__c.getField(true,"False");Debug.locals.put("FlagOk", _flagok);Debug.locals.put("FlagOk", _flagok);
 BA.debugLineNum = 7972;BA.debugLine="For Each c As CampoOrigenDatosJamTableCLV In mLst";
Debug.JustUpdateDeviceLine();
{
final RemoteObject group2 = __ref.getField(false,"_mlstcamposorigendatos" /*RemoteObject*/ );
final int groupLen2 = group2.runMethod(true,"getSize").<Integer>get()
;int index2 = 0;
;
for (; index2 < groupLen2;index2++){
_c = (group2.runMethod(false,"Get",index2));Debug.locals.put("c", _c);
Debug.locals.put("c", _c);
 BA.debugLineNum = 7974;BA.debugLine="Log(\"AliasCampo en GetDatosCampoOrigenDatosJamTa";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("LogImpl","9173867012",RemoteObject.concat(RemoteObject.createImmutable("AliasCampo en GetDatosCampoOrigenDatosJamTableCLVAliasCampo: "),_c.getField(true,"AliasCampo" /*RemoteObject*/ ),RemoteObject.createImmutable(" buscado: "),_aliascamposel),0);
 BA.debugLineNum = 7976;BA.debugLine="If c.AliasCampo=AliasCampoSel Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_c.getField(true,"AliasCampo" /*RemoteObject*/ ),_aliascamposel)) { 
 BA.debugLineNum = 7977;BA.debugLine="FlagOk=True";
Debug.JustUpdateDeviceLine();
_flagok = jamtableclv.__c.getField(true,"True");Debug.locals.put("FlagOk", _flagok);
 BA.debugLineNum = 7978;BA.debugLine="Exit";
Debug.JustUpdateDeviceLine();
if (true) break;
 };
 }
}Debug.locals.put("c", _c);
;
 BA.debugLineNum = 7981;BA.debugLine="If FlagOk Then";
Debug.JustUpdateDeviceLine();
if (_flagok.<Boolean>get().booleanValue()) { 
 BA.debugLineNum = 7982;BA.debugLine="Return c";
Debug.JustUpdateDeviceLine();
if (true) return _c;
 }else {
 BA.debugLineNum = 7984;BA.debugLine="Return Null";
Debug.JustUpdateDeviceLine();
if (true) return (jamtableclv.__c.getField(false,"Null"));
 };
 BA.debugLineNum = 7986;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _getdatositemnodo(RemoteObject __ref,RemoteObject _xnode) throws Exception{
try {
		Debug.PushSubsStack("GetDatosItemNodo (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7965);
if (RapidSub.canDelegate("getdatositemnodo")) { return __ref.runUserSub(false, "jamtableclv","getdatositemnodo", __ref, _xnode);}
RemoteObject _mdataitem = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
Debug.locals.put("xNode", _xnode);
 BA.debugLineNum = 7965;BA.debugLine="Public Sub GetDatosItemNodo(xNode As B4XView) As M";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 7966;BA.debugLine="Dim mDataItem As Map=clvDatos.GetValue(clvDatos.G";
Debug.JustUpdateDeviceLine();
_mdataitem = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");
_mdataitem = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.collections.Map"), __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(false,"_getvalue",(Object)(__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"_getitemfromview",(Object)(_xnode)))));Debug.locals.put("mDataItem", _mdataitem);Debug.locals.put("mDataItem", _mdataitem);
 BA.debugLineNum = 7967;BA.debugLine="Return mDataItem";
Debug.JustUpdateDeviceLine();
if (true) return _mdataitem;
 BA.debugLineNum = 7968;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _getdatositemsseleccionados(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("GetDatosItemsSeleccionados (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7996);
if (RapidSub.canDelegate("getdatositemsseleccionados")) { return __ref.runUserSub(false, "jamtableclv","getdatositemsseleccionados", __ref);}
RemoteObject _lstdatositemsseleccionados = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.List");
int _indexsel = 0;
RemoteObject _datositemsel = RemoteObject.declareNull("b4j.docU.jamtableclv._datositemseleccionadojamtableclv");
 BA.debugLineNum = 7996;BA.debugLine="public Sub GetDatosItemsSeleccionados As List";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 7997;BA.debugLine="Dim lstDatosItemsSeleccionados As List";
Debug.JustUpdateDeviceLine();
_lstdatositemsseleccionados = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");Debug.locals.put("lstDatosItemsSeleccionados", _lstdatositemsseleccionados);
 BA.debugLineNum = 7998;BA.debugLine="lstDatosItemsSeleccionados.Initialize";
Debug.JustUpdateDeviceLine();
_lstdatositemsseleccionados.runVoidMethod ("Initialize");
 BA.debugLineNum = 7999;BA.debugLine="For IndexSel=0 To CLVSelections.SelectedItems.Siz";
Debug.JustUpdateDeviceLine();
{
final int step3 = 1;
final int limit3 = RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvselections" /*RemoteObject*/ ).getField(false,"_selecteditems" /*RemoteObject*/ ).runClassMethod (b4j.docU.b4xset.class, "_getsize" /*RemoteObject*/ ),RemoteObject.createImmutable(1)}, "-",1, 1).<Integer>get().intValue();
_indexsel = 0 ;
for (;(step3 > 0 && _indexsel <= limit3) || (step3 < 0 && _indexsel >= limit3) ;_indexsel = ((int)(0 + _indexsel + step3))  ) {
Debug.locals.put("IndexSel", _indexsel);
 BA.debugLineNum = 8000;BA.debugLine="Dim DatosItemSel As DatosItemSeleccionadoJamTabl";
Debug.JustUpdateDeviceLine();
_datositemsel = RemoteObject.createNew ("b4j.docU.jamtableclv._datositemseleccionadojamtableclv");Debug.locals.put("DatosItemSel", _datositemsel);
 BA.debugLineNum = 8001;BA.debugLine="DatosItemSel.Initialize";
Debug.JustUpdateDeviceLine();
_datositemsel.runVoidMethod ("Initialize");
 BA.debugLineNum = 8002;BA.debugLine="DatosItemSel.IndiceItem=CLVSelections.SelectedIt";
Debug.JustUpdateDeviceLine();
_datositemsel.setField ("IndiceItem" /*RemoteObject*/ ,BA.numberCast(int.class, __ref.getField(false,"_clvselections" /*RemoteObject*/ ).getField(false,"_selecteditems" /*RemoteObject*/ ).runClassMethod (b4j.docU.b4xset.class, "_aslist" /*RemoteObject*/ ).runMethod(false,"Get",(Object)(BA.numberCast(int.class, _indexsel)))));
 BA.debugLineNum = 8003;BA.debugLine="DatosItemSel.mDataItem=clvDatos.GetValue(IndexSe";
Debug.JustUpdateDeviceLine();
_datositemsel.getField(false,"mDataItem" /*RemoteObject*/ ).setObject (__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(false,"_getvalue",(Object)(BA.numberCast(int.class, _indexsel))));
 BA.debugLineNum = 8004;BA.debugLine="lstDatosItemsSeleccionados.Add(DatosItemSel)";
Debug.JustUpdateDeviceLine();
_lstdatositemsseleccionados.runVoidMethod ("Add",(Object)((_datositemsel)));
 }
}Debug.locals.put("IndexSel", _indexsel);
;
 BA.debugLineNum = 8006;BA.debugLine="Return lstDatosItemsSeleccionados";
Debug.JustUpdateDeviceLine();
if (true) return _lstdatositemsseleccionados;
 BA.debugLineNum = 8007;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _getdecimalseparator(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("GetDecimalSeparator (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,8371);
if (RapidSub.canDelegate("getdecimalseparator")) { return __ref.runUserSub(false, "jamtableclv","getdecimalseparator", __ref);}
RemoteObject _nm = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
 BA.debugLineNum = 8371;BA.debugLine="Sub GetDecimalSeparator As String";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 8372;BA.debugLine="Dim nm As JavaObject";
Debug.JustUpdateDeviceLine();
_nm = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");Debug.locals.put("nm", _nm);
 BA.debugLineNum = 8373;BA.debugLine="Return nm.InitializeStatic(\"java.text.DecimalForm";
Debug.JustUpdateDeviceLine();
if (true) return BA.ObjectToString(_nm.runMethod(false,"InitializeStatic",(Object)(RemoteObject.createImmutable("java.text.DecimalFormatSymbols"))).runMethod(false,"RunMethodJO",(Object)(BA.ObjectToString("getInstance")),(Object)((jamtableclv.__c.getField(false,"Null")))).runMethod(false,"RunMethod",(Object)(BA.ObjectToString("getDecimalSeparator")),(Object)((jamtableclv.__c.getField(false,"Null")))));
 BA.debugLineNum = 8374;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _getfirstvisibleindex(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("getFirstVisibleIndex (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6901);
if (RapidSub.canDelegate("getfirstvisibleindex")) { return __ref.runUserSub(false, "jamtableclv","getfirstvisibleindex", __ref);}
 BA.debugLineNum = 6901;BA.debugLine="public Sub getFirstVisibleIndex As Int";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6902;BA.debugLine="Return clvDatos.FirstVisibleIndex";
Debug.JustUpdateDeviceLine();
if (true) return __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"_getfirstvisibleindex");
 BA.debugLineNum = 6903;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(0);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _getgroupingseparator(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("GetGroupingSeparator (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,8365);
if (RapidSub.canDelegate("getgroupingseparator")) { return __ref.runUserSub(false, "jamtableclv","getgroupingseparator", __ref);}
RemoteObject _nm = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
 BA.debugLineNum = 8365;BA.debugLine="Sub GetGroupingSeparator As String";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 8366;BA.debugLine="Dim nm As JavaObject";
Debug.JustUpdateDeviceLine();
_nm = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");Debug.locals.put("nm", _nm);
 BA.debugLineNum = 8367;BA.debugLine="Return nm.InitializeStatic(\"java.text.DecimalForm";
Debug.JustUpdateDeviceLine();
if (true) return BA.ObjectToString(_nm.runMethod(false,"InitializeStatic",(Object)(RemoteObject.createImmutable("java.text.DecimalFormatSymbols"))).runMethod(false,"RunMethodJO",(Object)(BA.ObjectToString("getInstance")),(Object)((jamtableclv.__c.getField(false,"Null")))).runMethod(false,"RunMethod",(Object)(BA.ObjectToString("getGroupingSeparator")),(Object)((jamtableclv.__c.getField(false,"Null")))));
 BA.debugLineNum = 8368;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _getindiceitemporvaluemappk(RemoteObject __ref,RemoteObject _mdatapk) throws Exception{
try {
		Debug.PushSubsStack("GetIndiceItemPorValueMapPK (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7063);
if (RapidSub.canDelegate("getindiceitemporvaluemappk")) { return __ref.runUserSub(false, "jamtableclv","getindiceitemporvaluemappk", __ref, _mdatapk);}
RemoteObject _lstaliascampospkfaltantes = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.List");
RemoteObject _sbaliascampospkfaltantes = RemoteObject.declareNull("anywheresoftware.b4a.keywords.StringBuilderWrapper");
RemoteObject _pkf = RemoteObject.declareNull("b4j.docU.jamtableclv._campoprimarykeyjamtableclv");
RemoteObject _lstaliascampospksobrantes = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.List");
RemoteObject _sbaliascampospksobrantes = RemoteObject.declareNull("anywheresoftware.b4a.keywords.StringBuilderWrapper");
RemoteObject _lstvalores = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.List");
RemoteObject _sbsql = RemoteObject.declareNull("anywheresoftware.b4a.keywords.StringBuilderWrapper");
RemoteObject _sbsqlcount = RemoteObject.declareNull("anywheresoftware.b4a.keywords.StringBuilderWrapper");
RemoteObject _k = RemoteObject.createImmutable("");
RemoteObject _flagok = RemoteObject.createImmutable(false);
RemoteObject _nregmpk = RemoteObject.createImmutable(0);
RemoteObject _idxrowid = RemoteObject.createImmutable(0);
RemoteObject _idxitemtarget = RemoteObject.createImmutable(0);
int _idxclv = 0;
RemoteObject _mdata = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
RemoteObject _rowiditemclv = RemoteObject.createImmutable(0);
Debug.locals.put("mDataPK", _mdatapk);
 BA.debugLineNum = 7063;BA.debugLine="Public Sub GetIndiceItemPorValueMapPK(mDataPK As M";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 7064;BA.debugLine="If mPaginacion Then";
Debug.JustUpdateDeviceLine();
if (__ref.getField(true,"_mpaginacion" /*RemoteObject*/ ).<Boolean>get().booleanValue()) { 
 BA.debugLineNum = 7065;BA.debugLine="fx.Msgbox(mParentForm,\"El método GetIndiceItemPo";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_fx" /*RemoteObject*/ ).runVoidMethodAndSync ("Msgbox",(Object)(__ref.getField(false,"_mparentform" /*RemoteObject*/ )),(Object)(BA.ObjectToString("El método GetIndiceItemPorValueMapPK sólo está disponible cuando no hay paginación.")),(Object)(RemoteObject.createImmutable("Error de programación")));
 BA.debugLineNum = 7066;BA.debugLine="ExitApplication2(-404)";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("ExitApplication2",(Object)(BA.numberCast(int.class, -(double) (0 + 404))));
 BA.debugLineNum = 7067;BA.debugLine="Return -404";
Debug.JustUpdateDeviceLine();
if (true) return BA.numberCast(int.class, -(double) (0 + 404));
 };
 BA.debugLineNum = 7069;BA.debugLine="If mlstCamposPrimaryKey.Size=0 Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",__ref.getField(false,"_mlstcamposprimarykey" /*RemoteObject*/ ).runMethod(true,"getSize"),BA.numberCast(double.class, 0))) { 
 BA.debugLineNum = 7070;BA.debugLine="fx.Msgbox(mParentForm,\"El método GetIndiceItemPo";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_fx" /*RemoteObject*/ ).runVoidMethodAndSync ("Msgbox",(Object)(__ref.getField(false,"_mparentform" /*RemoteObject*/ )),(Object)(BA.ObjectToString("El método GetIndiceItemPorValueMapPK sólo está disponible cuando hay campos Primary Key para los registros.")),(Object)(RemoteObject.createImmutable("Error de programación")));
 BA.debugLineNum = 7071;BA.debugLine="ExitApplication2(-404)";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("ExitApplication2",(Object)(BA.numberCast(int.class, -(double) (0 + 404))));
 BA.debugLineNum = 7072;BA.debugLine="Return -404";
Debug.JustUpdateDeviceLine();
if (true) return BA.numberCast(int.class, -(double) (0 + 404));
 };
 BA.debugLineNum = 7074;BA.debugLine="Dim lstAliasCamposPKFaltantes As List";
Debug.JustUpdateDeviceLine();
_lstaliascampospkfaltantes = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");Debug.locals.put("lstAliasCamposPKFaltantes", _lstaliascampospkfaltantes);
 BA.debugLineNum = 7075;BA.debugLine="lstAliasCamposPKFaltantes.Initialize";
Debug.JustUpdateDeviceLine();
_lstaliascampospkfaltantes.runVoidMethod ("Initialize");
 BA.debugLineNum = 7076;BA.debugLine="Dim sbAliasCamposPKFaltantes As StringBuilder";
Debug.JustUpdateDeviceLine();
_sbaliascampospkfaltantes = RemoteObject.createNew ("anywheresoftware.b4a.keywords.StringBuilderWrapper");Debug.locals.put("sbAliasCamposPKFaltantes", _sbaliascampospkfaltantes);
 BA.debugLineNum = 7077;BA.debugLine="sbAliasCamposPKFaltantes.Initialize";
Debug.JustUpdateDeviceLine();
_sbaliascampospkfaltantes.runVoidMethod ("Initialize");
 BA.debugLineNum = 7078;BA.debugLine="For Each PKF As CampoPrimaryKeyJamTableCLV In mls";
Debug.JustUpdateDeviceLine();
{
final RemoteObject group15 = __ref.getField(false,"_mlstcamposprimarykey" /*RemoteObject*/ );
final int groupLen15 = group15.runMethod(true,"getSize").<Integer>get()
;int index15 = 0;
;
for (; index15 < groupLen15;index15++){
_pkf = (group15.runMethod(false,"Get",index15));Debug.locals.put("PKF", _pkf);
Debug.locals.put("PKF", _pkf);
 BA.debugLineNum = 7079;BA.debugLine="If mDataPK.ContainsKey(PKF.AliasCampo)=False The";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_mdatapk.runMethod(true,"ContainsKey",(Object)((_pkf.getField(true,"AliasCampo" /*RemoteObject*/ )))),jamtableclv.__c.getField(true,"False"))) { 
 BA.debugLineNum = 7080;BA.debugLine="lstAliasCamposPKFaltantes.Add(PKF.AliasCampo)";
Debug.JustUpdateDeviceLine();
_lstaliascampospkfaltantes.runVoidMethod ("Add",(Object)((_pkf.getField(true,"AliasCampo" /*RemoteObject*/ ))));
 BA.debugLineNum = 7081;BA.debugLine="sbAliasCamposPKFaltantes.Append(PKF.AliasCampo)";
Debug.JustUpdateDeviceLine();
_sbaliascampospkfaltantes.runMethod(false,"Append",(Object)(_pkf.getField(true,"AliasCampo" /*RemoteObject*/ ))).runVoidMethod ("Append",(Object)(jamtableclv.__c.getField(true,"CRLF")));
 };
 }
}Debug.locals.put("PKF", _pkf);
;
 BA.debugLineNum = 7084;BA.debugLine="If lstAliasCamposPKFaltantes.Size>0 Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean(">",_lstaliascampospkfaltantes.runMethod(true,"getSize"),BA.numberCast(double.class, 0))) { 
 BA.debugLineNum = 7085;BA.debugLine="fx.Msgbox(mParentForm, \"Faltan los siguientes ca";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_fx" /*RemoteObject*/ ).runVoidMethodAndSync ("Msgbox",(Object)(__ref.getField(false,"_mparentform" /*RemoteObject*/ )),(Object)(RemoteObject.concat(RemoteObject.createImmutable("Faltan los siguientes campos Primary Key en el mapa parámetro del método GetIndiceItemPorValueMapPK: "),jamtableclv.__c.getField(true,"CRLF"),jamtableclv.__c.getField(true,"CRLF"),_sbaliascampospkfaltantes.runMethod(true,"ToString"))),(Object)(RemoteObject.createImmutable("Error de programación")));
 BA.debugLineNum = 7086;BA.debugLine="ExitApplication2(-404)";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("ExitApplication2",(Object)(BA.numberCast(int.class, -(double) (0 + 404))));
 BA.debugLineNum = 7087;BA.debugLine="Return -404";
Debug.JustUpdateDeviceLine();
if (true) return BA.numberCast(int.class, -(double) (0 + 404));
 };
 BA.debugLineNum = 7090;BA.debugLine="Dim lstAliasCamposPKSobrantes As List";
Debug.JustUpdateDeviceLine();
_lstaliascampospksobrantes = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");Debug.locals.put("lstAliasCamposPKSobrantes", _lstaliascampospksobrantes);
 BA.debugLineNum = 7091;BA.debugLine="lstAliasCamposPKSobrantes.Initialize";
Debug.JustUpdateDeviceLine();
_lstaliascampospksobrantes.runVoidMethod ("Initialize");
 BA.debugLineNum = 7092;BA.debugLine="Dim sbAliasCamposPKSobrantes As StringBuilder";
Debug.JustUpdateDeviceLine();
_sbaliascampospksobrantes = RemoteObject.createNew ("anywheresoftware.b4a.keywords.StringBuilderWrapper");Debug.locals.put("sbAliasCamposPKSobrantes", _sbaliascampospksobrantes);
 BA.debugLineNum = 7093;BA.debugLine="sbAliasCamposPKSobrantes.Initialize";
Debug.JustUpdateDeviceLine();
_sbaliascampospksobrantes.runVoidMethod ("Initialize");
 BA.debugLineNum = 7094;BA.debugLine="Dim lstValores As List";
Debug.JustUpdateDeviceLine();
_lstvalores = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");Debug.locals.put("lstValores", _lstvalores);
 BA.debugLineNum = 7095;BA.debugLine="lstValores.Initialize";
Debug.JustUpdateDeviceLine();
_lstvalores.runVoidMethod ("Initialize");
 BA.debugLineNum = 7096;BA.debugLine="Dim sbSQL As StringBuilder";
Debug.JustUpdateDeviceLine();
_sbsql = RemoteObject.createNew ("anywheresoftware.b4a.keywords.StringBuilderWrapper");Debug.locals.put("sbSQL", _sbsql);
 BA.debugLineNum = 7097;BA.debugLine="sbSQL.Initialize";
Debug.JustUpdateDeviceLine();
_sbsql.runVoidMethod ("Initialize");
 BA.debugLineNum = 7099;BA.debugLine="sbSQL.Append(\"Select rowid from tblOrigenDatos wh";
Debug.JustUpdateDeviceLine();
_sbsql.runVoidMethod ("Append",(Object)(RemoteObject.createImmutable("Select rowid from tblOrigenDatos where ")));
 BA.debugLineNum = 7100;BA.debugLine="Dim sbSQLCount As StringBuilder";
Debug.JustUpdateDeviceLine();
_sbsqlcount = RemoteObject.createNew ("anywheresoftware.b4a.keywords.StringBuilderWrapper");Debug.locals.put("sbSQLCount", _sbsqlcount);
 BA.debugLineNum = 7101;BA.debugLine="sbSQLCount.Initialize";
Debug.JustUpdateDeviceLine();
_sbsqlcount.runVoidMethod ("Initialize");
 BA.debugLineNum = 7102;BA.debugLine="sbSQLCount.Append(\"Select count(rowid) from tblOr";
Debug.JustUpdateDeviceLine();
_sbsqlcount.runVoidMethod ("Append",(Object)(RemoteObject.createImmutable("Select count(rowid) from tblOrigenDatos where ")));
 BA.debugLineNum = 7103;BA.debugLine="For Each k As String In mDataPK.Keys";
Debug.JustUpdateDeviceLine();
{
final RemoteObject group38 = _mdatapk.runMethod(false,"Keys");
final int groupLen38 = group38.runMethod(true,"getSize").<Integer>get()
;int index38 = 0;
;
for (; index38 < groupLen38;index38++){
_k = BA.ObjectToString(group38.runMethod(false,"Get",index38));Debug.locals.put("k", _k);
Debug.locals.put("k", _k);
 BA.debugLineNum = 7104;BA.debugLine="Dim FlagOK As Boolean=False";
Debug.JustUpdateDeviceLine();
_flagok = jamtableclv.__c.getField(true,"False");Debug.locals.put("FlagOK", _flagok);Debug.locals.put("FlagOK", _flagok);
 BA.debugLineNum = 7105;BA.debugLine="For Each PKF As CampoPrimaryKeyJamTableCLV In ml";
Debug.JustUpdateDeviceLine();
{
final RemoteObject group40 = __ref.getField(false,"_mlstcamposprimarykey" /*RemoteObject*/ );
final int groupLen40 = group40.runMethod(true,"getSize").<Integer>get()
;int index40 = 0;
;
for (; index40 < groupLen40;index40++){
_pkf = (group40.runMethod(false,"Get",index40));Debug.locals.put("PKF", _pkf);
Debug.locals.put("PKF", _pkf);
 BA.debugLineNum = 7106;BA.debugLine="If PKF.AliasCampo=k Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_pkf.getField(true,"AliasCampo" /*RemoteObject*/ ),_k)) { 
 BA.debugLineNum = 7107;BA.debugLine="FlagOK=True";
Debug.JustUpdateDeviceLine();
_flagok = jamtableclv.__c.getField(true,"True");Debug.locals.put("FlagOK", _flagok);
 BA.debugLineNum = 7108;BA.debugLine="sbSQL.Append(\"[\").Append(k).Append(\"]=? and \")";
Debug.JustUpdateDeviceLine();
_sbsql.runMethod(false,"Append",(Object)(RemoteObject.createImmutable("["))).runMethod(false,"Append",(Object)(_k)).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable("]=? and ")));
 BA.debugLineNum = 7109;BA.debugLine="sbSQLCount.Append(\"[\").Append(k).Append(\"]=? a";
Debug.JustUpdateDeviceLine();
_sbsqlcount.runMethod(false,"Append",(Object)(RemoteObject.createImmutable("["))).runMethod(false,"Append",(Object)(_k)).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable("]=? and ")));
 BA.debugLineNum = 7110;BA.debugLine="lstValores.Add(mDataPK.Get(k))";
Debug.JustUpdateDeviceLine();
_lstvalores.runVoidMethod ("Add",(Object)(_mdatapk.runMethod(false,"Get",(Object)((_k)))));
 BA.debugLineNum = 7111;BA.debugLine="Exit";
Debug.JustUpdateDeviceLine();
if (true) break;
 };
 }
}Debug.locals.put("PKF", _pkf);
;
 BA.debugLineNum = 7114;BA.debugLine="If FlagOK=False Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_flagok,jamtableclv.__c.getField(true,"False"))) { 
 BA.debugLineNum = 7115;BA.debugLine="lstAliasCamposPKSobrantes.Add(k)";
Debug.JustUpdateDeviceLine();
_lstaliascampospksobrantes.runVoidMethod ("Add",(Object)((_k)));
 BA.debugLineNum = 7116;BA.debugLine="sbAliasCamposPKSobrantes.Append(k).Append(CRLF)";
Debug.JustUpdateDeviceLine();
_sbaliascampospksobrantes.runMethod(false,"Append",(Object)(_k)).runVoidMethod ("Append",(Object)(jamtableclv.__c.getField(true,"CRLF")));
 };
 }
}Debug.locals.put("k", _k);
;
 BA.debugLineNum = 7119;BA.debugLine="If lstAliasCamposPKSobrantes.Size>0 Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean(">",_lstaliascampospksobrantes.runMethod(true,"getSize"),BA.numberCast(double.class, 0))) { 
 BA.debugLineNum = 7120;BA.debugLine="fx.Msgbox(mParentForm, \"Sobran los siguientes ca";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_fx" /*RemoteObject*/ ).runVoidMethodAndSync ("Msgbox",(Object)(__ref.getField(false,"_mparentform" /*RemoteObject*/ )),(Object)(RemoteObject.concat(RemoteObject.createImmutable("Sobran los siguientes campos en el mapa parámetro del método GetIndiceItemPorValueMapPK: "),jamtableclv.__c.getField(true,"CRLF"),jamtableclv.__c.getField(true,"CRLF"),_sbaliascampospksobrantes.runMethod(true,"ToString"))),(Object)(RemoteObject.createImmutable("Error de programación")));
 BA.debugLineNum = 7121;BA.debugLine="ExitApplication2(-404)";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("ExitApplication2",(Object)(BA.numberCast(int.class, -(double) (0 + 404))));
 BA.debugLineNum = 7122;BA.debugLine="Return -404";
Debug.JustUpdateDeviceLine();
if (true) return BA.numberCast(int.class, -(double) (0 + 404));
 };
 BA.debugLineNum = 7124;BA.debugLine="sbSQL.Remove(sbSQL.Length-5,sbSQL.Length)";
Debug.JustUpdateDeviceLine();
_sbsql.runVoidMethod ("Remove",(Object)(RemoteObject.solve(new RemoteObject[] {_sbsql.runMethod(true,"getLength"),RemoteObject.createImmutable(5)}, "-",1, 1)),(Object)(_sbsql.runMethod(true,"getLength")));
 BA.debugLineNum = 7125;BA.debugLine="sbSQLCount.Remove(sbSQLCount.Length-5,sbSQLCount.";
Debug.JustUpdateDeviceLine();
_sbsqlcount.runVoidMethod ("Remove",(Object)(RemoteObject.solve(new RemoteObject[] {_sbsqlcount.runMethod(true,"getLength"),RemoteObject.createImmutable(5)}, "-",1, 1)),(Object)(_sbsqlcount.runMethod(true,"getLength")));
 BA.debugLineNum = 7127;BA.debugLine="For Each PKF As CampoPrimaryKeyJamTableCLV In mls";
Debug.JustUpdateDeviceLine();
{
final RemoteObject group61 = __ref.getField(false,"_mlstcamposprimarykey" /*RemoteObject*/ );
final int groupLen61 = group61.runMethod(true,"getSize").<Integer>get()
;int index61 = 0;
;
for (; index61 < groupLen61;index61++){
_pkf = (group61.runMethod(false,"Get",index61));Debug.locals.put("PKF", _pkf);
Debug.locals.put("PKF", _pkf);
 BA.debugLineNum = 7128;BA.debugLine="If mDataPK.ContainsKey(PKF.AliasCampo)=False The";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_mdatapk.runMethod(true,"ContainsKey",(Object)((_pkf.getField(true,"AliasCampo" /*RemoteObject*/ )))),jamtableclv.__c.getField(true,"False"))) { 
 BA.debugLineNum = 7129;BA.debugLine="lstAliasCamposPKFaltantes.Add(PKF.AliasCampo)";
Debug.JustUpdateDeviceLine();
_lstaliascampospkfaltantes.runVoidMethod ("Add",(Object)((_pkf.getField(true,"AliasCampo" /*RemoteObject*/ ))));
 BA.debugLineNum = 7130;BA.debugLine="sbAliasCamposPKFaltantes.Append(PKF.AliasCampo)";
Debug.JustUpdateDeviceLine();
_sbaliascampospkfaltantes.runMethod(false,"Append",(Object)(_pkf.getField(true,"AliasCampo" /*RemoteObject*/ ))).runVoidMethod ("Append",(Object)(jamtableclv.__c.getField(true,"CRLF")));
 };
 }
}Debug.locals.put("PKF", _pkf);
;
 BA.debugLineNum = 7133;BA.debugLine="If lstAliasCamposPKFaltantes.Size>0 Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean(">",_lstaliascampospkfaltantes.runMethod(true,"getSize"),BA.numberCast(double.class, 0))) { 
 BA.debugLineNum = 7134;BA.debugLine="fx.Msgbox(mParentForm, \"Faltan los siguientes ca";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_fx" /*RemoteObject*/ ).runVoidMethodAndSync ("Msgbox",(Object)(__ref.getField(false,"_mparentform" /*RemoteObject*/ )),(Object)(RemoteObject.concat(RemoteObject.createImmutable("Faltan los siguientes campos Primary Key en el mapa parámetro del método GetIndiceItemPorValueMapPK: "),jamtableclv.__c.getField(true,"CRLF"),jamtableclv.__c.getField(true,"CRLF"),_sbaliascampospkfaltantes.runMethod(true,"ToString"))),(Object)(RemoteObject.createImmutable("Error de programación")));
 BA.debugLineNum = 7135;BA.debugLine="ExitApplication2(-404)";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("ExitApplication2",(Object)(BA.numberCast(int.class, -(double) (0 + 404))));
 BA.debugLineNum = 7136;BA.debugLine="Return -404";
Debug.JustUpdateDeviceLine();
if (true) return BA.numberCast(int.class, -(double) (0 + 404));
 };
 BA.debugLineNum = 7139;BA.debugLine="Dim NRegMPK As Int=FixNullInt(mSQL.ExecQuerySingl";
Debug.JustUpdateDeviceLine();
_nregmpk = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_fixnullint" /*RemoteObject*/ ,(Object)((__ref.getField(false,"_msql" /*RemoteObject*/ ).runMethod(true,"ExecQuerySingleResult2",(Object)(BA.ObjectToString(_sbsqlcount)),(Object)(_lstvalores)))));Debug.locals.put("NRegMPK", _nregmpk);Debug.locals.put("NRegMPK", _nregmpk);
 BA.debugLineNum = 7140;BA.debugLine="If NRegMPK>1 Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean(">",_nregmpk,BA.numberCast(double.class, 1))) { 
 BA.debugLineNum = 7141;BA.debugLine="fx.Msgbox(mParentForm, \"El método GetIndiceItemP";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_fx" /*RemoteObject*/ ).runVoidMethodAndSync ("Msgbox",(Object)(__ref.getField(false,"_mparentform" /*RemoteObject*/ )),(Object)(BA.ObjectToString("El método GetIndiceItemPorValueMapPK ha devuelto más de un rowid")),(Object)(RemoteObject.createImmutable("Error de programación")));
 BA.debugLineNum = 7142;BA.debugLine="ExitApplication2(-404)";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("ExitApplication2",(Object)(BA.numberCast(int.class, -(double) (0 + 404))));
 BA.debugLineNum = 7143;BA.debugLine="Return -404";
Debug.JustUpdateDeviceLine();
if (true) return BA.numberCast(int.class, -(double) (0 + 404));
 };
 BA.debugLineNum = 7146;BA.debugLine="Dim NRegMPK As Int=FixNullInt(mSQL.ExecQuerySingl";
Debug.JustUpdateDeviceLine();
_nregmpk = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_fixnullint" /*RemoteObject*/ ,(Object)((__ref.getField(false,"_msql" /*RemoteObject*/ ).runMethod(true,"ExecQuerySingleResult2",(Object)(BA.ObjectToString(_sbsqlcount)),(Object)(_lstvalores)))));Debug.locals.put("NRegMPK", _nregmpk);Debug.locals.put("NRegMPK", _nregmpk);
 BA.debugLineNum = 7147;BA.debugLine="If NRegMPK=0 Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_nregmpk,BA.numberCast(double.class, 0))) { 
 BA.debugLineNum = 7149;BA.debugLine="Return -1";
Debug.JustUpdateDeviceLine();
if (true) return BA.numberCast(int.class, -(double) (0 + 1));
 };
 BA.debugLineNum = 7155;BA.debugLine="Dim iDxRowID As Int=mSQL.ExecQuerySingleResult2(s";
Debug.JustUpdateDeviceLine();
_idxrowid = BA.numberCast(int.class, __ref.getField(false,"_msql" /*RemoteObject*/ ).runMethod(true,"ExecQuerySingleResult2",(Object)(BA.ObjectToString(_sbsql)),(Object)(_lstvalores)));Debug.locals.put("iDxRowID", _idxrowid);Debug.locals.put("iDxRowID", _idxrowid);
 BA.debugLineNum = 7157;BA.debugLine="Dim iDxItemTarget As Int=-1";
Debug.JustUpdateDeviceLine();
_idxitemtarget = BA.numberCast(int.class, -(double) (0 + 1));Debug.locals.put("iDxItemTarget", _idxitemtarget);Debug.locals.put("iDxItemTarget", _idxitemtarget);
 BA.debugLineNum = 7159;BA.debugLine="For iDxCLV=0 To clvDatos.Size-1";
Debug.JustUpdateDeviceLine();
{
final int step84 = 1;
final int limit84 = RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"_getsize"),RemoteObject.createImmutable(1)}, "-",1, 1).<Integer>get().intValue();
_idxclv = 0 ;
for (;(step84 > 0 && _idxclv <= limit84) || (step84 < 0 && _idxclv >= limit84) ;_idxclv = ((int)(0 + _idxclv + step84))  ) {
Debug.locals.put("iDxCLV", _idxclv);
 BA.debugLineNum = 7160;BA.debugLine="Dim mData As Map=clvDatos.GetValue(iDxCLV)";
Debug.JustUpdateDeviceLine();
_mdata = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");
_mdata = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.collections.Map"), __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(false,"_getvalue",(Object)(BA.numberCast(int.class, _idxclv))));Debug.locals.put("mData", _mdata);Debug.locals.put("mData", _mdata);
 BA.debugLineNum = 7161;BA.debugLine="Dim rowidItemCLV As Int=mData.Get(\"rowid\")";
Debug.JustUpdateDeviceLine();
_rowiditemclv = BA.numberCast(int.class, _mdata.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("rowid")))));Debug.locals.put("rowidItemCLV", _rowiditemclv);Debug.locals.put("rowidItemCLV", _rowiditemclv);
 BA.debugLineNum = 7162;BA.debugLine="If iDxRowID=rowidItemCLV Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_idxrowid,BA.numberCast(double.class, _rowiditemclv))) { 
 BA.debugLineNum = 7163;BA.debugLine="iDxItemTarget=iDxCLV";
Debug.JustUpdateDeviceLine();
_idxitemtarget = BA.numberCast(int.class, _idxclv);Debug.locals.put("iDxItemTarget", _idxitemtarget);
 BA.debugLineNum = 7164;BA.debugLine="Exit";
Debug.JustUpdateDeviceLine();
if (true) break;
 };
 }
}Debug.locals.put("iDxCLV", _idxclv);
;
 BA.debugLineNum = 7167;BA.debugLine="Return iDxItemTarget";
Debug.JustUpdateDeviceLine();
if (true) return _idxitemtarget;
 BA.debugLineNum = 7168;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(0);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _getindicesitemslistarowids(RemoteObject __ref,RemoteObject _lstrowids) throws Exception{
try {
		Debug.PushSubsStack("GetIndicesItemsListaRowIDs (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7252);
if (RapidSub.canDelegate("getindicesitemslistarowids")) { return __ref.runUserSub(false, "jamtableclv","getindicesitemslistarowids", __ref, _lstrowids);}
RemoteObject _lstidxitems = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.List");
int _idxclv = 0;
RemoteObject _mdataitem = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
Debug.locals.put("lstRowIDs", _lstrowids);
 BA.debugLineNum = 7252;BA.debugLine="Public Sub GetIndicesItemsListaRowIDs(lstRowIDs As";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 7253;BA.debugLine="Dim lstIDxItems As List";
Debug.JustUpdateDeviceLine();
_lstidxitems = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");Debug.locals.put("lstIDxItems", _lstidxitems);
 BA.debugLineNum = 7254;BA.debugLine="lstIDxItems.Initialize";
Debug.JustUpdateDeviceLine();
_lstidxitems.runVoidMethod ("Initialize");
 BA.debugLineNum = 7256;BA.debugLine="For iDxCLV=0 To clvDatos.Size-1";
Debug.JustUpdateDeviceLine();
{
final int step3 = 1;
final int limit3 = RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"_getsize"),RemoteObject.createImmutable(1)}, "-",1, 1).<Integer>get().intValue();
_idxclv = 0 ;
for (;(step3 > 0 && _idxclv <= limit3) || (step3 < 0 && _idxclv >= limit3) ;_idxclv = ((int)(0 + _idxclv + step3))  ) {
Debug.locals.put("iDxCLV", _idxclv);
 BA.debugLineNum = 7257;BA.debugLine="Dim mDataItem As Map=clvDatos.GetValue(iDxCLV)";
Debug.JustUpdateDeviceLine();
_mdataitem = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");
_mdataitem = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.collections.Map"), __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(false,"_getvalue",(Object)(BA.numberCast(int.class, _idxclv))));Debug.locals.put("mDataItem", _mdataitem);Debug.locals.put("mDataItem", _mdataitem);
 BA.debugLineNum = 7258;BA.debugLine="If lstRowIDs.IndexOf(mDataItem.get(\"rowid\"))>-1";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean(">",_lstrowids.runMethod(true,"IndexOf",(Object)(_mdataitem.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("rowid")))))),BA.numberCast(double.class, -(double) (0 + 1)))) { 
 BA.debugLineNum = 7259;BA.debugLine="lstIDxItems.Add(iDxCLV)";
Debug.JustUpdateDeviceLine();
_lstidxitems.runVoidMethod ("Add",(Object)(RemoteObject.createImmutable((_idxclv))));
 BA.debugLineNum = 7260;BA.debugLine="lstRowIDs.RemoveAt(lstRowIDs.IndexOf(mDataItem.";
Debug.JustUpdateDeviceLine();
_lstrowids.runVoidMethod ("RemoveAt",(Object)(_lstrowids.runMethod(true,"IndexOf",(Object)(_mdataitem.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("rowid"))))))));
 BA.debugLineNum = 7261;BA.debugLine="If lstRowIDs.Size=0 Then Exit";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_lstrowids.runMethod(true,"getSize"),BA.numberCast(double.class, 0))) { 
if (true) break;};
 };
 }
}Debug.locals.put("iDxCLV", _idxclv);
;
 BA.debugLineNum = 7264;BA.debugLine="Return lstIDxItems";
Debug.JustUpdateDeviceLine();
if (true) return _lstidxitems;
 BA.debugLineNum = 7265;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _getindicesitemsporvaluemap(RemoteObject __ref,RemoteObject _mdatacamposbuscados) throws Exception{
try {
		Debug.PushSubsStack("GetIndicesItemsPorValueMap (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7174);
if (RapidSub.canDelegate("getindicesitemsporvaluemap")) { return __ref.runUserSub(false, "jamtableclv","getindicesitemsporvaluemap", __ref, _mdatacamposbuscados);}
RemoteObject _lstidxitems = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.List");
RemoteObject _lstaliascampospksobrantes = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.List");
RemoteObject _sbaliascampospksobrantes = RemoteObject.declareNull("anywheresoftware.b4a.keywords.StringBuilderWrapper");
RemoteObject _lstvalores = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.List");
RemoteObject _sbsql = RemoteObject.declareNull("anywheresoftware.b4a.keywords.StringBuilderWrapper");
RemoteObject _sbsqlcount = RemoteObject.declareNull("anywheresoftware.b4a.keywords.StringBuilderWrapper");
RemoteObject _k = RemoteObject.createImmutable("");
RemoteObject _flagok = RemoteObject.createImmutable(false);
RemoteObject _c = RemoteObject.declareNull("b4j.docU.jamtableclv._campoorigendatosjamtableclv");
RemoteObject _nregmpk = RemoteObject.createImmutable(0);
int _idxclv = 0;
RemoteObject _numcamposcoincidentes = RemoteObject.createImmutable(0);
RemoteObject _mdataitem = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
RemoteObject _kbuscada = RemoteObject.createImmutable("");
Debug.locals.put("mDataCamposBuscados", _mdatacamposbuscados);
 BA.debugLineNum = 7174;BA.debugLine="Public Sub GetIndicesItemsPorValueMap(mDataCamposB";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 7175;BA.debugLine="Dim lstIDxItems As List";
Debug.JustUpdateDeviceLine();
_lstidxitems = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");Debug.locals.put("lstIDxItems", _lstidxitems);
 BA.debugLineNum = 7176;BA.debugLine="lstIDxItems.Initialize";
Debug.JustUpdateDeviceLine();
_lstidxitems.runVoidMethod ("Initialize");
 BA.debugLineNum = 7178;BA.debugLine="Dim lstAliasCamposPKSobrantes As List";
Debug.JustUpdateDeviceLine();
_lstaliascampospksobrantes = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");Debug.locals.put("lstAliasCamposPKSobrantes", _lstaliascampospksobrantes);
 BA.debugLineNum = 7179;BA.debugLine="lstAliasCamposPKSobrantes.Initialize";
Debug.JustUpdateDeviceLine();
_lstaliascampospksobrantes.runVoidMethod ("Initialize");
 BA.debugLineNum = 7180;BA.debugLine="Dim sbAliasCamposPKSobrantes As StringBuilder";
Debug.JustUpdateDeviceLine();
_sbaliascampospksobrantes = RemoteObject.createNew ("anywheresoftware.b4a.keywords.StringBuilderWrapper");Debug.locals.put("sbAliasCamposPKSobrantes", _sbaliascampospksobrantes);
 BA.debugLineNum = 7181;BA.debugLine="sbAliasCamposPKSobrantes.Initialize";
Debug.JustUpdateDeviceLine();
_sbaliascampospksobrantes.runVoidMethod ("Initialize");
 BA.debugLineNum = 7182;BA.debugLine="Dim lstValores As List";
Debug.JustUpdateDeviceLine();
_lstvalores = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");Debug.locals.put("lstValores", _lstvalores);
 BA.debugLineNum = 7183;BA.debugLine="lstValores.Initialize";
Debug.JustUpdateDeviceLine();
_lstvalores.runVoidMethod ("Initialize");
 BA.debugLineNum = 7184;BA.debugLine="Dim sbSQL As StringBuilder";
Debug.JustUpdateDeviceLine();
_sbsql = RemoteObject.createNew ("anywheresoftware.b4a.keywords.StringBuilderWrapper");Debug.locals.put("sbSQL", _sbsql);
 BA.debugLineNum = 7185;BA.debugLine="sbSQL.Initialize";
Debug.JustUpdateDeviceLine();
_sbsql.runVoidMethod ("Initialize");
 BA.debugLineNum = 7186;BA.debugLine="sbSQL.Append(\"Select rowid from tblOrigenDatos wh";
Debug.JustUpdateDeviceLine();
_sbsql.runVoidMethod ("Append",(Object)(RemoteObject.createImmutable("Select rowid from tblOrigenDatos where ")));
 BA.debugLineNum = 7187;BA.debugLine="Dim sbSQLCount As StringBuilder";
Debug.JustUpdateDeviceLine();
_sbsqlcount = RemoteObject.createNew ("anywheresoftware.b4a.keywords.StringBuilderWrapper");Debug.locals.put("sbSQLCount", _sbsqlcount);
 BA.debugLineNum = 7188;BA.debugLine="sbSQLCount.Initialize";
Debug.JustUpdateDeviceLine();
_sbsqlcount.runVoidMethod ("Initialize");
 BA.debugLineNum = 7189;BA.debugLine="sbSQLCount.Append(\"Select count(rowid) from tblOr";
Debug.JustUpdateDeviceLine();
_sbsqlcount.runVoidMethod ("Append",(Object)(RemoteObject.createImmutable("Select count(rowid) from tblOrigenDatos where ")));
 BA.debugLineNum = 7190;BA.debugLine="For Each k As String In mDataCamposBuscados.Keys";
Debug.JustUpdateDeviceLine();
{
final RemoteObject group15 = _mdatacamposbuscados.runMethod(false,"Keys");
final int groupLen15 = group15.runMethod(true,"getSize").<Integer>get()
;int index15 = 0;
;
for (; index15 < groupLen15;index15++){
_k = BA.ObjectToString(group15.runMethod(false,"Get",index15));Debug.locals.put("k", _k);
Debug.locals.put("k", _k);
 BA.debugLineNum = 7191;BA.debugLine="Dim FlagOK As Boolean=False";
Debug.JustUpdateDeviceLine();
_flagok = jamtableclv.__c.getField(true,"False");Debug.locals.put("FlagOK", _flagok);Debug.locals.put("FlagOK", _flagok);
 BA.debugLineNum = 7192;BA.debugLine="For Each C  As CampoOrigenDatosJamTableCLV In mL";
Debug.JustUpdateDeviceLine();
{
final RemoteObject group17 = __ref.getField(false,"_mlstcamposorigendatos" /*RemoteObject*/ );
final int groupLen17 = group17.runMethod(true,"getSize").<Integer>get()
;int index17 = 0;
;
for (; index17 < groupLen17;index17++){
_c = (group17.runMethod(false,"Get",index17));Debug.locals.put("C", _c);
Debug.locals.put("C", _c);
 BA.debugLineNum = 7193;BA.debugLine="If c.AliasCampo=k Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_c.getField(true,"AliasCampo" /*RemoteObject*/ ),_k)) { 
 BA.debugLineNum = 7194;BA.debugLine="FlagOK=True";
Debug.JustUpdateDeviceLine();
_flagok = jamtableclv.__c.getField(true,"True");Debug.locals.put("FlagOK", _flagok);
 BA.debugLineNum = 7195;BA.debugLine="sbSQL.Append(\"[\").Append(k).Append(\"]=? and \")";
Debug.JustUpdateDeviceLine();
_sbsql.runMethod(false,"Append",(Object)(RemoteObject.createImmutable("["))).runMethod(false,"Append",(Object)(_k)).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable("]=? and ")));
 BA.debugLineNum = 7196;BA.debugLine="sbSQLCount.Append(\"[\").Append(k).Append(\"]=? a";
Debug.JustUpdateDeviceLine();
_sbsqlcount.runMethod(false,"Append",(Object)(RemoteObject.createImmutable("["))).runMethod(false,"Append",(Object)(_k)).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable("]=? and ")));
 BA.debugLineNum = 7197;BA.debugLine="lstValores.Add(mDataCamposBuscados.Get(k))";
Debug.JustUpdateDeviceLine();
_lstvalores.runVoidMethod ("Add",(Object)(_mdatacamposbuscados.runMethod(false,"Get",(Object)((_k)))));
 BA.debugLineNum = 7198;BA.debugLine="Exit";
Debug.JustUpdateDeviceLine();
if (true) break;
 };
 }
}Debug.locals.put("C", _c);
;
 BA.debugLineNum = 7201;BA.debugLine="If FlagOK=False Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_flagok,jamtableclv.__c.getField(true,"False"))) { 
 BA.debugLineNum = 7202;BA.debugLine="lstAliasCamposPKSobrantes.Add(k)";
Debug.JustUpdateDeviceLine();
_lstaliascampospksobrantes.runVoidMethod ("Add",(Object)((_k)));
 BA.debugLineNum = 7203;BA.debugLine="sbAliasCamposPKSobrantes.Append(k).Append(CRLF)";
Debug.JustUpdateDeviceLine();
_sbaliascampospksobrantes.runMethod(false,"Append",(Object)(_k)).runVoidMethod ("Append",(Object)(jamtableclv.__c.getField(true,"CRLF")));
 };
 }
}Debug.locals.put("k", _k);
;
 BA.debugLineNum = 7206;BA.debugLine="If lstAliasCamposPKSobrantes.Size>0 Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean(">",_lstaliascampospksobrantes.runMethod(true,"getSize"),BA.numberCast(double.class, 0))) { 
 BA.debugLineNum = 7207;BA.debugLine="fx.Msgbox(mParentForm, \"Sobran los siguientes ca";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_fx" /*RemoteObject*/ ).runVoidMethodAndSync ("Msgbox",(Object)(__ref.getField(false,"_mparentform" /*RemoteObject*/ )),(Object)(RemoteObject.concat(RemoteObject.createImmutable("Sobran los siguientes campos en el mapa parámetro del método GetIndicesItemsPorValueMap: "),jamtableclv.__c.getField(true,"CRLF"),jamtableclv.__c.getField(true,"CRLF"),_sbaliascampospksobrantes.runMethod(true,"ToString"))),(Object)(RemoteObject.createImmutable("Error de programación")));
 BA.debugLineNum = 7208;BA.debugLine="Return lstIDxItems";
Debug.JustUpdateDeviceLine();
if (true) return _lstidxitems;
 };
 BA.debugLineNum = 7210;BA.debugLine="sbSQL.Remove(sbSQL.Length-5,sbSQL.Length)";
Debug.JustUpdateDeviceLine();
_sbsql.runVoidMethod ("Remove",(Object)(RemoteObject.solve(new RemoteObject[] {_sbsql.runMethod(true,"getLength"),RemoteObject.createImmutable(5)}, "-",1, 1)),(Object)(_sbsql.runMethod(true,"getLength")));
 BA.debugLineNum = 7211;BA.debugLine="sbSQLCount.Remove(sbSQLCount.Length-5,sbSQLCount.";
Debug.JustUpdateDeviceLine();
_sbsqlcount.runVoidMethod ("Remove",(Object)(RemoteObject.solve(new RemoteObject[] {_sbsqlcount.runMethod(true,"getLength"),RemoteObject.createImmutable(5)}, "-",1, 1)),(Object)(_sbsqlcount.runMethod(true,"getLength")));
 BA.debugLineNum = 7213;BA.debugLine="Dim lstIDxItems As List";
Debug.JustUpdateDeviceLine();
_lstidxitems = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");Debug.locals.put("lstIDxItems", _lstidxitems);
 BA.debugLineNum = 7214;BA.debugLine="lstIDxItems.Initialize";
Debug.JustUpdateDeviceLine();
_lstidxitems.runVoidMethod ("Initialize");
 BA.debugLineNum = 7216;BA.debugLine="Dim NRegMPK As Int=FixNullInt(mSQL.ExecQuerySingl";
Debug.JustUpdateDeviceLine();
_nregmpk = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_fixnullint" /*RemoteObject*/ ,(Object)((__ref.getField(false,"_msql" /*RemoteObject*/ ).runMethod(true,"ExecQuerySingleResult2",(Object)(BA.ObjectToString(_sbsqlcount)),(Object)(_lstvalores)))));Debug.locals.put("NRegMPK", _nregmpk);Debug.locals.put("NRegMPK", _nregmpk);
 BA.debugLineNum = 7217;BA.debugLine="If NRegMPK=0 Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_nregmpk,BA.numberCast(double.class, 0))) { 
 BA.debugLineNum = 7218;BA.debugLine="Return lstIDxItems";
Debug.JustUpdateDeviceLine();
if (true) return _lstidxitems;
 };
 BA.debugLineNum = 7221;BA.debugLine="For iDxCLV=0 To clvDatos.Size-1";
Debug.JustUpdateDeviceLine();
{
final int step43 = 1;
final int limit43 = RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"_getsize"),RemoteObject.createImmutable(1)}, "-",1, 1).<Integer>get().intValue();
_idxclv = 0 ;
for (;(step43 > 0 && _idxclv <= limit43) || (step43 < 0 && _idxclv >= limit43) ;_idxclv = ((int)(0 + _idxclv + step43))  ) {
Debug.locals.put("iDxCLV", _idxclv);
 BA.debugLineNum = 7222;BA.debugLine="Dim NumCamposCoincidentes As Int";
Debug.JustUpdateDeviceLine();
_numcamposcoincidentes = RemoteObject.createImmutable(0);Debug.locals.put("NumCamposCoincidentes", _numcamposcoincidentes);
 BA.debugLineNum = 7223;BA.debugLine="Dim mDataItem As Map=clvDatos.GetValue(iDxCLV)";
Debug.JustUpdateDeviceLine();
_mdataitem = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");
_mdataitem = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.collections.Map"), __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(false,"_getvalue",(Object)(BA.numberCast(int.class, _idxclv))));Debug.locals.put("mDataItem", _mdataitem);Debug.locals.put("mDataItem", _mdataitem);
 BA.debugLineNum = 7224;BA.debugLine="For Each kBuscada As String In mDataCamposBuscad";
Debug.JustUpdateDeviceLine();
{
final RemoteObject group46 = _mdatacamposbuscados.runMethod(false,"Keys");
final int groupLen46 = group46.runMethod(true,"getSize").<Integer>get()
;int index46 = 0;
;
for (; index46 < groupLen46;index46++){
_kbuscada = BA.ObjectToString(group46.runMethod(false,"Get",index46));Debug.locals.put("kBuscada", _kbuscada);
Debug.locals.put("kBuscada", _kbuscada);
 BA.debugLineNum = 7225;BA.debugLine="If mDataCamposBuscados.get(kBuscada)=mDataItem.";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_mdatacamposbuscados.runMethod(false,"Get",(Object)((_kbuscada))),_mdataitem.runMethod(false,"Get",(Object)((_kbuscada))))) { 
 BA.debugLineNum = 7226;BA.debugLine="NumCamposCoincidentes=NumCamposCoincidentes+1";
Debug.JustUpdateDeviceLine();
_numcamposcoincidentes = RemoteObject.solve(new RemoteObject[] {_numcamposcoincidentes,RemoteObject.createImmutable(1)}, "+",1, 1);Debug.locals.put("NumCamposCoincidentes", _numcamposcoincidentes);
 };
 }
}Debug.locals.put("kBuscada", _kbuscada);
;
 BA.debugLineNum = 7229;BA.debugLine="If NumCamposCoincidentes=mDataCamposBuscados.Siz";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_numcamposcoincidentes,BA.numberCast(double.class, _mdatacamposbuscados.runMethod(true,"getSize")))) { 
 BA.debugLineNum = 7231;BA.debugLine="lstIDxItems.Add(iDxCLV)";
Debug.JustUpdateDeviceLine();
_lstidxitems.runVoidMethod ("Add",(Object)(RemoteObject.createImmutable((_idxclv))));
 };
 }
}Debug.locals.put("iDxCLV", _idxclv);
;
 BA.debugLineNum = 7234;BA.debugLine="Return lstIDxItems";
Debug.JustUpdateDeviceLine();
if (true) return _lstidxitems;
 BA.debugLineNum = 7235;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _getitemfromview(RemoteObject __ref,RemoteObject _v) throws Exception{
try {
		Debug.PushSubsStack("GetItemFromView (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6893);
if (RapidSub.canDelegate("getitemfromview")) { return __ref.runUserSub(false, "jamtableclv","getitemfromview", __ref, _v);}
Debug.locals.put("v", _v);
 BA.debugLineNum = 6893;BA.debugLine="public Sub GetItemFromView(v As B4XView) As Int";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6894;BA.debugLine="Return clvDatos.GetItemFromView(v)";
Debug.JustUpdateDeviceLine();
if (true) return __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"_getitemfromview",(Object)(_v));
 BA.debugLineNum = 6895;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(0);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _getlastvisibleindex(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("getLastVisibleIndex (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6905);
if (RapidSub.canDelegate("getlastvisibleindex")) { return __ref.runUserSub(false, "jamtableclv","getlastvisibleindex", __ref);}
 BA.debugLineNum = 6905;BA.debugLine="public Sub getLastVisibleIndex As Int";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6906;BA.debugLine="Return clvDatos.LastVisibleIndex";
Debug.JustUpdateDeviceLine();
if (true) return __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"_getlastvisibleindex");
 BA.debugLineNum = 6907;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(0);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _getmenubarmenuitem(RemoteObject __ref,RemoteObject _tagmenuitem) throws Exception{
try {
		Debug.PushSubsStack("GetMenuBarMenuItem (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,1755);
if (RapidSub.canDelegate("getmenubarmenuitem")) { return __ref.runUserSub(false, "jamtableclv","getmenubarmenuitem", __ref, _tagmenuitem);}
RemoteObject _mmenus = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
RemoteObject _mi = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");
Debug.locals.put("TagMenuItem", _tagmenuitem);
 BA.debugLineNum = 1755;BA.debugLine="private Sub GetMenuBarMenuItem(TagMenuItem As Stri";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 1756;BA.debugLine="Dim mmenus As  Map 'better to make it a global va";
Debug.JustUpdateDeviceLine();
_mmenus = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");Debug.locals.put("mmenus", _mmenus);
 BA.debugLineNum = 1757;BA.debugLine="mmenus.Initialize";
Debug.JustUpdateDeviceLine();
_mmenus.runVoidMethod ("Initialize");
 BA.debugLineNum = 1758;BA.debugLine="CollectMenuItems(mmenus, MenuBar.Menus)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_collectmenuitems" /*RemoteObject*/ ,(Object)(_mmenus),(Object)(__ref.getField(false,"_menubar" /*RemoteObject*/ ).runMethod(false,"getMenus")));
 BA.debugLineNum = 1759;BA.debugLine="If mmenus.Get(TagMenuItem)=Null Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("n",_mmenus.runMethod(false,"Get",(Object)((_tagmenuitem))))) { 
 BA.debugLineNum = 1760;BA.debugLine="LogColor(\"TagMenuItem buscado \" & TagMenuItem &";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("LogImpl","9162791429",RemoteObject.concat(RemoteObject.createImmutable("TagMenuItem buscado "),_tagmenuitem,RemoteObject.createImmutable(" no existe. ERROR")),__ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"Color_Red"));
 BA.debugLineNum = 1761;BA.debugLine="fx.Msgbox(mParentForm,\"No existe el MenuItem con";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_fx" /*RemoteObject*/ ).runVoidMethodAndSync ("Msgbox",(Object)(__ref.getField(false,"_mparentform" /*RemoteObject*/ )),(Object)(RemoteObject.concat(RemoteObject.createImmutable("No existe el MenuItem con tag: "),_tagmenuitem,jamtableclv.__c.getField(true,"CRLF"),jamtableclv.__c.getField(true,"CRLF"),RemoteObject.createImmutable("Avisa al administrador de la aplicación."))),(Object)(RemoteObject.createImmutable("Error!")));
 BA.debugLineNum = 1762;BA.debugLine="ExitApplication";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("ExitApplication");
 };
 BA.debugLineNum = 1764;BA.debugLine="Dim mi As MenuItem = mmenus.Get(TagMenuItem)";
Debug.JustUpdateDeviceLine();
_mi = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");
_mi = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper"), _mmenus.runMethod(false,"Get",(Object)((_tagmenuitem))));Debug.locals.put("mi", _mi);Debug.locals.put("mi", _mi);
 BA.debugLineNum = 1765;BA.debugLine="Return mi";
Debug.JustUpdateDeviceLine();
if (true) return _mi;
 BA.debugLineNum = 1766;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _getmodoseleccionitems(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("getModoSeleccionItems (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,665);
if (RapidSub.canDelegate("getmodoseleccionitems")) { return __ref.runUserSub(false, "jamtableclv","getmodoseleccionitems", __ref);}
 BA.debugLineNum = 665;BA.debugLine="public Sub getModoSeleccionItems As String";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 666;BA.debugLine="Return mModoSeleccionItems";
Debug.JustUpdateDeviceLine();
if (true) return __ref.getField(true,"_mmodoseleccionitems" /*RemoteObject*/ );
 BA.debugLineNum = 667;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _getmostrarmenupanelitems(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("getMostrarMenuPanelItems (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,670);
if (RapidSub.canDelegate("getmostrarmenupanelitems")) { return __ref.runUserSub(false, "jamtableclv","getmostrarmenupanelitems", __ref);}
 BA.debugLineNum = 670;BA.debugLine="public Sub getMostrarMenuPanelItems As Boolean";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 671;BA.debugLine="Return mMostrarMenuPanelItem";
Debug.JustUpdateDeviceLine();
if (true) return __ref.getField(true,"_mmostrarmenupanelitem" /*RemoteObject*/ );
 BA.debugLineNum = 672;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(false);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _getnumbers(RemoteObject __ref,RemoteObject _value) throws Exception{
try {
		Debug.PushSubsStack("GetNumbers (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7901);
if (RapidSub.canDelegate("getnumbers")) { return __ref.runUserSub(false, "jamtableclv","getnumbers", __ref, _value);}
RemoteObject _strcnt = RemoteObject.createImmutable(0);
RemoteObject _str = RemoteObject.createImmutable("");
RemoteObject _sb = RemoteObject.declareNull("anywheresoftware.b4a.keywords.StringBuilderWrapper");
RemoteObject _master = RemoteObject.createImmutable("");
Debug.locals.put("value", _value);
 BA.debugLineNum = 7901;BA.debugLine="public Sub GetNumbers(value As String) As String";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 7902;BA.debugLine="Dim strCnt As Int";
Debug.JustUpdateDeviceLine();
_strcnt = RemoteObject.createImmutable(0);Debug.locals.put("strCnt", _strcnt);
 BA.debugLineNum = 7903;BA.debugLine="Dim str As String";
Debug.JustUpdateDeviceLine();
_str = RemoteObject.createImmutable("");Debug.locals.put("str", _str);
 BA.debugLineNum = 7904;BA.debugLine="Dim sb As StringBuilder";
Debug.JustUpdateDeviceLine();
_sb = RemoteObject.createNew ("anywheresoftware.b4a.keywords.StringBuilderWrapper");Debug.locals.put("sb", _sb);
 BA.debugLineNum = 7905;BA.debugLine="sb.Initialize";
Debug.JustUpdateDeviceLine();
_sb.runVoidMethod ("Initialize");
 BA.debugLineNum = 7906;BA.debugLine="Dim master As String = \"0123456789-.\"";
Debug.JustUpdateDeviceLine();
_master = BA.ObjectToString("0123456789-.");Debug.locals.put("master", _master);Debug.locals.put("master", _master);
 BA.debugLineNum = 7907;BA.debugLine="For strCnt = 0 To value.Length - 1";
Debug.JustUpdateDeviceLine();
{
final int step6 = 1;
final int limit6 = RemoteObject.solve(new RemoteObject[] {_value.runMethod(true,"length"),RemoteObject.createImmutable(1)}, "-",1, 1).<Integer>get().intValue();
_strcnt = BA.numberCast(int.class, 0) ;
for (;(step6 > 0 && _strcnt.<Integer>get().intValue() <= limit6) || (step6 < 0 && _strcnt.<Integer>get().intValue() >= limit6) ;_strcnt = RemoteObject.createImmutable((int)(0 + _strcnt.<Integer>get().intValue() + step6))  ) {
Debug.locals.put("strCnt", _strcnt);
 BA.debugLineNum = 7908;BA.debugLine="str = value.CharAt(strCnt)";
Debug.JustUpdateDeviceLine();
_str = BA.ObjectToString(_value.runMethod(true,"charAt",(Object)(_strcnt)));Debug.locals.put("str", _str);
 BA.debugLineNum = 7909;BA.debugLine="If master.IndexOf(str) >= 0 Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("g",_master.runMethod(true,"indexOf",(Object)(_str)),BA.numberCast(double.class, 0))) { 
 BA.debugLineNum = 7910;BA.debugLine="sb.Append(str)";
Debug.JustUpdateDeviceLine();
_sb.runVoidMethod ("Append",(Object)(_str));
 };
 }
}Debug.locals.put("strCnt", _strcnt);
;
 BA.debugLineNum = 7913;BA.debugLine="Return sb.tostring";
Debug.JustUpdateDeviceLine();
if (true) return _sb.runMethod(true,"ToString");
 BA.debugLineNum = 7914;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _getpanel(RemoteObject __ref,RemoteObject _index) throws Exception{
try {
		Debug.PushSubsStack("GetPanel (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6884);
if (RapidSub.canDelegate("getpanel")) { return __ref.runUserSub(false, "jamtableclv","getpanel", __ref, _index);}
Debug.locals.put("Index", _index);
 BA.debugLineNum = 6884;BA.debugLine="public Sub GetPanel(Index As Int) As B4XView";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6885;BA.debugLine="Return clvDatos.GetPanel(Index)";
Debug.JustUpdateDeviceLine();
if (true) return __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(false,"_getpanel",(Object)(_index));
 BA.debugLineNum = 6886;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _getpreoptimizedclv(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("getPreoptimizedCLV (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6955);
if (RapidSub.canDelegate("getpreoptimizedclv")) { return __ref.runUserSub(false, "jamtableclv","getpreoptimizedclv", __ref);}
 BA.debugLineNum = 6955;BA.debugLine="Public Sub getPreoptimizedCLV As PreoptimizedCLV";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6956;BA.debugLine="Return PCLV";
Debug.JustUpdateDeviceLine();
if (true) return __ref.getField(false,"_pclv" /*RemoteObject*/ );
 BA.debugLineNum = 6957;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _getrawlistitem(RemoteObject __ref,RemoteObject _index) throws Exception{
try {
		Debug.PushSubsStack("GetRawListItem (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6959);
if (RapidSub.canDelegate("getrawlistitem")) { return __ref.runUserSub(false, "jamtableclv","getrawlistitem", __ref, _index);}
Debug.locals.put("Index", _index);
 BA.debugLineNum = 6959;BA.debugLine="public Sub GetRawListItem(Index As Int) As CLVItem";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6960;BA.debugLine="Return clvDatos.GetRawListItem(Index)";
Debug.JustUpdateDeviceLine();
if (true) return __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(false,"_getrawlistitem",(Object)(_index));
 BA.debugLineNum = 6961;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _getsize(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("getSize (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6867);
if (RapidSub.canDelegate("getsize")) { return __ref.runUserSub(false, "jamtableclv","getsize", __ref);}
 BA.debugLineNum = 6867;BA.debugLine="public Sub getSize As Int";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6868;BA.debugLine="Return clvDatos.Size";
Debug.JustUpdateDeviceLine();
if (true) return __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"_getsize");
 BA.debugLineNum = 6869;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(0);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _getsql(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("getSQL (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6941);
if (RapidSub.canDelegate("getsql")) { return __ref.runUserSub(false, "jamtableclv","getsql", __ref);}
 BA.debugLineNum = 6941;BA.debugLine="Public Sub getSQL As SQL";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6942;BA.debugLine="Return mSQL";
Debug.JustUpdateDeviceLine();
if (true) return __ref.getField(false,"_msql" /*RemoteObject*/ );
 BA.debugLineNum = 6943;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _getsv(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("getsv (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6946);
if (RapidSub.canDelegate("getsv")) { return __ref.runUserSub(false, "jamtableclv","getsv", __ref);}
 BA.debugLineNum = 6946;BA.debugLine="public Sub getsv As B4XView";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6947;BA.debugLine="Return clvDatos.sv";
Debug.JustUpdateDeviceLine();
if (true) return __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).getField(false,"_sv");
 BA.debugLineNum = 6948;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _gettableclvresultset(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("GetTableCLVResultSet (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6618);
if (RapidSub.canDelegate("gettableclvresultset")) { return __ref.runUserSub(false, "jamtableclv","gettableclvresultset", __ref);}
RemoteObject _sbcamposcolumnasvisibles = RemoteObject.declareNull("anywheresoftware.b4a.keywords.StringBuilderWrapper");
RemoteObject _lstcamposorigendatoscolumnas = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.List");
RemoteObject _c = RemoteObject.declareNull("b4j.docU.jamtableclv._campoorigendatosjamtableclv");
RemoteObject _sordensql = RemoteObject.createImmutable("");
RemoteObject _sbordensql = RemoteObject.declareNull("anywheresoftware.b4a.keywords.StringBuilderWrapper");
int _idxordensql = 0;
RemoteObject _dol = RemoteObject.declareNull("b4j.docU.jamtableclv._datosordensqljamtableclv");
RemoteObject _stipoorden = RemoteObject.createImmutable("");
RemoteObject _rsregistrosfiltradosvisibles = RemoteObject.declareNull("anywheresoftware.b4j.objects.SQL.ResultSetWrapper");
RemoteObject _sbdatos = RemoteObject.declareNull("anywheresoftware.b4a.keywords.StringBuilderWrapper");
 BA.debugLineNum = 6618;BA.debugLine="Public Sub GetTableCLVResultSet As ResultSet";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6620;BA.debugLine="Dim sbCamposColumnasVisibles As StringBuilder";
Debug.JustUpdateDeviceLine();
_sbcamposcolumnasvisibles = RemoteObject.createNew ("anywheresoftware.b4a.keywords.StringBuilderWrapper");Debug.locals.put("sbCamposColumnasVisibles", _sbcamposcolumnasvisibles);
 BA.debugLineNum = 6621;BA.debugLine="sbCamposColumnasVisibles.Initialize";
Debug.JustUpdateDeviceLine();
_sbcamposcolumnasvisibles.runVoidMethod ("Initialize");
 BA.debugLineNum = 6623;BA.debugLine="Dim lstCamposOrigenDatosColumnas As List";
Debug.JustUpdateDeviceLine();
_lstcamposorigendatoscolumnas = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");Debug.locals.put("lstCamposOrigenDatosColumnas", _lstcamposorigendatoscolumnas);
 BA.debugLineNum = 6624;BA.debugLine="lstCamposOrigenDatosColumnas.Initialize";
Debug.JustUpdateDeviceLine();
_lstcamposorigendatoscolumnas.runVoidMethod ("Initialize");
 BA.debugLineNum = 6625;BA.debugLine="For Each c As CampoOrigenDatosJamTableCLV In mLst";
Debug.JustUpdateDeviceLine();
{
final RemoteObject group5 = __ref.getField(false,"_mlstcamposorigendatos" /*RemoteObject*/ );
final int groupLen5 = group5.runMethod(true,"getSize").<Integer>get()
;int index5 = 0;
;
for (; index5 < groupLen5;index5++){
_c = (group5.runMethod(false,"Get",index5));Debug.locals.put("c", _c);
Debug.locals.put("c", _c);
 BA.debugLineNum = 6626;BA.debugLine="If Not(c.ColumnaTableCLV) Then Continue";
Debug.JustUpdateDeviceLine();
if (jamtableclv.__c.runMethod(true,"Not",(Object)(_c.getField(true,"ColumnaTableCLV" /*RemoteObject*/ ))).<Boolean>get().booleanValue()) { 
if (true) continue;};
 BA.debugLineNum = 6627;BA.debugLine="lstCamposOrigenDatosColumnas.Add(c)";
Debug.JustUpdateDeviceLine();
_lstcamposorigendatoscolumnas.runVoidMethod ("Add",(Object)((_c)));
 BA.debugLineNum = 6628;BA.debugLine="sbCamposColumnasVisibles.append(\"[\").Append(c.Al";
Debug.JustUpdateDeviceLine();
_sbcamposcolumnasvisibles.runMethod(false,"Append",(Object)(RemoteObject.createImmutable("["))).runMethod(false,"Append",(Object)(_c.getField(true,"AliasCampo" /*RemoteObject*/ ))).runMethod(false,"Append",(Object)(RemoteObject.createImmutable("]"))).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(",")));
 }
}Debug.locals.put("c", _c);
;
 BA.debugLineNum = 6630;BA.debugLine="sbCamposColumnasVisibles.Remove(sbCamposColumnasV";
Debug.JustUpdateDeviceLine();
_sbcamposcolumnasvisibles.runVoidMethod ("Remove",(Object)(RemoteObject.solve(new RemoteObject[] {_sbcamposcolumnasvisibles.runMethod(true,"getLength"),RemoteObject.createImmutable(1)}, "-",1, 1)),(Object)(_sbcamposcolumnasvisibles.runMethod(true,"getLength")));
 BA.debugLineNum = 6632;BA.debugLine="Dim sOrdenSQL As String";
Debug.JustUpdateDeviceLine();
_sordensql = RemoteObject.createImmutable("");Debug.locals.put("sOrdenSQL", _sordensql);
 BA.debugLineNum = 6633;BA.debugLine="If lstOrdenSQL.Size>0 Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean(">",__ref.getField(false,"_lstordensql" /*RemoteObject*/ ).runMethod(true,"getSize"),BA.numberCast(double.class, 0))) { 
 BA.debugLineNum = 6634;BA.debugLine="lstOrdenSQL.SortType(\"IndiceOrdenSQL\",True)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstordensql" /*RemoteObject*/ ).runVoidMethod ("SortType",(Object)(BA.ObjectToString("IndiceOrdenSQL")),(Object)(jamtableclv.__c.getField(true,"True")));
 BA.debugLineNum = 6635;BA.debugLine="Dim sbOrdenSQL As StringBuilder";
Debug.JustUpdateDeviceLine();
_sbordensql = RemoteObject.createNew ("anywheresoftware.b4a.keywords.StringBuilderWrapper");Debug.locals.put("sbOrdenSQL", _sbordensql);
 BA.debugLineNum = 6636;BA.debugLine="sbOrdenSQL.Initialize";
Debug.JustUpdateDeviceLine();
_sbordensql.runVoidMethod ("Initialize");
 BA.debugLineNum = 6637;BA.debugLine="sbOrdenSQL.append(\" ORDER BY \")";
Debug.JustUpdateDeviceLine();
_sbordensql.runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(" ORDER BY ")));
 BA.debugLineNum = 6638;BA.debugLine="For idXOrdenSQL=0 To lstOrdenSQL.Size-1";
Debug.JustUpdateDeviceLine();
{
final int step17 = 1;
final int limit17 = RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_lstordensql" /*RemoteObject*/ ).runMethod(true,"getSize"),RemoteObject.createImmutable(1)}, "-",1, 1).<Integer>get().intValue();
_idxordensql = 0 ;
for (;(step17 > 0 && _idxordensql <= limit17) || (step17 < 0 && _idxordensql >= limit17) ;_idxordensql = ((int)(0 + _idxordensql + step17))  ) {
Debug.locals.put("idXOrdenSQL", _idxordensql);
 BA.debugLineNum = 6639;BA.debugLine="Dim dOl As DatosOrdenSQLJamTableCLV=lstOrdenSQL";
Debug.JustUpdateDeviceLine();
_dol = (__ref.getField(false,"_lstordensql" /*RemoteObject*/ ).runMethod(false,"Get",(Object)(BA.numberCast(int.class, _idxordensql))));Debug.locals.put("dOl", _dol);Debug.locals.put("dOl", _dol);
 BA.debugLineNum = 6640;BA.debugLine="Dim sTipoOrden As String";
Debug.JustUpdateDeviceLine();
_stipoorden = RemoteObject.createImmutable("");Debug.locals.put("sTipoOrden", _stipoorden);
 BA.debugLineNum = 6641;BA.debugLine="If dOl.TipoOrdenSQL=\"Ascendente\" Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_dol.getField(true,"TipoOrdenSQL" /*RemoteObject*/ ),BA.ObjectToString("Ascendente"))) { 
 BA.debugLineNum = 6642;BA.debugLine="sTipoOrden=\"ASC\"";
Debug.JustUpdateDeviceLine();
_stipoorden = BA.ObjectToString("ASC");Debug.locals.put("sTipoOrden", _stipoorden);
 }else {
 BA.debugLineNum = 6644;BA.debugLine="sTipoOrden=\"DESC\"";
Debug.JustUpdateDeviceLine();
_stipoorden = BA.ObjectToString("DESC");Debug.locals.put("sTipoOrden", _stipoorden);
 };
 BA.debugLineNum = 6646;BA.debugLine="sbOrdenSQL.Append(dOl.AliasCampoOrdenSQL).Appen";
Debug.JustUpdateDeviceLine();
_sbordensql.runMethod(false,"Append",(Object)(_dol.getField(true,"AliasCampoOrdenSQL" /*RemoteObject*/ ))).runMethod(false,"Append",(Object)(RemoteObject.createImmutable(" "))).runMethod(false,"Append",(Object)(_stipoorden)).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(",")));
 }
}Debug.locals.put("idXOrdenSQL", _idxordensql);
;
 BA.debugLineNum = 6648;BA.debugLine="sbOrdenSQL=sbOrdenSQL.Remove(sbOrdenSQL.Length-1";
Debug.JustUpdateDeviceLine();
_sbordensql = _sbordensql.runMethod(false,"Remove",(Object)(RemoteObject.solve(new RemoteObject[] {_sbordensql.runMethod(true,"getLength"),RemoteObject.createImmutable(1)}, "-",1, 1)),(Object)(_sbordensql.runMethod(true,"getLength")));Debug.locals.put("sbOrdenSQL", _sbordensql);
 BA.debugLineNum = 6649;BA.debugLine="sOrdenSQL=sbOrdenSQL.ToString";
Debug.JustUpdateDeviceLine();
_sordensql = _sbordensql.runMethod(true,"ToString");Debug.locals.put("sOrdenSQL", _sordensql);
 };
 BA.debugLineNum = 6653;BA.debugLine="Dim rsRegistrosFiltradosVisibles As ResultSet";
Debug.JustUpdateDeviceLine();
_rsregistrosfiltradosvisibles = RemoteObject.createNew ("anywheresoftware.b4j.objects.SQL.ResultSetWrapper");Debug.locals.put("rsRegistrosFiltradosVisibles", _rsregistrosfiltradosvisibles);
 BA.debugLineNum = 6655;BA.debugLine="Dim sbDatos As StringBuilder";
Debug.JustUpdateDeviceLine();
_sbdatos = RemoteObject.createNew ("anywheresoftware.b4a.keywords.StringBuilderWrapper");Debug.locals.put("sbDatos", _sbdatos);
 BA.debugLineNum = 6656;BA.debugLine="sbDatos.Initialize";
Debug.JustUpdateDeviceLine();
_sbdatos.runVoidMethod ("Initialize");
 BA.debugLineNum = 6657;BA.debugLine="If lstValoresFiltros.Size>0 Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean(">",__ref.getField(false,"_lstvaloresfiltros" /*RemoteObject*/ ).runMethod(true,"getSize"),BA.numberCast(double.class, 0))) { 
 BA.debugLineNum = 6659;BA.debugLine="NTotalRegistrosFiltrados=mSQL.ExecQuerySingleRes";
Debug.JustUpdateDeviceLine();
__ref.setField ("_ntotalregistrosfiltrados" /*RemoteObject*/ ,BA.numberCast(int.class, __ref.getField(false,"_msql" /*RemoteObject*/ ).runMethod(true,"ExecQuerySingleResult2",(Object)(RemoteObject.concat(RemoteObject.createImmutable("select count(*) from tblOrigenDatos where "),__ref.getField(true,"_scamposfiltrados" /*RemoteObject*/ ))),(Object)(__ref.getField(false,"_lstvaloresfiltros" /*RemoteObject*/ )))));
 BA.debugLineNum = 6661;BA.debugLine="Log(\"sCamposFiltrados \" & sCamposFiltrados)";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("LogImpl","9168493099",RemoteObject.concat(RemoteObject.createImmutable("sCamposFiltrados "),__ref.getField(true,"_scamposfiltrados" /*RemoteObject*/ )),0);
 BA.debugLineNum = 6662;BA.debugLine="Log(\"NTotalRegistrosFiltrados \" & NTotalRegistro";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("LogImpl","9168493100",RemoteObject.concat(RemoteObject.createImmutable("NTotalRegistrosFiltrados "),__ref.getField(true,"_ntotalregistrosfiltrados" /*RemoteObject*/ )),0);
 BA.debugLineNum = 6664;BA.debugLine="If NUltimoRegistroVisible>NTotalRegistrosFiltrad";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean(">",__ref.getField(true,"_nultimoregistrovisible" /*RemoteObject*/ ),BA.numberCast(double.class, __ref.getField(true,"_ntotalregistrosfiltrados" /*RemoteObject*/ )))) { 
__ref.setField ("_nultimoregistrovisible" /*RemoteObject*/ ,__ref.getField(true,"_ntotalregistrosfiltrados" /*RemoteObject*/ ));};
 BA.debugLineNum = 6667;BA.debugLine="If sOrdenSQL<>\"\" Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("!",_sordensql,BA.ObjectToString(""))) { 
 BA.debugLineNum = 6668;BA.debugLine="sbDatos.Append(\"select \").append(sbCamposColumn";
Debug.JustUpdateDeviceLine();
_sbdatos.runMethod(false,"Append",(Object)(RemoteObject.createImmutable("select "))).runMethod(false,"Append",(Object)(_sbcamposcolumnasvisibles.runMethod(true,"ToString"))).runMethod(false,"Append",(Object)(RemoteObject.createImmutable(" from tblOrigenDatos where "))).runMethod(false,"Append",(Object)(__ref.getField(true,"_scamposfiltrados" /*RemoteObject*/ ))).runVoidMethod ("Append",(Object)(_sordensql));
 }else {
 BA.debugLineNum = 6670;BA.debugLine="sbDatos.Append(\"select \").Append(sbCamposColumn";
Debug.JustUpdateDeviceLine();
_sbdatos.runMethod(false,"Append",(Object)(RemoteObject.createImmutable("select "))).runMethod(false,"Append",(Object)(_sbcamposcolumnasvisibles.runMethod(true,"ToString"))).runMethod(false,"Append",(Object)(RemoteObject.createImmutable(" from tblOrigenDatos where "))).runVoidMethod ("Append",(Object)(__ref.getField(true,"_scamposfiltrados" /*RemoteObject*/ )));
 };
 BA.debugLineNum = 6673;BA.debugLine="Try";
Debug.JustUpdateDeviceLine();
try { BA.debugLineNum = 6675;BA.debugLine="Log(\"****** FILTRO ************\")";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("LogImpl","9168493113",RemoteObject.createImmutable("****** FILTRO ************"),0);
 BA.debugLineNum = 6676;BA.debugLine="Log(sbDatos.ToString)";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("LogImpl","9168493114",_sbdatos.runMethod(true,"ToString"),0);
 BA.debugLineNum = 6677;BA.debugLine="Log(lstValoresFiltros)";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("LogImpl","9168493115",BA.ObjectToString(__ref.getField(false,"_lstvaloresfiltros" /*RemoteObject*/ )),0);
 BA.debugLineNum = 6678;BA.debugLine="Log(\"******************\")";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("LogImpl","9168493116",RemoteObject.createImmutable("******************"),0);
 BA.debugLineNum = 6680;BA.debugLine="rsRegistrosFiltradosVisibles=mSQL.ExecQuery2(sb";
Debug.JustUpdateDeviceLine();
_rsregistrosfiltradosvisibles = __ref.getField(false,"_msql" /*RemoteObject*/ ).runMethod(false,"ExecQuery2",(Object)(_sbdatos.runMethod(true,"ToString")),(Object)(__ref.getField(false,"_lstvaloresfiltros" /*RemoteObject*/ )));Debug.locals.put("rsRegistrosFiltradosVisibles", _rsregistrosfiltradosvisibles);
 Debug.CheckDeviceExceptions();
} 
       catch (Exception e50) {
			BA.rdebugUtils.runVoidMethod("setLastException",__ref.getField(false, "ba"), e50.toString()); BA.debugLineNum = 6682;BA.debugLine="LogColor(LastException.Message, xui.Color_Red)";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("LogImpl","9168493120",jamtableclv.__c.runMethod(false,"LastException",__ref.getField(false, "ba")).runMethod(true,"getMessage"),__ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"Color_Red"));
 BA.debugLineNum = 6683;BA.debugLine="fx.Msgbox(mParentForm, \"Error SQLite \" & LastEx";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_fx" /*RemoteObject*/ ).runVoidMethodAndSync ("Msgbox",(Object)(__ref.getField(false,"_mparentform" /*RemoteObject*/ )),(Object)(RemoteObject.concat(RemoteObject.createImmutable("Error SQLite "),jamtableclv.__c.runMethod(false,"LastException",__ref.getField(false, "ba")).runMethod(true,"getMessage"),jamtableclv.__c.getField(true,"CRLF"),jamtableclv.__c.getField(true,"CRLF"),_sbdatos.runMethod(true,"ToString"),jamtableclv.__c.getField(true,"CRLF"),jamtableclv.__c.getField(true,"CRLF"),RemoteObject.createImmutable("Avisa al administrador de la aplicación."))),(Object)(RemoteObject.createImmutable("Error")));
 BA.debugLineNum = 6684;BA.debugLine="ExitApplication";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("ExitApplication");
 };
 }else {
 BA.debugLineNum = 6688;BA.debugLine="NTotalRegistrosFiltrados=NTotalRegistros";
Debug.JustUpdateDeviceLine();
__ref.setField ("_ntotalregistrosfiltrados" /*RemoteObject*/ ,__ref.getField(true,"_ntotalregistros" /*RemoteObject*/ ));
 BA.debugLineNum = 6689;BA.debugLine="If NUltimoRegistroVisible>NTotalRegistrosFiltrad";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean(">",__ref.getField(true,"_nultimoregistrovisible" /*RemoteObject*/ ),BA.numberCast(double.class, __ref.getField(true,"_ntotalregistrosfiltrados" /*RemoteObject*/ )))) { 
__ref.setField ("_nultimoregistrovisible" /*RemoteObject*/ ,__ref.getField(true,"_ntotalregistrosfiltrados" /*RemoteObject*/ ));};
 BA.debugLineNum = 6690;BA.debugLine="If sOrdenSQL<>\"\" Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("!",_sordensql,BA.ObjectToString(""))) { 
 BA.debugLineNum = 6691;BA.debugLine="sbDatos.Append(\"select \").Append(sbCamposColumn";
Debug.JustUpdateDeviceLine();
_sbdatos.runMethod(false,"Append",(Object)(RemoteObject.createImmutable("select "))).runMethod(false,"Append",(Object)(_sbcamposcolumnasvisibles.runMethod(true,"ToString"))).runMethod(false,"Append",(Object)(RemoteObject.createImmutable(" from tblOrigenDatos "))).runVoidMethod ("Append",(Object)(_sordensql));
 }else {
 BA.debugLineNum = 6693;BA.debugLine="sbDatos.Append(\"select \").Append(sbCamposColumn";
Debug.JustUpdateDeviceLine();
_sbdatos.runMethod(false,"Append",(Object)(RemoteObject.createImmutable("select "))).runMethod(false,"Append",(Object)(_sbcamposcolumnasvisibles.runMethod(true,"ToString"))).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(" from tblOrigenDatos")));
 };
 BA.debugLineNum = 6701;BA.debugLine="Try";
Debug.JustUpdateDeviceLine();
try { BA.debugLineNum = 6703;BA.debugLine="Log(\"******SIN FILTRO ************\")";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("LogImpl","9168493141",RemoteObject.createImmutable("******SIN FILTRO ************"),0);
 BA.debugLineNum = 6704;BA.debugLine="Log(sbDatos.ToString)";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("LogImpl","9168493142",_sbdatos.runMethod(true,"ToString"),0);
 BA.debugLineNum = 6705;BA.debugLine="Log(\"******************\")";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("LogImpl","9168493143",RemoteObject.createImmutable("******************"),0);
 BA.debugLineNum = 6707;BA.debugLine="rsRegistrosFiltradosVisibles=mSQL.ExecQuery(sbD";
Debug.JustUpdateDeviceLine();
_rsregistrosfiltradosvisibles = __ref.getField(false,"_msql" /*RemoteObject*/ ).runMethod(false,"ExecQuery",(Object)(_sbdatos.runMethod(true,"ToString")));Debug.locals.put("rsRegistrosFiltradosVisibles", _rsregistrosfiltradosvisibles);
 Debug.CheckDeviceExceptions();
} 
       catch (Exception e68) {
			BA.rdebugUtils.runVoidMethod("setLastException",__ref.getField(false, "ba"), e68.toString()); BA.debugLineNum = 6709;BA.debugLine="LogColor(LastException.Message, xui.Color_Red)";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("LogImpl","9168493147",jamtableclv.__c.runMethod(false,"LastException",__ref.getField(false, "ba")).runMethod(true,"getMessage"),__ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"Color_Red"));
 BA.debugLineNum = 6710;BA.debugLine="fx.Msgbox(mParentForm, \"Error SQLite \" & LastEx";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_fx" /*RemoteObject*/ ).runVoidMethodAndSync ("Msgbox",(Object)(__ref.getField(false,"_mparentform" /*RemoteObject*/ )),(Object)(RemoteObject.concat(RemoteObject.createImmutable("Error SQLite "),jamtableclv.__c.runMethod(false,"LastException",__ref.getField(false, "ba")).runMethod(true,"getMessage"),jamtableclv.__c.getField(true,"CRLF"),jamtableclv.__c.getField(true,"CRLF"),_sbdatos.runMethod(true,"ToString"),jamtableclv.__c.getField(true,"CRLF"),jamtableclv.__c.getField(true,"CRLF"),RemoteObject.createImmutable("Avisa al administrador de la aplicación."))),(Object)(RemoteObject.createImmutable("Error")));
 BA.debugLineNum = 6711;BA.debugLine="ExitApplication";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("ExitApplication");
 };
 };
 BA.debugLineNum = 6714;BA.debugLine="Return rsRegistrosFiltradosVisibles";
Debug.JustUpdateDeviceLine();
if (true) return _rsregistrosfiltradosvisibles;
 BA.debugLineNum = 6715;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _gettextopanelinfojamtableclv(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("getTextoPanelInfoJamTableCLV (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,4511);
if (RapidSub.canDelegate("gettextopanelinfojamtableclv")) { return __ref.runUserSub(false, "jamtableclv","gettextopanelinfojamtableclv", __ref);}
 BA.debugLineNum = 4511;BA.debugLine="Public Sub getTextoPanelInfoJamTableCLV As Object";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 4512;BA.debugLine="Return lblInfoJamTableCLV.Text";
Debug.JustUpdateDeviceLine();
if (true) return (__ref.getField(false,"_lblinfojamtableclv" /*RemoteObject*/ ).runMethod(true,"getText"));
 BA.debugLineNum = 4513;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _getusarpclv(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("getUsarPCLV (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,690);
if (RapidSub.canDelegate("getusarpclv")) { return __ref.runUserSub(false, "jamtableclv","getusarpclv", __ref);}
 BA.debugLineNum = 690;BA.debugLine="Sub getUsarPCLV As Boolean";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 691;BA.debugLine="Return mUsarPCLV";
Debug.JustUpdateDeviceLine();
if (true) return __ref.getField(true,"_musarpclv" /*RemoteObject*/ );
 BA.debugLineNum = 692;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(false);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _getvalorsqlcampoitem(RemoteObject __ref,RemoteObject _indexitem,RemoteObject _aliascampobuscado) throws Exception{
try {
		Debug.PushSubsStack("GetValorSQLCampoItem (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7031);
if (RapidSub.canDelegate("getvalorsqlcampoitem")) { return __ref.runUserSub(false, "jamtableclv","getvalorsqlcampoitem", __ref, _indexitem, _aliascampobuscado);}
RemoteObject _valorcampoitembuscado = RemoteObject.declareNull("Object");
RemoteObject _mdataitem = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
RemoteObject _flagcampobuscado = RemoteObject.createImmutable(false);
RemoteObject _k = RemoteObject.createImmutable("");
Debug.locals.put("IndexItem", _indexitem);
Debug.locals.put("AliasCampoBuscado", _aliascampobuscado);
 BA.debugLineNum = 7031;BA.debugLine="Public Sub GetValorSQLCampoItem(IndexItem As Int,";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 7032;BA.debugLine="Dim ValorCampoItemBuscado As Object";
Debug.JustUpdateDeviceLine();
_valorcampoitembuscado = RemoteObject.createNew ("Object");Debug.locals.put("ValorCampoItemBuscado", _valorcampoitembuscado);
 BA.debugLineNum = 7033;BA.debugLine="Dim mDataItem As Map=clvDatos.GetValue(IndexItem)";
Debug.JustUpdateDeviceLine();
_mdataitem = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");
_mdataitem = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.collections.Map"), __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(false,"_getvalue",(Object)(_indexitem)));Debug.locals.put("mDataItem", _mdataitem);Debug.locals.put("mDataItem", _mdataitem);
 BA.debugLineNum = 7034;BA.debugLine="Dim FlagCampoBuscado As Boolean";
Debug.JustUpdateDeviceLine();
_flagcampobuscado = RemoteObject.createImmutable(false);Debug.locals.put("FlagCampoBuscado", _flagcampobuscado);
 BA.debugLineNum = 7035;BA.debugLine="For Each k As String In mDataItem.Keys";
Debug.JustUpdateDeviceLine();
{
final RemoteObject group4 = _mdataitem.runMethod(false,"Keys");
final int groupLen4 = group4.runMethod(true,"getSize").<Integer>get()
;int index4 = 0;
;
for (; index4 < groupLen4;index4++){
_k = BA.ObjectToString(group4.runMethod(false,"Get",index4));Debug.locals.put("k", _k);
Debug.locals.put("k", _k);
 BA.debugLineNum = 7036;BA.debugLine="If k=AliasCampoBuscado Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_k,_aliascampobuscado)) { 
 BA.debugLineNum = 7037;BA.debugLine="ValorCampoItemBuscado=mDataItem.Get(k)";
Debug.JustUpdateDeviceLine();
_valorcampoitembuscado = _mdataitem.runMethod(false,"Get",(Object)((_k)));Debug.locals.put("ValorCampoItemBuscado", _valorcampoitembuscado);
 BA.debugLineNum = 7038;BA.debugLine="FlagCampoBuscado=True";
Debug.JustUpdateDeviceLine();
_flagcampobuscado = jamtableclv.__c.getField(true,"True");Debug.locals.put("FlagCampoBuscado", _flagcampobuscado);
 BA.debugLineNum = 7039;BA.debugLine="Exit";
Debug.JustUpdateDeviceLine();
if (true) break;
 };
 }
}Debug.locals.put("k", _k);
;
 BA.debugLineNum = 7042;BA.debugLine="If FlagCampoBuscado Then";
Debug.JustUpdateDeviceLine();
if (_flagcampobuscado.<Boolean>get().booleanValue()) { 
 BA.debugLineNum = 7043;BA.debugLine="Log(\"jamTableCLV ValorCampoItemBuscado: \" & Valo";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("LogImpl","9171180044",RemoteObject.concat(RemoteObject.createImmutable("jamTableCLV ValorCampoItemBuscado: "),_valorcampoitembuscado),0);
 BA.debugLineNum = 7044;BA.debugLine="Return ValorCampoItemBuscado";
Debug.JustUpdateDeviceLine();
if (true) return _valorcampoitembuscado;
 }else {
 BA.debugLineNum = 7048;BA.debugLine="LogColor(\"campo \"& AliasCampoBuscado & \" no exis";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("LogImpl","9171180049",RemoteObject.concat(RemoteObject.createImmutable("campo "),_aliascampobuscado,RemoteObject.createImmutable(" no existe en la tabla SQL")),__ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"Color_Red"));
 BA.debugLineNum = 7051;BA.debugLine="fx.Msgbox(mParentForm, \"El alias campo \"& AliasC";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_fx" /*RemoteObject*/ ).runVoidMethodAndSync ("Msgbox",(Object)(__ref.getField(false,"_mparentform" /*RemoteObject*/ )),(Object)(RemoteObject.concat(RemoteObject.createImmutable("El alias campo "),_aliascampobuscado,RemoteObject.createImmutable(" no existe en la tabla SQL."),jamtableclv.__c.getField(true,"CRLF"),jamtableclv.__c.getField(true,"CRLF"),RemoteObject.createImmutable("Avisa al administrador de la aplicación."))),(Object)(RemoteObject.createImmutable("Aviso")));
 BA.debugLineNum = 7052;BA.debugLine="ExitApplication";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("ExitApplication");
 BA.debugLineNum = 7053;BA.debugLine="Return Null";
Debug.JustUpdateDeviceLine();
if (true) return jamtableclv.__c.getField(false,"Null");
 };
 BA.debugLineNum = 7055;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _getvalue(RemoteObject __ref,RemoteObject _index) throws Exception{
try {
		Debug.PushSubsStack("GetValue (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6888);
if (RapidSub.canDelegate("getvalue")) { return __ref.runUserSub(false, "jamtableclv","getvalue", __ref, _index);}
Debug.locals.put("Index", _index);
 BA.debugLineNum = 6888;BA.debugLine="public Sub GetValue(Index As Int) As Object";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6889;BA.debugLine="Return clvDatos.GetValue(Index)";
Debug.JustUpdateDeviceLine();
if (true) return __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(false,"_getvalue",(Object)(_index));
 BA.debugLineNum = 6890;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _getwidth(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("getWidth (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6871);
if (RapidSub.canDelegate("getwidth")) { return __ref.runUserSub(false, "jamtableclv","getwidth", __ref);}
 BA.debugLineNum = 6871;BA.debugLine="public Sub getWidth As Int";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6872;BA.debugLine="Return clvDatos.AsView.Width";
Debug.JustUpdateDeviceLine();
if (true) return BA.numberCast(int.class, __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(false,"_asview").runMethod(true,"getWidth"));
 BA.debugLineNum = 6873;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(0);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _habilitarpclv(RemoteObject __ref,RemoteObject _habilitar) throws Exception{
try {
		Debug.PushSubsStack("HabilitarPCLV (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,699);
if (RapidSub.canDelegate("habilitarpclv")) { return __ref.runUserSub(false, "jamtableclv","habilitarpclv", __ref, _habilitar);}
Debug.locals.put("Habilitar", _habilitar);
 BA.debugLineNum = 699;BA.debugLine="private Sub HabilitarPCLV(Habilitar As Boolean)";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 700;BA.debugLine="If Habilitar Then";
Debug.JustUpdateDeviceLine();
if (_habilitar.<Boolean>get().booleanValue()) { 
 BA.debugLineNum = 701;BA.debugLine="If PCLV.IsInitialized=False Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",__ref.getField(false,"_pclv" /*RemoteObject*/ ).runMethod(true,"IsInitialized" /*RemoteObject*/ ),jamtableclv.__c.getField(true,"False"))) { 
 BA.debugLineNum = 702;BA.debugLine="PCLV.Initialize(Me, \"PCLV\", clvDatos)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_pclv" /*RemoteObject*/ ).runClassMethod (b4j.docU.preoptimizedclv.class, "_initialize" /*RemoteObject*/ ,__ref.getField(false, "ba"),(Object)(__ref),(Object)(BA.ObjectToString("PCLV")),(Object)(__ref.getField(false,"_clvdatos" /*RemoteObject*/ )));
 };
 };
 BA.debugLineNum = 705;BA.debugLine="SetCLVScrollBars(clvDatos,Not(Habilitar))  'si se";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_setclvscrollbars" /*RemoteObject*/ ,(Object)(__ref.getField(false,"_clvdatos" /*RemoteObject*/ )),(Object)(jamtableclv.__c.runMethod(true,"Not",(Object)(_habilitar))));
 BA.debugLineNum = 706;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _habilitartableclv(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("HabilitarTableCLV (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6782);
if (RapidSub.canDelegate("habilitartableclv")) { return __ref.runUserSub(false, "jamtableclv","habilitartableclv", __ref);}
RemoteObject _n = RemoteObject.declareNull("anywheresoftware.b4j.objects.NodeWrapper.ConcreteNodeWrapper");
 BA.debugLineNum = 6782;BA.debugLine="Sub HabilitarTableCLV";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6783;BA.debugLine="If lstNodosHabilitados.IsInitialized=False Then l";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",__ref.getField(false,"_lstnodoshabilitados" /*RemoteObject*/ ).runMethod(true,"IsInitialized"),jamtableclv.__c.getField(true,"False"))) { 
__ref.getField(false,"_lstnodoshabilitados" /*RemoteObject*/ ).runVoidMethod ("Initialize");};
 BA.debugLineNum = 6785;BA.debugLine="For Each n As Node In lstNodosHabilitados";
Debug.JustUpdateDeviceLine();
_n = RemoteObject.createNew ("anywheresoftware.b4j.objects.NodeWrapper.ConcreteNodeWrapper");
{
final RemoteObject group2 = __ref.getField(false,"_lstnodoshabilitados" /*RemoteObject*/ );
final int groupLen2 = group2.runMethod(true,"getSize").<Integer>get()
;int index2 = 0;
;
for (; index2 < groupLen2;index2++){
_n = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.NodeWrapper.ConcreteNodeWrapper"), group2.runMethod(false,"Get",index2));Debug.locals.put("n", _n);
Debug.locals.put("n", _n);
 BA.debugLineNum = 6786;BA.debugLine="n.Enabled=True";
Debug.JustUpdateDeviceLine();
_n.runMethod(true,"setEnabled",jamtableclv.__c.getField(true,"True"));
 }
}Debug.locals.put("n", _n);
;
 BA.debugLineNum = 6788;BA.debugLine="lstNodosHabilitados.Initialize";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstnodoshabilitados" /*RemoteObject*/ ).runVoidMethod ("Initialize");
 BA.debugLineNum = 6789;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _hextocolor(RemoteObject __ref,RemoteObject _hex) throws Exception{
try {
		Debug.PushSubsStack("HexToColor (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7670);
if (RapidSub.canDelegate("hextocolor")) { return __ref.runUserSub(false, "jamtableclv","hextocolor", __ref, _hex);}
RemoteObject _bc = RemoteObject.declareNull("anywheresoftware.b4a.agraham.byteconverter.ByteConverter");
RemoteObject _ints = null;
Debug.locals.put("Hex", _hex);
 BA.debugLineNum = 7670;BA.debugLine="Private Sub HexToColor(Hex As String) As Int";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 7671;BA.debugLine="Dim bc As ByteConverter";
Debug.JustUpdateDeviceLine();
_bc = RemoteObject.createNew ("anywheresoftware.b4a.agraham.byteconverter.ByteConverter");Debug.locals.put("bc", _bc);
 BA.debugLineNum = 7672;BA.debugLine="If Hex.StartsWith(\"#\") Then";
Debug.JustUpdateDeviceLine();
if (_hex.runMethod(true,"startsWith",(Object)(RemoteObject.createImmutable("#"))).<Boolean>get().booleanValue()) { 
 BA.debugLineNum = 7673;BA.debugLine="Hex = Hex.SubString(1)";
Debug.JustUpdateDeviceLine();
_hex = _hex.runMethod(true,"substring",(Object)(BA.numberCast(int.class, 1)));Debug.locals.put("Hex", _hex);
 }else 
{ BA.debugLineNum = 7674;BA.debugLine="Else If Hex.StartsWith(\"0x\") Then";
Debug.JustUpdateDeviceLine();
if (_hex.runMethod(true,"startsWith",(Object)(RemoteObject.createImmutable("0x"))).<Boolean>get().booleanValue()) { 
 BA.debugLineNum = 7675;BA.debugLine="Hex = Hex.SubString(2)";
Debug.JustUpdateDeviceLine();
_hex = _hex.runMethod(true,"substring",(Object)(BA.numberCast(int.class, 2)));Debug.locals.put("Hex", _hex);
 }}
;
 BA.debugLineNum = 7677;BA.debugLine="If Hex.Length=6 Then Hex=\"FF\" & Hex";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_hex.runMethod(true,"length"),BA.numberCast(double.class, 6))) { 
_hex = RemoteObject.concat(RemoteObject.createImmutable("FF"),_hex);Debug.locals.put("Hex", _hex);};
 BA.debugLineNum = 7678;BA.debugLine="Dim ints() As Int = bc.IntsFromBytes(bc.HexToByte";
Debug.JustUpdateDeviceLine();
_ints = _bc.runMethod(false,"IntsFromBytes",(Object)(_bc.runMethod(false,"HexToBytes",(Object)(_hex))));Debug.locals.put("ints", _ints);Debug.locals.put("ints", _ints);
 BA.debugLineNum = 7679;BA.debugLine="Return ints(0)";
Debug.JustUpdateDeviceLine();
if (true) return _ints.getArrayElement(true,BA.numberCast(int.class, 0));
 BA.debugLineNum = 7680;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(0);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _imagenlabelfiltros(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("ImagenLabelFiltros (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,2085);
if (RapidSub.canDelegate("imagenlabelfiltros")) { return __ref.runUserSub(false, "jamtableclv","imagenlabelfiltros", __ref);}
RemoteObject _bmp = RemoteObject.declareNull("anywheresoftware.b4a.objects.B4XViewWrapper.B4XBitmapWrapper");
RemoteObject _xlblfiltros = RemoteObject.declareNull("anywheresoftware.b4a.objects.B4XViewWrapper");
RemoteObject _imgv = RemoteObject.declareNull("anywheresoftware.b4j.objects.ImageViewWrapper");
RemoteObject _ximgv = RemoteObject.declareNull("anywheresoftware.b4a.objects.B4XViewWrapper");
RemoteObject _jolblfiltrosjamtableview = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
 BA.debugLineNum = 2085;BA.debugLine="Private Sub ImagenLabelFiltros";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 2094;BA.debugLine="If Not(FiltrosVisibles) Then";
Debug.JustUpdateDeviceLine();
if (jamtableclv.__c.runMethod(true,"Not",(Object)(__ref.getField(true,"_filtrosvisibles" /*RemoteObject*/ ))).<Boolean>get().booleanValue()) { 
 BA.debugLineNum = 2095;BA.debugLine="Select Case mEstiloMenu";
Debug.JustUpdateDeviceLine();
switch (BA.switchObjectToInt(__ref.getField(true,"_mestilomenu" /*RemoteObject*/ ),BA.ObjectToString("HandDrawn"),BA.ObjectToString("MaterialIcons"))) {
case 0: {
 BA.debugLineNum = 2098;BA.debugLine="Dim bmp As B4XBitmap = xui.LoadBitmap(File.Dir";
Debug.JustUpdateDeviceLine();
_bmp = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper.B4XBitmapWrapper");
_bmp = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"LoadBitmap",(Object)(jamtableclv.__c.getField(false,"File").runMethod(true,"getDirAssets")),(Object)(RemoteObject.createImmutable("filter32verde.png")));Debug.locals.put("bmp", _bmp);Debug.locals.put("bmp", _bmp);
 break; }
case 1: {
 BA.debugLineNum = 2101;BA.debugLine="Dim bmp As B4XBitmap = xui.LoadBitmap(File.Dir";
Debug.JustUpdateDeviceLine();
_bmp = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper.B4XBitmapWrapper");
_bmp = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"LoadBitmap",(Object)(jamtableclv.__c.getField(false,"File").runMethod(true,"getDirAssets")),(Object)(RemoteObject.createImmutable("outline_filter_alt_black_24dp.png")));Debug.locals.put("bmp", _bmp);Debug.locals.put("bmp", _bmp);
 break; }
}
;
 }else {
 BA.debugLineNum = 2104;BA.debugLine="Select Case mEstiloMenu";
Debug.JustUpdateDeviceLine();
switch (BA.switchObjectToInt(__ref.getField(true,"_mestilomenu" /*RemoteObject*/ ),BA.ObjectToString("HandDrawn"),BA.ObjectToString("MaterialIcons"))) {
case 0: {
 BA.debugLineNum = 2107;BA.debugLine="Dim bmp As B4XBitmap = xui.LoadBitmap(File.Dir";
Debug.JustUpdateDeviceLine();
_bmp = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper.B4XBitmapWrapper");
_bmp = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"LoadBitmap",(Object)(jamtableclv.__c.getField(false,"File").runMethod(true,"getDirAssets")),(Object)(RemoteObject.createImmutable("filter32rojo.png")));Debug.locals.put("bmp", _bmp);Debug.locals.put("bmp", _bmp);
 break; }
case 1: {
 BA.debugLineNum = 2110;BA.debugLine="Dim bmp As B4XBitmap = xui.LoadBitmap(File.Dir";
Debug.JustUpdateDeviceLine();
_bmp = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper.B4XBitmapWrapper");
_bmp = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"LoadBitmap",(Object)(jamtableclv.__c.getField(false,"File").runMethod(true,"getDirAssets")),(Object)(RemoteObject.createImmutable("outline_filter_alt_off_black_24dp.png")));Debug.locals.put("bmp", _bmp);Debug.locals.put("bmp", _bmp);
 break; }
}
;
 };
 BA.debugLineNum = 2113;BA.debugLine="Dim xLblFiltros As B4XView=lblMostrarEliminarFilt";
Debug.JustUpdateDeviceLine();
_xlblfiltros = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");
_xlblfiltros = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper"), __ref.getField(false,"_lblmostrareliminarfiltros" /*RemoteObject*/ ).getObject());Debug.locals.put("xLblFiltros", _xlblfiltros);Debug.locals.put("xLblFiltros", _xlblfiltros);
 BA.debugLineNum = 2114;BA.debugLine="Dim imgV As ImageView";
Debug.JustUpdateDeviceLine();
_imgv = RemoteObject.createNew ("anywheresoftware.b4j.objects.ImageViewWrapper");Debug.locals.put("imgV", _imgv);
 BA.debugLineNum = 2115;BA.debugLine="imgV.Initialize(\"\")";
Debug.JustUpdateDeviceLine();
_imgv.runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(RemoteObject.createImmutable("")));
 BA.debugLineNum = 2116;BA.debugLine="Dim xImgV As B4XView=imgV";
Debug.JustUpdateDeviceLine();
_ximgv = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");
_ximgv = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper"), _imgv.getObject());Debug.locals.put("xImgV", _ximgv);Debug.locals.put("xImgV", _ximgv);
 BA.debugLineNum = 2117;BA.debugLine="xImgV.Width=xLblFiltros.Width";
Debug.JustUpdateDeviceLine();
_ximgv.runMethod(true,"setWidth",_xlblfiltros.runMethod(true,"getWidth"));
 BA.debugLineNum = 2118;BA.debugLine="xImgV.Height=xLblFiltros.Height";
Debug.JustUpdateDeviceLine();
_ximgv.runMethod(true,"setHeight",_xlblfiltros.runMethod(true,"getHeight"));
 BA.debugLineNum = 2119;BA.debugLine="FillImageToView(bmp, xImgV)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_fillimagetoview" /*RemoteObject*/ ,(Object)(_bmp),(Object)(_ximgv));
 BA.debugLineNum = 2120;BA.debugLine="Dim JOlblFiltrosJamTableView As JavaObject=lblMos";
Debug.JustUpdateDeviceLine();
_jolblfiltrosjamtableview = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");
_jolblfiltrosjamtableview = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), __ref.getField(false,"_lblmostrareliminarfiltros" /*RemoteObject*/ ).getObject());Debug.locals.put("JOlblFiltrosJamTableView", _jolblfiltrosjamtableview);Debug.locals.put("JOlblFiltrosJamTableView", _jolblfiltrosjamtableview);
 BA.debugLineNum = 2122;BA.debugLine="JOlblFiltrosJamTableView.RunMethod(\"setGraphic\",";
Debug.JustUpdateDeviceLine();
_jolblfiltrosjamtableview.runVoidMethod ("RunMethod",(Object)(BA.ObjectToString("setGraphic")),(Object)(RemoteObject.createNewArray("Object",new int[] {1},new Object[] {(_imgv.getObject())})));
 BA.debugLineNum = 2123;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static void  _initclass(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("InitClass (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,506);
if (RapidSub.canDelegate("initclass")) { __ref.runUserSub(false, "jamtableclv","initclass", __ref); return;}
ResumableSub_InitClass rsub = new ResumableSub_InitClass(null,__ref);
rsub.resume(null, null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_InitClass extends BA.ResumableSub {
public ResumableSub_InitClass(b4j.docU.jamtableclv parent,RemoteObject __ref) {
this.parent = parent;
this.__ref = __ref;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _joctxmn = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("InitClass (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,506);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
return;

case 0:
//C
this.state = -1;
Debug.locals.put("_ref", __ref);
 BA.debugLineNum = 508;BA.debugLine="Log(\"InitClass jamTCLV\")";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9160169986",RemoteObject.createImmutable("InitClass jamTCLV"),0);
 BA.debugLineNum = 514;BA.debugLine="Log(\"lblFirst IsInitialized: \" & lblFirst.IsIniti";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9160169992",RemoteObject.concat(RemoteObject.createImmutable("lblFirst IsInitialized: "),__ref.getField(false,"_lblfirst" /*RemoteObject*/ ).runMethod(true,"IsInitialized")),0);
 BA.debugLineNum = 521;BA.debugLine="lblFirst.Enabled=True";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lblfirst" /*RemoteObject*/ ).runMethod(true,"setEnabled",parent.__c.getField(true,"True"));
 BA.debugLineNum = 522;BA.debugLine="lblNext.Enabled=True";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lblnext" /*RemoteObject*/ ).runMethod(true,"setEnabled",parent.__c.getField(true,"True"));
 BA.debugLineNum = 523;BA.debugLine="lblPrior.Enabled=True";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lblprior" /*RemoteObject*/ ).runMethod(true,"setEnabled",parent.__c.getField(true,"True"));
 BA.debugLineNum = 524;BA.debugLine="lblLast.Enabled=True";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lbllast" /*RemoteObject*/ ).runMethod(true,"setEnabled",parent.__c.getField(true,"True"));
 BA.debugLineNum = 525;BA.debugLine="lblPageRecords.Enabled=True";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lblpagerecords" /*RemoteObject*/ ).runMethod(true,"setEnabled",parent.__c.getField(true,"True"));
 BA.debugLineNum = 527;BA.debugLine="lblPageRecords.Text=\"\"";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lblpagerecords" /*RemoteObject*/ ).runMethod(true,"setText",BA.ObjectToString(""));
 BA.debugLineNum = 547;BA.debugLine="CSSUtils.SetStyleProperty(MenuBar,\"-fx-font-size\"";
Debug.JustUpdateDeviceLine();
parent._cssutils.runVoidMethod ("_setstyleproperty",RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.NodeWrapper.ConcreteNodeWrapper"), __ref.getField(false,"_menubar" /*RemoteObject*/ ).getObject()),(Object)(BA.ObjectToString("-fx-font-size")),(Object)(BA.NumberToString(__ref.getField(true,"_mfontsizemenubar" /*RemoteObject*/ ))));
 BA.debugLineNum = 548;BA.debugLine="CSSUtils.SetStyleProperty(MenuBar,\"-fx-selection-";
Debug.JustUpdateDeviceLine();
parent._cssutils.runVoidMethod ("_setstyleproperty",RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.NodeWrapper.ConcreteNodeWrapper"), __ref.getField(false,"_menubar" /*RemoteObject*/ ).getObject()),(Object)(BA.ObjectToString("-fx-selection-bar")),(Object)(RemoteObject.createImmutable("#00FA9A")));
 BA.debugLineNum = 549;BA.debugLine="Dim joCtxMn As JavaObject=mContextMenu";
Debug.JustUpdateDeviceLine();
_joctxmn = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");
_joctxmn = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), __ref.getField(false,"_mcontextmenu" /*RemoteObject*/ ).getObject());Debug.locals.put("joCtxMn", _joctxmn);Debug.locals.put("joCtxMn", _joctxmn);
 BA.debugLineNum = 550;BA.debugLine="joCtxMn.RunMethod(\"setStyle\",Array($\"-fx-selectio";
Debug.JustUpdateDeviceLine();
_joctxmn.runVoidMethod ("RunMethod",(Object)(BA.ObjectToString("setStyle")),(Object)(RemoteObject.createNewArray("Object",new int[] {1},new Object[] {((RemoteObject.createImmutable("-fx-selection-bar:#00FA9A")))})));
 BA.debugLineNum = 552;BA.debugLine="ConfiguracionInicialMenus";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_configuracioninicialmenus" /*RemoteObject*/ );
 BA.debugLineNum = 556;BA.debugLine="pnlBaseCLVDatos.LoadLayout(\"scrCLVDatosJamTableCL";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_pnlbaseclvdatos" /*RemoteObject*/ ).runVoidMethodAndSync ("LoadLayout",(Object)(RemoteObject.createImmutable("scrCLVDatosJamTableCLV")),__ref.getField(false, "ba"));
 BA.debugLineNum = 578;BA.debugLine="CLVSelections.Initialize(clvDatos)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvselections" /*RemoteObject*/ ).runClassMethod (b4j.docU.clvselectionsjamtableclv.class, "_initialize" /*RemoteObject*/ ,__ref.getField(false, "ba"),(Object)(__ref.getField(false,"_clvdatos" /*RemoteObject*/ )));
 BA.debugLineNum = 579;BA.debugLine="setModoSeleccionItems(mModoSeleccionItems)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_setmodoseleccionitems" /*RemoteObject*/ ,(Object)(__ref.getField(true,"_mmodoseleccionitems" /*RemoteObject*/ )));
 BA.debugLineNum = 581;BA.debugLine="pnlBaseJamCircularProgressBar.LoadLayout(\"scrJamC";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_pnlbasejamcircularprogressbar" /*RemoteObject*/ ).runVoidMethodAndSync ("LoadLayout",(Object)(RemoteObject.createImmutable("scrJamCircularProgressBarJamTableCLV")),__ref.getField(false, "ba"));
 BA.debugLineNum = 583;BA.debugLine="Log(clvDatos.AsView.Width)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9160170061",BA.NumberToString(__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(false,"_asview").runMethod(true,"getWidth")),0);
 BA.debugLineNum = 586;BA.debugLine="HabilitarPCLV(mUsarPCLV)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_habilitarpclv" /*RemoteObject*/ ,(Object)(__ref.getField(true,"_musarpclv" /*RemoteObject*/ )));
 BA.debugLineNum = 591;BA.debugLine="setColorPanelPresionado(mPressedPanelColor)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_setcolorpanelpresionado" /*RemoteObject*/ ,(Object)(__ref.getField(true,"_mpressedpanelcolor" /*RemoteObject*/ )));
 BA.debugLineNum = 592;BA.debugLine="setColorPanelSeleccionado(mSelectedPanelColor)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_setcolorpanelseleccionado" /*RemoteObject*/ ,(Object)(__ref.getField(true,"_mselectedpanelcolor" /*RemoteObject*/ )));
 BA.debugLineNum = 594;BA.debugLine="setAlturaSeparadorPaneles(mAlturaSeparadorPaneles";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_setalturaseparadorpaneles" /*RemoteObject*/ ,(Object)(__ref.getField(true,"_malturaseparadorpaneles" /*RemoteObject*/ )));
 BA.debugLineNum = 596;BA.debugLine="keycode.InitializeStatic(\"javafx.scene.input.KeyC";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_keycode" /*RemoteObject*/ ).runVoidMethod ("InitializeStatic",(Object)(RemoteObject.createImmutable("javafx.scene.input.KeyCode")));
 BA.debugLineNum = 602;BA.debugLine="PosicionDimensionesCLVFiltros";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_posiciondimensionesclvfiltros" /*RemoteObject*/ );
 BA.debugLineNum = 603;BA.debugLine="Sleep(0)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("Sleep",__ref.getField(false, "ba"),anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "initclass"),BA.numberCast(int.class, 0));
this.state = 1;
return;
case 1:
//C
this.state = -1;
;
 BA.debugLineNum = 620;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static RemoteObject  _initialize(RemoteObject __ref,RemoteObject _ba,RemoteObject _callback,RemoteObject _eventname) throws Exception{
try {
		Debug.PushSubsStack("Initialize (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,279);
if (RapidSub.canDelegate("initialize")) { return __ref.runUserSub(false, "jamtableclv","initialize", __ref, _ba, _callback, _eventname);}
__ref.runVoidMethodAndSync("innerInitializeHelper", _ba);
RemoteObject _p = RemoteObject.declareNull("anywheresoftware.b4a.objects.B4XViewWrapper");
RemoteObject _jo = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
Debug.locals.put("ba", _ba);
Debug.locals.put("Callback", _callback);
Debug.locals.put("EventName", _eventname);
 BA.debugLineNum = 279;BA.debugLine="Public Sub Initialize (Callback As Object, EventNa";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 280;BA.debugLine="mEventName = EventName";
Debug.JustUpdateDeviceLine();
__ref.setField ("_meventname" /*RemoteObject*/ ,_eventname);
 BA.debugLineNum = 281;BA.debugLine="mCallBack = Callback";
Debug.JustUpdateDeviceLine();
__ref.setField ("_mcallback" /*RemoteObject*/ ,_callback);
 BA.debugLineNum = 282;BA.debugLine="Dim p As B4XView = xui.CreatePanel(\"\")";
Debug.JustUpdateDeviceLine();
_p = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");
_p = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"CreatePanel",__ref.getField(false, "ba"),(Object)(RemoteObject.createImmutable("")));Debug.locals.put("p", _p);Debug.locals.put("p", _p);
 BA.debugLineNum = 283;BA.debugLine="p.SetLayoutAnimated(0, 0, 0, 1dip, 1dip)";
Debug.JustUpdateDeviceLine();
_p.runVoidMethod ("SetLayoutAnimated",(Object)(BA.numberCast(int.class, 0)),(Object)(BA.numberCast(double.class, 0)),(Object)(BA.numberCast(double.class, 0)),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 1))))),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 1))))));
 BA.debugLineNum = 284;BA.debugLine="MeasurementCanvas.Initialize(p)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_measurementcanvas" /*RemoteObject*/ ).runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(_p));
 BA.debugLineNum = 294;BA.debugLine="Dim jo As JavaObject = fx.PrimaryScreen";
Debug.JustUpdateDeviceLine();
_jo = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");
_jo = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), __ref.getField(false,"_fx" /*RemoteObject*/ ).runMethod(false,"getPrimaryScreen").getObject());Debug.locals.put("jo", _jo);Debug.locals.put("jo", _jo);
 BA.debugLineNum = 295;BA.debugLine="Dim WindowsScale As Float = jo.RunMethod(\"getOutp";
Debug.JustUpdateDeviceLine();
jamtableclv._windowsscale = BA.numberCast(float.class, _jo.runMethod(false,"RunMethod",(Object)(BA.ObjectToString("getOutputScaleX")),(Object)((jamtableclv.__c.getField(false,"Null")))));__ref.setField("_windowsscale",jamtableclv._windowsscale);
 BA.debugLineNum = 297;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _insertaritem(RemoteObject __ref,RemoteObject _indexitem,RemoteObject _pnl,RemoteObject _valueitem) throws Exception{
try {
		Debug.PushSubsStack("InsertarItem (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,8035);
if (RapidSub.canDelegate("insertaritem")) { return __ref.runUserSub(false, "jamtableclv","insertaritem", __ref, _indexitem, _pnl, _valueitem);}
Debug.locals.put("IndexItem", _indexitem);
Debug.locals.put("pnl", _pnl);
Debug.locals.put("ValueItem", _valueitem);
 BA.debugLineNum = 8035;BA.debugLine="public Sub InsertarItem(IndexItem As Int, pnl As B";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 8036;BA.debugLine="clvDatos.InsertAt(IndexItem,pnl,ValueItem)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runVoidMethod ("_insertat",(Object)(_indexitem),(Object)(_pnl),(Object)(_valueitem));
 BA.debugLineNum = 8037;BA.debugLine="If mUsarPCLV Then PCLV.ListChangedExternally";
Debug.JustUpdateDeviceLine();
if (__ref.getField(true,"_musarpclv" /*RemoteObject*/ ).<Boolean>get().booleanValue()) { 
__ref.getField(false,"_pclv" /*RemoteObject*/ ).runClassMethod (b4j.docU.preoptimizedclv.class, "_listchangedexternally" /*void*/ );};
 BA.debugLineNum = 8038;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _iranodoitemanterior(RemoteObject __ref,RemoteObject _nodoactual) throws Exception{
try {
		Debug.PushSubsStack("IrANodoItemAnterior (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,8319);
if (RapidSub.canDelegate("iranodoitemanterior")) { return __ref.runUserSub(false, "jamtableclv","iranodoitemanterior", __ref, _nodoactual);}
RemoteObject _b4xviewitemanterior = RemoteObject.declareNull("anywheresoftware.b4a.objects.B4XViewWrapper");
RemoteObject _indexitemanterior = RemoteObject.createImmutable(0);
Debug.locals.put("NodoActual", _nodoactual);
 BA.debugLineNum = 8319;BA.debugLine="Sub IrANodoItemAnterior(NodoActual As B4XView)";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 8320;BA.debugLine="Dim B4xViewItemAnterior As B4XView=NodoItemAnteri";
Debug.JustUpdateDeviceLine();
_b4xviewitemanterior = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");
_b4xviewitemanterior = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_nodoitemanterior" /*RemoteObject*/ ,(Object)(_nodoactual));Debug.locals.put("B4xViewItemAnterior", _b4xviewitemanterior);Debug.locals.put("B4xViewItemAnterior", _b4xviewitemanterior);
 BA.debugLineNum = 8321;BA.debugLine="If B4xViewItemAnterior.IsInitialized Then";
Debug.JustUpdateDeviceLine();
if (_b4xviewitemanterior.runMethod(true,"IsInitialized").<Boolean>get().booleanValue()) { 
 BA.debugLineNum = 8322;BA.debugLine="Dim IndexItemAnterior As Int=clvDatos.GetItemFro";
Debug.JustUpdateDeviceLine();
_indexitemanterior = __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"_getitemfromview",(Object)(_b4xviewitemanterior));Debug.locals.put("IndexItemAnterior", _indexitemanterior);Debug.locals.put("IndexItemAnterior", _indexitemanterior);
 BA.debugLineNum = 8323;BA.debugLine="If IndexItemAnterior<clvDatos.FirstVisibleIndex";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("<",_indexitemanterior,BA.numberCast(double.class, __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"_getfirstvisibleindex")))) { 
 BA.debugLineNum = 8324;BA.debugLine="clvDatos.ScrollToItem(IndexItemAnterior)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runVoidMethod ("_scrolltoitem",(Object)(_indexitemanterior));
 };
 BA.debugLineNum = 8326;BA.debugLine="B4xViewItemAnterior.RequestFocus";
Debug.JustUpdateDeviceLine();
_b4xviewitemanterior.runVoidMethod ("RequestFocus");
 };
 BA.debugLineNum = 8328;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static void  _iranodoitemsiguiente(RemoteObject __ref,RemoteObject _nodoactual) throws Exception{
try {
		Debug.PushSubsStack("IrANodoItemSiguiente (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,8300);
if (RapidSub.canDelegate("iranodoitemsiguiente")) { __ref.runUserSub(false, "jamtableclv","iranodoitemsiguiente", __ref, _nodoactual); return;}
ResumableSub_IrANodoItemSiguiente rsub = new ResumableSub_IrANodoItemSiguiente(null,__ref,_nodoactual);
rsub.resume(null, null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_IrANodoItemSiguiente extends BA.ResumableSub {
public ResumableSub_IrANodoItemSiguiente(b4j.docU.jamtableclv parent,RemoteObject __ref,RemoteObject _nodoactual) {
this.parent = parent;
this.__ref = __ref;
this._nodoactual = _nodoactual;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _nodoactual;
RemoteObject _b4xviewitemsiguiente = RemoteObject.declareNull("anywheresoftware.b4a.objects.B4XViewWrapper");
RemoteObject _indexitem = RemoteObject.createImmutable(0);
RemoteObject _item = RemoteObject.declareNull("b4j.example.customlistview._clvitem");
RemoteObject _difoffset = RemoteObject.createImmutable(0);
RemoteObject _itemvisibleincompleto = RemoteObject.createImmutable(false);

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("IrANodoItemSiguiente (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,8300);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
return;

case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
Debug.locals.put("NodoActual", _nodoactual);
 BA.debugLineNum = 8301;BA.debugLine="Dim B4xViewItemSiguiente As B4XView=NodoItemSigui";
Debug.JustUpdateDeviceLine();
_b4xviewitemsiguiente = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");
_b4xviewitemsiguiente = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_nodoitemsiguiente" /*RemoteObject*/ ,(Object)(_nodoactual));Debug.locals.put("B4xViewItemSiguiente", _b4xviewitemsiguiente);Debug.locals.put("B4xViewItemSiguiente", _b4xviewitemsiguiente);
 BA.debugLineNum = 8302;BA.debugLine="If B4xViewItemSiguiente.IsInitialized Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//if
this.state = 12;
if (_b4xviewitemsiguiente.runMethod(true,"IsInitialized").<Boolean>get().booleanValue()) { 
this.state = 3;
}if (true) break;

case 3:
//C
this.state = 4;
 BA.debugLineNum = 8303;BA.debugLine="Dim IndexItem As Int=clvDatos.GetItemFromView(B4";
Debug.JustUpdateDeviceLine();
_indexitem = __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"_getitemfromview",(Object)(_b4xviewitemsiguiente));Debug.locals.put("IndexItem", _indexitem);Debug.locals.put("IndexItem", _indexitem);
 BA.debugLineNum = 8304;BA.debugLine="If IndexItem>clvDatos.LastVisibleIndex Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 4:
//if
this.state = 7;
if (RemoteObject.solveBoolean(">",_indexitem,BA.numberCast(double.class, __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"_getlastvisibleindex")))) { 
this.state = 6;
}if (true) break;

case 6:
//C
this.state = 7;
 BA.debugLineNum = 8305;BA.debugLine="clvDatos.ScrollToItem(clvDatos.FirstVisibleInde";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runVoidMethod ("_scrolltoitem",(Object)(RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"_getfirstvisibleindex"),RemoteObject.createImmutable(1)}, "+",1, 1)));
 BA.debugLineNum = 8306;BA.debugLine="Sleep(100)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("Sleep",__ref.getField(false, "ba"),anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "iranodoitemsiguiente"),BA.numberCast(int.class, 100));
this.state = 13;
return;
case 13:
//C
this.state = 7;
;
 if (true) break;

case 7:
//C
this.state = 8;
;
 BA.debugLineNum = 8308;BA.debugLine="Dim Item As CLVItem=clvDatos.GetRawListItem(Inde";
Debug.JustUpdateDeviceLine();
_item = __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(false,"_getrawlistitem",(Object)(_indexitem));Debug.locals.put("Item", _item);Debug.locals.put("Item", _item);
 BA.debugLineNum = 8309;BA.debugLine="Dim DifOffset As Double=Item.Offset + Item.Size";
Debug.JustUpdateDeviceLine();
_difoffset = RemoteObject.solve(new RemoteObject[] {_item.getField(true,"Offset"),_item.getField(true,"Size"),(RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).getField(false,"_sv").runMethod(true,"getScrollViewOffsetY"),__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).getField(false,"_sv").runMethod(true,"getHeight")}, "+",1, 0))}, "+-",2, 0);Debug.locals.put("DifOffset", _difoffset);Debug.locals.put("DifOffset", _difoffset);
 BA.debugLineNum = 8310;BA.debugLine="Dim ItemVisibleIncompleto As Boolean=DifOffset>0";
Debug.JustUpdateDeviceLine();
_itemvisibleincompleto = BA.ObjectToBoolean(RemoteObject.solveBoolean(">",_difoffset,BA.numberCast(double.class, 0)));Debug.locals.put("ItemVisibleIncompleto", _itemvisibleincompleto);Debug.locals.put("ItemVisibleIncompleto", _itemvisibleincompleto);
 BA.debugLineNum = 8311;BA.debugLine="If ItemVisibleIncompleto Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 8:
//if
this.state = 11;
if (_itemvisibleincompleto.<Boolean>get().booleanValue()) { 
this.state = 10;
}if (true) break;

case 10:
//C
this.state = 11;
 BA.debugLineNum = 8312;BA.debugLine="clvDatos.sv.ScrollViewOffsetY=clvDatos.sv.Scrol";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).getField(false,"_sv").runMethod(true,"setScrollViewOffsetY",RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).getField(false,"_sv").runMethod(true,"getScrollViewOffsetY"),_item.getField(true,"Size"),(RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(false,"_asview").runMethod(true,"getHeight"),(RemoteObject.solve(new RemoteObject[] {_item.getField(true,"Offset"),__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).getField(false,"_sv").runMethod(true,"getScrollViewOffsetY")}, "-",1, 0))}, "-",1, 0))}, "+-",2, 0));
 if (true) break;

case 11:
//C
this.state = 12;
;
 BA.debugLineNum = 8315;BA.debugLine="B4xViewItemSiguiente.RequestFocus";
Debug.JustUpdateDeviceLine();
_b4xviewitemsiguiente.runVoidMethod ("RequestFocus");
 if (true) break;

case 12:
//C
this.state = -1;
;
 BA.debugLineNum = 8317;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static RemoteObject  _jumptoitem(RemoteObject __ref,RemoteObject _index) throws Exception{
try {
		Debug.PushSubsStack("JumpToItem (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7291);
if (RapidSub.canDelegate("jumptoitem")) { return __ref.runUserSub(false, "jamtableclv","jumptoitem", __ref, _index);}
Debug.locals.put("Index", _index);
 BA.debugLineNum = 7291;BA.debugLine="Public Sub JumpToItem(Index As Int) As String";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 7292;BA.debugLine="clvDatos.JumpToItem(Index)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runVoidMethod ("_jumptoitem",(Object)(_index));
 BA.debugLineNum = 7293;BA.debugLine="Return \"OK\"";
Debug.JustUpdateDeviceLine();
if (true) return BA.ObjectToString("OK");
 BA.debugLineNum = 7294;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _lblfirst_mousepressed(RemoteObject __ref,RemoteObject _eventdata) throws Exception{
try {
		Debug.PushSubsStack("lblFirst_MousePressed (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7685);
if (RapidSub.canDelegate("lblfirst_mousepressed")) { return __ref.runUserSub(false, "jamtableclv","lblfirst_mousepressed", __ref, _eventdata);}
Debug.locals.put("EventData", _eventdata);
 BA.debugLineNum = 7685;BA.debugLine="private Sub lblFirst_MousePressed (EventData As Mo";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 7686;BA.debugLine="lblRecordPressed(Sender)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_lblrecordpressed" /*RemoteObject*/ ,RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.LabelWrapper"), jamtableclv.__c.runMethod(false,"Sender",__ref.getField(false, "ba"))));
 BA.debugLineNum = 7687;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _lblfirst_mousereleased(RemoteObject __ref,RemoteObject _eventdata) throws Exception{
try {
		Debug.PushSubsStack("lblFirst_MouseReleased (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7689);
if (RapidSub.canDelegate("lblfirst_mousereleased")) { return __ref.runUserSub(false, "jamtableclv","lblfirst_mousereleased", __ref, _eventdata);}
Debug.locals.put("EventData", _eventdata);
 BA.debugLineNum = 7689;BA.debugLine="private Sub lblFirst_MouseReleased (EventData As M";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 7690;BA.debugLine="lblRecordReleased(Sender)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_lblrecordreleased" /*RemoteObject*/ ,RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.LabelWrapper"), jamtableclv.__c.runMethod(false,"Sender",__ref.getField(false, "ba"))));
 BA.debugLineNum = 7691;BA.debugLine="clvDatos.ScrollToItem(0)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runVoidMethod ("_scrolltoitem",(Object)(BA.numberCast(int.class, 0)));
 BA.debugLineNum = 7693;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _lbllast_mousepressed(RemoteObject __ref,RemoteObject _eventdata) throws Exception{
try {
		Debug.PushSubsStack("lblLast_MousePressed (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7695);
if (RapidSub.canDelegate("lbllast_mousepressed")) { return __ref.runUserSub(false, "jamtableclv","lbllast_mousepressed", __ref, _eventdata);}
Debug.locals.put("EventData", _eventdata);
 BA.debugLineNum = 7695;BA.debugLine="private Sub lblLast_MousePressed (EventData As Mou";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 7696;BA.debugLine="lblRecordPressed(Sender)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_lblrecordpressed" /*RemoteObject*/ ,RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.LabelWrapper"), jamtableclv.__c.runMethod(false,"Sender",__ref.getField(false, "ba"))));
 BA.debugLineNum = 7697;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _lbllast_mousereleased(RemoteObject __ref,RemoteObject _eventdata) throws Exception{
try {
		Debug.PushSubsStack("lblLast_MouseReleased (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7699);
if (RapidSub.canDelegate("lbllast_mousereleased")) { return __ref.runUserSub(false, "jamtableclv","lbllast_mousereleased", __ref, _eventdata);}
Debug.locals.put("EventData", _eventdata);
 BA.debugLineNum = 7699;BA.debugLine="private Sub lblLast_MouseReleased (EventData As Mo";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 7700;BA.debugLine="lblRecordReleased(Sender)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_lblrecordreleased" /*RemoteObject*/ ,RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.LabelWrapper"), jamtableclv.__c.runMethod(false,"Sender",__ref.getField(false, "ba"))));
 BA.debugLineNum = 7701;BA.debugLine="clvDatos.ScrollToItem(clvDatos.Size-1)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runVoidMethod ("_scrolltoitem",(Object)(RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"_getsize"),RemoteObject.createImmutable(1)}, "-",1, 1)));
 BA.debugLineNum = 7703;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _lblmenupanelitem_mouseclicked(RemoteObject __ref,RemoteObject _eventdata) throws Exception{
try {
		Debug.PushSubsStack("lblMenuPanelItem_MouseClicked (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6560);
if (RapidSub.canDelegate("lblmenupanelitem_mouseclicked")) { return __ref.runUserSub(false, "jamtableclv","lblmenupanelitem_mouseclicked", __ref, _eventdata);}
Debug.locals.put("EventData", _eventdata);
 BA.debugLineNum = 6560;BA.debugLine="private Sub lblMenuPanelItem_MouseClicked (EventDa";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6561;BA.debugLine="EventData.Consume";
Debug.JustUpdateDeviceLine();
_eventdata.runVoidMethod ("Consume");
 BA.debugLineNum = 6562;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _lblmenupanelitem_mousepressed(RemoteObject __ref,RemoteObject _eventdata) throws Exception{
try {
		Debug.PushSubsStack("lblMenuPanelItem_MousePressed (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6564);
if (RapidSub.canDelegate("lblmenupanelitem_mousepressed")) { return __ref.runUserSub(false, "jamtableclv","lblmenupanelitem_mousepressed", __ref, _eventdata);}
RemoteObject _lbl = RemoteObject.declareNull("anywheresoftware.b4j.objects.LabelWrapper");
RemoteObject _xlbl = RemoteObject.declareNull("anywheresoftware.b4a.objects.B4XViewWrapper");
Debug.locals.put("EventData", _eventdata);
 BA.debugLineNum = 6564;BA.debugLine="private Sub lblMenuPanelItem_MousePressed (EventDa";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6565;BA.debugLine="Dim lbl As Label=Sender";
Debug.JustUpdateDeviceLine();
_lbl = RemoteObject.createNew ("anywheresoftware.b4j.objects.LabelWrapper");
_lbl = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.LabelWrapper"), jamtableclv.__c.runMethod(false,"Sender",__ref.getField(false, "ba")));Debug.locals.put("lbl", _lbl);Debug.locals.put("lbl", _lbl);
 BA.debugLineNum = 6566;BA.debugLine="Dim xlbl As B4XView=lbl";
Debug.JustUpdateDeviceLine();
_xlbl = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");
_xlbl = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper"), _lbl.getObject());Debug.locals.put("xlbl", _xlbl);Debug.locals.put("xlbl", _xlbl);
 BA.debugLineNum = 6567;BA.debugLine="xlbl.Color=xui.Color_Cyan";
Debug.JustUpdateDeviceLine();
_xlbl.runMethod(true,"setColor",__ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"Color_Cyan"));
 BA.debugLineNum = 6568;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _lblmenupanelitem_mousereleased(RemoteObject __ref,RemoteObject _eventdata) throws Exception{
try {
		Debug.PushSubsStack("lblMenuPanelItem_MouseReleased (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6570);
if (RapidSub.canDelegate("lblmenupanelitem_mousereleased")) { return __ref.runUserSub(false, "jamtableclv","lblmenupanelitem_mousereleased", __ref, _eventdata);}
RemoteObject _lbl = RemoteObject.declareNull("anywheresoftware.b4j.objects.LabelWrapper");
RemoteObject _xlbl = RemoteObject.declareNull("anywheresoftware.b4a.objects.B4XViewWrapper");
RemoteObject _indexsel = RemoteObject.createImmutable(0);
RemoteObject _value = RemoteObject.declareNull("Object");
Debug.locals.put("EventData", _eventdata);
 BA.debugLineNum = 6570;BA.debugLine="private Sub lblMenuPanelItem_MouseReleased (EventD";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6572;BA.debugLine="Dim lbl As Label=Sender";
Debug.JustUpdateDeviceLine();
_lbl = RemoteObject.createNew ("anywheresoftware.b4j.objects.LabelWrapper");
_lbl = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.LabelWrapper"), jamtableclv.__c.runMethod(false,"Sender",__ref.getField(false, "ba")));Debug.locals.put("lbl", _lbl);Debug.locals.put("lbl", _lbl);
 BA.debugLineNum = 6573;BA.debugLine="Dim xlbl As B4XView=lbl";
Debug.JustUpdateDeviceLine();
_xlbl = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");
_xlbl = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper"), _lbl.getObject());Debug.locals.put("xlbl", _xlbl);Debug.locals.put("xlbl", _xlbl);
 BA.debugLineNum = 6574;BA.debugLine="xlbl.Color=0xFFB22222";
Debug.JustUpdateDeviceLine();
_xlbl.runMethod(true,"setColor",BA.numberCast(int.class, ((int)0xffb22222)));
 BA.debugLineNum = 6575;BA.debugLine="Dim IndexSel As Int= clvDatos.GetItemFromView(lbl";
Debug.JustUpdateDeviceLine();
_indexsel = __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"_getitemfromview",RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper"), _lbl.getObject()));Debug.locals.put("IndexSel", _indexsel);Debug.locals.put("IndexSel", _indexsel);
 BA.debugLineNum = 6576;BA.debugLine="Dim Value As Object=clvDatos.GetValue(IndexSel)";
Debug.JustUpdateDeviceLine();
_value = __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(false,"_getvalue",(Object)(_indexsel));Debug.locals.put("Value", _value);Debug.locals.put("Value", _value);
 BA.debugLineNum = 6577;BA.debugLine="If SubExists(mCallBack,mEventName &  \"_lblMenuPan";
Debug.JustUpdateDeviceLine();
if (jamtableclv.__c.runMethod(true,"SubExists",__ref.getField(false, "ba"),(Object)(__ref.getField(false,"_mcallback" /*RemoteObject*/ )),(Object)(RemoteObject.concat(__ref.getField(true,"_meventname" /*RemoteObject*/ ),RemoteObject.createImmutable("_lblMenuPanelItem_MouseClicked")))).<Boolean>get().booleanValue()) { 
 BA.debugLineNum = 6578;BA.debugLine="CallSub3(mCallBack,mEventName &  \"_lblMenuPanelI";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runMethodAndSync(false,"CallSubNew3",__ref.getField(false, "ba"),(Object)(__ref.getField(false,"_mcallback" /*RemoteObject*/ )),(Object)(RemoteObject.concat(__ref.getField(true,"_meventname" /*RemoteObject*/ ),RemoteObject.createImmutable("_lblMenuPanelItem_MouseClicked"))),(Object)((_indexsel)),(Object)(_value));
 };
 BA.debugLineNum = 6581;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static void  _lblmostrareliminarfiltros_mouseclicked(RemoteObject __ref,RemoteObject _eventdata) throws Exception{
try {
		Debug.PushSubsStack("lblMostrarEliminarFiltros_MouseClicked (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,2125);
if (RapidSub.canDelegate("lblmostrareliminarfiltros_mouseclicked")) { __ref.runUserSub(false, "jamtableclv","lblmostrareliminarfiltros_mouseclicked", __ref, _eventdata); return;}
ResumableSub_lblMostrarEliminarFiltros_MouseClicked rsub = new ResumableSub_lblMostrarEliminarFiltros_MouseClicked(null,__ref,_eventdata);
rsub.resume(null, null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_lblMostrarEliminarFiltros_MouseClicked extends BA.ResumableSub {
public ResumableSub_lblMostrarEliminarFiltros_MouseClicked(b4j.docU.jamtableclv parent,RemoteObject __ref,RemoteObject _eventdata) {
this.parent = parent;
this.__ref = __ref;
this._eventdata = _eventdata;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _eventdata;
RemoteObject _robj = RemoteObject.declareNull("Object");

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("lblMostrarEliminarFiltros_MouseClicked (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,2125);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
return;

case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
Debug.locals.put("EventData", _eventdata);
 BA.debugLineNum = 2126;BA.debugLine="If NumCamposConControlFiltro=0 Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//if
this.state = 4;
if (RemoteObject.solveBoolean("=",__ref.getField(true,"_numcamposconcontrolfiltro" /*RemoteObject*/ ),BA.numberCast(double.class, 0))) { 
this.state = 3;
}if (true) break;

case 3:
//C
this.state = 4;
 BA.debugLineNum = 2127;BA.debugLine="fx.Msgbox(mParentForm,\"No se han definido campos";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_fx" /*RemoteObject*/ ).runVoidMethodAndSync ("Msgbox",(Object)(__ref.getField(false,"_mparentform" /*RemoteObject*/ )),(Object)(BA.ObjectToString("No se han definido campos con control de filtro. No es posible filtrar la tabla.")),(Object)(RemoteObject.createImmutable("Aviso")));
 BA.debugLineNum = 2128;BA.debugLine="Return";
Debug.JustUpdateDeviceLine();
if (true) return ;
 if (true) break;
;
 BA.debugLineNum = 2131;BA.debugLine="If FiltrosVisibles Then";
Debug.JustUpdateDeviceLine();

case 4:
//if
this.state = 13;
if (__ref.getField(true,"_filtrosvisibles" /*RemoteObject*/ ).<Boolean>get().booleanValue()) { 
this.state = 6;
}else {
this.state = 8;
}if (true) break;

case 6:
//C
this.state = 13;
 BA.debugLineNum = 2132;BA.debugLine="FiltrosVisibles=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_filtrosvisibles" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 BA.debugLineNum = 2133;BA.debugLine="clvFiltros.Clear";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runVoidMethod ("_clear");
 BA.debugLineNum = 2134;BA.debugLine="wait for(ActualizarFiltro) complete (rObj As Obj";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "lblmostrareliminarfiltros_mouseclicked"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_actualizarfiltro" /*RemoteObject*/ ));
this.state = 14;
return;
case 14:
//C
this.state = 13;
_robj = (RemoteObject) result.getArrayElement(false,RemoteObject.createImmutable(1));Debug.locals.put("rObj", _robj);
;
 BA.debugLineNum = 2135;BA.debugLine="PosicionDimensionesCLVFiltros";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_posiciondimensionesclvfiltros" /*RemoteObject*/ );
 BA.debugLineNum = 2136;BA.debugLine="Sleep(0)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("Sleep",__ref.getField(false, "ba"),anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "lblmostrareliminarfiltros_mouseclicked"),BA.numberCast(int.class, 0));
this.state = 15;
return;
case 15:
//C
this.state = 13;
;
 if (true) break;

case 8:
//C
this.state = 9;
 BA.debugLineNum = 2138;BA.debugLine="FiltrosVisibles=True";
Debug.JustUpdateDeviceLine();
__ref.setField ("_filtrosvisibles" /*RemoteObject*/ ,parent.__c.getField(true,"True"));
 BA.debugLineNum = 2139;BA.debugLine="If clvFiltros.Size=0 Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 9:
//if
this.state = 12;
if (RemoteObject.solveBoolean("=",__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(true,"_getsize"),BA.numberCast(double.class, 0))) { 
this.state = 11;
}if (true) break;

case 11:
//C
this.state = 12;
 BA.debugLineNum = 2140;BA.debugLine="AddFiltro";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addfiltro" /*void*/ );
 BA.debugLineNum = 2141;BA.debugLine="Wait For AddFiltro_completed";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","addfiltro_completed", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "lblmostrareliminarfiltros_mouseclicked"), null);
this.state = 16;
return;
case 16:
//C
this.state = 12;
;
 if (true) break;

case 12:
//C
this.state = 13;
;
 if (true) break;

case 13:
//C
this.state = -1;
;
 BA.debugLineNum = 2144;BA.debugLine="ImagenLabelFiltros";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_imagenlabelfiltros" /*RemoteObject*/ );
 BA.debugLineNum = 2145;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static RemoteObject  _lblnext_mousepressed(RemoteObject __ref,RemoteObject _eventdata) throws Exception{
try {
		Debug.PushSubsStack("lblNext_MousePressed (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7745);
if (RapidSub.canDelegate("lblnext_mousepressed")) { return __ref.runUserSub(false, "jamtableclv","lblnext_mousepressed", __ref, _eventdata);}
Debug.locals.put("EventData", _eventdata);
 BA.debugLineNum = 7745;BA.debugLine="private Sub lblNext_MousePressed (EventData As Mou";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 7746;BA.debugLine="lblRecordPressed(Sender)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_lblrecordpressed" /*RemoteObject*/ ,RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.LabelWrapper"), jamtableclv.__c.runMethod(false,"Sender",__ref.getField(false, "ba"))));
 BA.debugLineNum = 7747;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _lblnext_mousereleased(RemoteObject __ref,RemoteObject _eventdata) throws Exception{
try {
		Debug.PushSubsStack("lblNext_MouseReleased (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7749);
if (RapidSub.canDelegate("lblnext_mousereleased")) { return __ref.runUserSub(false, "jamtableclv","lblnext_mousereleased", __ref, _eventdata);}
RemoteObject _i = RemoteObject.createImmutable(0);
RemoteObject _item = RemoteObject.declareNull("b4j.example.customlistview._clvitem");
Debug.locals.put("EventData", _eventdata);
 BA.debugLineNum = 7749;BA.debugLine="private Sub lblNext_MouseReleased (EventData As Mo";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 7750;BA.debugLine="lblRecordReleased(Sender)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_lblrecordreleased" /*RemoteObject*/ ,RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.LabelWrapper"), jamtableclv.__c.runMethod(false,"Sender",__ref.getField(false, "ba"))));
 BA.debugLineNum = 7770;BA.debugLine="Dim i As Int = clvDatos.LastVisibleIndex";
Debug.JustUpdateDeviceLine();
_i = __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"_getlastvisibleindex");Debug.locals.put("i", _i);Debug.locals.put("i", _i);
 BA.debugLineNum = 7771;BA.debugLine="Dim item As CLVItem	 = clvDatos.GetRawListItem(i)";
Debug.JustUpdateDeviceLine();
_item = __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(false,"_getrawlistitem",(Object)(_i));Debug.locals.put("item", _item);Debug.locals.put("item", _item);
 BA.debugLineNum = 7773;BA.debugLine="If clvDatos.sv.Height-item.Offset-clvDatos.sv.Scr";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("<",RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).getField(false,"_sv").runMethod(true,"getHeight"),_item.getField(true,"Offset"),__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).getField(false,"_sv").runMethod(true,"getScrollViewOffsetY")}, "--",2, 0),BA.numberCast(double.class, _item.getField(true,"Size")))) { 
 BA.debugLineNum = 7774;BA.debugLine="clvDatos.ScrollToItem(Min(clvDatos.Size-1,clvDat";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runVoidMethod ("_scrolltoitem",(Object)(BA.numberCast(int.class, jamtableclv.__c.runMethod(true,"Min",(Object)(BA.numberCast(double.class, RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"_getsize"),RemoteObject.createImmutable(1)}, "-",1, 1))),(Object)(BA.numberCast(double.class, __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"_getlastvisibleindex")))))));
 }else {
 BA.debugLineNum = 7776;BA.debugLine="clvDatos.ScrollToItem(Min(clvDatos.Size-1,clvDat";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runVoidMethod ("_scrolltoitem",(Object)(BA.numberCast(int.class, jamtableclv.__c.runMethod(true,"Min",(Object)(BA.numberCast(double.class, RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"_getsize"),RemoteObject.createImmutable(1)}, "-",1, 1))),(Object)(BA.numberCast(double.class, RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"_getlastvisibleindex"),RemoteObject.createImmutable(1)}, "+",1, 1)))))));
 };
 BA.debugLineNum = 7780;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _lblprior_mousepressed(RemoteObject __ref,RemoteObject _eventdata) throws Exception{
try {
		Debug.PushSubsStack("lblPrior_MousePressed (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7706);
if (RapidSub.canDelegate("lblprior_mousepressed")) { return __ref.runUserSub(false, "jamtableclv","lblprior_mousepressed", __ref, _eventdata);}
Debug.locals.put("EventData", _eventdata);
 BA.debugLineNum = 7706;BA.debugLine="private Sub lblPrior_MousePressed (EventData As Mo";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 7707;BA.debugLine="lblRecordPressed(Sender)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_lblrecordpressed" /*RemoteObject*/ ,RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.LabelWrapper"), jamtableclv.__c.runMethod(false,"Sender",__ref.getField(false, "ba"))));
 BA.debugLineNum = 7708;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _lblprior_mousereleased(RemoteObject __ref,RemoteObject _eventdata) throws Exception{
try {
		Debug.PushSubsStack("lblPrior_MouseReleased (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7710);
if (RapidSub.canDelegate("lblprior_mousereleased")) { return __ref.runUserSub(false, "jamtableclv","lblprior_mousereleased", __ref, _eventdata);}
RemoteObject _i = RemoteObject.createImmutable(0);
RemoteObject _item = RemoteObject.declareNull("b4j.example.customlistview._clvitem");
Debug.locals.put("EventData", _eventdata);
 BA.debugLineNum = 7710;BA.debugLine="private Sub lblPrior_MouseReleased (EventData As M";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 7712;BA.debugLine="lblRecordReleased(Sender)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_lblrecordreleased" /*RemoteObject*/ ,RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.LabelWrapper"), jamtableclv.__c.runMethod(false,"Sender",__ref.getField(false, "ba"))));
 BA.debugLineNum = 7734;BA.debugLine="Dim i As Int = clvDatos.FirstVisibleIndex";
Debug.JustUpdateDeviceLine();
_i = __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"_getfirstvisibleindex");Debug.locals.put("i", _i);Debug.locals.put("i", _i);
 BA.debugLineNum = 7735;BA.debugLine="Dim item As CLVItem	 = clvDatos.GetRawListItem(i)";
Debug.JustUpdateDeviceLine();
_item = __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(false,"_getrawlistitem",(Object)(_i));Debug.locals.put("item", _item);Debug.locals.put("item", _item);
 BA.debugLineNum = 7736;BA.debugLine="If item.Offset<clvDatos.sv.ScrollViewOffsetY Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("<",_item.getField(true,"Offset"),__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).getField(false,"_sv").runMethod(true,"getScrollViewOffsetY"))) { 
 BA.debugLineNum = 7737;BA.debugLine="clvDatos.ScrollToItem(Max(0,clvDatos.FirstVisibl";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runVoidMethod ("_scrolltoitem",(Object)(BA.numberCast(int.class, jamtableclv.__c.runMethod(true,"Max",(Object)(BA.numberCast(double.class, 0)),(Object)(BA.numberCast(double.class, RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"_getfirstvisibleindex"),(RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"_getlastvisibleindex"),__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"_getfirstvisibleindex")}, "-",1, 1)),RemoteObject.createImmutable(1)}, "-+",2, 1)))))));
 }else {
 BA.debugLineNum = 7739;BA.debugLine="clvDatos.ScrollToItem(Max(0,clvDatos.FirstVisibl";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runVoidMethod ("_scrolltoitem",(Object)(BA.numberCast(int.class, jamtableclv.__c.runMethod(true,"Max",(Object)(BA.numberCast(double.class, 0)),(Object)(BA.numberCast(double.class, RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"_getfirstvisibleindex"),(RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"_getlastvisibleindex"),__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"_getfirstvisibleindex")}, "-",1, 1))}, "-",1, 1)))))));
 };
 BA.debugLineNum = 7742;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _lblrecordpressed(RemoteObject __ref,RemoteObject _lbl) throws Exception{
try {
		Debug.PushSubsStack("lblRecordPressed (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7782);
if (RapidSub.canDelegate("lblrecordpressed")) { return __ref.runUserSub(false, "jamtableclv","lblrecordpressed", __ref, _lbl);}
Debug.locals.put("lbl", _lbl);
 BA.debugLineNum = 7782;BA.debugLine="private Sub lblRecordPressed(lbl As Label)";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 7783;BA.debugLine="lbl.Textcolor=fx.Colors.From32Bit(0xFF00FFFF)";
Debug.JustUpdateDeviceLine();
_lbl.runMethod(false,"setTextColor",(__ref.getField(false,"_fx" /*RemoteObject*/ ).getField(false,"Colors").runMethod(false,"From32Bit",(Object)(BA.numberCast(int.class, ((int)0xff00ffff))))));
 BA.debugLineNum = 7784;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _lblrecordreleased(RemoteObject __ref,RemoteObject _lbl) throws Exception{
try {
		Debug.PushSubsStack("lblRecordReleased (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7786);
if (RapidSub.canDelegate("lblrecordreleased")) { return __ref.runUserSub(false, "jamtableclv","lblrecordreleased", __ref, _lbl);}
Debug.locals.put("lbl", _lbl);
 BA.debugLineNum = 7786;BA.debugLine="private Sub lblRecordReleased(lbl As Label)";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 7788;BA.debugLine="lbl.Textcolor=fx.Colors.From32Bit(0xFFB22222)";
Debug.JustUpdateDeviceLine();
_lbl.runMethod(false,"setTextColor",(__ref.getField(false,"_fx" /*RemoteObject*/ ).getField(false,"Colors").runMethod(false,"From32Bit",(Object)(BA.numberCast(int.class, ((int)0xffb22222))))));
 BA.debugLineNum = 7789;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _lblsalirjamtableclv_mouseclicked(RemoteObject __ref,RemoteObject _eventdata) throws Exception{
try {
		Debug.PushSubsStack("lblSalirJamTableCLV_MouseClicked (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7662);
if (RapidSub.canDelegate("lblsalirjamtableclv_mouseclicked")) { return __ref.runUserSub(false, "jamtableclv","lblsalirjamtableclv_mouseclicked", __ref, _eventdata);}
Debug.locals.put("EventData", _eventdata);
 BA.debugLineNum = 7662;BA.debugLine="private Sub lblSalirJamTableCLV_MouseClicked (Even";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 7663;BA.debugLine="If SubExists(mCallBack,mEventName & \"_AccionSalir";
Debug.JustUpdateDeviceLine();
if (jamtableclv.__c.runMethod(true,"SubExists",__ref.getField(false, "ba"),(Object)(__ref.getField(false,"_mcallback" /*RemoteObject*/ )),(Object)(RemoteObject.concat(__ref.getField(true,"_meventname" /*RemoteObject*/ ),RemoteObject.createImmutable("_AccionSalirJamTableCLV")))).<Boolean>get().booleanValue()) { 
 BA.debugLineNum = 7664;BA.debugLine="CallSub(mCallBack,mEventName & \"_AccionSalirJamT";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runMethodAndSync(false,"CallSubNew",__ref.getField(false, "ba"),(Object)(__ref.getField(false,"_mcallback" /*RemoteObject*/ )),(Object)(RemoteObject.concat(__ref.getField(true,"_meventname" /*RemoteObject*/ ),RemoteObject.createImmutable("_AccionSalirJamTableCLV"))));
 }else {
 BA.debugLineNum = 7666;BA.debugLine="fx.Msgbox(mParentForm,\"Falta programación evento";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_fx" /*RemoteObject*/ ).runVoidMethodAndSync ("Msgbox",(Object)(__ref.getField(false,"_mparentform" /*RemoteObject*/ )),(Object)(BA.ObjectToString("Falta programación evento _AccionSalirJamTableCLV. Avisa al administrador de la aplicación.")),(Object)(RemoteObject.createImmutable("Aviso")));
 };
 BA.debugLineNum = 7668;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _loadlayoutpanelheaders(RemoteObject __ref,RemoteObject _layout) throws Exception{
try {
		Debug.PushSubsStack("LoadLayoutPanelHeaders (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6987);
if (RapidSub.canDelegate("loadlayoutpanelheaders")) { return __ref.runUserSub(false, "jamtableclv","loadlayoutpanelheaders", __ref, _layout);}
Debug.locals.put("Layout", _layout);
 BA.debugLineNum = 6987;BA.debugLine="Public Sub LoadLayoutPanelHeaders(Layout As String";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6988;BA.debugLine="pnlHeadersJamTableCLV.LoadLayout(Layout)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_pnlheadersjamtableclv" /*RemoteObject*/ ).runMethodAndSync(false,"LoadLayout",__ref.getField(false, "ba"),(Object)(_layout));
 BA.debugLineNum = 6989;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _mediralturatextomultilinea(RemoteObject __ref,RemoteObject _fuente,RemoteObject _ancho,RemoteObject _texto) throws Exception{
try {
		Debug.PushSubsStack("MedirAlturaTextoMultilinea (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,8052);
if (RapidSub.canDelegate("mediralturatextomultilinea")) { return __ref.runUserSub(false, "jamtableclv","mediralturatextomultilinea", __ref, _fuente, _ancho, _texto);}
RemoteObject _jo = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
Debug.locals.put("Fuente", _fuente);
Debug.locals.put("Ancho", _ancho);
Debug.locals.put("Texto", _texto);
 BA.debugLineNum = 8052;BA.debugLine="public Sub MedirAlturaTextoMultilinea (Fuente As F";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 8053;BA.debugLine="Dim jo As JavaObject = Me";
Debug.JustUpdateDeviceLine();
_jo = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");
_jo = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), __ref);Debug.locals.put("jo", _jo);Debug.locals.put("jo", _jo);
 BA.debugLineNum = 8054;BA.debugLine="Return jo.RunMethod(\"MeasureMultilineTextHeight\",";
Debug.JustUpdateDeviceLine();
if (true) return BA.numberCast(double.class, _jo.runMethod(false,"RunMethod",(Object)(BA.ObjectToString("MeasureMultilineTextHeight")),(Object)(RemoteObject.createNewArray("Object",new int[] {3},new Object[] {(_fuente.getObject()),(_texto),(_ancho)}))));
 BA.debugLineNum = 8055;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(0);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static void  _menubarmenuitem_action(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("MenuBarMenuItem_Action (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,1686);
if (RapidSub.canDelegate("menubarmenuitem_action")) { __ref.runUserSub(false, "jamtableclv","menubarmenuitem_action", __ref); return;}
ResumableSub_MenuBarMenuItem_Action rsub = new ResumableSub_MenuBarMenuItem_Action(null,__ref);
rsub.resume(null, null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_MenuBarMenuItem_Action extends BA.ResumableSub {
public ResumableSub_MenuBarMenuItem_Action(b4j.docU.jamtableclv parent,RemoteObject __ref) {
this.parent = parent;
this.__ref = __ref;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _mi = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");
RemoteObject _rbool = RemoteObject.createImmutable(false);
RemoteObject _msa = RemoteObject.declareNull("Object");

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("MenuBarMenuItem_Action (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,1686);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
return;

case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
 BA.debugLineNum = 1687;BA.debugLine="Dim mI As MenuItem=Sender";
Debug.JustUpdateDeviceLine();
_mi = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");
_mi = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper"), parent.__c.runMethod(false,"Sender",__ref.getField(false, "ba")));Debug.locals.put("mI", _mi);Debug.locals.put("mI", _mi);
 BA.debugLineNum = 1688;BA.debugLine="If lstItemsDefaultMenu.IndexOf(mI.Tag)>-1 Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//if
this.state = 30;
if (RemoteObject.solveBoolean(">",__ref.getField(false,"_lstitemsdefaultmenu" /*RemoteObject*/ ).runMethod(true,"IndexOf",(Object)(_mi.runMethod(false,"getTag"))),BA.numberCast(double.class, -(double) (0 + 1)))) { 
this.state = 3;
}else {
this.state = 23;
}if (true) break;

case 3:
//C
this.state = 4;
 BA.debugLineNum = 1689;BA.debugLine="Select Case mI.tag";
Debug.JustUpdateDeviceLine();
if (true) break;

case 4:
//select
this.state = 21;
switch (BA.switchObjectToInt(_mi.runMethod(false,"getTag"),RemoteObject.createImmutable(("ExportarTablaAExcel")),RemoteObject.createImmutable(("Actualizar")),RemoteObject.createImmutable(("OrdenarRegistros")),RemoteObject.createImmutable(("TotalesCamposNumericos")),RemoteObject.createImmutable(("CamposBuilder")))) {
case 0: {
this.state = 6;
if (true) break;
}
case 1: {
this.state = 8;
if (true) break;
}
case 2: {
this.state = 16;
if (true) break;
}
case 3: {
this.state = 18;
if (true) break;
}
case 4: {
this.state = 20;
if (true) break;
}
}
if (true) break;

case 6:
//C
this.state = 21;
 BA.debugLineNum = 1691;BA.debugLine="wait for (ExportarTablaAExcel) complete (rBool";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "menubarmenuitem_action"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_exportartablaaexcel" /*RemoteObject*/ ));
this.state = 31;
return;
case 31:
//C
this.state = 21;
_rbool = (RemoteObject) result.getArrayElement(true,RemoteObject.createImmutable(1));Debug.locals.put("rBool", _rbool);
;
 if (true) break;

case 8:
//C
this.state = 9;
 BA.debugLineNum = 1694;BA.debugLine="If SubExists(mCallBack,mEventName & \"_MenuBarM";
Debug.JustUpdateDeviceLine();
if (true) break;

case 9:
//if
this.state = 14;
if (parent.__c.runMethod(true,"SubExists",__ref.getField(false, "ba"),(Object)(__ref.getField(false,"_mcallback" /*RemoteObject*/ )),(Object)(RemoteObject.concat(__ref.getField(true,"_meventname" /*RemoteObject*/ ),RemoteObject.createImmutable("_MenuBarMenuItem_Action")))).<Boolean>get().booleanValue()) { 
this.state = 11;
}else {
this.state = 13;
}if (true) break;

case 11:
//C
this.state = 14;
 BA.debugLineNum = 1695;BA.debugLine="CallSub2(mCallBack,mEventName & \"_MenuBarMenu";
Debug.JustUpdateDeviceLine();
parent.__c.runMethodAndSync(false,"CallSubNew2",__ref.getField(false, "ba"),(Object)(__ref.getField(false,"_mcallback" /*RemoteObject*/ )),(Object)(RemoteObject.concat(__ref.getField(true,"_meventname" /*RemoteObject*/ ),RemoteObject.createImmutable("_MenuBarMenuItem_Action"))),(Object)(_mi.runMethod(false,"getTag")));
 if (true) break;

case 13:
//C
this.state = 14;
 BA.debugLineNum = 1697;BA.debugLine="Dim msa As Object=xui.MsgboxAsync(\"No se ha d";
Debug.JustUpdateDeviceLine();
_msa = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"MsgboxAsync",__ref.getField(false, "ba"),(Object)(RemoteObject.concat(RemoteObject.createImmutable("No se ha definido método "),_mi.runMethod(false,"getTag"),RemoteObject.createImmutable(" en el módulo Callback. Avisa al administrador de la aplicación."))),(Object)(RemoteObject.createImmutable("Aviso")));Debug.locals.put("msa", _msa);Debug.locals.put("msa", _msa);
 BA.debugLineNum = 1698;BA.debugLine="Wait For (msa) Msgbox_Result";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","msgbox_result", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "menubarmenuitem_action"), _msa);
this.state = 32;
return;
case 32:
//C
this.state = 14;
;
 if (true) break;

case 14:
//C
this.state = 21;
;
 if (true) break;

case 16:
//C
this.state = 21;
 BA.debugLineNum = 1701;BA.debugLine="wait for (DialogoOrdenarSQL) complete (rBool A";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "menubarmenuitem_action"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_dialogoordenarsql" /*RemoteObject*/ ));
this.state = 33;
return;
case 33:
//C
this.state = 21;
_rbool = (RemoteObject) result.getArrayElement(true,RemoteObject.createImmutable(1));Debug.locals.put("rBool", _rbool);
;
 if (true) break;

case 18:
//C
this.state = 21;
 BA.debugLineNum = 1705;BA.debugLine="TotalesCamposNumericos";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_totalescamposnumericos" /*RemoteObject*/ );
 if (true) break;

case 20:
//C
this.state = 21;
 BA.debugLineNum = 1707;BA.debugLine="AbrirCamposBuilder";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_abrircamposbuilder" /*void*/ );
 if (true) break;

case 21:
//C
this.state = 30;
;
 if (true) break;

case 23:
//C
this.state = 24;
 BA.debugLineNum = 1736;BA.debugLine="If SubExists(mCallBack,mEventName & \"_MenuBarMen";
Debug.JustUpdateDeviceLine();
if (true) break;

case 24:
//if
this.state = 29;
if (parent.__c.runMethod(true,"SubExists",__ref.getField(false, "ba"),(Object)(__ref.getField(false,"_mcallback" /*RemoteObject*/ )),(Object)(RemoteObject.concat(__ref.getField(true,"_meventname" /*RemoteObject*/ ),RemoteObject.createImmutable("_MenuBarMenuItem_Action")))).<Boolean>get().booleanValue()) { 
this.state = 26;
}else {
this.state = 28;
}if (true) break;

case 26:
//C
this.state = 29;
 BA.debugLineNum = 1737;BA.debugLine="CallSub2(mCallBack,mEventName & \"_MenuBarMenuIt";
Debug.JustUpdateDeviceLine();
parent.__c.runMethodAndSync(false,"CallSubNew2",__ref.getField(false, "ba"),(Object)(__ref.getField(false,"_mcallback" /*RemoteObject*/ )),(Object)(RemoteObject.concat(__ref.getField(true,"_meventname" /*RemoteObject*/ ),RemoteObject.createImmutable("_MenuBarMenuItem_Action"))),(Object)(_mi.runMethod(false,"getTag")));
 if (true) break;

case 28:
//C
this.state = 29;
 BA.debugLineNum = 1739;BA.debugLine="Dim msa As Object=xui.MsgboxAsync(\"No se ha def";
Debug.JustUpdateDeviceLine();
_msa = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"MsgboxAsync",__ref.getField(false, "ba"),(Object)(RemoteObject.concat(RemoteObject.createImmutable("No se ha definido método "),_mi.runMethod(false,"getTag"),RemoteObject.createImmutable(" en el módulo Callback. Avisa al administrador de la aplicación."))),(Object)(RemoteObject.createImmutable("Aviso")));Debug.locals.put("msa", _msa);Debug.locals.put("msa", _msa);
 BA.debugLineNum = 1740;BA.debugLine="Wait For (msa) Msgbox_Result";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","msgbox_result", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "menubarmenuitem_action"), _msa);
this.state = 34;
return;
case 34:
//C
this.state = 29;
;
 if (true) break;

case 29:
//C
this.state = 30;
;
 if (true) break;

case 30:
//C
this.state = -1;
;
 BA.debugLineNum = 1743;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static RemoteObject  _menucontextualbasiconodo(RemoteObject __ref,RemoteObject _xnode) throws Exception{
try {
		Debug.PushSubsStack("MenuContextualBasicoNodo (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,1052);
if (RapidSub.canDelegate("menucontextualbasiconodo")) { return __ref.runUserSub(false, "jamtableclv","menucontextualbasiconodo", __ref, _xnode);}
Debug.locals.put("xNode", _xnode);
 BA.debugLineNum = 1052;BA.debugLine="Private Sub MenuContextualBasicoNodo(xNode As B4XV";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 1054;BA.debugLine="If xNode Is TextArea Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("i",_xnode.getObjectOrNull(), RemoteObject.createImmutable("javafx.scene.control.TextArea"))) { 
 BA.debugLineNum = 1058;BA.debugLine="AddContextMenuItemCopiarTextoNodo(xNode)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addcontextmenuitemcopiartextonodo" /*RemoteObject*/ ,(Object)(_xnode));
 BA.debugLineNum = 1059;BA.debugLine="AddContextMenuItemSeleccionarTodoTextoNodo(xNode";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addcontextmenuitemseleccionartodotextonodo" /*RemoteObject*/ ,(Object)(_xnode));
 BA.debugLineNum = 1060;BA.debugLine="If xNode.Tag<>\"\" Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("!",_xnode.runMethod(false,"getTag"),RemoteObject.createImmutable(("")))) { 
 BA.debugLineNum = 1061;BA.debugLine="If mlstAliasCamposFiltrables.IndexOf(xNode.Tag)";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean(">",__ref.getField(false,"_mlstaliascamposfiltrables" /*RemoteObject*/ ).runMethod(true,"IndexOf",(Object)(_xnode.runMethod(false,"getTag"))),BA.numberCast(double.class, -(double) (0 + 1)))) { 
 BA.debugLineNum = 1062;BA.debugLine="AddContextMenuItemFiltrarAValorNodo";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addcontextmenuitemfiltraravalornodo" /*RemoteObject*/ );
 BA.debugLineNum = 1063;BA.debugLine="AddContextMenuFiltroAvanzadoNodo(xNode.Tag)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addcontextmenufiltroavanzadonodo" /*RemoteObject*/ ,(Object)(BA.ObjectToString(_xnode.runMethod(false,"getTag"))));
 };
 };
 };
 BA.debugLineNum = 1068;BA.debugLine="If xNode Is TextField Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("i",_xnode.getObjectOrNull(), RemoteObject.createImmutable("javafx.scene.control.TextField"))) { 
 BA.debugLineNum = 1072;BA.debugLine="AddContextMenuItemCopiarTextoNodo(xNode)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addcontextmenuitemcopiartextonodo" /*RemoteObject*/ ,(Object)(_xnode));
 BA.debugLineNum = 1073;BA.debugLine="AddContextMenuItemSeleccionarTodoTextoNodo(xNode";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addcontextmenuitemseleccionartodotextonodo" /*RemoteObject*/ ,(Object)(_xnode));
 BA.debugLineNum = 1074;BA.debugLine="If xNode.Tag<>\"\" Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("!",_xnode.runMethod(false,"getTag"),RemoteObject.createImmutable(("")))) { 
 BA.debugLineNum = 1075;BA.debugLine="If mlstAliasCamposFiltrables.IndexOf(xNode.Tag)";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean(">",__ref.getField(false,"_mlstaliascamposfiltrables" /*RemoteObject*/ ).runMethod(true,"IndexOf",(Object)(_xnode.runMethod(false,"getTag"))),BA.numberCast(double.class, -(double) (0 + 1)))) { 
 BA.debugLineNum = 1076;BA.debugLine="AddContextMenuItemFiltrarAValorNodo";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addcontextmenuitemfiltraravalornodo" /*RemoteObject*/ );
 BA.debugLineNum = 1077;BA.debugLine="AddContextMenuFiltroAvanzadoNodo(xNode.Tag)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addcontextmenufiltroavanzadonodo" /*RemoteObject*/ ,(Object)(BA.ObjectToString(_xnode.runMethod(false,"getTag"))));
 };
 };
 };
 BA.debugLineNum = 1082;BA.debugLine="If xNode Is ComboBox Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("i",_xnode.getObjectOrNull(), RemoteObject.createImmutable("javafx.scene.control.ComboBox"))) { 
 BA.debugLineNum = 1086;BA.debugLine="AddContextMenuItemCopiarTextoNodo(xNode)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addcontextmenuitemcopiartextonodo" /*RemoteObject*/ ,(Object)(_xnode));
 BA.debugLineNum = 1087;BA.debugLine="If xNode.Tag<>\"\" Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("!",_xnode.runMethod(false,"getTag"),RemoteObject.createImmutable(("")))) { 
 BA.debugLineNum = 1088;BA.debugLine="If mlstAliasCamposFiltrables.IndexOf(xNode.Tag)";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean(">",__ref.getField(false,"_mlstaliascamposfiltrables" /*RemoteObject*/ ).runMethod(true,"IndexOf",(Object)(_xnode.runMethod(false,"getTag"))),BA.numberCast(double.class, -(double) (0 + 1)))) { 
 BA.debugLineNum = 1089;BA.debugLine="AddContextMenuItemFiltrarAValorNodo";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addcontextmenuitemfiltraravalornodo" /*RemoteObject*/ );
 BA.debugLineNum = 1090;BA.debugLine="AddContextMenuFiltroAvanzadoNodo(xNode.Tag)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addcontextmenufiltroavanzadonodo" /*RemoteObject*/ ,(Object)(BA.ObjectToString(_xnode.runMethod(false,"getTag"))));
 };
 };
 };
 BA.debugLineNum = 1095;BA.debugLine="If xNode Is CheckBox Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("i",_xnode.getObjectOrNull(), RemoteObject.createImmutable("javafx.scene.control.CheckBox"))) { 
 BA.debugLineNum = 1098;BA.debugLine="If xNode.Tag<>\"\" Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("!",_xnode.runMethod(false,"getTag"),RemoteObject.createImmutable(("")))) { 
 BA.debugLineNum = 1099;BA.debugLine="If mlstAliasCamposFiltrables.IndexOf(xNode.Tag)";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean(">",__ref.getField(false,"_mlstaliascamposfiltrables" /*RemoteObject*/ ).runMethod(true,"IndexOf",(Object)(_xnode.runMethod(false,"getTag"))),BA.numberCast(double.class, -(double) (0 + 1)))) { 
 BA.debugLineNum = 1100;BA.debugLine="AddContextMenuItemFiltrarAValorNodo";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addcontextmenuitemfiltraravalornodo" /*RemoteObject*/ );
 BA.debugLineNum = 1101;BA.debugLine="AddContextMenuFiltroAvanzadoNodo(xNode.Tag)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addcontextmenufiltroavanzadonodo" /*RemoteObject*/ ,(Object)(BA.ObjectToString(_xnode.runMethod(false,"getTag"))));
 };
 };
 };
 BA.debugLineNum = 1109;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _menusbasicos(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("MenusBasicos (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,1475);
if (RapidSub.canDelegate("menusbasicos")) { return __ref.runUserSub(false, "jamtableclv","menusbasicos", __ref);}
RemoteObject _xlblsalir = RemoteObject.declareNull("anywheresoftware.b4a.objects.B4XViewWrapper");
RemoteObject _imgv = RemoteObject.declareNull("anywheresoftware.b4j.objects.ImageViewWrapper");
RemoteObject _ximgv = RemoteObject.declareNull("anywheresoftware.b4a.objects.B4XViewWrapper");
RemoteObject _bmp = RemoteObject.declareNull("anywheresoftware.b4a.objects.B4XViewWrapper.B4XBitmapWrapper");
RemoteObject _jolblsalirjamtableclv = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
RemoteObject _mi = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");
 BA.debugLineNum = 1475;BA.debugLine="private Sub MenusBasicos";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 1483;BA.debugLine="lblRecords.TextSize=mFontSizeLabelRecords";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lblrecords" /*RemoteObject*/ ).runMethod(true,"setTextSize",BA.numberCast(double.class, __ref.getField(true,"_mfontsizelabelrecords" /*RemoteObject*/ )));
 BA.debugLineNum = 1485;BA.debugLine="lstItemsDefaultMenu.Initialize";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstitemsdefaultmenu" /*RemoteObject*/ ).runVoidMethod ("Initialize");
 BA.debugLineNum = 1487;BA.debugLine="If mIncluirBotonSalir Then";
Debug.JustUpdateDeviceLine();
if (__ref.getField(true,"_mincluirbotonsalir" /*RemoteObject*/ ).<Boolean>get().booleanValue()) { 
 BA.debugLineNum = 1488;BA.debugLine="lblSalirJamTableCLV.Initialize(\"lblSalirJamTable";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lblsalirjamtableclv" /*RemoteObject*/ ).runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(RemoteObject.createImmutable("lblSalirJamTableCLV")));
 BA.debugLineNum = 1489;BA.debugLine="Dim xLblSalir As B4XView=lblSalirJamTableCLV";
Debug.JustUpdateDeviceLine();
_xlblsalir = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");
_xlblsalir = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper"), __ref.getField(false,"_lblsalirjamtableclv" /*RemoteObject*/ ).getObject());Debug.locals.put("xLblSalir", _xlblsalir);Debug.locals.put("xLblSalir", _xlblsalir);
 BA.debugLineNum = 1490;BA.debugLine="xLblSalir.Width=16dip";
Debug.JustUpdateDeviceLine();
_xlblsalir.runMethod(true,"setWidth",BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 16)))));
 BA.debugLineNum = 1491;BA.debugLine="xLblSalir.Height=16dip";
Debug.JustUpdateDeviceLine();
_xlblsalir.runMethod(true,"setHeight",BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 16)))));
 BA.debugLineNum = 1492;BA.debugLine="Dim imgV As ImageView";
Debug.JustUpdateDeviceLine();
_imgv = RemoteObject.createNew ("anywheresoftware.b4j.objects.ImageViewWrapper");Debug.locals.put("imgV", _imgv);
 BA.debugLineNum = 1493;BA.debugLine="imgV.Initialize(\"\")";
Debug.JustUpdateDeviceLine();
_imgv.runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(RemoteObject.createImmutable("")));
 BA.debugLineNum = 1494;BA.debugLine="Dim xImgV As B4XView=imgV";
Debug.JustUpdateDeviceLine();
_ximgv = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");
_ximgv = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper"), _imgv.getObject());Debug.locals.put("xImgV", _ximgv);Debug.locals.put("xImgV", _ximgv);
 BA.debugLineNum = 1495;BA.debugLine="xImgV.Width=xLblSalir.Width";
Debug.JustUpdateDeviceLine();
_ximgv.runMethod(true,"setWidth",_xlblsalir.runMethod(true,"getWidth"));
 BA.debugLineNum = 1496;BA.debugLine="xImgV.Height=xLblSalir.Height";
Debug.JustUpdateDeviceLine();
_ximgv.runMethod(true,"setHeight",_xlblsalir.runMethod(true,"getHeight"));
 BA.debugLineNum = 1497;BA.debugLine="Select Case mEstiloMenu";
Debug.JustUpdateDeviceLine();
switch (BA.switchObjectToInt(__ref.getField(true,"_mestilomenu" /*RemoteObject*/ ),BA.ObjectToString("HandDrawn"),BA.ObjectToString("MaterialIcons"))) {
case 0: {
 BA.debugLineNum = 1507;BA.debugLine="Dim bmp As B4XBitmap = xui.LoadBitmap(File.Dir";
Debug.JustUpdateDeviceLine();
_bmp = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper.B4XBitmapWrapper");
_bmp = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"LoadBitmap",(Object)(jamtableclv.__c.getField(false,"File").runMethod(true,"getDirAssets")),(Object)(RemoteObject.createImmutable("salidaPuerta32.png")));Debug.locals.put("bmp", _bmp);Debug.locals.put("bmp", _bmp);
 break; }
case 1: {
 BA.debugLineNum = 1509;BA.debugLine="Dim bmp As B4XBitmap = xui.LoadBitmap(File.Dir";
Debug.JustUpdateDeviceLine();
_bmp = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper.B4XBitmapWrapper");
_bmp = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"LoadBitmap",(Object)(jamtableclv.__c.getField(false,"File").runMethod(true,"getDirAssets")),(Object)(RemoteObject.createImmutable("twotone_exit_black_24dp.png")));Debug.locals.put("bmp", _bmp);Debug.locals.put("bmp", _bmp);
 break; }
}
;
 BA.debugLineNum = 1511;BA.debugLine="FillImageToView(bmp, xImgV)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_fillimagetoview" /*RemoteObject*/ ,(Object)(_bmp),(Object)(_ximgv));
 BA.debugLineNum = 1512;BA.debugLine="Dim JOlblSalirJamTableCLV As JavaObject=lblSalir";
Debug.JustUpdateDeviceLine();
_jolblsalirjamtableclv = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");
_jolblsalirjamtableclv = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), __ref.getField(false,"_lblsalirjamtableclv" /*RemoteObject*/ ).getObject());Debug.locals.put("JOlblSalirJamTableCLV", _jolblsalirjamtableclv);Debug.locals.put("JOlblSalirJamTableCLV", _jolblsalirjamtableclv);
 BA.debugLineNum = 1513;BA.debugLine="JOlblSalirJamTableCLV.RunMethod(\"setGraphic\", Ar";
Debug.JustUpdateDeviceLine();
_jolblsalirjamtableclv.runVoidMethod ("RunMethod",(Object)(BA.ObjectToString("setGraphic")),(Object)(RemoteObject.createNewArray("Object",new int[] {1},new Object[] {(_imgv.getObject())})));
 BA.debugLineNum = 1514;BA.debugLine="asJO(Me).RunMethod(\"addLabelMenuAccionMenuBar\",A";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_asjo" /*RemoteObject*/ ,RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), __ref)).runVoidMethod ("RunMethod",(Object)(BA.ObjectToString("addLabelMenuAccionMenuBar")),(Object)(RemoteObject.createNewArray("Object",new int[] {2},new Object[] {(__ref.getField(false,"_menubar" /*RemoteObject*/ ).getObject()),(__ref.getField(false,"_lblsalirjamtableclv" /*RemoteObject*/ ).getObject())})));
 };
 BA.debugLineNum = 1527;BA.debugLine="Select Case mEstiloMenu";
Debug.JustUpdateDeviceLine();
switch (BA.switchObjectToInt(__ref.getField(true,"_mestilomenu" /*RemoteObject*/ ),BA.ObjectToString("HandDrawn"),BA.ObjectToString("MaterialIcons"))) {
case 0: {
 BA.debugLineNum = 1529;BA.debugLine="AddMenuImageToMenuBar(\"Tabla\", MenuBarTabla,Fil";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addmenuimagetomenubar" /*RemoteObject*/ ,(Object)(BA.ObjectToString("Tabla")),(Object)(__ref.getField(true,"_menubartabla" /*RemoteObject*/ )),(Object)(jamtableclv.__c.getField(false,"File").runMethod(true,"getDirAssets")),(Object)(BA.ObjectToString("Tabla.png")),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 20))))),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 20))))));
 BA.debugLineNum = 1530;BA.debugLine="AddMenuImageToMenuBar(\"Acciones\",MenuBarAccione";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addmenuimagetomenubar" /*RemoteObject*/ ,(Object)(BA.ObjectToString("Acciones")),(Object)(__ref.getField(true,"_menubaracciones" /*RemoteObject*/ )),(Object)(jamtableclv.__c.getField(false,"File").runMethod(true,"getDirAssets")),(Object)(BA.ObjectToString("acciones.png")),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 20))))),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 20))))));
 BA.debugLineNum = 1531;BA.debugLine="AddMenuImageToMenuBar(\"Línea\",MenuBarLinea,File";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addmenuimagetomenubar" /*RemoteObject*/ ,(Object)(BA.ObjectToString("Línea")),(Object)(__ref.getField(true,"_menubarlinea" /*RemoteObject*/ )),(Object)(jamtableclv.__c.getField(false,"File").runMethod(true,"getDirAssets")),(Object)(BA.ObjectToString("Fila.png")),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 20))))),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 20))))));
 break; }
case 1: {
 BA.debugLineNum = 1534;BA.debugLine="AddMenuImageToMenuBar(\"Tabla\", MenuBarTabla,Fil";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addmenuimagetomenubar" /*RemoteObject*/ ,(Object)(BA.ObjectToString("Tabla")),(Object)(__ref.getField(true,"_menubartabla" /*RemoteObject*/ )),(Object)(jamtableclv.__c.getField(false,"File").runMethod(true,"getDirAssets")),(Object)(BA.ObjectToString("round_table_view_black_24dp.png")),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 18))))),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 18))))));
 BA.debugLineNum = 1535;BA.debugLine="AddMenuImageToMenuBar(\"Acciones\",MenuBarAccione";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addmenuimagetomenubar" /*RemoteObject*/ ,(Object)(BA.ObjectToString("Acciones")),(Object)(__ref.getField(true,"_menubaracciones" /*RemoteObject*/ )),(Object)(jamtableclv.__c.getField(false,"File").runMethod(true,"getDirAssets")),(Object)(BA.ObjectToString("MItwotone_electric_bolt_black_18dp.png")),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 18))))),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 18))))));
 BA.debugLineNum = 1536;BA.debugLine="AddMenuImageToMenuBar(\"Línea\",MenuBarLinea,File";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addmenuimagetomenubar" /*RemoteObject*/ ,(Object)(BA.ObjectToString("Línea")),(Object)(__ref.getField(true,"_menubarlinea" /*RemoteObject*/ )),(Object)(jamtableclv.__c.getField(false,"File").runMethod(true,"getDirAssets")),(Object)(BA.ObjectToString("MItwotone_table_rows_black_18dp.png")),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 18))))),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 18))))));
 break; }
}
;
 BA.debugLineNum = 1539;BA.debugLine="ImagenLabelFiltros";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_imagenlabelfiltros" /*RemoteObject*/ );
 BA.debugLineNum = 1541;BA.debugLine="asJO(Me).RunMethod(\"addLabelMenuAccionMenuBar\",Ar";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_asjo" /*RemoteObject*/ ,RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), __ref)).runVoidMethod ("RunMethod",(Object)(BA.ObjectToString("addLabelMenuAccionMenuBar")),(Object)(RemoteObject.createNewArray("Object",new int[] {2},new Object[] {(__ref.getField(false,"_menubar" /*RemoteObject*/ ).getObject()),(__ref.getField(false,"_lblmostrareliminarfiltros" /*RemoteObject*/ ).getObject())})));
 BA.debugLineNum = 1542;BA.debugLine="lblMostrarEliminarFiltros.Visible=False";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lblmostrareliminarfiltros" /*RemoteObject*/ ).runMethod(true,"setVisible",jamtableclv.__c.getField(true,"False"));
 BA.debugLineNum = 1557;BA.debugLine="Select Case mEstiloMenu";
Debug.JustUpdateDeviceLine();
switch (BA.switchObjectToInt(__ref.getField(true,"_mestilomenu" /*RemoteObject*/ ),BA.ObjectToString("HandDrawn"),BA.ObjectToString("MaterialIcons"))) {
case 0: {
 BA.debugLineNum = 1559;BA.debugLine="AddMenuItemImagenToMenuInMenuBar(\"Exportar a Ex";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addmenuitemimagentomenuinmenubar" /*RemoteObject*/ ,(Object)(BA.ObjectToString("Exportar a Excel")),(Object)(BA.ObjectToString("ExportarTablaAExcel")),(Object)(__ref.getField(true,"_menubartabla" /*RemoteObject*/ )),(Object)(jamtableclv.__c.getField(false,"File").runMethod(true,"getDirAssets")),(Object)(BA.ObjectToString("ExcelExport.png")),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 24))))),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 24))))));
 break; }
case 1: {
 BA.debugLineNum = 1561;BA.debugLine="AddMenuItemImagenToMenuInMenuBar(\"Exportar a Ex";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addmenuitemimagentomenuinmenubar" /*RemoteObject*/ ,(Object)(BA.ObjectToString("Exportar a Excel")),(Object)(BA.ObjectToString("ExportarTablaAExcel")),(Object)(__ref.getField(true,"_menubartabla" /*RemoteObject*/ )),(Object)(jamtableclv.__c.getField(false,"File").runMethod(true,"getDirAssets")),(Object)(BA.ObjectToString("outline_file_download_black_24dp.png")),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 18))))),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 18))))));
 break; }
}
;
 BA.debugLineNum = 1563;BA.debugLine="lstItemsDefaultMenu.Add(\"ExportarTablaAExcel\")";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstitemsdefaultmenu" /*RemoteObject*/ ).runVoidMethod ("Add",(Object)((RemoteObject.createImmutable("ExportarTablaAExcel"))));
 BA.debugLineNum = 1565;BA.debugLine="Select Case mEstiloMenu";
Debug.JustUpdateDeviceLine();
switch (BA.switchObjectToInt(__ref.getField(true,"_mestilomenu" /*RemoteObject*/ ),BA.ObjectToString("HandDrawn"),BA.ObjectToString("MaterialIcons"))) {
case 0: {
 BA.debugLineNum = 1567;BA.debugLine="AddMenuItemImagenToMenuInMenuBar(\"Actualizar\",\"";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addmenuitemimagentomenuinmenubar" /*RemoteObject*/ ,(Object)(BA.ObjectToString("Actualizar")),(Object)(BA.ObjectToString("Actualizar")),(Object)(__ref.getField(true,"_menubartabla" /*RemoteObject*/ )),(Object)(jamtableclv.__c.getField(false,"File").runMethod(true,"getDirAssets")),(Object)(BA.ObjectToString("TablaActualizar.png")),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 24))))),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 24))))));
 break; }
case 1: {
 BA.debugLineNum = 1569;BA.debugLine="AddMenuItemImagenToMenuInMenuBar(\"Actualizar\",\"";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addmenuitemimagentomenuinmenubar" /*RemoteObject*/ ,(Object)(BA.ObjectToString("Actualizar")),(Object)(BA.ObjectToString("Actualizar")),(Object)(__ref.getField(true,"_menubartabla" /*RemoteObject*/ )),(Object)(jamtableclv.__c.getField(false,"File").runMethod(true,"getDirAssets")),(Object)(BA.ObjectToString("outline_refresh_black_24dp.png")),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 18))))),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 18))))));
 break; }
}
;
 BA.debugLineNum = 1571;BA.debugLine="lstItemsDefaultMenu.Add(\"Actualizar\")";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstitemsdefaultmenu" /*RemoteObject*/ ).runVoidMethod ("Add",(Object)((RemoteObject.createImmutable("Actualizar"))));
 BA.debugLineNum = 1572;BA.debugLine="Dim mI As MenuItem=GetMenuBarMenuItem(\"Actualizar";
Debug.JustUpdateDeviceLine();
_mi = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");
_mi = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_getmenubarmenuitem" /*RemoteObject*/ ,(Object)(RemoteObject.createImmutable("Actualizar")));Debug.locals.put("mI", _mi);Debug.locals.put("mI", _mi);
 BA.debugLineNum = 1573;BA.debugLine="If Not(SubExists(mCallBack,mEventName & \"_MenuBar";
Debug.JustUpdateDeviceLine();
if (jamtableclv.__c.runMethod(true,"Not",(Object)(jamtableclv.__c.runMethod(true,"SubExists",__ref.getField(false, "ba"),(Object)(__ref.getField(false,"_mcallback" /*RemoteObject*/ )),(Object)(RemoteObject.concat(__ref.getField(true,"_meventname" /*RemoteObject*/ ),RemoteObject.createImmutable("_MenuBarMenuItem_Action")))))).<Boolean>get().booleanValue()) { 
 BA.debugLineNum = 1574;BA.debugLine="mI.Enabled=False";
Debug.JustUpdateDeviceLine();
_mi.runMethod(true,"setEnabled",jamtableclv.__c.getField(true,"False"));
 };
 BA.debugLineNum = 1577;BA.debugLine="Select Case mEstiloMenu";
Debug.JustUpdateDeviceLine();
switch (BA.switchObjectToInt(__ref.getField(true,"_mestilomenu" /*RemoteObject*/ ),BA.ObjectToString("HandDrawn"),BA.ObjectToString("MaterialIcons"))) {
case 0: {
 BA.debugLineNum = 1579;BA.debugLine="AddMenuItemImagenToMenuInMenuBar(\"Ordenar Regis";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addmenuitemimagentomenuinmenubar" /*RemoteObject*/ ,(Object)(BA.ObjectToString("Ordenar Registros")),(Object)(BA.ObjectToString("OrdenarRegistros")),(Object)(__ref.getField(true,"_menubartabla" /*RemoteObject*/ )),(Object)(jamtableclv.__c.getField(false,"File").runMethod(true,"getDirAssets")),(Object)(BA.ObjectToString("sort2.png")),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 24))))),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 24))))));
 break; }
case 1: {
 BA.debugLineNum = 1581;BA.debugLine="AddMenuItemImagenToMenuInMenuBar(\"Ordenar Regis";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addmenuitemimagentomenuinmenubar" /*RemoteObject*/ ,(Object)(BA.ObjectToString("Ordenar Registros")),(Object)(BA.ObjectToString("OrdenarRegistros")),(Object)(__ref.getField(true,"_menubartabla" /*RemoteObject*/ )),(Object)(jamtableclv.__c.getField(false,"File").runMethod(true,"getDirAssets")),(Object)(BA.ObjectToString("MItwotone_sort_by_alpha_black_18dp.png")),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 18))))),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 18))))));
 break; }
}
;
 BA.debugLineNum = 1583;BA.debugLine="lstItemsDefaultMenu.Add(\"OrdenarRegistros\")";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstitemsdefaultmenu" /*RemoteObject*/ ).runVoidMethod ("Add",(Object)((RemoteObject.createImmutable("OrdenarRegistros"))));
 BA.debugLineNum = 1588;BA.debugLine="Select Case mEstiloMenu";
Debug.JustUpdateDeviceLine();
switch (BA.switchObjectToInt(__ref.getField(true,"_mestilomenu" /*RemoteObject*/ ),BA.ObjectToString("HandDrawn"),BA.ObjectToString("MaterialIcons"))) {
case 0: {
 BA.debugLineNum = 1590;BA.debugLine="AddMenuItemImagenToMenuInMenuBar(\"Configurar Co";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addmenuitemimagentomenuinmenubar" /*RemoteObject*/ ,(Object)(BA.ObjectToString("Configurar Columnas Visibles")),(Object)(BA.ObjectToString("ConfigurarColumnasVisibles")),(Object)(__ref.getField(true,"_menubartabla" /*RemoteObject*/ )),(Object)(jamtableclv.__c.getField(false,"File").runMethod(true,"getDirAssets")),(Object)(BA.ObjectToString("Columna.png")),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 24))))),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 24))))));
 break; }
case 1: {
 BA.debugLineNum = 1592;BA.debugLine="AddMenuItemImagenToMenuInMenuBar(\"Configurar Co";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addmenuitemimagentomenuinmenubar" /*RemoteObject*/ ,(Object)(BA.ObjectToString("Configurar Columnas Visibles")),(Object)(BA.ObjectToString("ConfigurarColumnasVisibles")),(Object)(__ref.getField(true,"_menubartabla" /*RemoteObject*/ )),(Object)(jamtableclv.__c.getField(false,"File").runMethod(true,"getDirAssets")),(Object)(BA.ObjectToString("outline_view_week_black_24dp.png")),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 18))))),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 18))))));
 break; }
}
;
 BA.debugLineNum = 1594;BA.debugLine="lstItemsDefaultMenu.Add(\"ConfigurarColumnasVisibl";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstitemsdefaultmenu" /*RemoteObject*/ ).runVoidMethod ("Add",(Object)((RemoteObject.createImmutable("ConfigurarColumnasVisibles"))));
 BA.debugLineNum = 1596;BA.debugLine="Select Case mEstiloMenu";
Debug.JustUpdateDeviceLine();
switch (BA.switchObjectToInt(__ref.getField(true,"_mestilomenu" /*RemoteObject*/ ),BA.ObjectToString("HandDrawn"),BA.ObjectToString("MaterialIcons"))) {
case 0: {
 BA.debugLineNum = 1598;BA.debugLine="AddMenuItemImagenToMenuInMenuBar(\"Tamaño Fuente";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addmenuitemimagentomenuinmenubar" /*RemoteObject*/ ,(Object)(BA.ObjectToString("Tamaño Fuente")),(Object)(BA.ObjectToString("TamañoFuente")),(Object)(__ref.getField(true,"_menubartabla" /*RemoteObject*/ )),(Object)(jamtableclv.__c.getField(false,"File").runMethod(true,"getDirAssets")),(Object)(BA.ObjectToString("text-size.png")),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 24))))),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 24))))));
 break; }
case 1: {
 BA.debugLineNum = 1600;BA.debugLine="AddMenuItemImagenToMenuInMenuBar(\"Tamaño Fuente";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addmenuitemimagentomenuinmenubar" /*RemoteObject*/ ,(Object)(BA.ObjectToString("Tamaño Fuente")),(Object)(BA.ObjectToString("TamañoFuente")),(Object)(__ref.getField(true,"_menubartabla" /*RemoteObject*/ )),(Object)(jamtableclv.__c.getField(false,"File").runMethod(true,"getDirAssets")),(Object)(BA.ObjectToString("MItwotone_text_increase_black_18dp.png")),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 18))))),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 18))))));
 break; }
}
;
 BA.debugLineNum = 1602;BA.debugLine="lstItemsDefaultMenu.Add(\"TamañoFuente\")";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstitemsdefaultmenu" /*RemoteObject*/ ).runVoidMethod ("Add",(Object)((RemoteObject.createImmutable("TamañoFuente"))));
 BA.debugLineNum = 1607;BA.debugLine="Select Case mEstiloMenu";
Debug.JustUpdateDeviceLine();
switch (BA.switchObjectToInt(__ref.getField(true,"_mestilomenu" /*RemoteObject*/ ),BA.ObjectToString("HandDrawn"),BA.ObjectToString("MaterialIcons"))) {
case 0: {
 BA.debugLineNum = 1609;BA.debugLine="AddMenuItemImagenToMenuInMenuBar(\"Reset Columna";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addmenuitemimagentomenuinmenubar" /*RemoteObject*/ ,(Object)(BA.ObjectToString("Reset Columnas")),(Object)(BA.ObjectToString("ResetColumnas")),(Object)(__ref.getField(true,"_menubartabla" /*RemoteObject*/ )),(Object)(jamtableclv.__c.getField(false,"File").runMethod(true,"getDirAssets")),(Object)(BA.ObjectToString("resetConfig.png")),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 24))))),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 24))))));
 break; }
case 1: {
 BA.debugLineNum = 1611;BA.debugLine="AddMenuItemImagenToMenuInMenuBar(\"Reset Columna";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addmenuitemimagentomenuinmenubar" /*RemoteObject*/ ,(Object)(BA.ObjectToString("Reset Columnas")),(Object)(BA.ObjectToString("ResetColumnas")),(Object)(__ref.getField(true,"_menubartabla" /*RemoteObject*/ )),(Object)(jamtableclv.__c.getField(false,"File").runMethod(true,"getDirAssets")),(Object)(BA.ObjectToString("MItwotone_sync_black_18dp.png")),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 18))))),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 18))))));
 break; }
}
;
 BA.debugLineNum = 1613;BA.debugLine="lstItemsDefaultMenu.Add(\"ResetColumnas\")";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstitemsdefaultmenu" /*RemoteObject*/ ).runVoidMethod ("Add",(Object)((RemoteObject.createImmutable("ResetColumnas"))));
 BA.debugLineNum = 1615;BA.debugLine="AddMenuItemSeparatorInMenuBar(MenuBarTabla)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addmenuitemseparatorinmenubar" /*RemoteObject*/ ,(Object)(__ref.getField(true,"_menubartabla" /*RemoteObject*/ )));
 BA.debugLineNum = 1616;BA.debugLine="Select Case mEstiloMenu";
Debug.JustUpdateDeviceLine();
switch (BA.switchObjectToInt(__ref.getField(true,"_mestilomenu" /*RemoteObject*/ ),BA.ObjectToString("HandDrawn"),BA.ObjectToString("MaterialIcons"))) {
case 0: {
 BA.debugLineNum = 1618;BA.debugLine="AddMenuItemImagenToMenuInMenuBar(\"Totales Campo";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addmenuitemimagentomenuinmenubar" /*RemoteObject*/ ,(Object)(BA.ObjectToString("Totales Campos Numéricos")),(Object)(BA.ObjectToString("TotalesCamposNumericos")),(Object)(__ref.getField(true,"_menubartabla" /*RemoteObject*/ )),(Object)(jamtableclv.__c.getField(false,"File").runMethod(true,"getDirAssets")),(Object)(BA.ObjectToString("TotalesTabla.png")),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 24))))),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 24))))));
 break; }
case 1: {
 BA.debugLineNum = 1620;BA.debugLine="AddMenuItemImagenToMenuInMenuBar(\"Totales Campo";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addmenuitemimagentomenuinmenubar" /*RemoteObject*/ ,(Object)(BA.ObjectToString("Totales Campos Numéricos")),(Object)(BA.ObjectToString("TotalesCamposNumericos")),(Object)(__ref.getField(true,"_menubartabla" /*RemoteObject*/ )),(Object)(jamtableclv.__c.getField(false,"File").runMethod(true,"getDirAssets")),(Object)(BA.ObjectToString("MItwotone_functions_black_18dp.png")),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 18))))),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 18))))));
 break; }
}
;
 BA.debugLineNum = 1622;BA.debugLine="lstItemsDefaultMenu.Add(\"TotalesCamposNumericos\")";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstitemsdefaultmenu" /*RemoteObject*/ ).runVoidMethod ("Add",(Object)((RemoteObject.createImmutable("TotalesCamposNumericos"))));
 BA.debugLineNum = 1626;BA.debugLine="AddMenuItemSeparatorInMenuBar(MenuBarTabla)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addmenuitemseparatorinmenubar" /*RemoteObject*/ ,(Object)(__ref.getField(true,"_menubartabla" /*RemoteObject*/ )));
 BA.debugLineNum = 1627;BA.debugLine="Select Case mEstiloMenu";
Debug.JustUpdateDeviceLine();
switch (BA.switchObjectToInt(__ref.getField(true,"_mestilomenu" /*RemoteObject*/ ),BA.ObjectToString("HandDrawn"),BA.ObjectToString("MaterialIcons"))) {
case 0: {
 BA.debugLineNum = 1629;BA.debugLine="AddMenuItemImagenToMenuInMenuBar(\"Campos Builde";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addmenuitemimagentomenuinmenubar" /*RemoteObject*/ ,(Object)(BA.ObjectToString("Campos Builder")),(Object)(BA.ObjectToString("CamposBuilder")),(Object)(__ref.getField(true,"_menubartabla" /*RemoteObject*/ )),(Object)(jamtableclv.__c.getField(false,"File").runMethod(true,"getDirAssets")),(Object)(BA.ObjectToString("tableDesign.png")),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 24))))),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 24))))));
 break; }
case 1: {
 BA.debugLineNum = 1631;BA.debugLine="AddMenuItemImagenToMenuInMenuBar(\"Campos Builde";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_addmenuitemimagentomenuinmenubar" /*RemoteObject*/ ,(Object)(BA.ObjectToString("Campos Builder")),(Object)(BA.ObjectToString("CamposBuilder")),(Object)(__ref.getField(true,"_menubartabla" /*RemoteObject*/ )),(Object)(jamtableclv.__c.getField(false,"File").runMethod(true,"getDirAssets")),(Object)(BA.ObjectToString("outline_handyman_black_24dp.png")),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 18))))),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 18))))));
 break; }
}
;
 BA.debugLineNum = 1633;BA.debugLine="lstItemsDefaultMenu.Add(\"CamposBuilder\")";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstitemsdefaultmenu" /*RemoteObject*/ ).runVoidMethod ("Add",(Object)((RemoteObject.createImmutable("CamposBuilder"))));
 BA.debugLineNum = 1635;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _mostrarcontextmenuitemclv(RemoteObject __ref,RemoteObject _indexitem) throws Exception{
try {
		Debug.PushSubsStack("MostrarContextMenuItemCLV (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,1917);
if (RapidSub.canDelegate("mostrarcontextmenuitemclv")) { return __ref.runUserSub(false, "jamtableclv","mostrarcontextmenuitemclv", __ref, _indexitem);}
ResumableSub_MostrarContextMenuItemCLV rsub = new ResumableSub_MostrarContextMenuItemCLV(null,__ref,_indexitem);
rsub.remoteResumableSub = anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSubForFilter();
rsub.resume(null, null);
return RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.keywords.Common.ResumableSubWrapper"), rsub.remoteResumableSub);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_MostrarContextMenuItemCLV extends BA.ResumableSub {
public ResumableSub_MostrarContextMenuItemCLV(b4j.docU.jamtableclv parent,RemoteObject __ref,RemoteObject _indexitem) {
this.parent = parent;
this.__ref = __ref;
this._indexitem = _indexitem;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _indexitem;
RemoteObject _mobj = RemoteObject.declareNull("Object");
RemoteObject _nativeme = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
RemoteObject _esseparador = RemoteObject.createImmutable(false);
RemoteObject _esmenu = RemoteObject.createImmutable(false);
RemoteObject _mig = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");
RemoteObject _mi = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");
RemoteObject _jo = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
RemoteObject _xcurrmouse = RemoteObject.createImmutable(0);
RemoteObject _ycurrmouse = RemoteObject.createImmutable(0);
RemoteObject _pitemsel = RemoteObject.declareNull("anywheresoftware.b4a.objects.B4XViewWrapper");
RemoteObject _pn = RemoteObject.declareNull("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
RemoteObject group2;
int index2;
int groupLen2;

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("MostrarContextMenuItemCLV (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,1917);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
{
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,RemoteObject.createImmutable(null));return;}
case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
Debug.locals.put("IndexItem", _indexitem);
 BA.debugLineNum = 1919;BA.debugLine="mContextMenu.MenuItems.Clear";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_mcontextmenu" /*RemoteObject*/ ).runMethod(false,"getMenuItems").runVoidMethod ("Clear");
 BA.debugLineNum = 1921;BA.debugLine="For Each mObj As Object In lstContextMenuItemsG";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//for
this.state = 20;
group2 = __ref.getField(false,"_lstcontextmenuitemsgenerales" /*RemoteObject*/ );
index2 = 0;
groupLen2 = group2.runMethod(true,"getSize").<Integer>get();
Debug.locals.put("mObj", _mobj);
this.state = 27;
if (true) break;

case 27:
//C
this.state = 20;
if (index2 < groupLen2) {
this.state = 3;
_mobj = group2.runMethod(false,"Get",index2);Debug.locals.put("mObj", _mobj);}
if (true) break;

case 28:
//C
this.state = 27;
index2++;
Debug.locals.put("mObj", _mobj);
if (true) break;

case 3:
//C
this.state = 4;
 BA.debugLineNum = 1922;BA.debugLine="Dim NativeMe As JavaObject=Me";
Debug.JustUpdateDeviceLine();
_nativeme = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");
_nativeme = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), __ref);Debug.locals.put("NativeMe", _nativeme);Debug.locals.put("NativeMe", _nativeme);
 BA.debugLineNum = 1923;BA.debugLine="Dim EsSeparador As Boolean=NativeMe.RunMethod(";
Debug.JustUpdateDeviceLine();
_esseparador = BA.ObjectToBoolean(_nativeme.runMethod(false,"RunMethod",(Object)(BA.ObjectToString("IsSeparatorMenuItem")),(Object)(RemoteObject.createNewArray("Object",new int[] {1},new Object[] {_mobj}))));Debug.locals.put("EsSeparador", _esseparador);Debug.locals.put("EsSeparador", _esseparador);
 BA.debugLineNum = 1924;BA.debugLine="If EsSeparador Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 4:
//if
this.state = 19;
if (_esseparador.<Boolean>get().booleanValue()) { 
this.state = 6;
}else {
this.state = 8;
}if (true) break;

case 6:
//C
this.state = 19;
 BA.debugLineNum = 1925;BA.debugLine="mContextMenu.MenuItems.Add(mObj)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_mcontextmenu" /*RemoteObject*/ ).runMethod(false,"getMenuItems").runVoidMethod ("Add",(Object)(_mobj));
 if (true) break;

case 8:
//C
this.state = 9;
 BA.debugLineNum = 1927;BA.debugLine="Dim EsMenu As Boolean=NativeMe.RunMethod(\"IsM";
Debug.JustUpdateDeviceLine();
_esmenu = BA.ObjectToBoolean(_nativeme.runMethod(false,"RunMethod",(Object)(BA.ObjectToString("IsMenu")),(Object)(RemoteObject.createNewArray("Object",new int[] {1},new Object[] {_mobj}))));Debug.locals.put("EsMenu", _esmenu);Debug.locals.put("EsMenu", _esmenu);
 BA.debugLineNum = 1928;BA.debugLine="If EsMenu Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 9:
//if
this.state = 18;
if (_esmenu.<Boolean>get().booleanValue()) { 
this.state = 11;
}else {
this.state = 13;
}if (true) break;

case 11:
//C
this.state = 18;
 BA.debugLineNum = 1929;BA.debugLine="mContextMenu.MenuItems.Add(mObj)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_mcontextmenu" /*RemoteObject*/ ).runMethod(false,"getMenuItems").runVoidMethod ("Add",(Object)(_mobj));
 if (true) break;

case 13:
//C
this.state = 14;
 BA.debugLineNum = 1931;BA.debugLine="Dim mIG As MenuItem=mObj";
Debug.JustUpdateDeviceLine();
_mig = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");
_mig = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper"), _mobj);Debug.locals.put("mIG", _mig);Debug.locals.put("mIG", _mig);
 BA.debugLineNum = 1932;BA.debugLine="Dim mI As MenuItem";
Debug.JustUpdateDeviceLine();
_mi = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");Debug.locals.put("mI", _mi);
 BA.debugLineNum = 1933;BA.debugLine="mI.Initialize(mIG.Text,\"ContextMenuItem\")";
Debug.JustUpdateDeviceLine();
_mi.runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(_mig.runMethod(true,"getText")),(Object)(RemoteObject.createImmutable("ContextMenuItem")));
 BA.debugLineNum = 1934;BA.debugLine="mI.Tag=mIG.Tag";
Debug.JustUpdateDeviceLine();
_mi.runMethod(false,"setTag",_mig.runMethod(false,"getTag"));
 BA.debugLineNum = 1935;BA.debugLine="If mIG.Image.IsInitialized Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 14:
//if
this.state = 17;
if (_mig.runMethod(false,"getImage").runMethod(true,"IsInitialized").<Boolean>get().booleanValue()) { 
this.state = 16;
}if (true) break;

case 16:
//C
this.state = 17;
 BA.debugLineNum = 1936;BA.debugLine="mI.Image=mIG.Image";
Debug.JustUpdateDeviceLine();
_mi.runMethod(false,"setImage",(_mig.runMethod(false,"getImage").getObject()));
 if (true) break;

case 17:
//C
this.state = 18;
;
 BA.debugLineNum = 1938;BA.debugLine="mContextMenu.MenuItems.Add(mI)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_mcontextmenu" /*RemoteObject*/ ).runMethod(false,"getMenuItems").runVoidMethod ("Add",(Object)((_mi.getObject())));
 if (true) break;

case 18:
//C
this.state = 19;
;
 if (true) break;

case 19:
//C
this.state = 28;
;
 if (true) break;
if (true) break;

case 20:
//C
this.state = 21;
Debug.locals.put("mObj", _mobj);
;
 BA.debugLineNum = 1977;BA.debugLine="Sleep(0)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("Sleep",__ref.getField(false, "ba"),anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "mostrarcontextmenuitemclv"),BA.numberCast(int.class, 0));
this.state = 29;
return;
case 29:
//C
this.state = 21;
;
 BA.debugLineNum = 1979;BA.debugLine="If mContextMenu.MenuItems.Size=0 Then Return Fals";
Debug.JustUpdateDeviceLine();
if (true) break;

case 21:
//if
this.state = 26;
if (RemoteObject.solveBoolean("=",__ref.getField(false,"_mcontextmenu" /*RemoteObject*/ ).runMethod(false,"getMenuItems").runMethod(true,"getSize"),BA.numberCast(double.class, 0))) { 
this.state = 23;
;}if (true) break;

case 23:
//C
this.state = 26;
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(parent.__c.getField(true,"False")));return;};
if (true) break;

case 26:
//C
this.state = -1;
;
 BA.debugLineNum = 1981;BA.debugLine="Dim jo As JavaObject=mContextMenu";
Debug.JustUpdateDeviceLine();
_jo = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");
_jo = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), __ref.getField(false,"_mcontextmenu" /*RemoteObject*/ ).getObject());Debug.locals.put("jo", _jo);Debug.locals.put("jo", _jo);
 BA.debugLineNum = 1982;BA.debugLine="Dim xCurrMouse As Double=PosicionActualRaton(0)";
Debug.JustUpdateDeviceLine();
_xcurrmouse = BA.numberCast(double.class, __ref.runClassMethod (b4j.docU.jamtableclv.class, "_posicionactualraton" /*RemoteObject*/ ).getArrayElement(true,BA.numberCast(int.class, 0)));Debug.locals.put("xCurrMouse", _xcurrmouse);Debug.locals.put("xCurrMouse", _xcurrmouse);
 BA.debugLineNum = 1983;BA.debugLine="Dim yCurrMouse As Double=PosicionActualRaton(1)";
Debug.JustUpdateDeviceLine();
_ycurrmouse = BA.numberCast(double.class, __ref.runClassMethod (b4j.docU.jamtableclv.class, "_posicionactualraton" /*RemoteObject*/ ).getArrayElement(true,BA.numberCast(int.class, 1)));Debug.locals.put("yCurrMouse", _ycurrmouse);Debug.locals.put("yCurrMouse", _ycurrmouse);
 BA.debugLineNum = 1984;BA.debugLine="Dim pItemSel As B4XView=clvDatos.GetPanel(IndexIt";
Debug.JustUpdateDeviceLine();
_pitemsel = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");
_pitemsel = __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(false,"_getpanel",(Object)(_indexitem));Debug.locals.put("pItemSel", _pitemsel);Debug.locals.put("pItemSel", _pitemsel);
 BA.debugLineNum = 1985;BA.debugLine="Dim pn As Pane=pItemSel";
Debug.JustUpdateDeviceLine();
_pn = RemoteObject.createNew ("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
_pn = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper"), _pitemsel.getObject());Debug.locals.put("pn", _pn);Debug.locals.put("pn", _pn);
 BA.debugLineNum = 1986;BA.debugLine="jo.RunMethod(\"show\", Array(pn,xCurrMouse,yCurrMou";
Debug.JustUpdateDeviceLine();
_jo.runVoidMethod ("RunMethod",(Object)(BA.ObjectToString("show")),(Object)(RemoteObject.createNewArray("Object",new int[] {3},new Object[] {(_pn.getObject()),(_xcurrmouse),(_ycurrmouse)})));
 BA.debugLineNum = 1987;BA.debugLine="Return True";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(parent.__c.getField(true,"True")));return;};
 BA.debugLineNum = 1988;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static RemoteObject  _mostrarcontextmenunodojo(RemoteObject __ref,RemoteObject _xnode) throws Exception{
try {
		Debug.PushSubsStack("MostrarContextMenuNodoJO (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,1111);
if (RapidSub.canDelegate("mostrarcontextmenunodojo")) { return __ref.runUserSub(false, "jamtableclv","mostrarcontextmenunodojo", __ref, _xnode);}
RemoteObject _joctxnode = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
RemoteObject _xcurrmouse = RemoteObject.createImmutable(0);
RemoteObject _ycurrmouse = RemoteObject.createImmutable(0);
Debug.locals.put("xNode", _xnode);
 BA.debugLineNum = 1111;BA.debugLine="private Sub MostrarContextMenuNodoJO(xNode As B4XV";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 1112;BA.debugLine="If mContextMenu.MenuItems.Size=0 Then Return";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",__ref.getField(false,"_mcontextmenu" /*RemoteObject*/ ).runMethod(false,"getMenuItems").runMethod(true,"getSize"),BA.numberCast(double.class, 0))) { 
if (true) return RemoteObject.createImmutable("");};
 BA.debugLineNum = 1113;BA.debugLine="Dim JOctXNode As JavaObject=mContextMenu";
Debug.JustUpdateDeviceLine();
_joctxnode = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");
_joctxnode = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), __ref.getField(false,"_mcontextmenu" /*RemoteObject*/ ).getObject());Debug.locals.put("JOctXNode", _joctxnode);Debug.locals.put("JOctXNode", _joctxnode);
 BA.debugLineNum = 1114;BA.debugLine="JOctXNode.RunMethod(\"hide\", Null)";
Debug.JustUpdateDeviceLine();
_joctxnode.runVoidMethod ("RunMethod",(Object)(BA.ObjectToString("hide")),(Object)((jamtableclv.__c.getField(false,"Null"))));
 BA.debugLineNum = 1115;BA.debugLine="Dim xCurrMouse As Double=PosicionActualRaton(0)";
Debug.JustUpdateDeviceLine();
_xcurrmouse = BA.numberCast(double.class, __ref.runClassMethod (b4j.docU.jamtableclv.class, "_posicionactualraton" /*RemoteObject*/ ).getArrayElement(true,BA.numberCast(int.class, 0)));Debug.locals.put("xCurrMouse", _xcurrmouse);Debug.locals.put("xCurrMouse", _xcurrmouse);
 BA.debugLineNum = 1116;BA.debugLine="Dim yCurrMouse As Double=PosicionActualRaton(1)";
Debug.JustUpdateDeviceLine();
_ycurrmouse = BA.numberCast(double.class, __ref.runClassMethod (b4j.docU.jamtableclv.class, "_posicionactualraton" /*RemoteObject*/ ).getArrayElement(true,BA.numberCast(int.class, 1)));Debug.locals.put("yCurrMouse", _ycurrmouse);Debug.locals.put("yCurrMouse", _ycurrmouse);
 BA.debugLineNum = 1117;BA.debugLine="JOctXNode.RunMethod(\"show\", Array(xNode, xCurrMou";
Debug.JustUpdateDeviceLine();
_joctxnode.runVoidMethod ("RunMethod",(Object)(BA.ObjectToString("show")),(Object)(RemoteObject.createNewArray("Object",new int[] {3},new Object[] {(_xnode.getObject()),(_xcurrmouse),(_ycurrmouse)})));
 BA.debugLineNum = 1118;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _node_keypress_event(RemoteObject __ref,RemoteObject _methodname,RemoteObject _args) throws Exception{
try {
		Debug.PushSubsStack("Node_KeyPress_Event (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,8260);
if (RapidSub.canDelegate("node_keypress_event")) { return __ref.runUserSub(false, "jamtableclv","node_keypress_event", __ref, _methodname, _args);}
RemoteObject _target = RemoteObject.declareNull("anywheresoftware.b4j.objects.NodeWrapper.ConcreteNodeWrapper");
RemoteObject _b4xviewsel = RemoteObject.declareNull("anywheresoftware.b4a.objects.B4XViewWrapper");
Debug.locals.put("MethodName", _methodname);
Debug.locals.put("Args", _args);
 BA.debugLineNum = 8260;BA.debugLine="Sub Node_KeyPress_Event(MethodName As String, Args";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 8262;BA.debugLine="Dim target As Node = asJO(Args(0)).RunMethod(\"get";
Debug.JustUpdateDeviceLine();
_target = RemoteObject.createNew ("anywheresoftware.b4j.objects.NodeWrapper.ConcreteNodeWrapper");
_target = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.NodeWrapper.ConcreteNodeWrapper"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_asjo" /*RemoteObject*/ ,RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), _args.getArrayElement(false,BA.numberCast(int.class, 0)))).runMethod(false,"RunMethod",(Object)(BA.ObjectToString("getTarget")),(Object)((jamtableclv.__c.getField(false,"Null")))));Debug.locals.put("target", _target);Debug.locals.put("target", _target);
 BA.debugLineNum = 8263;BA.debugLine="Log(\"Node tag \" & target.tag)";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("LogImpl","9174915587",RemoteObject.concat(RemoteObject.createImmutable("Node tag "),_target.runMethod(false,"getTag")),0);
 BA.debugLineNum = 8264;BA.debugLine="Dim B4xViewSel As B4XView=target";
Debug.JustUpdateDeviceLine();
_b4xviewsel = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");
_b4xviewsel = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper"), _target.getObject());Debug.locals.put("B4xViewSel", _b4xviewsel);Debug.locals.put("B4xViewSel", _b4xviewsel);
 BA.debugLineNum = 8265;BA.debugLine="If asJO(Args(0)).RunMethod(\"getCode\",Null) == key";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",__ref.runClassMethod (b4j.docU.jamtableclv.class, "_asjo" /*RemoteObject*/ ,RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), _args.getArrayElement(false,BA.numberCast(int.class, 0)))).runMethod(false,"RunMethod",(Object)(BA.ObjectToString("getCode")),(Object)((jamtableclv.__c.getField(false,"Null")))),__ref.getField(false,"_keycode" /*RemoteObject*/ ).runMethod(false,"GetField",(Object)(RemoteObject.createImmutable("UP"))))) { 
 BA.debugLineNum = 8275;BA.debugLine="IrANodoItemAnterior(B4xViewSel)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_iranodoitemanterior" /*RemoteObject*/ ,(Object)(_b4xviewsel));
 };
 BA.debugLineNum = 8277;BA.debugLine="If asJO(Args(0)).RunMethod(\"getCode\",Null) == key";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",__ref.runClassMethod (b4j.docU.jamtableclv.class, "_asjo" /*RemoteObject*/ ,RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), _args.getArrayElement(false,BA.numberCast(int.class, 0)))).runMethod(false,"RunMethod",(Object)(BA.ObjectToString("getCode")),(Object)((jamtableclv.__c.getField(false,"Null")))),__ref.getField(false,"_keycode" /*RemoteObject*/ ).runMethod(false,"GetField",(Object)(RemoteObject.createImmutable("DOWN"))))) { 
 BA.debugLineNum = 8295;BA.debugLine="IrANodoItemSiguiente(B4xViewSel)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_iranodoitemsiguiente" /*void*/ ,(Object)(_b4xviewsel));
 };
 BA.debugLineNum = 8297;BA.debugLine="asJO(Args(0)).RunMethod(\"consume\",Null)' eat the";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_asjo" /*RemoteObject*/ ,RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), _args.getArrayElement(false,BA.numberCast(int.class, 0)))).runVoidMethod ("RunMethod",(Object)(BA.ObjectToString("consume")),(Object)((jamtableclv.__c.getField(false,"Null"))));
 BA.debugLineNum = 8298;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _node_mouseclicked_event(RemoteObject __ref,RemoteObject _methodname,RemoteObject _args) throws Exception{
try {
		Debug.PushSubsStack("Node_MouseClicked_Event (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,8138);
if (RapidSub.canDelegate("node_mouseclicked_event")) { return __ref.runUserSub(false, "jamtableclv","node_mouseclicked_event", __ref, _methodname, _args);}
RemoteObject _xnode = RemoteObject.declareNull("anywheresoftware.b4a.objects.B4XViewWrapper");
RemoteObject _jombtn = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
RemoteObject _sbtn = RemoteObject.createImmutable("");
RemoteObject _aliascamponodosel = RemoteObject.createImmutable("");
RemoteObject _mobj = RemoteObject.declareNull("Object");
RemoteObject _nativeme = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
RemoteObject _esseparador = RemoteObject.createImmutable(false);
RemoteObject _esmenu = RemoteObject.createImmutable(false);
RemoteObject _mn = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper");
RemoteObject _ctxmmit = RemoteObject.declareNull("b4j.docU.jamtableclv._contextmenuitemnodojamtableclv");
RemoteObject _mi = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");
RemoteObject _c = RemoteObject.declareNull("b4j.docU.jamtableclv._campoorigendatosjamtableclv");
RemoteObject _mtotales = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper");
RemoteObject _img = RemoteObject.declareNull("anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper");
RemoteObject _imv = RemoteObject.declareNull("anywheresoftware.b4j.objects.ImageViewWrapper");
RemoteObject _jomnu = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
RemoteObject _mitotalessuma = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");
RemoteObject _mitotalespromedio = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");
RemoteObject _mitotalesmin = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");
RemoteObject _mitotalesmax = RemoteObject.declareNull("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");
RemoteObject _ultimoobjmenuctx = RemoteObject.declareNull("Object");
RemoteObject _sseparator = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
RemoteObject _numclicks = RemoteObject.createImmutable(0);
Debug.locals.put("MethodName", _methodname);
Debug.locals.put("Args", _args);
 BA.debugLineNum = 8138;BA.debugLine="Sub Node_MouseClicked_Event(MethodName As String,";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 8139;BA.debugLine="Dim xNode As B4XView=Sender";
Debug.JustUpdateDeviceLine();
_xnode = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");
_xnode = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper"), jamtableclv.__c.runMethod(false,"Sender",__ref.getField(false, "ba")));Debug.locals.put("xNode", _xnode);Debug.locals.put("xNode", _xnode);
 BA.debugLineNum = 8140;BA.debugLine="Dim JOMbtn As JavaObject=asJO(Args(0)).RunMethodJ";
Debug.JustUpdateDeviceLine();
_jombtn = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");
_jombtn = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_asjo" /*RemoteObject*/ ,RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), _args.getArrayElement(false,BA.numberCast(int.class, 0)))).runMethod(false,"RunMethodJO",(Object)(BA.ObjectToString("getButton")),(Object)((jamtableclv.__c.getField(false,"Null"))));Debug.locals.put("JOMbtn", _jombtn);Debug.locals.put("JOMbtn", _jombtn);
 BA.debugLineNum = 8141;BA.debugLine="Dim sBtn As String=JOMbtn.RunMethod(\"name\",Null)";
Debug.JustUpdateDeviceLine();
_sbtn = BA.ObjectToString(_jombtn.runMethod(false,"RunMethod",(Object)(BA.ObjectToString("name")),(Object)((jamtableclv.__c.getField(false,"Null")))));Debug.locals.put("sBtn", _sbtn);Debug.locals.put("sBtn", _sbtn);
 BA.debugLineNum = 8142;BA.debugLine="Select Case sBtn";
Debug.JustUpdateDeviceLine();
switch (BA.switchObjectToInt(_sbtn,BA.ObjectToString("SECONDARY"),BA.ObjectToString("PRIMARY"))) {
case 0: {
 BA.debugLineNum = 8149;BA.debugLine="mContextMenu.MenuItems.Clear";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_mcontextmenu" /*RemoteObject*/ ).runMethod(false,"getMenuItems").runVoidMethod ("Clear");
 BA.debugLineNum = 8150;BA.debugLine="xNodeContextMenu=xNode";
Debug.JustUpdateDeviceLine();
__ref.setField ("_xnodecontextmenu" /*RemoteObject*/ ,_xnode);
 BA.debugLineNum = 8151;BA.debugLine="MenuContextualBasicoNodo(xNode)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_menucontextualbasiconodo" /*RemoteObject*/ ,(Object)(_xnode));
 BA.debugLineNum = 8153;BA.debugLine="Dim AliasCampoNodoSel As String=xNode.Tag";
Debug.JustUpdateDeviceLine();
_aliascamponodosel = BA.ObjectToString(_xnode.runMethod(false,"getTag"));Debug.locals.put("AliasCampoNodoSel", _aliascamponodosel);Debug.locals.put("AliasCampoNodoSel", _aliascamponodosel);
 BA.debugLineNum = 8158;BA.debugLine="For Each mOBj As Object In lstContextMenuItemsN";
Debug.JustUpdateDeviceLine();
{
final RemoteObject group10 = __ref.getField(false,"_lstcontextmenuitemsnodo" /*RemoteObject*/ );
final int groupLen10 = group10.runMethod(true,"getSize").<Integer>get()
;int index10 = 0;
;
for (; index10 < groupLen10;index10++){
_mobj = group10.runMethod(false,"Get",index10);Debug.locals.put("mOBj", _mobj);
Debug.locals.put("mOBj", _mobj);
 BA.debugLineNum = 8159;BA.debugLine="Dim NativeMe As JavaObject=Me";
Debug.JustUpdateDeviceLine();
_nativeme = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");
_nativeme = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), __ref);Debug.locals.put("NativeMe", _nativeme);Debug.locals.put("NativeMe", _nativeme);
 BA.debugLineNum = 8160;BA.debugLine="Dim EsSeparador As Boolean=NativeMe.RunMethod(";
Debug.JustUpdateDeviceLine();
_esseparador = BA.ObjectToBoolean(_nativeme.runMethod(false,"RunMethod",(Object)(BA.ObjectToString("IsSeparatorMenuItem")),(Object)(RemoteObject.createNewArray("Object",new int[] {1},new Object[] {_mobj}))));Debug.locals.put("EsSeparador", _esseparador);Debug.locals.put("EsSeparador", _esseparador);
 BA.debugLineNum = 8161;BA.debugLine="If EsSeparador Then";
Debug.JustUpdateDeviceLine();
if (_esseparador.<Boolean>get().booleanValue()) { 
 BA.debugLineNum = 8162;BA.debugLine="mContextMenu.MenuItems.Add(mOBj)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_mcontextmenu" /*RemoteObject*/ ).runMethod(false,"getMenuItems").runVoidMethod ("Add",(Object)(_mobj));
 }else {
 BA.debugLineNum = 8164;BA.debugLine="Dim EsMenu As Boolean=NativeMe.RunMethod(\"IsM";
Debug.JustUpdateDeviceLine();
_esmenu = BA.ObjectToBoolean(_nativeme.runMethod(false,"RunMethod",(Object)(BA.ObjectToString("IsMenu")),(Object)(RemoteObject.createNewArray("Object",new int[] {1},new Object[] {_mobj}))));Debug.locals.put("EsMenu", _esmenu);Debug.locals.put("EsMenu", _esmenu);
 BA.debugLineNum = 8165;BA.debugLine="If EsMenu Then";
Debug.JustUpdateDeviceLine();
if (_esmenu.<Boolean>get().booleanValue()) { 
 BA.debugLineNum = 8166;BA.debugLine="Dim Mn As Menu=mOBj";
Debug.JustUpdateDeviceLine();
_mn = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper");
_mn = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper"), _mobj);Debug.locals.put("Mn", _mn);Debug.locals.put("Mn", _mn);
 BA.debugLineNum = 8167;BA.debugLine="mContextMenu.MenuItems.Add(Mn)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_mcontextmenu" /*RemoteObject*/ ).runMethod(false,"getMenuItems").runVoidMethod ("Add",(Object)((_mn.getObject())));
 }else {
 BA.debugLineNum = 8170;BA.debugLine="If mOBj Is ContextMenuItemNodoJamTableCLV Th";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("i",_mobj, RemoteObject.createImmutable("b4j.docU.jamtableclv._contextmenuitemnodojamtableclv"))) { 
 BA.debugLineNum = 8171;BA.debugLine="Dim CtxMmIt As ContextMenuItemNodoJamTableC";
Debug.JustUpdateDeviceLine();
_ctxmmit = (_mobj);Debug.locals.put("CtxMmIt", _ctxmmit);Debug.locals.put("CtxMmIt", _ctxmmit);
 BA.debugLineNum = 8172;BA.debugLine="If CtxMmIt.AliasCampo=AliasCampoNodoSel The";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_ctxmmit.getField(true,"AliasCampo" /*RemoteObject*/ ),_aliascamponodosel)) { 
 BA.debugLineNum = 8173;BA.debugLine="Log(\"CtxMmIt.AliasCampo \" & CtxMmIt.AliasC";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("LogImpl","9174850083",RemoteObject.concat(RemoteObject.createImmutable("CtxMmIt.AliasCampo "),_ctxmmit.getField(true,"AliasCampo" /*RemoteObject*/ )),0);
 BA.debugLineNum = 8174;BA.debugLine="Dim mI As MenuItem";
Debug.JustUpdateDeviceLine();
_mi = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");Debug.locals.put("mI", _mi);
 BA.debugLineNum = 8175;BA.debugLine="mI.Initialize(CtxMmIt.TextoMenuItem, \"Cont";
Debug.JustUpdateDeviceLine();
_mi.runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(_ctxmmit.getField(true,"TextoMenuItem" /*RemoteObject*/ )),(Object)(RemoteObject.createImmutable("ContextMenuItemNodo")));
 BA.debugLineNum = 8176;BA.debugLine="mI.Tag=CtxMmIt.TagMenuItem";
Debug.JustUpdateDeviceLine();
_mi.runMethod(false,"setTag",(_ctxmmit.getField(true,"TagMenuItem" /*RemoteObject*/ )));
 BA.debugLineNum = 8177;BA.debugLine="If CtxMmIt.Imagemenuitem.IsInitialized The";
Debug.JustUpdateDeviceLine();
if (_ctxmmit.getField(false,"ImageMenuItem" /*RemoteObject*/ ).runMethod(true,"IsInitialized").<Boolean>get().booleanValue()) { 
 BA.debugLineNum = 8178;BA.debugLine="mI.Image=CtxMmIt.Imagemenuitem";
Debug.JustUpdateDeviceLine();
_mi.runMethod(false,"setImage",(_ctxmmit.getField(false,"ImageMenuItem" /*RemoteObject*/ ).getObject()));
 };
 BA.debugLineNum = 8181;BA.debugLine="mContextMenu.MenuItems.Add(mI)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_mcontextmenu" /*RemoteObject*/ ).runMethod(false,"getMenuItems").runVoidMethod ("Add",(Object)((_mi.getObject())));
 };
 };
 };
 };
 }
}Debug.locals.put("mOBj", _mobj);
;
 BA.debugLineNum = 8188;BA.debugLine="Dim c As CampoOrigenDatosJamTableCLV=GetDatosCa";
Debug.JustUpdateDeviceLine();
_c = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_getdatoscampoorigendatosjamtableclvaliascampo" /*RemoteObject*/ ,(Object)(_aliascamponodosel));Debug.locals.put("c", _c);Debug.locals.put("c", _c);
 BA.debugLineNum = 8189;BA.debugLine="If c=Null Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("n",_c)) { 
 BA.debugLineNum = 8190;BA.debugLine="LogColor(\"TAG nodoSeleccionado: \" & AliasCampo";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("LogImpl","9174850100",RemoteObject.concat(RemoteObject.createImmutable("TAG nodoSeleccionado: "),_aliascamponodosel,RemoteObject.createImmutable(" no encontrado en mLstCamposOrigenDatos (revisar JSON vs TAG nodo)")),__ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"Color_Red"));
 }else {
 BA.debugLineNum = 8193;BA.debugLine="If (c.TipoDato=\"INTEGER\" Or c.TipoDato=\"REAL\")";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean(".",BA.ObjectToBoolean((RemoteObject.solveBoolean("=",_c.getField(true,"TipoDato" /*RemoteObject*/ ),BA.ObjectToString("INTEGER")) || RemoteObject.solveBoolean("=",_c.getField(true,"TipoDato" /*RemoteObject*/ ),RemoteObject.createImmutable("REAL"))))) && RemoteObject.solveBoolean(".",jamtableclv.__c.runMethod(true,"Not",(Object)(_c.getField(true,"EsFecha" /*RemoteObject*/ ))))) { 
 BA.debugLineNum = 8194;BA.debugLine="Dim mTotales As Menu";
Debug.JustUpdateDeviceLine();
_mtotales = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.MenuWrapper");Debug.locals.put("mTotales", _mtotales);
 BA.debugLineNum = 8195;BA.debugLine="mTotales.Initialize(\"Totales\",\"\")";
Debug.JustUpdateDeviceLine();
_mtotales.runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(BA.ObjectToString("Totales")),(Object)(RemoteObject.createImmutable("")));
 BA.debugLineNum = 8196;BA.debugLine="mTotales.Tag=\"TotalesCampoNodoSeleccionado\"";
Debug.JustUpdateDeviceLine();
_mtotales.runMethod(false,"setTag",RemoteObject.createImmutable(("TotalesCampoNodoSeleccionado")));
 BA.debugLineNum = 8197;BA.debugLine="Dim img As Image";
Debug.JustUpdateDeviceLine();
_img = RemoteObject.createNew ("anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper");Debug.locals.put("img", _img);
 BA.debugLineNum = 8198;BA.debugLine="img.Initializesample(File.DirAssets,\"TotalesC";
Debug.JustUpdateDeviceLine();
_img.runVoidMethod ("InitializeSample",(Object)(jamtableclv.__c.getField(false,"File").runMethod(true,"getDirAssets")),(Object)(BA.ObjectToString("TotalesColumna.png")),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 24))))),(Object)(BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 24))))));
 BA.debugLineNum = 8199;BA.debugLine="Dim Imv As ImageView";
Debug.JustUpdateDeviceLine();
_imv = RemoteObject.createNew ("anywheresoftware.b4j.objects.ImageViewWrapper");Debug.locals.put("Imv", _imv);
 BA.debugLineNum = 8200;BA.debugLine="Imv.Initialize(\"\")";
Debug.JustUpdateDeviceLine();
_imv.runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(RemoteObject.createImmutable("")));
 BA.debugLineNum = 8201;BA.debugLine="Imv.SetImage(img)";
Debug.JustUpdateDeviceLine();
_imv.runVoidMethod ("SetImage",(Object)((_img.getObject())));
 BA.debugLineNum = 8202;BA.debugLine="Dim JOMnu As JavaObject=mTotales";
Debug.JustUpdateDeviceLine();
_jomnu = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");
_jomnu = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), _mtotales.getObject());Debug.locals.put("JOMnu", _jomnu);Debug.locals.put("JOMnu", _jomnu);
 BA.debugLineNum = 8203;BA.debugLine="JOMnu.RunMethod(\"setGraphic\",Array(Imv))";
Debug.JustUpdateDeviceLine();
_jomnu.runVoidMethod ("RunMethod",(Object)(BA.ObjectToString("setGraphic")),(Object)(RemoteObject.createNewArray("Object",new int[] {1},new Object[] {(_imv.getObject())})));
 BA.debugLineNum = 8205;BA.debugLine="Dim mITotalesSuma As MenuItem";
Debug.JustUpdateDeviceLine();
_mitotalessuma = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");Debug.locals.put("mITotalesSuma", _mitotalessuma);
 BA.debugLineNum = 8206;BA.debugLine="mITotalesSuma.Initialize(\"Suma\",\"ContextMenuI";
Debug.JustUpdateDeviceLine();
_mitotalessuma.runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(BA.ObjectToString("Suma")),(Object)(RemoteObject.createImmutable("ContextMenuItemNodo")));
 BA.debugLineNum = 8207;BA.debugLine="mITotalesSuma.Tag=\"SumaTotalesCampoNodoSelecc";
Debug.JustUpdateDeviceLine();
_mitotalessuma.runMethod(false,"setTag",RemoteObject.createImmutable(("SumaTotalesCampoNodoSeleccionado")));
 BA.debugLineNum = 8208;BA.debugLine="mTotales.MenuItems.Add(mITotalesSuma)";
Debug.JustUpdateDeviceLine();
_mtotales.runMethod(false,"getMenuItems").runVoidMethod ("Add",(Object)((_mitotalessuma.getObject())));
 BA.debugLineNum = 8210;BA.debugLine="Dim mITotalesPromedio As MenuItem";
Debug.JustUpdateDeviceLine();
_mitotalespromedio = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");Debug.locals.put("mITotalesPromedio", _mitotalespromedio);
 BA.debugLineNum = 8211;BA.debugLine="mITotalesPromedio.Initialize(\"Promedio\",\"Cont";
Debug.JustUpdateDeviceLine();
_mitotalespromedio.runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(BA.ObjectToString("Promedio")),(Object)(RemoteObject.createImmutable("ContextMenuItemNodo")));
 BA.debugLineNum = 8212;BA.debugLine="mITotalesPromedio.Tag=\"PromedioTotalesCampoNo";
Debug.JustUpdateDeviceLine();
_mitotalespromedio.runMethod(false,"setTag",RemoteObject.createImmutable(("PromedioTotalesCampoNodoSeleccionado")));
 BA.debugLineNum = 8213;BA.debugLine="mTotales.MenuItems.Add(mITotalesPromedio)";
Debug.JustUpdateDeviceLine();
_mtotales.runMethod(false,"getMenuItems").runVoidMethod ("Add",(Object)((_mitotalespromedio.getObject())));
 BA.debugLineNum = 8215;BA.debugLine="Dim mITotalesMin As MenuItem";
Debug.JustUpdateDeviceLine();
_mitotalesmin = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");Debug.locals.put("mITotalesMin", _mitotalesmin);
 BA.debugLineNum = 8216;BA.debugLine="mITotalesMin.Initialize(\"Mínimo\",\"ContextMenu";
Debug.JustUpdateDeviceLine();
_mitotalesmin.runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(BA.ObjectToString("Mínimo")),(Object)(RemoteObject.createImmutable("ContextMenuItemNodo")));
 BA.debugLineNum = 8217;BA.debugLine="mITotalesMin.Tag=\"MinTotalesCampoNodoSeleccio";
Debug.JustUpdateDeviceLine();
_mitotalesmin.runMethod(false,"setTag",RemoteObject.createImmutable(("MinTotalesCampoNodoSeleccionado")));
 BA.debugLineNum = 8218;BA.debugLine="mTotales.MenuItems.Add(mITotalesMin)";
Debug.JustUpdateDeviceLine();
_mtotales.runMethod(false,"getMenuItems").runVoidMethod ("Add",(Object)((_mitotalesmin.getObject())));
 BA.debugLineNum = 8220;BA.debugLine="Dim mITotalesMax As MenuItem";
Debug.JustUpdateDeviceLine();
_mitotalesmax = RemoteObject.createNew ("anywheresoftware.b4j.objects.MenuItemWrapper.ConcreteMenuItemWrapper");Debug.locals.put("mITotalesMax", _mitotalesmax);
 BA.debugLineNum = 8221;BA.debugLine="mITotalesMax.Initialize(\"Máximo\",\"ContextMenu";
Debug.JustUpdateDeviceLine();
_mitotalesmax.runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(BA.ObjectToString("Máximo")),(Object)(RemoteObject.createImmutable("ContextMenuItemNodo")));
 BA.debugLineNum = 8222;BA.debugLine="mITotalesMax.Tag=\"MaxTotalesCampoNodoSeleccio";
Debug.JustUpdateDeviceLine();
_mitotalesmax.runMethod(false,"setTag",RemoteObject.createImmutable(("MaxTotalesCampoNodoSeleccionado")));
 BA.debugLineNum = 8223;BA.debugLine="mTotales.MenuItems.Add(mITotalesMax)";
Debug.JustUpdateDeviceLine();
_mtotales.runMethod(false,"getMenuItems").runVoidMethod ("Add",(Object)((_mitotalesmax.getObject())));
 BA.debugLineNum = 8225;BA.debugLine="If mContextMenu.MenuItems.Size>0 Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean(">",__ref.getField(false,"_mcontextmenu" /*RemoteObject*/ ).runMethod(false,"getMenuItems").runMethod(true,"getSize"),BA.numberCast(double.class, 0))) { 
 BA.debugLineNum = 8226;BA.debugLine="Dim UltimoObjMenuCtx As Object=mContextMenu.";
Debug.JustUpdateDeviceLine();
_ultimoobjmenuctx = __ref.getField(false,"_mcontextmenu" /*RemoteObject*/ ).runMethod(false,"getMenuItems").runMethod(false,"Get",(Object)(RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_mcontextmenu" /*RemoteObject*/ ).runMethod(false,"getMenuItems").runMethod(true,"getSize"),RemoteObject.createImmutable(1)}, "-",1, 1)));Debug.locals.put("UltimoObjMenuCtx", _ultimoobjmenuctx);Debug.locals.put("UltimoObjMenuCtx", _ultimoobjmenuctx);
 BA.debugLineNum = 8227;BA.debugLine="Dim NativeMe As JavaObject=Me";
Debug.JustUpdateDeviceLine();
_nativeme = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");
_nativeme = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), __ref);Debug.locals.put("NativeMe", _nativeme);Debug.locals.put("NativeMe", _nativeme);
 BA.debugLineNum = 8228;BA.debugLine="Dim EsSeparador As Boolean=NativeMe.RunMetho";
Debug.JustUpdateDeviceLine();
_esseparador = BA.ObjectToBoolean(_nativeme.runMethod(false,"RunMethod",(Object)(BA.ObjectToString("IsSeparatorMenuItem")),(Object)(RemoteObject.createNewArray("Object",new int[] {1},new Object[] {_ultimoobjmenuctx}))));Debug.locals.put("EsSeparador", _esseparador);Debug.locals.put("EsSeparador", _esseparador);
 BA.debugLineNum = 8229;BA.debugLine="If EsSeparador=False Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_esseparador,jamtableclv.__c.getField(true,"False"))) { 
 BA.debugLineNum = 8230;BA.debugLine="Dim sSeparator As JavaObject";
Debug.JustUpdateDeviceLine();
_sseparator = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");Debug.locals.put("sSeparator", _sseparator);
 BA.debugLineNum = 8231;BA.debugLine="sSeparator.InitializeNewInstance(\"javafx.sc";
Debug.JustUpdateDeviceLine();
_sseparator.runVoidMethod ("InitializeNewInstance",(Object)(BA.ObjectToString("javafx.scene.control.SeparatorMenuItem")),(Object)((jamtableclv.__c.getField(false,"Null"))));
 BA.debugLineNum = 8232;BA.debugLine="mContextMenu.MenuItems.Add(sSeparator)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_mcontextmenu" /*RemoteObject*/ ).runMethod(false,"getMenuItems").runVoidMethod ("Add",(Object)((_sseparator.getObject())));
 };
 };
 BA.debugLineNum = 8238;BA.debugLine="mContextMenu.MenuItems.Add(mTotales)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_mcontextmenu" /*RemoteObject*/ ).runMethod(false,"getMenuItems").runVoidMethod ("Add",(Object)((_mtotales.getObject())));
 };
 };
 BA.debugLineNum = 8241;BA.debugLine="MostrarContextMenuNodoJO(xNode)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_mostrarcontextmenunodojo" /*RemoteObject*/ ,(Object)(_xnode));
 break; }
case 1: {
 BA.debugLineNum = 8244;BA.debugLine="Dim NumClicks As Int=asJO(Args(0)).RunMethod(\"g";
Debug.JustUpdateDeviceLine();
_numclicks = BA.numberCast(int.class, __ref.runClassMethod (b4j.docU.jamtableclv.class, "_asjo" /*RemoteObject*/ ,RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), _args.getArrayElement(false,BA.numberCast(int.class, 0)))).runMethod(false,"RunMethod",(Object)(BA.ObjectToString("getClickCount")),(Object)((jamtableclv.__c.getField(false,"Null")))));Debug.locals.put("NumClicks", _numclicks);Debug.locals.put("NumClicks", _numclicks);
 BA.debugLineNum = 8245;BA.debugLine="Log(\"Primary Button NumClicks: \" & NumClicks)";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("LogImpl","9174850155",RemoteObject.concat(RemoteObject.createImmutable("Primary Button NumClicks: "),_numclicks),0);
 BA.debugLineNum = 8246;BA.debugLine="Select NumClicks";
Debug.JustUpdateDeviceLine();
switch (BA.switchObjectToInt(_numclicks,BA.numberCast(int.class, 1))) {
case 0: {
 BA.debugLineNum = 8248;BA.debugLine="If SubExists(mCallBack,mEventName & \"_NodeCli";
Debug.JustUpdateDeviceLine();
if (jamtableclv.__c.runMethod(true,"SubExists",__ref.getField(false, "ba"),(Object)(__ref.getField(false,"_mcallback" /*RemoteObject*/ )),(Object)(RemoteObject.concat(__ref.getField(true,"_meventname" /*RemoteObject*/ ),RemoteObject.createImmutable("_NodeClick")))).<Boolean>get().booleanValue()) { 
 BA.debugLineNum = 8249;BA.debugLine="CallSubDelayed2(mCallBack, mEventName & \"_No";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("CallSubDelayed2",__ref.getField(false, "ba"),(Object)(__ref.getField(false,"_mcallback" /*RemoteObject*/ )),(Object)(RemoteObject.concat(__ref.getField(true,"_meventname" /*RemoteObject*/ ),RemoteObject.createImmutable("_NodeClick"))),(Object)((_xnode)));
 };
 break; }
default: {
 BA.debugLineNum = 8252;BA.debugLine="If SubExists(mCallBack,mEventName & \"_NodeLon";
Debug.JustUpdateDeviceLine();
if (jamtableclv.__c.runMethod(true,"SubExists",__ref.getField(false, "ba"),(Object)(__ref.getField(false,"_mcallback" /*RemoteObject*/ )),(Object)(RemoteObject.concat(__ref.getField(true,"_meventname" /*RemoteObject*/ ),RemoteObject.createImmutable("_NodeLongClick")))).<Boolean>get().booleanValue()) { 
 BA.debugLineNum = 8253;BA.debugLine="CallSubDelayed2(mCallBack, mEventName & \"_No";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("CallSubDelayed2",__ref.getField(false, "ba"),(Object)(__ref.getField(false,"_mcallback" /*RemoteObject*/ )),(Object)(RemoteObject.concat(__ref.getField(true,"_meventname" /*RemoteObject*/ ),RemoteObject.createImmutable("_NodeLongClick"))),(Object)((_xnode)));
 };
 break; }
}
;
 break; }
}
;
 BA.debugLineNum = 8257;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _nodoitemanterior(RemoteObject __ref,RemoteObject _nodoactual) throws Exception{
try {
		Debug.PushSubsStack("NodoItemAnterior (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,8348);
if (RapidSub.canDelegate("nodoitemanterior")) { return __ref.runUserSub(false, "jamtableclv","nodoitemanterior", __ref, _nodoactual);}
RemoteObject _indexnodoactual = RemoteObject.createImmutable(0);
RemoteObject _p = RemoteObject.declareNull("anywheresoftware.b4a.objects.B4XViewWrapper");
RemoteObject _b4xviewitemanterior = RemoteObject.declareNull("anywheresoftware.b4a.objects.B4XViewWrapper");
Debug.locals.put("NodoActual", _nodoactual);
 BA.debugLineNum = 8348;BA.debugLine="Sub NodoItemAnterior(NodoActual As B4XView) As B4X";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 8349;BA.debugLine="If NodoActual.Tag=\"\" Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_nodoactual.runMethod(false,"getTag"),RemoteObject.createImmutable(("")))) { 
 BA.debugLineNum = 8350;BA.debugLine="Log(\"No se ha establecido TAG para el nodo actua";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("LogImpl","9175177730",RemoteObject.createImmutable("No se ha establecido TAG para el nodo actual. No es posible determinar el nodo del item anterior."),0);
 BA.debugLineNum = 8351;BA.debugLine="Return Null";
Debug.JustUpdateDeviceLine();
if (true) return RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper"), jamtableclv.__c.getField(false,"Null"));
 };
 BA.debugLineNum = 8353;BA.debugLine="Dim IndexNodoActual As Int=clvDatos.GetItemFromVi";
Debug.JustUpdateDeviceLine();
_indexnodoactual = __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"_getitemfromview",(Object)(_nodoactual));Debug.locals.put("IndexNodoActual", _indexnodoactual);Debug.locals.put("IndexNodoActual", _indexnodoactual);
 BA.debugLineNum = 8354;BA.debugLine="If IndexNodoActual=0 Then Return Null  ' estamos";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_indexnodoactual,BA.numberCast(double.class, 0))) { 
if (true) return RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper"), jamtableclv.__c.getField(false,"Null"));};
 BA.debugLineNum = 8355;BA.debugLine="Dim p As B4XView=clvDatos.GetPanel(IndexNodoActua";
Debug.JustUpdateDeviceLine();
_p = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");
_p = __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(false,"_getpanel",(Object)(RemoteObject.solve(new RemoteObject[] {_indexnodoactual,RemoteObject.createImmutable(1)}, "-",1, 1)));Debug.locals.put("p", _p);Debug.locals.put("p", _p);
 BA.debugLineNum = 8356;BA.debugLine="For Each B4XViewItemAnterior As B4XView In p.GetA";
Debug.JustUpdateDeviceLine();
_b4xviewitemanterior = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");
{
final RemoteObject group8 = _p.runMethod(false,"GetAllViewsRecursive");
final int groupLen8 = group8.runMethod(true,"getSize").<Integer>get()
;int index8 = 0;
;
for (; index8 < groupLen8;index8++){
_b4xviewitemanterior = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper"), group8.runMethod(false,"Get",index8));Debug.locals.put("B4XViewItemAnterior", _b4xviewitemanterior);
Debug.locals.put("B4XViewItemAnterior", _b4xviewitemanterior);
 BA.debugLineNum = 8357;BA.debugLine="If NodoActual.Tag=B4XViewItemAnterior.Tag Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_nodoactual.runMethod(false,"getTag"),_b4xviewitemanterior.runMethod(false,"getTag"))) { 
 BA.debugLineNum = 8358;BA.debugLine="Return B4XViewItemAnterior";
Debug.JustUpdateDeviceLine();
if (true) return _b4xviewitemanterior;
 };
 }
}Debug.locals.put("B4XViewItemAnterior", _b4xviewitemanterior);
;
 BA.debugLineNum = 8361;BA.debugLine="Return Null";
Debug.JustUpdateDeviceLine();
if (true) return RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper"), jamtableclv.__c.getField(false,"Null"));
 BA.debugLineNum = 8362;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _nodoitemsiguiente(RemoteObject __ref,RemoteObject _nodoactual) throws Exception{
try {
		Debug.PushSubsStack("NodoItemSiguiente (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,8332);
if (RapidSub.canDelegate("nodoitemsiguiente")) { return __ref.runUserSub(false, "jamtableclv","nodoitemsiguiente", __ref, _nodoactual);}
RemoteObject _indexnodoactual = RemoteObject.createImmutable(0);
RemoteObject _p = RemoteObject.declareNull("anywheresoftware.b4a.objects.B4XViewWrapper");
RemoteObject _b4xviewitemsiguiente = RemoteObject.declareNull("anywheresoftware.b4a.objects.B4XViewWrapper");
Debug.locals.put("NodoActual", _nodoactual);
 BA.debugLineNum = 8332;BA.debugLine="Sub NodoItemSiguiente(NodoActual As B4XView) As B4";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 8333;BA.debugLine="If NodoActual.Tag=\"\" Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_nodoactual.runMethod(false,"getTag"),RemoteObject.createImmutable(("")))) { 
 BA.debugLineNum = 8334;BA.debugLine="Log(\"No se ha establecido TAG para el nodo actua";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("LogImpl","9175112194",RemoteObject.createImmutable("No se ha establecido TAG para el nodo actual. No es posible determinar el nodo del item siguiente."),0);
 BA.debugLineNum = 8335;BA.debugLine="Return Null";
Debug.JustUpdateDeviceLine();
if (true) return RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper"), jamtableclv.__c.getField(false,"Null"));
 };
 BA.debugLineNum = 8337;BA.debugLine="Dim IndexNodoActual As Int=clvDatos.GetItemFromVi";
Debug.JustUpdateDeviceLine();
_indexnodoactual = __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"_getitemfromview",(Object)(_nodoactual));Debug.locals.put("IndexNodoActual", _indexnodoactual);Debug.locals.put("IndexNodoActual", _indexnodoactual);
 BA.debugLineNum = 8338;BA.debugLine="If IndexNodoActual=clvDatos.Size-1 Then Return Nu";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_indexnodoactual,BA.numberCast(double.class, RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"_getsize"),RemoteObject.createImmutable(1)}, "-",1, 1)))) { 
if (true) return RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper"), jamtableclv.__c.getField(false,"Null"));};
 BA.debugLineNum = 8339;BA.debugLine="Dim p As B4XView=clvDatos.GetPanel(IndexNodoActua";
Debug.JustUpdateDeviceLine();
_p = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");
_p = __ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(false,"_getpanel",(Object)(RemoteObject.solve(new RemoteObject[] {_indexnodoactual,RemoteObject.createImmutable(1)}, "+",1, 1)));Debug.locals.put("p", _p);Debug.locals.put("p", _p);
 BA.debugLineNum = 8340;BA.debugLine="For Each B4XViewItemSiguiente As B4XView In p.Get";
Debug.JustUpdateDeviceLine();
_b4xviewitemsiguiente = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");
{
final RemoteObject group8 = _p.runMethod(false,"GetAllViewsRecursive");
final int groupLen8 = group8.runMethod(true,"getSize").<Integer>get()
;int index8 = 0;
;
for (; index8 < groupLen8;index8++){
_b4xviewitemsiguiente = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper"), group8.runMethod(false,"Get",index8));Debug.locals.put("B4XViewItemSiguiente", _b4xviewitemsiguiente);
Debug.locals.put("B4XViewItemSiguiente", _b4xviewitemsiguiente);
 BA.debugLineNum = 8341;BA.debugLine="If NodoActual.Tag=B4XViewItemSiguiente.Tag Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_nodoactual.runMethod(false,"getTag"),_b4xviewitemsiguiente.runMethod(false,"getTag"))) { 
 BA.debugLineNum = 8342;BA.debugLine="Return B4XViewItemSiguiente";
Debug.JustUpdateDeviceLine();
if (true) return _b4xviewitemsiguiente;
 };
 }
}Debug.locals.put("B4XViewItemSiguiente", _b4xviewitemsiguiente);
;
 BA.debugLineNum = 8345;BA.debugLine="Return Null";
Debug.JustUpdateDeviceLine();
if (true) return RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper"), jamtableclv.__c.getField(false,"Null"));
 BA.debugLineNum = 8346;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _poigetformattedcellvalue(RemoteObject __ref,RemoteObject _excelcell) throws Exception{
try {
		Debug.PushSubsStack("PoiGetFormattedCellValue (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,8511);
if (RapidSub.canDelegate("poigetformattedcellvalue")) { return __ref.runUserSub(false, "jamtableclv","poigetformattedcellvalue", __ref, _excelcell);}
RemoteObject _jocell = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
RemoteObject _jodataformatter = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
RemoteObject _joconditionalformattingevaluator = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
RemoteObject _joformulaevaluator = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
Debug.locals.put("ExcelCell", _excelcell);
 BA.debugLineNum = 8511;BA.debugLine="Sub PoiGetFormattedCellValue(ExcelCell As PoiCell)";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 8512;BA.debugLine="Dim JOCell As JavaObject = ExcelCell";
Debug.JustUpdateDeviceLine();
_jocell = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");
_jocell = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), _excelcell.getObject());Debug.locals.put("JOCell", _jocell);Debug.locals.put("JOCell", _jocell);
 BA.debugLineNum = 8513;BA.debugLine="Dim JODataFormatter As JavaObject";
Debug.JustUpdateDeviceLine();
_jodataformatter = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");Debug.locals.put("JODataFormatter", _jodataformatter);
 BA.debugLineNum = 8514;BA.debugLine="Dim JOConditionalFormattingEvaluator As JavaObjec";
Debug.JustUpdateDeviceLine();
_joconditionalformattingevaluator = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");Debug.locals.put("JOConditionalFormattingEvaluator", _joconditionalformattingevaluator);
 BA.debugLineNum = 8515;BA.debugLine="Dim JOFormulaEvaluator As JavaObject =JOCell.RunM";
Debug.JustUpdateDeviceLine();
_joformulaevaluator = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");
_joformulaevaluator = _jocell.runMethod(false,"RunMethodJO",(Object)(BA.ObjectToString("getSheet")),(Object)((jamtableclv.__c.getField(false,"Null")))).runMethod(false,"RunMethodJO",(Object)(BA.ObjectToString("getWorkbook")),(Object)((jamtableclv.__c.getField(false,"Null")))).runMethod(false,"RunMethodJO",(Object)(BA.ObjectToString("getCreationHelper")),(Object)((jamtableclv.__c.getField(false,"Null")))).runMethod(false,"RunMethodJO",(Object)(BA.ObjectToString("createFormulaEvaluator")),(Object)((jamtableclv.__c.getField(false,"Null"))));Debug.locals.put("JOFormulaEvaluator", _joformulaevaluator);Debug.locals.put("JOFormulaEvaluator", _joformulaevaluator);
 BA.debugLineNum = 8516;BA.debugLine="JOConditionalFormattingEvaluator.InitializeNewIns";
Debug.JustUpdateDeviceLine();
_joconditionalformattingevaluator.runVoidMethod ("InitializeNewInstance",(Object)(BA.ObjectToString("org.apache.poi.ss.formula.ConditionalFormattingEvaluator")),(Object)(RemoteObject.createNewArray("Object",new int[] {2},new Object[] {(_jocell.runMethod(false,"RunMethodJO",(Object)(BA.ObjectToString("getSheet")),(Object)((jamtableclv.__c.getField(false,"Null")))).runMethod(false,"RunMethodJO",(Object)(BA.ObjectToString("getWorkbook")),(Object)((jamtableclv.__c.getField(false,"Null")))).getObject()),(_jocell.runMethod(false,"RunMethodJO",(Object)(BA.ObjectToString("getSheet")),(Object)((jamtableclv.__c.getField(false,"Null")))).runMethod(false,"RunMethodJO",(Object)(BA.ObjectToString("getWorkbook")),(Object)((jamtableclv.__c.getField(false,"Null")))).runMethod(false,"RunMethodJO",(Object)(BA.ObjectToString("getCreationHelper")),(Object)((jamtableclv.__c.getField(false,"Null")))).runMethod(false,"RunMethodJO",(Object)(BA.ObjectToString("createFormulaEvaluator")),(Object)((jamtableclv.__c.getField(false,"Null")))).getObject())})));
 BA.debugLineNum = 8517;BA.debugLine="Return JODataFormatter.InitializeNewInstance(\"org";
Debug.JustUpdateDeviceLine();
if (true) return BA.ObjectToString(_jodataformatter.runMethod(false,"InitializeNewInstance",(Object)(BA.ObjectToString("org.apache.poi.ss.usermodel.DataFormatter")),(Object)((jamtableclv.__c.getField(false,"Null")))).runMethod(false,"RunMethod",(Object)(BA.ObjectToString("formatCellValue")),(Object)(RemoteObject.createNewArray("Object",new int[] {3},new Object[] {(_jocell.getObject()),(_joformulaevaluator.getObject()),(_joconditionalformattingevaluator.getObject())}))));
 BA.debugLineNum = 8519;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _posicionactualraton(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("PosicionActualRaton (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,1990);
if (RapidSub.canDelegate("posicionactualraton")) { return __ref.runUserSub(false, "jamtableclv","posicionactualraton", __ref);}
RemoteObject _jtb = RemoteObject.declareNull("butt.droid.awtRobot.AWTRobot");
 BA.debugLineNum = 1990;BA.debugLine="Private Sub PosicionActualRaton As Int()";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 1991;BA.debugLine="Dim jTb As AWTRobot";
Debug.JustUpdateDeviceLine();
_jtb = RemoteObject.createNew ("butt.droid.awtRobot.AWTRobot");Debug.locals.put("jTb", _jtb);
 BA.debugLineNum = 1992;BA.debugLine="Return jTb.RobotMouseCurrentLocation";
Debug.JustUpdateDeviceLine();
if (true) return _jtb.runMethod(false,"RobotMouseCurrentLocation");
 BA.debugLineNum = 1993;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _posiciondimensionesclvfiltros(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("PosicionDimensionesCLVFiltros (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,789);
if (RapidSub.canDelegate("posiciondimensionesclvfiltros")) { return __ref.runUserSub(false, "jamtableclv","posiciondimensionesclvfiltros", __ref);}
RemoteObject _hposacum = RemoteObject.createImmutable(0);
RemoteObject _hpanelesfiltros = RemoteObject.createImmutable(0);
 BA.debugLineNum = 789;BA.debugLine="private Sub PosicionDimensionesCLVFiltros";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 790;BA.debugLine="LogColor(\"clvDatos.IsInitialized \" & clvDatos.IsI";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("LogImpl","9160890881",RemoteObject.concat(RemoteObject.createImmutable("clvDatos.IsInitialized "),__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"IsInitialized")),__ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"Color_Magenta"));
 BA.debugLineNum = 791;BA.debugLine="If clvDatos.IsInitialized=False Then Return";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"IsInitialized"),jamtableclv.__c.getField(true,"False"))) { 
if (true) return RemoteObject.createImmutable("");};
 BA.debugLineNum = 793;BA.debugLine="ImagenLabelFiltros";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_imagenlabelfiltros" /*RemoteObject*/ );
 BA.debugLineNum = 795;BA.debugLine="Dim hPosAcum As Double";
Debug.JustUpdateDeviceLine();
_hposacum = RemoteObject.createImmutable(0);Debug.locals.put("hPosAcum", _hposacum);
 BA.debugLineNum = 797;BA.debugLine="If MenuBar.Menus.Size=0 Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",__ref.getField(false,"_menubar" /*RemoteObject*/ ).runMethod(false,"getMenus").runMethod(true,"getSize"),BA.numberCast(double.class, 0))) { 
 BA.debugLineNum = 799;BA.debugLine="MenuBar.Visible=False";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_menubar" /*RemoteObject*/ ).runMethod(true,"setVisible",jamtableclv.__c.getField(true,"False"));
 }else {
 BA.debugLineNum = 803;BA.debugLine="MenuBar.Visible=True";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_menubar" /*RemoteObject*/ ).runMethod(true,"setVisible",jamtableclv.__c.getField(true,"True"));
 BA.debugLineNum = 804;BA.debugLine="MenuBar.Top=0dip";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_menubar" /*RemoteObject*/ ).runMethod(true,"setTop",BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 0)))));
 };
 BA.debugLineNum = 807;BA.debugLine="hPosAcum=30dip   ' (pnlNavButtons, este es fijo)";
Debug.JustUpdateDeviceLine();
_hposacum = BA.numberCast(double.class, jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 30))));Debug.locals.put("hPosAcum", _hposacum);
 BA.debugLineNum = 808;BA.debugLine="pnlInfoJamTableCLV.Visible=mPanelInfoVisible";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_pnlinfojamtableclv" /*RemoteObject*/ ).runMethod(true,"setVisible",__ref.getField(true,"_mpanelinfovisible" /*RemoteObject*/ ));
 BA.debugLineNum = 810;BA.debugLine="pnlInfoJamTableCLV.Top=hPosAcum";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_pnlinfojamtableclv" /*RemoteObject*/ ).runMethod(true,"setTop",_hposacum);
 BA.debugLineNum = 811;BA.debugLine="If mPanelInfoVisible Then";
Debug.JustUpdateDeviceLine();
if (__ref.getField(true,"_mpanelinfovisible" /*RemoteObject*/ ).<Boolean>get().booleanValue()) { 
 BA.debugLineNum = 813;BA.debugLine="hPosAcum=hPosAcum+20dip";
Debug.JustUpdateDeviceLine();
_hposacum = RemoteObject.solve(new RemoteObject[] {_hposacum,jamtableclv.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 20)))}, "+",1, 0);Debug.locals.put("hPosAcum", _hposacum);
 }else {
 };
 BA.debugLineNum = 820;BA.debugLine="clvFiltros.AsView.Top=hPosAcum";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(false,"_asview").runMethod(true,"setTop",_hposacum);
 BA.debugLineNum = 823;BA.debugLine="Dim hPanelesFiltros As Double=IIf(clvFiltros.Size";
Debug.JustUpdateDeviceLine();
_hpanelesfiltros = BA.numberCast(double.class, ((RemoteObject.solveBoolean("=",__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(true,"_getsize"),BA.numberCast(double.class, 0))) ? (RemoteObject.createImmutable((0))) : ((__ref.getField(true,"_malturaitemfiltro" /*RemoteObject*/ )))));Debug.locals.put("hPanelesFiltros", _hpanelesfiltros);Debug.locals.put("hPanelesFiltros", _hpanelesfiltros);
 BA.debugLineNum = 825;BA.debugLine="clvFiltros.sv.Height=Max(Min(clvFiltros.sv.Scroll";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).getField(false,"_sv").runMethod(true,"setHeight",jamtableclv.__c.runMethod(true,"Max",(Object)(jamtableclv.__c.runMethod(true,"Min",(Object)(__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).getField(false,"_sv").runMethod(true,"getScrollViewContentHeight")),(Object)(RemoteObject.solve(new RemoteObject[] {RemoteObject.createImmutable(8),_hpanelesfiltros}, "*",0, 0)))),(Object)(BA.numberCast(double.class, 0))));
 BA.debugLineNum = 826;BA.debugLine="clvFiltros.AsView.Visible=FiltrosVisibles";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(false,"_asview").runMethod(true,"setVisible",__ref.getField(true,"_filtrosvisibles" /*RemoteObject*/ ));
 BA.debugLineNum = 827;BA.debugLine="If FiltrosVisibles Then";
Debug.JustUpdateDeviceLine();
if (__ref.getField(true,"_filtrosvisibles" /*RemoteObject*/ ).<Boolean>get().booleanValue()) { 
 BA.debugLineNum = 828;BA.debugLine="clvFiltros.AsView.Height=clvFiltros.sv.Height";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(false,"_asview").runMethod(true,"setHeight",__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).getField(false,"_sv").runMethod(true,"getHeight"));
 BA.debugLineNum = 829;BA.debugLine="hPosAcum=hPosAcum+clvFiltros.sv.Height";
Debug.JustUpdateDeviceLine();
_hposacum = RemoteObject.solve(new RemoteObject[] {_hposacum,__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).getField(false,"_sv").runMethod(true,"getHeight")}, "+",1, 0);Debug.locals.put("hPosAcum", _hposacum);
 BA.debugLineNum = 831;BA.debugLine="SetCLVScrollBars(clvFiltros, clvFiltros.sv.Scrol";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_setclvscrollbars" /*RemoteObject*/ ,(Object)(__ref.getField(false,"_clvfiltros" /*RemoteObject*/ )),(Object)(BA.ObjectToBoolean(RemoteObject.solveBoolean(">",__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).getField(false,"_sv").runMethod(true,"getScrollViewContentHeight"),__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(false,"_asview").runMethod(true,"getHeight")))));
 }else {
 BA.debugLineNum = 834;BA.debugLine="clvFiltros.AsView.Height=0";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runMethod(false,"_asview").runMethod(true,"setHeight",BA.numberCast(double.class, 0));
 };
 BA.debugLineNum = 838;BA.debugLine="pnlHeadersJamTableCLV.Visible=mPanelHeadersVisibl";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_pnlheadersjamtableclv" /*RemoteObject*/ ).runMethod(true,"setVisible",__ref.getField(true,"_mpanelheadersvisible" /*RemoteObject*/ ));
 BA.debugLineNum = 839;BA.debugLine="pnlHeadersJamTableCLV.PrefHeight=mAlturaPanelHead";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_pnlheadersjamtableclv" /*RemoteObject*/ ).runMethod(true,"setPrefHeight",BA.numberCast(double.class, __ref.getField(true,"_malturapanelheaders" /*RemoteObject*/ )));
 BA.debugLineNum = 840;BA.debugLine="If mPanelHeadersVisible Then";
Debug.JustUpdateDeviceLine();
if (__ref.getField(true,"_mpanelheadersvisible" /*RemoteObject*/ ).<Boolean>get().booleanValue()) { 
 BA.debugLineNum = 844;BA.debugLine="pnlHeadersJamTableCLV.top=hPosAcum";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_pnlheadersjamtableclv" /*RemoteObject*/ ).runMethod(true,"setTop",_hposacum);
 BA.debugLineNum = 845;BA.debugLine="hPosAcum=hPosAcum+mAlturaPanelHeaders";
Debug.JustUpdateDeviceLine();
_hposacum = RemoteObject.solve(new RemoteObject[] {_hposacum,__ref.getField(true,"_malturapanelheaders" /*RemoteObject*/ )}, "+",1, 0);Debug.locals.put("hPosAcum", _hposacum);
 }else {
 };
 BA.debugLineNum = 853;BA.debugLine="pnlBaseCLVDatos.Top=hPosAcum";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_pnlbaseclvdatos" /*RemoteObject*/ ).runMethod(true,"setTop",_hposacum);
 BA.debugLineNum = 855;BA.debugLine="pnlBaseCLVDatos.Height=mBase.Height-hPosAcum";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_pnlbaseclvdatos" /*RemoteObject*/ ).runMethod(true,"setHeight",RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_mbase" /*RemoteObject*/ ).runMethod(true,"getHeight"),_hposacum}, "-",1, 0));
 BA.debugLineNum = 857;BA.debugLine="clvDatos.AsView.Height=pnlBaseCLVDatos.Height";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(false,"_asview").runMethod(true,"setHeight",__ref.getField(false,"_pnlbaseclvdatos" /*RemoteObject*/ ).runMethod(true,"getHeight"));
 BA.debugLineNum = 872;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _quitarfiltros(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("QuitarFiltros (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,2178);
if (RapidSub.canDelegate("quitarfiltros")) { return __ref.runUserSub(false, "jamtableclv","quitarfiltros", __ref);}
ResumableSub_QuitarFiltros rsub = new ResumableSub_QuitarFiltros(null,__ref);
rsub.remoteResumableSub = anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSubForFilter();
rsub.resume(null, null);
return RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.keywords.Common.ResumableSubWrapper"), rsub.remoteResumableSub);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_QuitarFiltros extends BA.ResumableSub {
public ResumableSub_QuitarFiltros(b4j.docU.jamtableclv parent,RemoteObject __ref) {
this.parent = parent;
this.__ref = __ref;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _robj = RemoteObject.declareNull("Object");

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("QuitarFiltros (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,2178);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
{
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,RemoteObject.createImmutable(null));return;}
case 0:
//C
this.state = -1;
Debug.locals.put("_ref", __ref);
 BA.debugLineNum = 2179;BA.debugLine="FiltrosVisibles=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_filtrosvisibles" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 BA.debugLineNum = 2180;BA.debugLine="clvFiltros.Clear";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runVoidMethod ("_clear");
 BA.debugLineNum = 2181;BA.debugLine="wait for(ActualizarFiltro) complete (rObj As Obje";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "quitarfiltros"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_actualizarfiltro" /*RemoteObject*/ ));
this.state = 1;
return;
case 1:
//C
this.state = -1;
_robj = (RemoteObject) result.getArrayElement(false,RemoteObject.createImmutable(1));Debug.locals.put("rObj", _robj);
;
 BA.debugLineNum = 2182;BA.debugLine="PosicionDimensionesCLVFiltros";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_posiciondimensionesclvfiltros" /*RemoteObject*/ );
 BA.debugLineNum = 2183;BA.debugLine="Sleep(0)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("Sleep",__ref.getField(false, "ba"),anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "quitarfiltros"),BA.numberCast(int.class, 0));
this.state = 2;
return;
case 2:
//C
this.state = -1;
;
 BA.debugLineNum = 2184;BA.debugLine="Return Null";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,parent.__c.getField(false,"Null"));return;};
 BA.debugLineNum = 2185;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static RemoteObject  _quitarselecciontodositems(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("QuitarSeleccionTodosItems (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,8048);
if (RapidSub.canDelegate("quitarselecciontodositems")) { return __ref.runUserSub(false, "jamtableclv","quitarselecciontodositems", __ref);}
 BA.debugLineNum = 8048;BA.debugLine="Public Sub QuitarSeleccionTodosItems";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 8049;BA.debugLine="CLVSelections.Clear";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvselections" /*RemoteObject*/ ).runClassMethod (b4j.docU.clvselectionsjamtableclv.class, "_clear" /*RemoteObject*/ );
 BA.debugLineNum = 8050;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _refresh(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("Refresh (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7271);
if (RapidSub.canDelegate("refresh")) { return __ref.runUserSub(false, "jamtableclv","refresh", __ref);}
 BA.debugLineNum = 7271;BA.debugLine="Public Sub Refresh";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 7272;BA.debugLine="clvDatos_VisibleRangeChanged(0,clvDatos.Size-1)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_clvdatos_visiblerangechanged" /*RemoteObject*/ ,(Object)(BA.numberCast(int.class, 0)),(Object)(RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"_getsize"),RemoteObject.createImmutable(1)}, "-",1, 1)));
 BA.debugLineNum = 7273;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _refreshvisibleitems(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("RefreshVisibleItems (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7278);
if (RapidSub.canDelegate("refreshvisibleitems")) { return __ref.runUserSub(false, "jamtableclv","refreshvisibleitems", __ref);}
 BA.debugLineNum = 7278;BA.debugLine="Public Sub RefreshVisibleItems";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 7279;BA.debugLine="clvDatos_VisibleRangeChanged(clvDatos.FirstVisibl";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_clvdatos_visiblerangechanged" /*RemoteObject*/ ,(Object)(__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"_getfirstvisibleindex")),(Object)(__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runMethod(true,"_getlastvisibleindex")));
 BA.debugLineNum = 7280;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _reiniciarfiltros(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("ReiniciarFiltros (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,2147);
if (RapidSub.canDelegate("reiniciarfiltros")) { return __ref.runUserSub(false, "jamtableclv","reiniciarfiltros", __ref);}
 BA.debugLineNum = 2147;BA.debugLine="private Sub ReiniciarFiltros";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 2153;BA.debugLine="FiltrosVisibles=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_filtrosvisibles" /*RemoteObject*/ ,jamtableclv.__c.getField(true,"False"));
 BA.debugLineNum = 2154;BA.debugLine="clvFiltros.Clear";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvfiltros" /*RemoteObject*/ ).runVoidMethod ("_clear");
 BA.debugLineNum = 2155;BA.debugLine="mFiltroActual=\"\"";
Debug.JustUpdateDeviceLine();
__ref.setField ("_mfiltroactual" /*RemoteObject*/ ,BA.ObjectToString(""));
 BA.debugLineNum = 2156;BA.debugLine="If lstOperadoresFiltros.IsInitialized Then lstOp";
Debug.JustUpdateDeviceLine();
if (__ref.getField(false,"_lstoperadoresfiltros" /*RemoteObject*/ ).runMethod(true,"IsInitialized").<Boolean>get().booleanValue()) { 
__ref.getField(false,"_lstoperadoresfiltros" /*RemoteObject*/ ).runVoidMethod ("Clear");};
 BA.debugLineNum = 2157;BA.debugLine="If lstCamposFiltros.IsInitialized Then lstCampos";
Debug.JustUpdateDeviceLine();
if (__ref.getField(false,"_lstcamposfiltros" /*RemoteObject*/ ).runMethod(true,"IsInitialized").<Boolean>get().booleanValue()) { 
__ref.getField(false,"_lstcamposfiltros" /*RemoteObject*/ ).runVoidMethod ("Clear");};
 BA.debugLineNum = 2158;BA.debugLine="If lstComparadoresFiltros.IsInitialized Then lst";
Debug.JustUpdateDeviceLine();
if (__ref.getField(false,"_lstcomparadoresfiltros" /*RemoteObject*/ ).runMethod(true,"IsInitialized").<Boolean>get().booleanValue()) { 
__ref.getField(false,"_lstcomparadoresfiltros" /*RemoteObject*/ ).runVoidMethod ("Clear");};
 BA.debugLineNum = 2159;BA.debugLine="If lstValoresFiltros.IsInitialized Then lstValor";
Debug.JustUpdateDeviceLine();
if (__ref.getField(false,"_lstvaloresfiltros" /*RemoteObject*/ ).runMethod(true,"IsInitialized").<Boolean>get().booleanValue()) { 
__ref.getField(false,"_lstvaloresfiltros" /*RemoteObject*/ ).runVoidMethod ("Clear");};
 BA.debugLineNum = 2168;BA.debugLine="PosicionDimensionesCLVFiltros";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_posiciondimensionesclvfiltros" /*RemoteObject*/ );
 BA.debugLineNum = 2172;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _removemenuitemcontextmenu(RemoteObject __ref,RemoteObject _indexmenuitem) throws Exception{
try {
		Debug.PushSubsStack("RemoveMenuItemContextMenu (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,998);
if (RapidSub.canDelegate("removemenuitemcontextmenu")) { return __ref.runUserSub(false, "jamtableclv","removemenuitemcontextmenu", __ref, _indexmenuitem);}
Debug.locals.put("IndexMenuItem", _indexmenuitem);
 BA.debugLineNum = 998;BA.debugLine="Public Sub RemoveMenuItemContextMenu(IndexMenuItem";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 999;BA.debugLine="mContextMenu.MenuItems.RemoveAt(IndexMenuItem)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_mcontextmenu" /*RemoteObject*/ ).runMethod(false,"getMenuItems").runVoidMethod ("RemoveAt",(Object)(BA.numberCast(int.class, _indexmenuitem)));
 BA.debugLineNum = 1000;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _removeviewspanelheaders(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("RemoveViewsPanelHeaders (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6991);
if (RapidSub.canDelegate("removeviewspanelheaders")) { return __ref.runUserSub(false, "jamtableclv","removeviewspanelheaders", __ref);}
 BA.debugLineNum = 6991;BA.debugLine="Public Sub RemoveViewsPanelHeaders";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6992;BA.debugLine="pnlHeadersJamTableCLV.RemoveAllNodes";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_pnlheadersjamtableclv" /*RemoteObject*/ ).runVoidMethod ("RemoveAllNodes");
 BA.debugLineNum = 6993;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _resizeitem(RemoteObject __ref,RemoteObject _index,RemoteObject _height) throws Exception{
try {
		Debug.PushSubsStack("ResizeItem (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6604);
if (RapidSub.canDelegate("resizeitem")) { return __ref.runUserSub(false, "jamtableclv","resizeitem", __ref, _index, _height);}
Debug.locals.put("Index", _index);
Debug.locals.put("Height", _height);
 BA.debugLineNum = 6604;BA.debugLine="Sub ResizeItem(Index As Int, Height As Int)";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6605;BA.debugLine="clvDatos.ResizeItem(Index, Height)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runVoidMethod ("_resizeitem",(Object)(_index),(Object)(_height));
 BA.debugLineNum = 6606;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _restocamposordensqlcbo(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("RestoCamposOrdenSQLcbo (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,5039);
if (RapidSub.canDelegate("restocamposordensqlcbo")) { return __ref.runUserSub(false, "jamtableclv","restocamposordensqlcbo", __ref);}
RemoteObject _lstnombrescamposordensqlactual = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.List");
RemoteObject _lstnombresrestocampos = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.List");
int _i = 0;
RemoteObject _clviv2 = RemoteObject.declareNull("b4j.docU.jamtableclv._clvjamtableclvordensqlitemvalue");
RemoteObject _c = RemoteObject.declareNull("b4j.docU.jamtableclv._campoorigendatosjamtableclv");
 BA.debugLineNum = 5039;BA.debugLine="private Sub RestoCamposOrdenSQLcbo As List";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 5040;BA.debugLine="Dim lstNombresCamposOrdenSQLActual As List";
Debug.JustUpdateDeviceLine();
_lstnombrescamposordensqlactual = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");Debug.locals.put("lstNombresCamposOrdenSQLActual", _lstnombrescamposordensqlactual);
 BA.debugLineNum = 5041;BA.debugLine="lstNombresCamposOrdenSQLActual.Initialize";
Debug.JustUpdateDeviceLine();
_lstnombrescamposordensqlactual.runVoidMethod ("Initialize");
 BA.debugLineNum = 5042;BA.debugLine="Dim lstNombresRestoCampos As List";
Debug.JustUpdateDeviceLine();
_lstnombresrestocampos = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");Debug.locals.put("lstNombresRestoCampos", _lstnombresrestocampos);
 BA.debugLineNum = 5043;BA.debugLine="lstNombresRestoCampos.Initialize";
Debug.JustUpdateDeviceLine();
_lstnombresrestocampos.runVoidMethod ("Initialize");
 BA.debugLineNum = 5044;BA.debugLine="For i=0 To CLVOrdenSQLjamTableCLV.Size-1";
Debug.JustUpdateDeviceLine();
{
final int step5 = 1;
final int limit5 = RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_clvordensqljamtableclv" /*RemoteObject*/ ).runMethod(true,"_getsize"),RemoteObject.createImmutable(1)}, "-",1, 1).<Integer>get().intValue();
_i = 0 ;
for (;(step5 > 0 && _i <= limit5) || (step5 < 0 && _i >= limit5) ;_i = ((int)(0 + _i + step5))  ) {
Debug.locals.put("i", _i);
 BA.debugLineNum = 5045;BA.debugLine="Dim clviv2 As clvJAMTableCLVOrdenSQLItemValue=CL";
Debug.JustUpdateDeviceLine();
_clviv2 = (__ref.getField(false,"_clvordensqljamtableclv" /*RemoteObject*/ ).runMethod(false,"_getvalue",(Object)(BA.numberCast(int.class, _i))));Debug.locals.put("clviv2", _clviv2);Debug.locals.put("clviv2", _clviv2);
 BA.debugLineNum = 5046;BA.debugLine="If FixNull(clviv2.cboCampoOrdenacionSQL.Value)<>";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("!",__ref.runClassMethod (b4j.docU.jamtableclv.class, "_fixnull" /*RemoteObject*/ ,(Object)(_clviv2.getField(false,"cboCampoOrdenacionSQL" /*RemoteObject*/ ).runMethod(false,"getValue"))),BA.ObjectToString(""))) { 
 BA.debugLineNum = 5047;BA.debugLine="lstNombresCamposOrdenSQLActual.Add(clviv2.cboCa";
Debug.JustUpdateDeviceLine();
_lstnombrescamposordensqlactual.runVoidMethod ("Add",(Object)(_clviv2.getField(false,"cboCampoOrdenacionSQL" /*RemoteObject*/ ).runMethod(false,"getValue")));
 };
 }
}Debug.locals.put("i", _i);
;
 BA.debugLineNum = 5051;BA.debugLine="For Each c As CampoOrigenDatosJamTableCLV In mLst";
Debug.JustUpdateDeviceLine();
{
final RemoteObject group11 = __ref.getField(false,"_mlstcamposorigendatos" /*RemoteObject*/ );
final int groupLen11 = group11.runMethod(true,"getSize").<Integer>get()
;int index11 = 0;
;
for (; index11 < groupLen11;index11++){
_c = (group11.runMethod(false,"Get",index11));Debug.locals.put("c", _c);
Debug.locals.put("c", _c);
 BA.debugLineNum = 5052;BA.debugLine="If lstNombresCamposOrdenSQLActual.IndexOf(c.Alia";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_lstnombrescamposordensqlactual.runMethod(true,"IndexOf",(Object)((_c.getField(true,"AliasCampo" /*RemoteObject*/ )))),BA.numberCast(double.class, -(double) (0 + 1)))) { 
 BA.debugLineNum = 5053;BA.debugLine="lstNombresRestoCampos.Add(c.AliasCampo)";
Debug.JustUpdateDeviceLine();
_lstnombresrestocampos.runVoidMethod ("Add",(Object)((_c.getField(true,"AliasCampo" /*RemoteObject*/ ))));
 };
 }
}Debug.locals.put("c", _c);
;
 BA.debugLineNum = 5056;BA.debugLine="lstNombresRestoCampos.Sort(True)";
Debug.JustUpdateDeviceLine();
_lstnombresrestocampos.runVoidMethod ("Sort",(Object)(jamtableclv.__c.getField(true,"True")));
 BA.debugLineNum = 5057;BA.debugLine="Return lstNombresRestoCampos";
Debug.JustUpdateDeviceLine();
if (true) return _lstnombresrestocampos;
 BA.debugLineNum = 5058;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _scrolltoitem(RemoteObject __ref,RemoteObject _index) throws Exception{
try {
		Debug.PushSubsStack("ScrollToItem (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7285);
if (RapidSub.canDelegate("scrolltoitem")) { return __ref.runUserSub(false, "jamtableclv","scrolltoitem", __ref, _index);}
Debug.locals.put("Index", _index);
 BA.debugLineNum = 7285;BA.debugLine="Public Sub ScrollToItem(Index As Int) As String";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 7286;BA.debugLine="clvDatos.ScrollToItem(Index)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).runVoidMethod ("_scrolltoitem",(Object)(_index));
 BA.debugLineNum = 7287;BA.debugLine="Return \"OK\"";
Debug.JustUpdateDeviceLine();
if (true) return BA.ObjectToString("OK");
 BA.debugLineNum = 7288;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _seleccionaritem(RemoteObject __ref,RemoteObject _index) throws Exception{
try {
		Debug.PushSubsStack("SeleccionarItem (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,8040);
if (RapidSub.canDelegate("seleccionaritem")) { return __ref.runUserSub(false, "jamtableclv","seleccionaritem", __ref, _index);}
Debug.locals.put("Index", _index);
 BA.debugLineNum = 8040;BA.debugLine="public Sub SeleccionarItem(Index As Int)";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 8041;BA.debugLine="CLVSelections.ItemClicked(Index)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvselections" /*RemoteObject*/ ).runClassMethod (b4j.docU.clvselectionsjamtableclv.class, "_itemclicked" /*RemoteObject*/ ,(Object)(_index));
 BA.debugLineNum = 8042;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _seleccionaritemyhacervisible(RemoteObject __ref,RemoteObject _index) throws Exception{
try {
		Debug.PushSubsStack("SeleccionarItemYHacerVisible (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,8044);
if (RapidSub.canDelegate("seleccionaritemyhacervisible")) { return __ref.runUserSub(false, "jamtableclv","seleccionaritemyhacervisible", __ref, _index);}
Debug.locals.put("Index", _index);
 BA.debugLineNum = 8044;BA.debugLine="public Sub SeleccionarItemYHacerVisible(Index As I";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 8045;BA.debugLine="CLVSelections.SelectAndMakeVisible(Index)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvselections" /*RemoteObject*/ ).runClassMethod (b4j.docU.clvselectionsjamtableclv.class, "_selectandmakevisible" /*void*/ ,(Object)(_index));
 BA.debugLineNum = 8046;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _seleccionartodotextonodo(RemoteObject __ref,RemoteObject _xnode) throws Exception{
try {
		Debug.PushSubsStack("SeleccionarTodoTextoNodo (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,1341);
if (RapidSub.canDelegate("seleccionartodotextonodo")) { return __ref.runUserSub(false, "jamtableclv","seleccionartodotextonodo", __ref, _xnode);}
Debug.locals.put("xNode", _xnode);
 BA.debugLineNum = 1341;BA.debugLine="private Sub SeleccionarTodoTextoNodo(xNode As B4XV";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 1342;BA.debugLine="Select True";
Debug.JustUpdateDeviceLine();
switch (BA.switchObjectToInt(jamtableclv.__c.getField(true,"True"),BA.ObjectToBoolean(RemoteObject.solveBoolean("i",_xnode.getObjectOrNull(), RemoteObject.createImmutable("javafx.scene.control.TextField")) || RemoteObject.solveBoolean("i",_xnode.getObjectOrNull(), RemoteObject.createImmutable("javafx.scene.control.TextArea"))))) {
case 0: {
 BA.debugLineNum = 1344;BA.debugLine="xNode.SelectAll";
Debug.JustUpdateDeviceLine();
_xnode.runVoidMethod ("SelectAll");
 break; }
}
;
 BA.debugLineNum = 1346;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _setalineaciontextfieldcentrocentro(RemoteObject __ref,RemoteObject _b4xtf) throws Exception{
try {
		Debug.PushSubsStack("SetAlineacionTextFieldCentroCentro (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,8461);
if (RapidSub.canDelegate("setalineaciontextfieldcentrocentro")) { return __ref.runUserSub(false, "jamtableclv","setalineaciontextfieldcentrocentro", __ref, _b4xtf);}
RemoteObject _jo1 = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
Debug.locals.put("b4xTF", _b4xtf);
 BA.debugLineNum = 8461;BA.debugLine="Public Sub SetAlineacionTextFieldCentroCentro(b4xT";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 8462;BA.debugLine="Dim jo1 = b4xTF As JavaObject";
Debug.JustUpdateDeviceLine();
_jo1 = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");
_jo1 = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), _b4xtf.getObject());Debug.locals.put("jo1", _jo1);Debug.locals.put("jo1", _jo1);
 BA.debugLineNum = 8463;BA.debugLine="jo1.RunMethod(\"setAlignment\", Array As Object(\"CE";
Debug.JustUpdateDeviceLine();
_jo1.runVoidMethod ("RunMethod",(Object)(BA.ObjectToString("setAlignment")),(Object)(RemoteObject.createNewArray("Object",new int[] {1},new Object[] {(RemoteObject.createImmutable("CENTER"))})));
 BA.debugLineNum = 8464;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _setalineaciontextfieldcentroderecha(RemoteObject __ref,RemoteObject _b4xtf) throws Exception{
try {
		Debug.PushSubsStack("SetAlineacionTextFieldCentroDerecha (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,8451);
if (RapidSub.canDelegate("setalineaciontextfieldcentroderecha")) { return __ref.runUserSub(false, "jamtableclv","setalineaciontextfieldcentroderecha", __ref, _b4xtf);}
RemoteObject _jo1 = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
Debug.locals.put("b4xTF", _b4xtf);
 BA.debugLineNum = 8451;BA.debugLine="Public Sub SetAlineacionTextFieldCentroDerecha(b4x";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 8452;BA.debugLine="Dim jo1 = b4xTF As JavaObject";
Debug.JustUpdateDeviceLine();
_jo1 = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");
_jo1 = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), _b4xtf.getObject());Debug.locals.put("jo1", _jo1);Debug.locals.put("jo1", _jo1);
 BA.debugLineNum = 8453;BA.debugLine="jo1.RunMethod(\"setAlignment\", Array As Object(\"CE";
Debug.JustUpdateDeviceLine();
_jo1.runVoidMethod ("RunMethod",(Object)(BA.ObjectToString("setAlignment")),(Object)(RemoteObject.createNewArray("Object",new int[] {1},new Object[] {(RemoteObject.createImmutable("CENTER_RIGHT"))})));
 BA.debugLineNum = 8454;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _setalineaciontextfieldcentroizquierda(RemoteObject __ref,RemoteObject _b4xtf) throws Exception{
try {
		Debug.PushSubsStack("SetAlineacionTextFieldCentroIzquierda (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,8471);
if (RapidSub.canDelegate("setalineaciontextfieldcentroizquierda")) { return __ref.runUserSub(false, "jamtableclv","setalineaciontextfieldcentroizquierda", __ref, _b4xtf);}
RemoteObject _jo1 = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
Debug.locals.put("b4xTF", _b4xtf);
 BA.debugLineNum = 8471;BA.debugLine="Public Sub SetAlineacionTextFieldCentroIzquierda(b";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 8472;BA.debugLine="Dim jo1 = b4xTF As JavaObject";
Debug.JustUpdateDeviceLine();
_jo1 = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");
_jo1 = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), _b4xtf.getObject());Debug.locals.put("jo1", _jo1);Debug.locals.put("jo1", _jo1);
 BA.debugLineNum = 8473;BA.debugLine="jo1.RunMethod(\"setAlignment\", Array As Object(\"CE";
Debug.JustUpdateDeviceLine();
_jo1.runVoidMethod ("RunMethod",(Object)(BA.ObjectToString("setAlignment")),(Object)(RemoteObject.createNewArray("Object",new int[] {1},new Object[] {(RemoteObject.createImmutable("CENTER_LEFT"))})));
 BA.debugLineNum = 8474;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _setalturaitems(RemoteObject __ref,RemoteObject _alturaitems) throws Exception{
try {
		Debug.PushSubsStack("setAlturaItems (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6913);
if (RapidSub.canDelegate("setalturaitems")) { return __ref.runUserSub(false, "jamtableclv","setalturaitems", __ref, _alturaitems);}
Debug.locals.put("AlturaItems", _alturaitems);
 BA.debugLineNum = 6913;BA.debugLine="public Sub setAlturaItems(AlturaItems As Int)";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6914;BA.debugLine="mAlturaItems=AlturaItems";
Debug.JustUpdateDeviceLine();
__ref.setField ("_malturaitems" /*RemoteObject*/ ,_alturaitems);
 BA.debugLineNum = 6915;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _setalturapanelheaders(RemoteObject __ref,RemoteObject _alturapanelheaders) throws Exception{
try {
		Debug.PushSubsStack("setAlturaPanelHeaders (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6932);
if (RapidSub.canDelegate("setalturapanelheaders")) { return __ref.runUserSub(false, "jamtableclv","setalturapanelheaders", __ref, _alturapanelheaders);}
Debug.locals.put("AlturaPanelHeaders", _alturapanelheaders);
 BA.debugLineNum = 6932;BA.debugLine="public Sub setAlturaPanelHeaders(AlturaPanelHeader";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6933;BA.debugLine="pnlHeadersJamTableCLV.prefHeight=AlturaPanelHeade";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_pnlheadersjamtableclv" /*RemoteObject*/ ).runMethod(true,"setPrefHeight",_alturapanelheaders);
 BA.debugLineNum = 6934;BA.debugLine="mAlturaPanelHeaders=AlturaPanelHeaders";
Debug.JustUpdateDeviceLine();
__ref.setField ("_malturapanelheaders" /*RemoteObject*/ ,BA.numberCast(int.class, _alturapanelheaders));
 BA.debugLineNum = 6935;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _setalturaseparadorpaneles(RemoteObject __ref,RemoteObject _alturaseparadorpaneles) throws Exception{
try {
		Debug.PushSubsStack("setAlturaSeparadorPaneles (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6921);
if (RapidSub.canDelegate("setalturaseparadorpaneles")) { return __ref.runUserSub(false, "jamtableclv","setalturaseparadorpaneles", __ref, _alturaseparadorpaneles);}
RemoteObject _jo = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
Debug.locals.put("AlturaSeparadorPaneles", _alturaseparadorpaneles);
 BA.debugLineNum = 6921;BA.debugLine="public Sub setAlturaSeparadorPaneles(AlturaSeparad";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6922;BA.debugLine="mAlturaSeparadorPaneles=AlturaSeparadorPaneles";
Debug.JustUpdateDeviceLine();
__ref.setField ("_malturaseparadorpaneles" /*RemoteObject*/ ,_alturaseparadorpaneles);
 BA.debugLineNum = 6924;BA.debugLine="Dim jo As JavaObject = clvDatos 'ignore";
Debug.JustUpdateDeviceLine();
_jo = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");
_jo = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), __ref.getField(false,"_clvdatos" /*RemoteObject*/ ));Debug.locals.put("jo", _jo);Debug.locals.put("jo", _jo);
 BA.debugLineNum = 6925;BA.debugLine="jo.SetField(\"_mdividersize\", mAlturaSeparadorPane";
Debug.JustUpdateDeviceLine();
_jo.runVoidMethod ("SetField",(Object)(BA.ObjectToString("_mdividersize")),(Object)((__ref.getField(true,"_malturaseparadorpaneles" /*RemoteObject*/ ))));
 BA.debugLineNum = 6926;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _setclvscrollbars(RemoteObject __ref,RemoteObject _clv,RemoteObject _visible) throws Exception{
try {
		Debug.PushSubsStack("SetCLVScrollBars (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,626);
if (RapidSub.canDelegate("setclvscrollbars")) { return __ref.runUserSub(false, "jamtableclv","setclvscrollbars", __ref, _clv, _visible);}
RemoteObject _nsv = RemoteObject.declareNull("anywheresoftware.b4j.objects.ScrollPaneWrapper");
RemoteObject _jo = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
Debug.locals.put("clv", _clv);
Debug.locals.put("Visible", _visible);
 BA.debugLineNum = 626;BA.debugLine="Sub SetCLVScrollBars(clv As CustomListView, Visibl";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 627;BA.debugLine="Dim nsv As ScrollPane = clv.sv";
Debug.JustUpdateDeviceLine();
_nsv = RemoteObject.createNew ("anywheresoftware.b4j.objects.ScrollPaneWrapper");
_nsv = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.ScrollPaneWrapper"), _clv.getField(false,"_sv").getObject());Debug.locals.put("nsv", _nsv);Debug.locals.put("nsv", _nsv);
 BA.debugLineNum = 628;BA.debugLine="If Visible Then";
Debug.JustUpdateDeviceLine();
if (_visible.<Boolean>get().booleanValue()) { 
 BA.debugLineNum = 629;BA.debugLine="nsv.SetVScrollVisibility(\"ALWAYS\")";
Debug.JustUpdateDeviceLine();
_nsv.runVoidMethod ("SetVScrollVisibility",(Object)(BA.getEnumFromString(BA.getDeviceClass("javafx.scene.control.ScrollPane.ScrollBarPolicy"),RemoteObject.createImmutable("ALWAYS"))));
 }else {
 BA.debugLineNum = 631;BA.debugLine="nsv.SetVScrollVisibility(\"NEVER\")";
Debug.JustUpdateDeviceLine();
_nsv.runVoidMethod ("SetVScrollVisibility",(Object)(BA.getEnumFromString(BA.getDeviceClass("javafx.scene.control.ScrollPane.ScrollBarPolicy"),RemoteObject.createImmutable("NEVER"))));
 };
 BA.debugLineNum = 633;BA.debugLine="Dim jo As JavaObject = clv 'ignore";
Debug.JustUpdateDeviceLine();
_jo = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");
_jo = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), _clv);Debug.locals.put("jo", _jo);Debug.locals.put("jo", _jo);
 BA.debugLineNum = 634;BA.debugLine="jo.SetField(\"_scrollbarsvisible\", Visible)";
Debug.JustUpdateDeviceLine();
_jo.runVoidMethod ("SetField",(Object)(BA.ObjectToString("_scrollbarsvisible")),(Object)((_visible)));
 BA.debugLineNum = 635;BA.debugLine="clv.Base_Resize(clv.AsView.Width, clv.AsView.Heig";
Debug.JustUpdateDeviceLine();
_clv.runVoidMethod ("_base_resize",(Object)(_clv.runMethod(false,"_asview").runMethod(true,"getWidth")),(Object)(_clv.runMethod(false,"_asview").runMethod(true,"getHeight")));
 BA.debugLineNum = 636;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _setcolorfondopanelinfojamtableclv(RemoteObject __ref,RemoteObject _colorfondo) throws Exception{
try {
		Debug.PushSubsStack("SetColorFondoPanelInfoJamTableCLV (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,4520);
if (RapidSub.canDelegate("setcolorfondopanelinfojamtableclv")) { return __ref.runUserSub(false, "jamtableclv","setcolorfondopanelinfojamtableclv", __ref, _colorfondo);}
RemoteObject _pi = RemoteObject.declareNull("anywheresoftware.b4a.objects.B4XViewWrapper");
Debug.locals.put("ColorFondo", _colorfondo);
 BA.debugLineNum = 4520;BA.debugLine="Public Sub SetColorFondoPanelInfoJamTableCLV(Color";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 4521;BA.debugLine="Dim pI As B4XView=lblInfoJamTableCLV";
Debug.JustUpdateDeviceLine();
_pi = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");
_pi = __ref.getField(false,"_lblinfojamtableclv" /*RemoteObject*/ );Debug.locals.put("pI", _pi);Debug.locals.put("pI", _pi);
 BA.debugLineNum = 4522;BA.debugLine="pI.Color=ColorFondo";
Debug.JustUpdateDeviceLine();
_pi.runMethod(true,"setColor",_colorfondo);
 BA.debugLineNum = 4523;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _setcolorpanelpresionado(RemoteObject __ref,RemoteObject _color) throws Exception{
try {
		Debug.PushSubsStack("setColorPanelPresionado (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6969);
if (RapidSub.canDelegate("setcolorpanelpresionado")) { return __ref.runUserSub(false, "jamtableclv","setcolorpanelpresionado", __ref, _color);}
Debug.locals.put("Color", _color);
 BA.debugLineNum = 6969;BA.debugLine="public Sub setColorPanelPresionado(Color As Int)";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6970;BA.debugLine="mPressedPanelColor=Color";
Debug.JustUpdateDeviceLine();
__ref.setField ("_mpressedpanelcolor" /*RemoteObject*/ ,_color);
 BA.debugLineNum = 6971;BA.debugLine="clvDatos.PressedColor=mPressedPanelColor";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).setField ("_pressedcolor",__ref.getField(true,"_mpressedpanelcolor" /*RemoteObject*/ ));
 BA.debugLineNum = 6972;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _setcolorpanelseleccionado(RemoteObject __ref,RemoteObject _color) throws Exception{
try {
		Debug.PushSubsStack("setColorPanelSeleccionado (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6982);
if (RapidSub.canDelegate("setcolorpanelseleccionado")) { return __ref.runUserSub(false, "jamtableclv","setcolorpanelseleccionado", __ref, _color);}
Debug.locals.put("Color", _color);
 BA.debugLineNum = 6982;BA.debugLine="public Sub setColorPanelSeleccionado(Color As Int)";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6983;BA.debugLine="mSelectedPanelColor=Color";
Debug.JustUpdateDeviceLine();
__ref.setField ("_mselectedpanelcolor" /*RemoteObject*/ ,_color);
 BA.debugLineNum = 6984;BA.debugLine="CLVSelections.SelectionColor=mSelectedPanelColor";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvselections" /*RemoteObject*/ ).setField ("_selectioncolor" /*RemoteObject*/ ,__ref.getField(true,"_mselectedpanelcolor" /*RemoteObject*/ ));
 BA.debugLineNum = 6985;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _setcolorseparadorpaneles(RemoteObject __ref,RemoteObject _colorseparadorpaneles) throws Exception{
try {
		Debug.PushSubsStack("setColorSeparadorPaneles (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6928);
if (RapidSub.canDelegate("setcolorseparadorpaneles")) { return __ref.runUserSub(false, "jamtableclv","setcolorseparadorpaneles", __ref, _colorseparadorpaneles);}
Debug.locals.put("ColorSeparadorPaneles", _colorseparadorpaneles);
 BA.debugLineNum = 6928;BA.debugLine="public Sub setColorSeparadorPaneles(ColorSeparador";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6929;BA.debugLine="clvDatos.sv.ScrollViewInnerPanel.Color = ColorSep";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvdatos" /*RemoteObject*/ ).getField(false,"_sv").runMethod(false,"getScrollViewInnerPanel").runMethod(true,"setColor",_colorseparadorpaneles);
 BA.debugLineNum = 6930;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _setcolortextopanelinfojamtableclv(RemoteObject __ref,RemoteObject _colortexto) throws Exception{
try {
		Debug.PushSubsStack("SetColorTextoPanelInfoJamTableCLV (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,4546);
if (RapidSub.canDelegate("setcolortextopanelinfojamtableclv")) { return __ref.runUserSub(false, "jamtableclv","setcolortextopanelinfojamtableclv", __ref, _colortexto);}
Debug.locals.put("ColorTexto", _colortexto);
 BA.debugLineNum = 4546;BA.debugLine="Public Sub SetColorTextoPanelInfoJamTableCLV(Color";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 4547;BA.debugLine="lblInfoJamTableCLV.TextColor=ColorTexto";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lblinfojamtableclv" /*RemoteObject*/ ).runMethod(true,"setTextColor",_colortexto);
 BA.debugLineNum = 4548;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _setdata(RemoteObject __ref,RemoteObject _datosregistros) throws Exception{
try {
		Debug.PushSubsStack("SetData (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,5688);
if (RapidSub.canDelegate("setdata")) { return __ref.runUserSub(false, "jamtableclv","setdata", __ref, _datosregistros);}
ResumableSub_SetData rsub = new ResumableSub_SetData(null,__ref,_datosregistros);
rsub.remoteResumableSub = anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSubForFilter();
rsub.resume(null, null);
return RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.keywords.Common.ResumableSubWrapper"), rsub.remoteResumableSub);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_SetData extends BA.ResumableSub {
public ResumableSub_SetData(b4j.docU.jamtableclv parent,RemoteObject __ref,RemoteObject _datosregistros) {
this.parent = parent;
this.__ref = __ref;
this._datosregistros = _datosregistros;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _datosregistros;
RemoteObject _mresultsetdata = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
RemoteObject _rsub = RemoteObject.declareNull("anywheresoftware.b4a.keywords.Common.ResumableSubWrapper");
RemoteObject _robj = RemoteObject.declareNull("Object");

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("SetData (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,5688);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
{
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,RemoteObject.createImmutable(null));return;}
case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
Debug.locals.put("DatosRegistros", _datosregistros);
 BA.debugLineNum = 5691;BA.debugLine="Log(\"JamTableCLV Set Data, JSON Origen Datos: \" &";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9167903235",RemoteObject.concat(RemoteObject.createImmutable("JamTableCLV Set Data, JSON Origen Datos: "),__ref.getField(true,"_nombrejsonorigendatos" /*RemoteObject*/ )),0);
 BA.debugLineNum = 5694;BA.debugLine="If OrigenDatosConfiguradoOK=False Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//if
this.state = 4;
if (RemoteObject.solveBoolean("=",__ref.getField(true,"_origendatosconfiguradook" /*RemoteObject*/ ),parent.__c.getField(true,"False"))) { 
this.state = 3;
}if (true) break;

case 3:
//C
this.state = 4;
 BA.debugLineNum = 5695;BA.debugLine="fx.Msgbox(mParentForm,\"Se ha ejecutado el método";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_fx" /*RemoteObject*/ ).runVoidMethodAndSync ("Msgbox",(Object)(__ref.getField(false,"_mparentform" /*RemoteObject*/ )),(Object)(BA.ObjectToString("Se ha ejecutado el método SetData jamTableCLV antes de haber creado el origen de datos (JSON). Avisa al administrador de la aplicación.")),(Object)(RemoteObject.createImmutable("Error")));
 BA.debugLineNum = 5696;BA.debugLine="ExitApplication";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("ExitApplication");
 if (true) break;

case 4:
//C
this.state = 5;
;
 BA.debugLineNum = 5699;BA.debugLine="Dim mResultSetData As Map";
Debug.JustUpdateDeviceLine();
_mresultsetdata = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");Debug.locals.put("mResultSetData", _mresultsetdata);
 BA.debugLineNum = 5700;BA.debugLine="mResultSetData.Initialize";
Debug.JustUpdateDeviceLine();
_mresultsetdata.runVoidMethod ("Initialize");
 BA.debugLineNum = 5701;BA.debugLine="mResultSetData.Put(\"FlagOK\",True)";
Debug.JustUpdateDeviceLine();
_mresultsetdata.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("FlagOK"))),(Object)((parent.__c.getField(true,"True"))));
 BA.debugLineNum = 5703;BA.debugLine="CrearTablaSQLite";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_creartablasqlite" /*RemoteObject*/ );
 BA.debugLineNum = 5705;BA.debugLine="Select True";
Debug.JustUpdateDeviceLine();
if (true) break;

case 5:
//select
this.state = 12;
switch (BA.switchObjectToInt(parent.__c.getField(true,"True"),BA.ObjectToBoolean(RemoteObject.solveBoolean("i",_datosregistros, RemoteObject.createImmutable("java.util.List"))),BA.ObjectToBoolean(RemoteObject.solveBoolean("i",_datosregistros, RemoteObject.createImmutable("java.sql.ResultSet"))))) {
case 0: {
this.state = 7;
if (true) break;
}
case 1: {
this.state = 9;
if (true) break;
}
default: {
this.state = 11;
if (true) break;
}
}
if (true) break;

case 7:
//C
this.state = 12;
 BA.debugLineNum = 5707;BA.debugLine="Dim rSub As ResumableSub=SetRecordsDataList(Dat";
Debug.JustUpdateDeviceLine();
_rsub = RemoteObject.createNew ("anywheresoftware.b4a.keywords.Common.ResumableSubWrapper");
_rsub = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_setrecordsdatalist" /*RemoteObject*/ ,RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.collections.List"), _datosregistros));Debug.locals.put("rSub", _rsub);Debug.locals.put("rSub", _rsub);
 if (true) break;

case 9:
//C
this.state = 12;
 BA.debugLineNum = 5709;BA.debugLine="Dim rSub As ResumableSub=SetRecordsDataResultse";
Debug.JustUpdateDeviceLine();
_rsub = RemoteObject.createNew ("anywheresoftware.b4a.keywords.Common.ResumableSubWrapper");
_rsub = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_setrecordsdataresultset" /*RemoteObject*/ ,RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.SQL.ResultSetWrapper"), _datosregistros));Debug.locals.put("rSub", _rsub);Debug.locals.put("rSub", _rsub);
 if (true) break;

case 11:
//C
this.state = 12;
 BA.debugLineNum = 5712;BA.debugLine="mResultSetData.Put(\"msgError\",\"Los registros de";
Debug.JustUpdateDeviceLine();
_mresultsetdata.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("msgError"))),(Object)((RemoteObject.createImmutable("Los registros de datos sólo pueden ser de tipo List o Resultset. Avisa al administrador de la aplicación."))));
 BA.debugLineNum = 5713;BA.debugLine="mResultSetData.Put(\"FlagOK\",False)";
Debug.JustUpdateDeviceLine();
_mresultsetdata.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("FlagOK"))),(Object)((parent.__c.getField(true,"False"))));
 BA.debugLineNum = 5716;BA.debugLine="Return mResultSetData";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(_mresultsetdata));return;};
 if (true) break;

case 12:
//C
this.state = 13;
;
 BA.debugLineNum = 5718;BA.debugLine="Wait For (rSub) complete (mResultSetData As Map)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "setdata"), _rsub);
this.state = 26;
return;
case 26:
//C
this.state = 13;
_mresultsetdata = (RemoteObject) result.getArrayElement(false,RemoteObject.createImmutable(1));Debug.locals.put("mResultSetData", _mresultsetdata);
;
 BA.debugLineNum = 5720;BA.debugLine="DatosRegistros=Null";
Debug.JustUpdateDeviceLine();
_datosregistros = parent.__c.getField(false,"Null");Debug.locals.put("DatosRegistros", _datosregistros);
 BA.debugLineNum = 5721;BA.debugLine="If Not(mResultSetData.Get(\"FlagOK\")) Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 13:
//if
this.state = 25;
if (parent.__c.runMethod(true,"Not",(Object)(BA.ObjectToBoolean(_mresultsetdata.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("FlagOK"))))))).<Boolean>get().booleanValue()) { 
this.state = 15;
}else {
this.state = 24;
}if (true) break;

case 15:
//C
this.state = 16;
 BA.debugLineNum = 5723;BA.debugLine="If mResultSetData.Get(\"msgAviso\")=\"La lista de d";
Debug.JustUpdateDeviceLine();
if (true) break;

case 16:
//if
this.state = 19;
if (RemoteObject.solveBoolean("=",_mresultsetdata.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("msgAviso")))),(RemoteObject.concat(RemoteObject.createImmutable("La lista de datos para el Origen Datos con JSON "),__ref.getField(true,"_nombrejsonorigendatos" /*RemoteObject*/ ),RemoteObject.createImmutable(" está vacía."))))) { 
this.state = 18;
}if (true) break;

case 18:
//C
this.state = 19;
 BA.debugLineNum = 5726;BA.debugLine="WAIT FOR (ActualizarTableCLV(True)) COMPLETE (r";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "setdata"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_actualizartableclv" /*RemoteObject*/ ,(Object)(parent.__c.getField(true,"True"))));
this.state = 27;
return;
case 27:
//C
this.state = 19;
_robj = (RemoteObject) result.getArrayElement(false,RemoteObject.createImmutable(1));Debug.locals.put("rObj", _robj);
;
 if (true) break;
;
 BA.debugLineNum = 5729;BA.debugLine="If mResultSetData.Get(\"msgError\")<>\"\" Then";
Debug.JustUpdateDeviceLine();

case 19:
//if
this.state = 22;
if (RemoteObject.solveBoolean("!",_mresultsetdata.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("msgError")))),RemoteObject.createImmutable(("")))) { 
this.state = 21;
}if (true) break;

case 21:
//C
this.state = 22;
 BA.debugLineNum = 5732;BA.debugLine="WAIT FOR (ActualizarTableCLV(True)) COMPLETE (r";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "setdata"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_actualizartableclv" /*RemoteObject*/ ,(Object)(parent.__c.getField(true,"True"))));
this.state = 28;
return;
case 28:
//C
this.state = 22;
_robj = (RemoteObject) result.getArrayElement(false,RemoteObject.createImmutable(1));Debug.locals.put("rObj", _robj);
;
 if (true) break;

case 22:
//C
this.state = 25;
;
 BA.debugLineNum = 5738;BA.debugLine="Return mResultSetData";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(_mresultsetdata));return;};
 if (true) break;

case 24:
//C
this.state = 25;
 BA.debugLineNum = 5742;BA.debugLine="WAIT FOR (ActualizarTableCLV(True)) COMPLETE (rO";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "setdata"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_actualizartableclv" /*RemoteObject*/ ,(Object)(parent.__c.getField(true,"True"))));
this.state = 29;
return;
case 29:
//C
this.state = 25;
_robj = (RemoteObject) result.getArrayElement(false,RemoteObject.createImmutable(1));Debug.locals.put("rObj", _robj);
;
 BA.debugLineNum = 5744;BA.debugLine="Return mResultSetData";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(_mresultsetdata));return;};
 if (true) break;

case 25:
//C
this.state = -1;
;
 BA.debugLineNum = 5747;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static RemoteObject  _setenabled(RemoteObject __ref,RemoteObject _enabled) throws Exception{
try {
		Debug.PushSubsStack("setEnabled (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6897);
if (RapidSub.canDelegate("setenabled")) { return __ref.runUserSub(false, "jamtableclv","setenabled", __ref, _enabled);}
Debug.locals.put("Enabled", _enabled);
 BA.debugLineNum = 6897;BA.debugLine="public Sub setEnabled(Enabled As Boolean)";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6898;BA.debugLine="mBase.Enabled=Enabled";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_mbase" /*RemoteObject*/ ).runMethod(true,"setEnabled",_enabled);
 BA.debugLineNum = 6899;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _sethandler(RemoteObject __ref,RemoteObject _ob,RemoteObject _eventname,RemoteObject _handlername) throws Exception{
try {
		Debug.PushSubsStack("setHandler (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,8110);
if (RapidSub.canDelegate("sethandler")) { return __ref.runUserSub(false, "jamtableclv","sethandler", __ref, _ob, _eventname, _handlername);}
Debug.locals.put("ob", _ob);
Debug.locals.put("eventName", _eventname);
Debug.locals.put("handlerName", _handlername);
 BA.debugLineNum = 8110;BA.debugLine="Private Sub setHandler(ob As JavaObject,eventName";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 8111;BA.debugLine="ob.RunMethod(eventName, Array(ob.CreateEventFromU";
Debug.JustUpdateDeviceLine();
_ob.runVoidMethod ("RunMethod",(Object)(_eventname),(Object)(RemoteObject.createNewArray("Object",new int[] {1},new Object[] {_ob.runMethod(false,"CreateEventFromUI",__ref.getField(false, "ba"),(Object)(BA.ObjectToString("javafx.event.EventHandler")),(Object)(_handlername),(Object)((jamtableclv.__c.getField(true,"False"))))})));
 BA.debugLineNum = 8112;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _sethandlerkeypress(RemoteObject __ref,RemoteObject _node) throws Exception{
try {
		Debug.PushSubsStack("SetHandlerKeyPress (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,8122);
if (RapidSub.canDelegate("sethandlerkeypress")) { return __ref.runUserSub(false, "jamtableclv","sethandlerkeypress", __ref, _node);}
Debug.locals.put("Node", _node);
 BA.debugLineNum = 8122;BA.debugLine="private Sub SetHandlerKeyPress(Node As Node)";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 8123;BA.debugLine="setHandler(Node,\"setOnKeyPressed\",\"Node_KeyPress\"";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_sethandler" /*RemoteObject*/ ,RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), _node.getObject()),(Object)(BA.ObjectToString("setOnKeyPressed")),(Object)(RemoteObject.createImmutable("Node_KeyPress")));
 BA.debugLineNum = 8124;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _sethandlermouseclicked(RemoteObject __ref,RemoteObject _node) throws Exception{
try {
		Debug.PushSubsStack("SetHandlerMouseClicked (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,8134);
if (RapidSub.canDelegate("sethandlermouseclicked")) { return __ref.runUserSub(false, "jamtableclv","sethandlermouseclicked", __ref, _node);}
Debug.locals.put("Node", _node);
 BA.debugLineNum = 8134;BA.debugLine="private Sub SetHandlerMouseClicked(Node As Node)";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 8135;BA.debugLine="setHandler(Node,\"setOnMouseClicked\",\"Node_MouseCl";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_sethandler" /*RemoteObject*/ ,RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), _node.getObject()),(Object)(BA.ObjectToString("setOnMouseClicked")),(Object)(RemoteObject.createImmutable("Node_MouseClicked")));
 BA.debugLineNum = 8136;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _setmodoseleccionitems(RemoteObject __ref,RemoteObject _modoseleccion) throws Exception{
try {
		Debug.PushSubsStack("setModoSeleccionItems (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,641);
if (RapidSub.canDelegate("setmodoseleccionitems")) { return __ref.runUserSub(false, "jamtableclv","setmodoseleccionitems", __ref, _modoseleccion);}
Debug.locals.put("ModoSeleccion", _modoseleccion);
 BA.debugLineNum = 641;BA.debugLine="public Sub setModoSeleccionItems(ModoSeleccion As";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 642;BA.debugLine="Select ModoSeleccion";
Debug.JustUpdateDeviceLine();
switch (BA.switchObjectToInt(_modoseleccion,BA.ObjectToString("Individual Temp"),BA.ObjectToString("Individual Perm"),BA.ObjectToString("Multiple"))) {
case 0: {
 BA.debugLineNum = 644;BA.debugLine="CLVSelections.Mode = CLVSelections.MODE_SINGLE_";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvselections" /*RemoteObject*/ ).runClassMethod (b4j.docU.clvselectionsjamtableclv.class, "_setmode" /*RemoteObject*/ ,__ref.getField(false,"_clvselections" /*RemoteObject*/ ).getField(true,"_mode_single_item_temp" /*RemoteObject*/ ));
 break; }
case 1: {
 BA.debugLineNum = 646;BA.debugLine="CLVSelections.Mode = CLVSelections.MODE_SINGLE_";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvselections" /*RemoteObject*/ ).runClassMethod (b4j.docU.clvselectionsjamtableclv.class, "_setmode" /*RemoteObject*/ ,__ref.getField(false,"_clvselections" /*RemoteObject*/ ).getField(true,"_mode_single_item_permanent" /*RemoteObject*/ ));
 break; }
case 2: {
 BA.debugLineNum = 648;BA.debugLine="CLVSelections.Mode = CLVSelections.MODE_MULTIPL";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_clvselections" /*RemoteObject*/ ).runClassMethod (b4j.docU.clvselectionsjamtableclv.class, "_setmode" /*RemoteObject*/ ,__ref.getField(false,"_clvselections" /*RemoteObject*/ ).getField(true,"_mode_multiple_items" /*RemoteObject*/ ));
 break; }
}
;
 BA.debugLineNum = 650;BA.debugLine="mModoSeleccionItems=ModoSeleccion";
Debug.JustUpdateDeviceLine();
__ref.setField ("_mmodoseleccionitems" /*RemoteObject*/ ,_modoseleccion);
 BA.debugLineNum = 651;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _setmostrarmenupanelitems(RemoteObject __ref,RemoteObject _mostrarmenupanelitem) throws Exception{
try {
		Debug.PushSubsStack("setMostrarMenuPanelItems (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,674);
if (RapidSub.canDelegate("setmostrarmenupanelitems")) { return __ref.runUserSub(false, "jamtableclv","setmostrarmenupanelitems", __ref, _mostrarmenupanelitem);}
Debug.locals.put("MostrarMenuPanelItem", _mostrarmenupanelitem);
 BA.debugLineNum = 674;BA.debugLine="public Sub setMostrarMenuPanelItems(MostrarMenuPan";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 675;BA.debugLine="mMostrarMenuPanelItem=MostrarMenuPanelItem";
Debug.JustUpdateDeviceLine();
__ref.setField ("_mmostrarmenupanelitem" /*RemoteObject*/ ,_mostrarmenupanelitem);
 BA.debugLineNum = 676;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _setmousecursor(RemoteObject __ref,RemoteObject _mousecursor) throws Exception{
try {
		Debug.PushSubsStack("SetMouseCursor (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6726);
if (RapidSub.canDelegate("setmousecursor")) { return __ref.runUserSub(false, "jamtableclv","setmousecursor", __ref, _mousecursor);}
RemoteObject _pmbase = RemoteObject.declareNull("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
Debug.locals.put("MouseCursor", _mousecursor);
 BA.debugLineNum = 6726;BA.debugLine="public Sub SetMouseCursor(MouseCursor As Object)";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6728;BA.debugLine="Dim pmBase As Pane=mBase";
Debug.JustUpdateDeviceLine();
_pmbase = RemoteObject.createNew ("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
_pmbase = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper"), __ref.getField(false,"_mbase" /*RemoteObject*/ ).getObject());Debug.locals.put("pmBase", _pmbase);Debug.locals.put("pmBase", _pmbase);
 BA.debugLineNum = 6729;BA.debugLine="pmBase.MouseCursor=MouseCursor";
Debug.JustUpdateDeviceLine();
_pmbase.runMethod(false,"setMouseCursor",(_mousecursor));
 BA.debugLineNum = 6730;BA.debugLine="mParentForm.RootPane.MouseCursor=MouseCursor";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_mparentform" /*RemoteObject*/ ).runMethod(false,"getRootPane").runMethod(false,"setMouseCursor",(_mousecursor));
 BA.debugLineNum = 6731;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _setmousecursordefaulthabilitarparenttableclv(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("SetMouseCursorDefaultHabilitarParentTableCLV (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6770);
if (RapidSub.canDelegate("setmousecursordefaulthabilitarparenttableclv")) { return __ref.runUserSub(false, "jamtableclv","setmousecursordefaulthabilitarparenttableclv", __ref);}
RemoteObject _pmbase = RemoteObject.declareNull("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
RemoteObject _n = RemoteObject.declareNull("anywheresoftware.b4j.objects.NodeWrapper.ConcreteNodeWrapper");
 BA.debugLineNum = 6770;BA.debugLine="public Sub SetMouseCursorDefaultHabilitarParentTab";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6771;BA.debugLine="Dim pmBase As Pane=mBase";
Debug.JustUpdateDeviceLine();
_pmbase = RemoteObject.createNew ("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
_pmbase = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper"), __ref.getField(false,"_mbase" /*RemoteObject*/ ).getObject());Debug.locals.put("pmBase", _pmbase);Debug.locals.put("pmBase", _pmbase);
 BA.debugLineNum = 6772;BA.debugLine="pmBase.MouseCursor=fx.Cursors.DEFAULT";
Debug.JustUpdateDeviceLine();
_pmbase.runMethod(false,"setMouseCursor",__ref.getField(false,"_fx" /*RemoteObject*/ ).getField(false,"Cursors").getField(false,"DEFAULT"));
 BA.debugLineNum = 6773;BA.debugLine="mParentForm.RootPane.MouseCursor=fx.Cursors.DEFAU";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_mparentform" /*RemoteObject*/ ).runMethod(false,"getRootPane").runMethod(false,"setMouseCursor",__ref.getField(false,"_fx" /*RemoteObject*/ ).getField(false,"Cursors").getField(false,"DEFAULT"));
 BA.debugLineNum = 6774;BA.debugLine="If lstNodosHabilitados.IsInitialized=False Then l";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",__ref.getField(false,"_lstnodoshabilitados" /*RemoteObject*/ ).runMethod(true,"IsInitialized"),jamtableclv.__c.getField(true,"False"))) { 
__ref.getField(false,"_lstnodoshabilitados" /*RemoteObject*/ ).runVoidMethod ("Initialize");};
 BA.debugLineNum = 6776;BA.debugLine="For Each n As Node In lstNodosHabilitados";
Debug.JustUpdateDeviceLine();
_n = RemoteObject.createNew ("anywheresoftware.b4j.objects.NodeWrapper.ConcreteNodeWrapper");
{
final RemoteObject group5 = __ref.getField(false,"_lstnodoshabilitados" /*RemoteObject*/ );
final int groupLen5 = group5.runMethod(true,"getSize").<Integer>get()
;int index5 = 0;
;
for (; index5 < groupLen5;index5++){
_n = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.NodeWrapper.ConcreteNodeWrapper"), group5.runMethod(false,"Get",index5));Debug.locals.put("n", _n);
Debug.locals.put("n", _n);
 BA.debugLineNum = 6777;BA.debugLine="n.Enabled=True";
Debug.JustUpdateDeviceLine();
_n.runMethod(true,"setEnabled",jamtableclv.__c.getField(true,"True"));
 }
}Debug.locals.put("n", _n);
;
 BA.debugLineNum = 6779;BA.debugLine="lstNodosHabilitados.Initialize";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstnodoshabilitados" /*RemoteObject*/ ).runVoidMethod ("Initialize");
 BA.debugLineNum = 6780;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _setmousecursordefaulthabilitartableclv(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("SetMouseCursorDefaultHabilitarTableCLV (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6745);
if (RapidSub.canDelegate("setmousecursordefaulthabilitartableclv")) { return __ref.runUserSub(false, "jamtableclv","setmousecursordefaulthabilitartableclv", __ref);}
RemoteObject _pmbase = RemoteObject.declareNull("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
RemoteObject _n = RemoteObject.declareNull("anywheresoftware.b4j.objects.NodeWrapper.ConcreteNodeWrapper");
 BA.debugLineNum = 6745;BA.debugLine="public Sub SetMouseCursorDefaultHabilitarTableCLV";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6746;BA.debugLine="Dim pmBase As Pane=mBase";
Debug.JustUpdateDeviceLine();
_pmbase = RemoteObject.createNew ("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
_pmbase = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper"), __ref.getField(false,"_mbase" /*RemoteObject*/ ).getObject());Debug.locals.put("pmBase", _pmbase);Debug.locals.put("pmBase", _pmbase);
 BA.debugLineNum = 6747;BA.debugLine="pmBase.MouseCursor=fx.Cursors.DEFAULT";
Debug.JustUpdateDeviceLine();
_pmbase.runMethod(false,"setMouseCursor",__ref.getField(false,"_fx" /*RemoteObject*/ ).getField(false,"Cursors").getField(false,"DEFAULT"));
 BA.debugLineNum = 6748;BA.debugLine="mParentForm.RootPane.MouseCursor=fx.Cursors.DEFAU";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_mparentform" /*RemoteObject*/ ).runMethod(false,"getRootPane").runMethod(false,"setMouseCursor",__ref.getField(false,"_fx" /*RemoteObject*/ ).getField(false,"Cursors").getField(false,"DEFAULT"));
 BA.debugLineNum = 6749;BA.debugLine="If lstNodosHabilitados.IsInitialized=False Then l";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",__ref.getField(false,"_lstnodoshabilitados" /*RemoteObject*/ ).runMethod(true,"IsInitialized"),jamtableclv.__c.getField(true,"False"))) { 
__ref.getField(false,"_lstnodoshabilitados" /*RemoteObject*/ ).runVoidMethod ("Initialize");};
 BA.debugLineNum = 6751;BA.debugLine="For Each n As Node In lstNodosHabilitados";
Debug.JustUpdateDeviceLine();
_n = RemoteObject.createNew ("anywheresoftware.b4j.objects.NodeWrapper.ConcreteNodeWrapper");
{
final RemoteObject group5 = __ref.getField(false,"_lstnodoshabilitados" /*RemoteObject*/ );
final int groupLen5 = group5.runMethod(true,"getSize").<Integer>get()
;int index5 = 0;
;
for (; index5 < groupLen5;index5++){
_n = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.NodeWrapper.ConcreteNodeWrapper"), group5.runMethod(false,"Get",index5));Debug.locals.put("n", _n);
Debug.locals.put("n", _n);
 BA.debugLineNum = 6752;BA.debugLine="n.Enabled=True";
Debug.JustUpdateDeviceLine();
_n.runMethod(true,"setEnabled",jamtableclv.__c.getField(true,"True"));
 }
}Debug.locals.put("n", _n);
;
 BA.debugLineNum = 6754;BA.debugLine="lstNodosHabilitados.Initialize";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstnodoshabilitados" /*RemoteObject*/ ).runVoidMethod ("Initialize");
 BA.debugLineNum = 6755;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _setmousecursorwaitdeshabilitarparenttableclv(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("SetMouseCursorWaitDeshabilitarParentTableCLV (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6758);
if (RapidSub.canDelegate("setmousecursorwaitdeshabilitarparenttableclv")) { return __ref.runUserSub(false, "jamtableclv","setmousecursorwaitdeshabilitarparenttableclv", __ref);}
RemoteObject _pmbase = RemoteObject.declareNull("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
RemoteObject _n = RemoteObject.declareNull("anywheresoftware.b4j.objects.NodeWrapper.ConcreteNodeWrapper");
 BA.debugLineNum = 6758;BA.debugLine="public Sub SetMouseCursorWaitDeshabilitarParentTab";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6759;BA.debugLine="Dim pmBase As Pane=mBase";
Debug.JustUpdateDeviceLine();
_pmbase = RemoteObject.createNew ("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
_pmbase = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper"), __ref.getField(false,"_mbase" /*RemoteObject*/ ).getObject());Debug.locals.put("pmBase", _pmbase);Debug.locals.put("pmBase", _pmbase);
 BA.debugLineNum = 6760;BA.debugLine="pmBase.MouseCursor=fx.Cursors.WAIT";
Debug.JustUpdateDeviceLine();
_pmbase.runMethod(false,"setMouseCursor",__ref.getField(false,"_fx" /*RemoteObject*/ ).getField(false,"Cursors").getField(false,"WAIT"));
 BA.debugLineNum = 6761;BA.debugLine="mParentForm.RootPane.MouseCursor=fx.Cursors.WAIT";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_mparentform" /*RemoteObject*/ ).runMethod(false,"getRootPane").runMethod(false,"setMouseCursor",__ref.getField(false,"_fx" /*RemoteObject*/ ).getField(false,"Cursors").getField(false,"WAIT"));
 BA.debugLineNum = 6762;BA.debugLine="If lstNodosHabilitados.IsInitialized=False Then l";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",__ref.getField(false,"_lstnodoshabilitados" /*RemoteObject*/ ).runMethod(true,"IsInitialized"),jamtableclv.__c.getField(true,"False"))) { 
__ref.getField(false,"_lstnodoshabilitados" /*RemoteObject*/ ).runVoidMethod ("Initialize");};
 BA.debugLineNum = 6764;BA.debugLine="For Each n As Node In mParentForm.RootPane";
Debug.JustUpdateDeviceLine();
_n = RemoteObject.createNew ("anywheresoftware.b4j.objects.NodeWrapper.ConcreteNodeWrapper");
{
final RemoteObject group5 = __ref.getField(false,"_mparentform" /*RemoteObject*/ ).runMethod(false,"getRootPane");
final int groupLen5 = group5.runMethod(true,"getSize").<Integer>get()
;int index5 = 0;
;
for (; index5 < groupLen5;index5++){
_n = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.NodeWrapper.ConcreteNodeWrapper"), group5.runMethod(false,"Get",index5));Debug.locals.put("n", _n);
Debug.locals.put("n", _n);
 BA.debugLineNum = 6765;BA.debugLine="If n.Enabled Then lstNodosHabilitados.Add(n)";
Debug.JustUpdateDeviceLine();
if (_n.runMethod(true,"getEnabled").<Boolean>get().booleanValue()) { 
__ref.getField(false,"_lstnodoshabilitados" /*RemoteObject*/ ).runVoidMethod ("Add",(Object)((_n.getObject())));};
 BA.debugLineNum = 6766;BA.debugLine="n.Enabled=False";
Debug.JustUpdateDeviceLine();
_n.runMethod(true,"setEnabled",jamtableclv.__c.getField(true,"False"));
 }
}Debug.locals.put("n", _n);
;
 BA.debugLineNum = 6768;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _setmousecursorwaitdeshabilitartableclv(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("SetMouseCursorWaitDeshabilitarTableCLV (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,6733);
if (RapidSub.canDelegate("setmousecursorwaitdeshabilitartableclv")) { return __ref.runUserSub(false, "jamtableclv","setmousecursorwaitdeshabilitartableclv", __ref);}
RemoteObject _pmbase = RemoteObject.declareNull("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
RemoteObject _n = RemoteObject.declareNull("anywheresoftware.b4j.objects.NodeWrapper.ConcreteNodeWrapper");
 BA.debugLineNum = 6733;BA.debugLine="public Sub SetMouseCursorWaitDeshabilitarTableCLV";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 6734;BA.debugLine="Dim pmBase As Pane=mBase";
Debug.JustUpdateDeviceLine();
_pmbase = RemoteObject.createNew ("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
_pmbase = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper"), __ref.getField(false,"_mbase" /*RemoteObject*/ ).getObject());Debug.locals.put("pmBase", _pmbase);Debug.locals.put("pmBase", _pmbase);
 BA.debugLineNum = 6735;BA.debugLine="pmBase.MouseCursor=fx.Cursors.WAIT";
Debug.JustUpdateDeviceLine();
_pmbase.runMethod(false,"setMouseCursor",__ref.getField(false,"_fx" /*RemoteObject*/ ).getField(false,"Cursors").getField(false,"WAIT"));
 BA.debugLineNum = 6736;BA.debugLine="mParentForm.RootPane.MouseCursor=fx.Cursors.WAIT";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_mparentform" /*RemoteObject*/ ).runMethod(false,"getRootPane").runMethod(false,"setMouseCursor",__ref.getField(false,"_fx" /*RemoteObject*/ ).getField(false,"Cursors").getField(false,"WAIT"));
 BA.debugLineNum = 6737;BA.debugLine="If lstNodosHabilitados.IsInitialized=False Then l";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",__ref.getField(false,"_lstnodoshabilitados" /*RemoteObject*/ ).runMethod(true,"IsInitialized"),jamtableclv.__c.getField(true,"False"))) { 
__ref.getField(false,"_lstnodoshabilitados" /*RemoteObject*/ ).runVoidMethod ("Initialize");};
 BA.debugLineNum = 6739;BA.debugLine="For Each n As Node In pnlMainJamTableCLV";
Debug.JustUpdateDeviceLine();
_n = RemoteObject.createNew ("anywheresoftware.b4j.objects.NodeWrapper.ConcreteNodeWrapper");
{
final RemoteObject group5 = __ref.getField(false,"_pnlmainjamtableclv" /*RemoteObject*/ );
final int groupLen5 = group5.runMethod(true,"getSize").<Integer>get()
;int index5 = 0;
;
for (; index5 < groupLen5;index5++){
_n = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.NodeWrapper.ConcreteNodeWrapper"), group5.runMethod(false,"Get",index5));Debug.locals.put("n", _n);
Debug.locals.put("n", _n);
 BA.debugLineNum = 6740;BA.debugLine="If n.Enabled Then lstNodosHabilitados.Add(n)";
Debug.JustUpdateDeviceLine();
if (_n.runMethod(true,"getEnabled").<Boolean>get().booleanValue()) { 
__ref.getField(false,"_lstnodoshabilitados" /*RemoteObject*/ ).runVoidMethod ("Add",(Object)((_n.getObject())));};
 BA.debugLineNum = 6741;BA.debugLine="n.Enabled=False";
Debug.JustUpdateDeviceLine();
_n.runMethod(true,"setEnabled",jamtableclv.__c.getField(true,"False"));
 }
}Debug.locals.put("n", _n);
;
 BA.debugLineNum = 6743;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _setorigendatos(RemoteObject __ref,RemoteObject _nombreficherojson) throws Exception{
try {
		Debug.PushSubsStack("SetOrigenDatos (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,5150);
if (RapidSub.canDelegate("setorigendatos")) { return __ref.runUserSub(false, "jamtableclv","setorigendatos", __ref, _nombreficherojson);}
RemoteObject _mresult = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
RemoteObject _ficherojson = RemoteObject.createImmutable("");
RemoteObject _p = RemoteObject.declareNull("anywheresoftware.b4j.objects.collections.JSONParser");
RemoteObject _m = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
RemoteObject _scolortextopanelinfo = RemoteObject.createImmutable("");
RemoteObject _scolorfondopanelinfo = RemoteObject.createImmutable("");
RemoteObject _scolorfondopanelitemsimpares = RemoteObject.createImmutable("");
RemoteObject _scolorfondopanelitemspares = RemoteObject.createImmutable("");
RemoteObject _scolorbordeitems = RemoteObject.createImmutable("");
RemoteObject _lstdatoscamposorigendatos = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.List");
RemoteObject _lstdatajson = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.List");
RemoteObject _idxmapsitemslstdatoscamposorigendatos = RemoteObject.createImmutable(0);
RemoteObject _sberroreskeysmapsitems = RemoteObject.declareNull("anywheresoftware.b4a.keywords.StringBuilderWrapper");
RemoteObject _smember = RemoteObject.createImmutable("");
RemoteObject _c = RemoteObject.declareNull("b4j.docU.jamtableclv._campoorigendatosjamtableclv");
int _lstidx = 0;
RemoteObject _lstaliascampos = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.List");
RemoteObject _lstcampos = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.List");
RemoteObject _sbcampostblorigendatos = RemoteObject.declareNull("anywheresoftware.b4a.keywords.StringBuilderWrapper");
RemoteObject _pkf = RemoteObject.declareNull("b4j.docU.jamtableclv._campoprimarykeyjamtableclv");
RemoteObject _formulacampocalculado = RemoteObject.createImmutable("");
RemoteObject _lstnombrescamposincluidosenformula = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.List");
RemoteObject _pattern = RemoteObject.createImmutable("");
RemoteObject _matcher1 = RemoteObject.declareNull("anywheresoftware.b4a.keywords.Regex.MatcherWrapper");
int _idxcamposformula = 0;
RemoteObject _aliascampobuscado = RemoteObject.createImmutable("");
RemoteObject _flagc = RemoteObject.createImmutable(false);
int _idxnf = 0;
RemoteObject _cformula = RemoteObject.declareNull("b4j.docU.jamtableclv._campoorigendatosjamtableclv");
Debug.locals.put("NombreFicheroJSON", _nombreficherojson);
 BA.debugLineNum = 5150;BA.debugLine="private Sub SetOrigenDatos(NombreFicheroJSON As St";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 5154;BA.debugLine="ReiniciarFiltros";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_reiniciarfiltros" /*RemoteObject*/ );
 BA.debugLineNum = 5156;BA.debugLine="If mSQL.IsInitialized Then mSQL.Close";
Debug.JustUpdateDeviceLine();
if (__ref.getField(false,"_msql" /*RemoteObject*/ ).runMethod(true,"IsInitialized").<Boolean>get().booleanValue()) { 
__ref.getField(false,"_msql" /*RemoteObject*/ ).runVoidMethod ("Close");};
 BA.debugLineNum = 5158;BA.debugLine="mLstCamposOrigenDatos.Initialize";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_mlstcamposorigendatos" /*RemoteObject*/ ).runVoidMethod ("Initialize");
 BA.debugLineNum = 5159;BA.debugLine="mLstCamposOrigenDatosConfiguracionOriginal.Initia";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_mlstcamposorigendatosconfiguracionoriginal" /*RemoteObject*/ ).runVoidMethod ("Initialize");
 BA.debugLineNum = 5160;BA.debugLine="mlstCamposOrigenDatosNoCalculados.Initialize";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_mlstcamposorigendatosnocalculados" /*RemoteObject*/ ).runVoidMethod ("Initialize");
 BA.debugLineNum = 5161;BA.debugLine="mlstCamposPrimaryKey.Initialize";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_mlstcamposprimarykey" /*RemoteObject*/ ).runVoidMethod ("Initialize");
 BA.debugLineNum = 5164;BA.debugLine="mlstIndicesItemsVisibles.Initialize";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_mlstindicesitemsvisibles" /*RemoteObject*/ ).runVoidMethod ("Initialize");
 BA.debugLineNum = 5166;BA.debugLine="mlstAliasCamposFiltrables.Initialize";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_mlstaliascamposfiltrables" /*RemoteObject*/ ).runVoidMethod ("Initialize");
 BA.debugLineNum = 5168;BA.debugLine="lstOperadoresFiltros.Initialize";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstoperadoresfiltros" /*RemoteObject*/ ).runVoidMethod ("Initialize");
 BA.debugLineNum = 5169;BA.debugLine="lstCamposFiltros.Initialize";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstcamposfiltros" /*RemoteObject*/ ).runVoidMethod ("Initialize");
 BA.debugLineNum = 5170;BA.debugLine="lstComparadoresFiltros.Initialize";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstcomparadoresfiltros" /*RemoteObject*/ ).runVoidMethod ("Initialize");
 BA.debugLineNum = 5171;BA.debugLine="lstValoresFiltros.Initialize";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstvaloresfiltros" /*RemoteObject*/ ).runVoidMethod ("Initialize");
 BA.debugLineNum = 5172;BA.debugLine="lstOrdenSQL.Initialize";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lstordensql" /*RemoteObject*/ ).runVoidMethod ("Initialize");
 BA.debugLineNum = 5174;BA.debugLine="NombreJSONOrigenDatos=NombreFicheroJSON";
Debug.JustUpdateDeviceLine();
__ref.setField ("_nombrejsonorigendatos" /*RemoteObject*/ ,_nombreficherojson);
 BA.debugLineNum = 5175;BA.debugLine="NombreJSONOrigenDatosUsuario=NombreFicheroJSON.Re";
Debug.JustUpdateDeviceLine();
__ref.setField ("_nombrejsonorigendatosusuario" /*RemoteObject*/ ,RemoteObject.concat(_nombreficherojson.runMethod(true,"replace",(Object)(BA.ObjectToString(".json")),(Object)(RemoteObject.createImmutable(""))),RemoteObject.createImmutable("_"),__ref.getField(true,"_mnombreusuariowindows" /*RemoteObject*/ ),RemoteObject.createImmutable(".json")));
 BA.debugLineNum = 5177;BA.debugLine="Dim mResult As Map";
Debug.JustUpdateDeviceLine();
_mresult = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");Debug.locals.put("mResult", _mresult);
 BA.debugLineNum = 5178;BA.debugLine="mResult.Initialize";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Initialize");
 BA.debugLineNum = 5179;BA.debugLine="mResult.Put(\"FlagOK\",True)";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("FlagOK"))),(Object)((jamtableclv.__c.getField(true,"True"))));
 BA.debugLineNum = 5180;BA.debugLine="mResult.Put(\"msgError\",\"\")";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("msgError"))),(Object)((RemoteObject.createImmutable(""))));
 BA.debugLineNum = 5181;BA.debugLine="mResult.Put(\"mlstTableColumns\",Null)";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("mlstTableColumns"))),(Object)(jamtableclv.__c.getField(false,"Null")));
 BA.debugLineNum = 5183;BA.debugLine="Try";
Debug.JustUpdateDeviceLine();
try { BA.debugLineNum = 5184;BA.debugLine="Dim FicheroJSON As String=File.ReadString(File.D";
Debug.JustUpdateDeviceLine();
_ficherojson = jamtableclv.__c.getField(false,"File").runMethod(true,"ReadString",(Object)(jamtableclv.__c.getField(false,"File").runMethod(true,"getDirAssets")),(Object)(_nombreficherojson));Debug.locals.put("FicheroJSON", _ficherojson);Debug.locals.put("FicheroJSON", _ficherojson);
 Debug.CheckDeviceExceptions();
} 
       catch (Exception e24) {
			BA.rdebugUtils.runVoidMethod("setLastException",__ref.getField(false, "ba"), e24.toString()); BA.debugLineNum = 5186;BA.debugLine="mResult.Put(\"FlagOK\",False)";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("FlagOK"))),(Object)((jamtableclv.__c.getField(true,"False"))));
 BA.debugLineNum = 5187;BA.debugLine="mResult.Put(\"msgError\",\"Fichero no encontrado \"";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("msgError"))),(Object)((RemoteObject.concat(RemoteObject.createImmutable("Fichero no encontrado "),_nombreficherojson))));
 BA.debugLineNum = 5189;BA.debugLine="Return mResult";
Debug.JustUpdateDeviceLine();
if (true) return _mresult;
 };
 BA.debugLineNum = 5192;BA.debugLine="Dim p As JSONParser";
Debug.JustUpdateDeviceLine();
_p = RemoteObject.createNew ("anywheresoftware.b4j.objects.collections.JSONParser");Debug.locals.put("p", _p);
 BA.debugLineNum = 5193;BA.debugLine="p.Initialize(FicheroJSON)";
Debug.JustUpdateDeviceLine();
_p.runVoidMethod ("Initialize",(Object)(_ficherojson));
 BA.debugLineNum = 5194;BA.debugLine="Dim m As Map = p.NextObject";
Debug.JustUpdateDeviceLine();
_m = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");
_m = _p.runMethod(false,"NextObject");Debug.locals.put("m", _m);Debug.locals.put("m", _m);
 BA.debugLineNum = 5197;BA.debugLine="FechaUltimaModificacionJSON=m.Getdefault(\"FechaUl";
Debug.JustUpdateDeviceLine();
__ref.setField ("_fechaultimamodificacionjson" /*RemoteObject*/ ,BA.numberCast(long.class, _m.runMethod(false,"GetDefault",(Object)(RemoteObject.createImmutable(("FechaUltimaModificacion"))),(Object)(RemoteObject.createImmutable((0))))));
 BA.debugLineNum = 5198;BA.debugLine="Dim sColorTextoPanelInfo As String=m.Getdefault(\"";
Debug.JustUpdateDeviceLine();
_scolortextopanelinfo = BA.ObjectToString(_m.runMethod(false,"GetDefault",(Object)(RemoteObject.createImmutable(("ColorTextoPanelInfo"))),(Object)((RemoteObject.createImmutable("")))));Debug.locals.put("sColorTextoPanelInfo", _scolortextopanelinfo);Debug.locals.put("sColorTextoPanelInfo", _scolortextopanelinfo);
 BA.debugLineNum = 5199;BA.debugLine="If sColorTextoPanelInfo=\"\" Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_scolortextopanelinfo,BA.ObjectToString(""))) { 
 BA.debugLineNum = 5200;BA.debugLine="lblInfoJamTableCLV.TextColor=0xFF000000";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lblinfojamtableclv" /*RemoteObject*/ ).runMethod(true,"setTextColor",BA.numberCast(int.class, ((int)0xff000000)));
 }else {
 BA.debugLineNum = 5203;BA.debugLine="lblInfoJamTableCLV.TextColor=HexToColor(sColorTe";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lblinfojamtableclv" /*RemoteObject*/ ).runMethod(true,"setTextColor",__ref.runClassMethod (b4j.docU.jamtableclv.class, "_hextocolor" /*RemoteObject*/ ,(Object)(_scolortextopanelinfo)));
 };
 BA.debugLineNum = 5205;BA.debugLine="ColorTextoPanelInfoInicial=lblInfoJamTableCLV.Tex";
Debug.JustUpdateDeviceLine();
__ref.setField ("_colortextopanelinfoinicial" /*RemoteObject*/ ,__ref.getField(false,"_lblinfojamtableclv" /*RemoteObject*/ ).runMethod(true,"getTextColor"));
 BA.debugLineNum = 5207;BA.debugLine="Dim sColorFondoPanelInfo As String=m.Getdefault(\"";
Debug.JustUpdateDeviceLine();
_scolorfondopanelinfo = BA.ObjectToString(_m.runMethod(false,"GetDefault",(Object)(RemoteObject.createImmutable(("ColorFondoPanelInfo"))),(Object)((RemoteObject.createImmutable("")))));Debug.locals.put("sColorFondoPanelInfo", _scolorfondopanelinfo);Debug.locals.put("sColorFondoPanelInfo", _scolorfondopanelinfo);
 BA.debugLineNum = 5208;BA.debugLine="If sColorFondoPanelInfo=\"\" Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_scolorfondopanelinfo,BA.ObjectToString(""))) { 
 BA.debugLineNum = 5210;BA.debugLine="CSSUtils.SetBackgroundColor(pnlInfoJamTableCLV,f";
Debug.JustUpdateDeviceLine();
jamtableclv._cssutils.runVoidMethod ("_setbackgroundcolor",RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.NodeWrapper.ConcreteNodeWrapper"), __ref.getField(false,"_pnlinfojamtableclv" /*RemoteObject*/ ).getObject()),RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.JFX.PaintWrapper"), __ref.getField(false,"_fx" /*RemoteObject*/ ).getField(false,"Colors").runMethod(false,"From32Bit",(Object)(BA.numberCast(int.class, ((int)0xfffff8c3))))));
 BA.debugLineNum = 5211;BA.debugLine="ColorFondoPanelInfoInicial=0xFFFFF8C3";
Debug.JustUpdateDeviceLine();
__ref.setField ("_colorfondopanelinfoinicial" /*RemoteObject*/ ,BA.numberCast(int.class, ((int)0xfffff8c3)));
 }else {
 BA.debugLineNum = 5215;BA.debugLine="pnlInfoJamTableCLV.Style=\"-fx-background-color:\"";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_pnlinfojamtableclv" /*RemoteObject*/ ).runMethod(true,"setStyle",RemoteObject.concat(RemoteObject.createImmutable("-fx-background-color:"),_scolorfondopanelinfo,RemoteObject.createImmutable(";")));
 BA.debugLineNum = 5216;BA.debugLine="ColorFondoPanelInfoInicial=HexToColor(sColorFond";
Debug.JustUpdateDeviceLine();
__ref.setField ("_colorfondopanelinfoinicial" /*RemoteObject*/ ,__ref.runClassMethod (b4j.docU.jamtableclv.class, "_hextocolor" /*RemoteObject*/ ,(Object)(_scolorfondopanelinfo)));
 };
 BA.debugLineNum = 5219;BA.debugLine="Dim sColorFondoPanelItemsImpares As String=m.Getd";
Debug.JustUpdateDeviceLine();
_scolorfondopanelitemsimpares = BA.ObjectToString(_m.runMethod(false,"GetDefault",(Object)(RemoteObject.createImmutable(("ColorFondoPanelItemsImpares"))),(Object)((RemoteObject.createImmutable("")))));Debug.locals.put("sColorFondoPanelItemsImpares", _scolorfondopanelitemsimpares);Debug.locals.put("sColorFondoPanelItemsImpares", _scolorfondopanelitemsimpares);
 BA.debugLineNum = 5220;BA.debugLine="If sColorFondoPanelItemsImpares=\"\" Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_scolorfondopanelitemsimpares,BA.ObjectToString(""))) { 
 BA.debugLineNum = 5221;BA.debugLine="ColorFondoPanelItemsImpares=xui.Color_White";
Debug.JustUpdateDeviceLine();
__ref.setField ("_colorfondopanelitemsimpares" /*RemoteObject*/ ,__ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"Color_White"));
 }else {
 BA.debugLineNum = 5223;BA.debugLine="ColorFondoPanelItemsImpares=HexToColor(sColorFon";
Debug.JustUpdateDeviceLine();
__ref.setField ("_colorfondopanelitemsimpares" /*RemoteObject*/ ,__ref.runClassMethod (b4j.docU.jamtableclv.class, "_hextocolor" /*RemoteObject*/ ,(Object)(_scolorfondopanelitemsimpares)));
 };
 BA.debugLineNum = 5226;BA.debugLine="Dim sColorFondoPanelItemsPares As String=m.Getdef";
Debug.JustUpdateDeviceLine();
_scolorfondopanelitemspares = BA.ObjectToString(_m.runMethod(false,"GetDefault",(Object)(RemoteObject.createImmutable(("ColorFondoPanelItemsPares"))),(Object)((RemoteObject.createImmutable("")))));Debug.locals.put("sColorFondoPanelItemsPares", _scolorfondopanelitemspares);Debug.locals.put("sColorFondoPanelItemsPares", _scolorfondopanelitemspares);
 BA.debugLineNum = 5227;BA.debugLine="If sColorFondoPanelItemsPares=\"\" Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_scolorfondopanelitemspares,BA.ObjectToString(""))) { 
 BA.debugLineNum = 5228;BA.debugLine="ColorFondoPanelItemsPares=0xFFF1F1F1";
Debug.JustUpdateDeviceLine();
__ref.setField ("_colorfondopanelitemspares" /*RemoteObject*/ ,BA.numberCast(int.class, ((int)0xfff1f1f1)));
 }else {
 BA.debugLineNum = 5230;BA.debugLine="ColorFondoPanelItemsPares=HexToColor(sColorFondo";
Debug.JustUpdateDeviceLine();
__ref.setField ("_colorfondopanelitemspares" /*RemoteObject*/ ,__ref.runClassMethod (b4j.docU.jamtableclv.class, "_hextocolor" /*RemoteObject*/ ,(Object)(_scolorfondopanelitemspares)));
 };
 BA.debugLineNum = 5233;BA.debugLine="ArrayColoresItems(0)=ColorFondoPanelItemsImpares";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_arraycoloresitems" /*RemoteObject*/ ).setArrayElement (__ref.getField(true,"_colorfondopanelitemsimpares" /*RemoteObject*/ ),BA.numberCast(int.class, 0));
 BA.debugLineNum = 5234;BA.debugLine="ArrayColoresItems(1)=ColorFondoPanelItemsPares";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_arraycoloresitems" /*RemoteObject*/ ).setArrayElement (__ref.getField(true,"_colorfondopanelitemspares" /*RemoteObject*/ ),BA.numberCast(int.class, 1));
 BA.debugLineNum = 5236;BA.debugLine="Dim sColorBordeItems As String=m.Getdefault(\"Colo";
Debug.JustUpdateDeviceLine();
_scolorbordeitems = BA.ObjectToString(_m.runMethod(false,"GetDefault",(Object)(RemoteObject.createImmutable(("ColorBordeItems"))),(Object)((RemoteObject.createImmutable("")))));Debug.locals.put("sColorBordeItems", _scolorbordeitems);Debug.locals.put("sColorBordeItems", _scolorbordeitems);
 BA.debugLineNum = 5237;BA.debugLine="If sColorBordeItems=\"\" Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_scolorbordeitems,BA.ObjectToString(""))) { 
 BA.debugLineNum = 5238;BA.debugLine="ColorBordeItems=0xFF808080";
Debug.JustUpdateDeviceLine();
__ref.setField ("_colorbordeitems" /*RemoteObject*/ ,BA.numberCast(int.class, ((int)0xff808080)));
 }else {
 BA.debugLineNum = 5240;BA.debugLine="ColorBordeItems=HexToColor(sColorBordeItems)";
Debug.JustUpdateDeviceLine();
__ref.setField ("_colorbordeitems" /*RemoteObject*/ ,__ref.runClassMethod (b4j.docU.jamtableclv.class, "_hextocolor" /*RemoteObject*/ ,(Object)(_scolorbordeitems)));
 };
 BA.debugLineNum = 5243;BA.debugLine="AnchoBordeItems=m.Getdefault(\"AnchoBordeItems\",1)";
Debug.JustUpdateDeviceLine();
__ref.setField ("_anchobordeitems" /*RemoteObject*/ ,BA.numberCast(int.class, _m.runMethod(false,"GetDefault",(Object)(RemoteObject.createImmutable(("AnchoBordeItems"))),(Object)(RemoteObject.createImmutable((1))))));
 BA.debugLineNum = 5247;BA.debugLine="Dim lstDatosCamposOrigenDatos As List = m.Get(\"It";
Debug.JustUpdateDeviceLine();
_lstdatoscamposorigendatos = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");
_lstdatoscamposorigendatos = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.collections.List"), _m.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("Items")))));Debug.locals.put("lstDatosCamposOrigenDatos", _lstdatoscamposorigendatos);Debug.locals.put("lstDatosCamposOrigenDatos", _lstdatoscamposorigendatos);
 BA.debugLineNum = 5248;BA.debugLine="If lstDatosCamposOrigenDatos.Size= 0 Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_lstdatoscamposorigendatos.runMethod(true,"getSize"),BA.numberCast(double.class, 0))) { 
 BA.debugLineNum = 5249;BA.debugLine="mResult.Put(\"FlagOK\",False)";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("FlagOK"))),(Object)((jamtableclv.__c.getField(true,"False"))));
 BA.debugLineNum = 5250;BA.debugLine="mResult.Put(\"msgError\",\"No hay datos de campos e";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("msgError"))),(Object)((RemoteObject.concat(RemoteObject.createImmutable("No hay datos de campos en el fichero "),_nombreficherojson))));
 BA.debugLineNum = 5252;BA.debugLine="Return mResult";
Debug.JustUpdateDeviceLine();
if (true) return _mresult;
 };
 BA.debugLineNum = 5257;BA.debugLine="Dim lstDataJSON As List";
Debug.JustUpdateDeviceLine();
_lstdatajson = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");Debug.locals.put("lstDataJSON", _lstdatajson);
 BA.debugLineNum = 5258;BA.debugLine="lstDataJSON.Initialize";
Debug.JustUpdateDeviceLine();
_lstdatajson.runVoidMethod ("Initialize");
 BA.debugLineNum = 5259;BA.debugLine="Dim iDxMapsItemslstDatosCamposOrigenDatos As Int";
Debug.JustUpdateDeviceLine();
_idxmapsitemslstdatoscamposorigendatos = RemoteObject.createImmutable(0);Debug.locals.put("iDxMapsItemslstDatosCamposOrigenDatos", _idxmapsitemslstdatoscamposorigendatos);
 BA.debugLineNum = 5260;BA.debugLine="Dim sbErroresKeysMapsItems As StringBuilder";
Debug.JustUpdateDeviceLine();
_sberroreskeysmapsitems = RemoteObject.createNew ("anywheresoftware.b4a.keywords.StringBuilderWrapper");Debug.locals.put("sbErroresKeysMapsItems", _sberroreskeysmapsitems);
 BA.debugLineNum = 5261;BA.debugLine="sbErroresKeysMapsItems.Initialize";
Debug.JustUpdateDeviceLine();
_sberroreskeysmapsitems.runVoidMethod ("Initialize");
 BA.debugLineNum = 5263;BA.debugLine="For Each m As Map In lstDatosCamposOrigenDatos";
Debug.JustUpdateDeviceLine();
_m = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");
{
final RemoteObject group79 = _lstdatoscamposorigendatos;
final int groupLen79 = group79.runMethod(true,"getSize").<Integer>get()
;int index79 = 0;
;
for (; index79 < groupLen79;index79++){
_m = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.collections.Map"), group79.runMethod(false,"Get",index79));Debug.locals.put("m", _m);
Debug.locals.put("m", _m);
 BA.debugLineNum = 5264;BA.debugLine="For Each sMember As String In lstMembersCampoOri";
Debug.JustUpdateDeviceLine();
{
final RemoteObject group80 = __ref.getField(false,"_lstmemberscampoorigendatosjamtableclv" /*RemoteObject*/ );
final int groupLen80 = group80.runMethod(true,"getSize").<Integer>get()
;int index80 = 0;
;
for (; index80 < groupLen80;index80++){
_smember = BA.ObjectToString(group80.runMethod(false,"Get",index80));Debug.locals.put("sMember", _smember);
Debug.locals.put("sMember", _smember);
 BA.debugLineNum = 5265;BA.debugLine="If Not(m.ContainsKey(sMember)) Then";
Debug.JustUpdateDeviceLine();
if (jamtableclv.__c.runMethod(true,"Not",(Object)(_m.runMethod(true,"ContainsKey",(Object)((_smember))))).<Boolean>get().booleanValue()) { 
 BA.debugLineNum = 5266;BA.debugLine="sbErroresKeysMapsItems.Append(\"Item #\" & iDxMa";
Debug.JustUpdateDeviceLine();
_sberroreskeysmapsitems.runMethod(false,"Append",(Object)(RemoteObject.concat(RemoteObject.createImmutable("Item #"),_idxmapsitemslstdatoscamposorigendatos,RemoteObject.createImmutable(" no existe key "),_smember))).runVoidMethod ("Append",(Object)(jamtableclv.__c.getField(true,"CRLF")));
 };
 }
}Debug.locals.put("sMember", _smember);
;
 BA.debugLineNum = 5269;BA.debugLine="If sbErroresKeysMapsItems.Length>0 Then Exit";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean(">",_sberroreskeysmapsitems.runMethod(true,"getLength"),BA.numberCast(double.class, 0))) { 
if (true) break;};
 BA.debugLineNum = 5270;BA.debugLine="iDxMapsItemslstDatosCamposOrigenDatos=iDxMapsIte";
Debug.JustUpdateDeviceLine();
_idxmapsitemslstdatoscamposorigendatos = RemoteObject.solve(new RemoteObject[] {_idxmapsitemslstdatoscamposorigendatos,RemoteObject.createImmutable(1)}, "+",1, 1);Debug.locals.put("iDxMapsItemslstDatosCamposOrigenDatos", _idxmapsitemslstdatoscamposorigendatos);
 }
}Debug.locals.put("m", _m);
;
 BA.debugLineNum = 5272;BA.debugLine="If sbErroresKeysMapsItems.Length>0 Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean(">",_sberroreskeysmapsitems.runMethod(true,"getLength"),BA.numberCast(double.class, 0))) { 
 BA.debugLineNum = 5273;BA.debugLine="sbErroresKeysMapsItems.Insert(0,\"Existen errores";
Debug.JustUpdateDeviceLine();
_sberroreskeysmapsitems.runVoidMethod ("Insert",(Object)(BA.numberCast(int.class, 0)),(Object)(RemoteObject.concat(RemoteObject.createImmutable("Existen errores de clave de mapas de definicion JSON."),jamtableclv.__c.getField(true,"CRLF"),RemoteObject.createImmutable("Fichero JSON: "),_nombreficherojson,jamtableclv.__c.getField(true,"CRLF"),RemoteObject.createImmutable("El formato no es correcto (¿versión obsoleta?)."),jamtableclv.__c.getField(true,"CRLF"),jamtableclv.__c.getField(true,"CRLF"))));
 BA.debugLineNum = 5274;BA.debugLine="mResult.Put(\"FlagOK\",False)";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("FlagOK"))),(Object)((jamtableclv.__c.getField(true,"False"))));
 BA.debugLineNum = 5275;BA.debugLine="mResult.Put(\"msgError\",sbErroresKeysMapsItems.To";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("msgError"))),(Object)((_sberroreskeysmapsitems.runMethod(true,"ToString"))));
 BA.debugLineNum = 5277;BA.debugLine="Return mResult";
Debug.JustUpdateDeviceLine();
if (true) return _mresult;
 };
 BA.debugLineNum = 5281;BA.debugLine="For Each m As Map In lstDatosCamposOrigenDatos";
Debug.JustUpdateDeviceLine();
_m = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");
{
final RemoteObject group94 = _lstdatoscamposorigendatos;
final int groupLen94 = group94.runMethod(true,"getSize").<Integer>get()
;int index94 = 0;
;
for (; index94 < groupLen94;index94++){
_m = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.collections.Map"), group94.runMethod(false,"Get",index94));Debug.locals.put("m", _m);
Debug.locals.put("m", _m);
 BA.debugLineNum = 5282;BA.debugLine="Dim c As CampoOrigenDatosJamTableCLV";
Debug.JustUpdateDeviceLine();
_c = RemoteObject.createNew ("b4j.docU.jamtableclv._campoorigendatosjamtableclv");Debug.locals.put("c", _c);
 BA.debugLineNum = 5284;BA.debugLine="c.ID=m.GetDefault(\"ID\",0)";
Debug.JustUpdateDeviceLine();
_c.setField ("ID" /*RemoteObject*/ ,BA.numberCast(int.class, _m.runMethod(false,"GetDefault",(Object)(RemoteObject.createImmutable(("ID"))),(Object)(RemoteObject.createImmutable((0))))));
 BA.debugLineNum = 5286;BA.debugLine="c.Campo=m.get(\"Campo\")";
Debug.JustUpdateDeviceLine();
_c.setField ("Campo" /*RemoteObject*/ ,BA.ObjectToString(_m.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("Campo"))))));
 BA.debugLineNum = 5288;BA.debugLine="c.AliasCampo=m.get(\"AliasCampo\")";
Debug.JustUpdateDeviceLine();
_c.setField ("AliasCampo" /*RemoteObject*/ ,BA.ObjectToString(_m.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("AliasCampo"))))));
 BA.debugLineNum = 5290;BA.debugLine="c.CampoCalculado=m.Getdefault(\"CampoCalculado\",F";
Debug.JustUpdateDeviceLine();
_c.setField ("CampoCalculado" /*RemoteObject*/ ,BA.ObjectToBoolean(_m.runMethod(false,"GetDefault",(Object)(RemoteObject.createImmutable(("CampoCalculado"))),(Object)((jamtableclv.__c.getField(true,"False"))))));
 BA.debugLineNum = 5294;BA.debugLine="c.KeyID=m.getdefault(\"KeyID\",0)";
Debug.JustUpdateDeviceLine();
_c.setField ("KeyID" /*RemoteObject*/ ,BA.numberCast(int.class, _m.runMethod(false,"GetDefault",(Object)(RemoteObject.createImmutable(("KeyID"))),(Object)(RemoteObject.createImmutable((0))))));
 BA.debugLineNum = 5296;BA.debugLine="c.TipoControlFiltro=m.getdefault(\"TipoControlFil";
Debug.JustUpdateDeviceLine();
_c.setField ("TipoControlFiltro" /*RemoteObject*/ ,BA.ObjectToString(_m.runMethod(false,"GetDefault",(Object)(RemoteObject.createImmutable(("TipoControlFiltro"))),(Object)((RemoteObject.createImmutable(""))))));
 BA.debugLineNum = 5298;BA.debugLine="c.TipoDato=m.get(\"TipoDato\")";
Debug.JustUpdateDeviceLine();
_c.setField ("TipoDato" /*RemoteObject*/ ,BA.ObjectToString(_m.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("TipoDato"))))));
 BA.debugLineNum = 5300;BA.debugLine="c.NoNulo=m.getdefault(\"NoNulo\",True)";
Debug.JustUpdateDeviceLine();
_c.setField ("NoNulo" /*RemoteObject*/ ,BA.ObjectToBoolean(_m.runMethod(false,"GetDefault",(Object)(RemoteObject.createImmutable(("NoNulo"))),(Object)((jamtableclv.__c.getField(true,"True"))))));
 BA.debugLineNum = 5302;BA.debugLine="c.ConValorDefecto=m.getdefault(\"ConValorDefecto\"";
Debug.JustUpdateDeviceLine();
_c.setField ("ConValorDefecto" /*RemoteObject*/ ,BA.ObjectToBoolean(_m.runMethod(false,"GetDefault",(Object)(RemoteObject.createImmutable(("ConValorDefecto"))),(Object)((jamtableclv.__c.getField(true,"False"))))));
 BA.debugLineNum = 5304;BA.debugLine="c.ValorDefecto=m.getdefault(\"ValorDefecto\",\"\")";
Debug.JustUpdateDeviceLine();
_c.setField ("ValorDefecto" /*RemoteObject*/ ,_m.runMethod(false,"GetDefault",(Object)(RemoteObject.createImmutable(("ValorDefecto"))),(Object)((RemoteObject.createImmutable("")))));
 BA.debugLineNum = 5306;BA.debugLine="c.EsFecha=m.getdefault(\"EsFecha\",False)";
Debug.JustUpdateDeviceLine();
_c.setField ("EsFecha" /*RemoteObject*/ ,BA.ObjectToBoolean(_m.runMethod(false,"GetDefault",(Object)(RemoteObject.createImmutable(("EsFecha"))),(Object)((jamtableclv.__c.getField(true,"False"))))));
 BA.debugLineNum = 5308;BA.debugLine="c.EsBooleano=m.GetDefault(\"EsBooleano\",False)";
Debug.JustUpdateDeviceLine();
_c.setField ("EsBooleano" /*RemoteObject*/ ,BA.ObjectToBoolean(_m.runMethod(false,"GetDefault",(Object)(RemoteObject.createImmutable(("EsBooleano"))),(Object)((jamtableclv.__c.getField(true,"False"))))));
 BA.debugLineNum = 5310;BA.debugLine="c.TipoControlEdicion=m.GetDefault(\"TipoControlEd";
Debug.JustUpdateDeviceLine();
_c.setField ("TipoControlEdicion" /*RemoteObject*/ ,BA.ObjectToString(_m.runMethod(false,"GetDefault",(Object)(RemoteObject.createImmutable(("TipoControlEdicion"))),(Object)((RemoteObject.createImmutable(""))))));
 BA.debugLineNum = 5312;BA.debugLine="lstDataJSON.Add(c)";
Debug.JustUpdateDeviceLine();
_lstdatajson.runVoidMethod ("Add",(Object)((_c)));
 }
}Debug.locals.put("m", _m);
;
 BA.debugLineNum = 5317;BA.debugLine="If lstDataJSON.Size= 0 Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_lstdatajson.runMethod(true,"getSize"),BA.numberCast(double.class, 0))) { 
 BA.debugLineNum = 5318;BA.debugLine="mResult.Put(\"FlagOK\",False)";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("FlagOK"))),(Object)((jamtableclv.__c.getField(true,"False"))));
 BA.debugLineNum = 5319;BA.debugLine="mResult.Put(\"msgError\",\"No hay datos de campos e";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("msgError"))),(Object)((RemoteObject.concat(RemoteObject.createImmutable("No hay datos de campos en el fichero "),_ficherojson))));
 BA.debugLineNum = 5321;BA.debugLine="Return mResult";
Debug.JustUpdateDeviceLine();
if (true) return _mresult;
 };
 BA.debugLineNum = 5328;BA.debugLine="For lstIdx=0 To lstDataJSON.Size-1";
Debug.JustUpdateDeviceLine();
{
final int step116 = 1;
final int limit116 = RemoteObject.solve(new RemoteObject[] {_lstdatajson.runMethod(true,"getSize"),RemoteObject.createImmutable(1)}, "-",1, 1).<Integer>get().intValue();
_lstidx = 0 ;
for (;(step116 > 0 && _lstidx <= limit116) || (step116 < 0 && _lstidx >= limit116) ;_lstidx = ((int)(0 + _lstidx + step116))  ) {
Debug.locals.put("lstIdx", _lstidx);
 BA.debugLineNum = 5329;BA.debugLine="mLstCamposOrigenDatos.Add(lstDataJSON.Get(lstIdx";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_mlstcamposorigendatos" /*RemoteObject*/ ).runVoidMethod ("Add",(Object)(_lstdatajson.runMethod(false,"Get",(Object)(BA.numberCast(int.class, _lstidx)))));
 BA.debugLineNum = 5330;BA.debugLine="mLstCamposOrigenDatosConfiguracionOriginal.Add(l";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_mlstcamposorigendatosconfiguracionoriginal" /*RemoteObject*/ ).runVoidMethod ("Add",(Object)(_lstdatajson.runMethod(false,"Get",(Object)(BA.numberCast(int.class, _lstidx)))));
 }
}Debug.locals.put("lstIdx", _lstidx);
;
 BA.debugLineNum = 5334;BA.debugLine="Log(\"Campos Origen Datos JSON: \" & NombreJSONOrig";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("LogImpl","9167706808",RemoteObject.concat(RemoteObject.createImmutable("Campos Origen Datos JSON: "),__ref.getField(true,"_nombrejsonorigendatos" /*RemoteObject*/ )),0);
 BA.debugLineNum = 5335;BA.debugLine="Log(\" \")";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("LogImpl","9167706809",RemoteObject.createImmutable(" "),0);
 BA.debugLineNum = 5336;BA.debugLine="For Each c As CampoOrigenDatosJamTableCLV In mLst";
Debug.JustUpdateDeviceLine();
{
final RemoteObject group122 = __ref.getField(false,"_mlstcamposorigendatos" /*RemoteObject*/ );
final int groupLen122 = group122.runMethod(true,"getSize").<Integer>get()
;int index122 = 0;
;
for (; index122 < groupLen122;index122++){
_c = (group122.runMethod(false,"Get",index122));Debug.locals.put("c", _c);
Debug.locals.put("c", _c);
 BA.debugLineNum = 5337;BA.debugLine="Log(\"DATOS CAMPO \" & mLstCamposOrigenDatos.Index";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("LogImpl","9167706811",RemoteObject.concat(RemoteObject.createImmutable("DATOS CAMPO "),__ref.getField(false,"_mlstcamposorigendatos" /*RemoteObject*/ ).runMethod(true,"IndexOf",(Object)((_c)))),0);
 BA.debugLineNum = 5338;BA.debugLine="Log(c)";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("LogImpl","9167706812",BA.ObjectToString(_c),0);
 BA.debugLineNum = 5339;BA.debugLine="Log(\" \")";
Debug.JustUpdateDeviceLine();
jamtableclv.__c.runVoidMethod ("LogImpl","9167706813",RemoteObject.createImmutable(" "),0);
 }
}Debug.locals.put("c", _c);
;
 BA.debugLineNum = 5348;BA.debugLine="Dim lstAliasCampos As List";
Debug.JustUpdateDeviceLine();
_lstaliascampos = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");Debug.locals.put("lstAliasCampos", _lstaliascampos);
 BA.debugLineNum = 5349;BA.debugLine="lstAliasCampos.Initialize";
Debug.JustUpdateDeviceLine();
_lstaliascampos.runVoidMethod ("Initialize");
 BA.debugLineNum = 5350;BA.debugLine="Dim lstCampos As List";
Debug.JustUpdateDeviceLine();
_lstcampos = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");Debug.locals.put("lstCampos", _lstcampos);
 BA.debugLineNum = 5351;BA.debugLine="lstCampos.Initialize";
Debug.JustUpdateDeviceLine();
_lstcampos.runVoidMethod ("Initialize");
 BA.debugLineNum = 5354;BA.debugLine="mlstCamposOrigenDatosNoCalculados.Initialize ' su";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_mlstcamposorigendatosnocalculados" /*RemoteObject*/ ).runVoidMethod ("Initialize");
 BA.debugLineNum = 5356;BA.debugLine="Dim sbCampostblOrigenDatos As StringBuilder";
Debug.JustUpdateDeviceLine();
_sbcampostblorigendatos = RemoteObject.createNew ("anywheresoftware.b4a.keywords.StringBuilderWrapper");Debug.locals.put("sbCampostblOrigenDatos", _sbcampostblorigendatos);
 BA.debugLineNum = 5357;BA.debugLine="sbCampostblOrigenDatos.Initialize";
Debug.JustUpdateDeviceLine();
_sbcampostblorigendatos.runVoidMethod ("Initialize");
 BA.debugLineNum = 5359;BA.debugLine="sbCampostblOrigenDatos.Append(\"rowid\").Append(\",\"";
Debug.JustUpdateDeviceLine();
_sbcampostblorigendatos.runMethod(false,"Append",(Object)(RemoteObject.createImmutable("rowid"))).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(",")));
 BA.debugLineNum = 5372;BA.debugLine="For Each c As CampoOrigenDatosJamTableCLV In mLst";
Debug.JustUpdateDeviceLine();
{
final RemoteObject group135 = __ref.getField(false,"_mlstcamposorigendatos" /*RemoteObject*/ );
final int groupLen135 = group135.runMethod(true,"getSize").<Integer>get()
;int index135 = 0;
;
for (; index135 < groupLen135;index135++){
_c = (group135.runMethod(false,"Get",index135));Debug.locals.put("c", _c);
Debug.locals.put("c", _c);
 BA.debugLineNum = 5374;BA.debugLine="If lstCampos.IndexOf(c.Campo)>-1 Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean(">",_lstcampos.runMethod(true,"IndexOf",(Object)((_c.getField(true,"Campo" /*RemoteObject*/ )))),BA.numberCast(double.class, -(double) (0 + 1)))) { 
 BA.debugLineNum = 5375;BA.debugLine="mResult.Put(\"FlagOK\",False)";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("FlagOK"))),(Object)((jamtableclv.__c.getField(true,"False"))));
 BA.debugLineNum = 5376;BA.debugLine="mResult.Put(\"msgError\",\"El campo \" & c.Campo &";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("msgError"))),(Object)((RemoteObject.concat(RemoteObject.createImmutable("El campo "),_c.getField(true,"Campo" /*RemoteObject*/ ),RemoteObject.createImmutable(" está repetido en el fichero "),_nombreficherojson,RemoteObject.createImmutable("."),jamtableclv.__c.getField(true,"CRLF"),RemoteObject.createImmutable("Avisa al administrador de la aplicación.")))));
 BA.debugLineNum = 5378;BA.debugLine="Exit";
Debug.JustUpdateDeviceLine();
if (true) break;
 }else {
 BA.debugLineNum = 5380;BA.debugLine="lstCampos.Add(c.Campo)";
Debug.JustUpdateDeviceLine();
_lstcampos.runVoidMethod ("Add",(Object)((_c.getField(true,"Campo" /*RemoteObject*/ ))));
 };
 BA.debugLineNum = 5383;BA.debugLine="If lstAliasCampos.IndexOf(c.AliasCampo)>-1 Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean(">",_lstaliascampos.runMethod(true,"IndexOf",(Object)((_c.getField(true,"AliasCampo" /*RemoteObject*/ )))),BA.numberCast(double.class, -(double) (0 + 1)))) { 
 BA.debugLineNum = 5384;BA.debugLine="mResult.Put(\"FlagOK\",False)";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("FlagOK"))),(Object)((jamtableclv.__c.getField(true,"False"))));
 BA.debugLineNum = 5385;BA.debugLine="mResult.Put(\"msgError\",\"El alias de campo \" & c";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("msgError"))),(Object)((RemoteObject.concat(RemoteObject.createImmutable("El alias de campo "),_c.getField(true,"AliasCampo" /*RemoteObject*/ ),RemoteObject.createImmutable(" está repetido en el fichero "),_nombreficherojson,RemoteObject.createImmutable("."),jamtableclv.__c.getField(true,"CRLF"),RemoteObject.createImmutable("Avisa al administrador de la aplicación.")))));
 BA.debugLineNum = 5387;BA.debugLine="Exit";
Debug.JustUpdateDeviceLine();
if (true) break;
 }else {
 BA.debugLineNum = 5389;BA.debugLine="lstAliasCampos.Add(c.AliasCampo)";
Debug.JustUpdateDeviceLine();
_lstaliascampos.runVoidMethod ("Add",(Object)((_c.getField(true,"AliasCampo" /*RemoteObject*/ ))));
 };
 BA.debugLineNum = 5398;BA.debugLine="sbCampostblOrigenDatos.append(\"[\").Append(c.Alia";
Debug.JustUpdateDeviceLine();
_sbcampostblorigendatos.runMethod(false,"Append",(Object)(RemoteObject.createImmutable("["))).runMethod(false,"Append",(Object)(_c.getField(true,"AliasCampo" /*RemoteObject*/ ))).runMethod(false,"Append",(Object)(RemoteObject.createImmutable("]"))).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(",")));
 BA.debugLineNum = 5400;BA.debugLine="If c.TipoControlFiltro<>\"\" Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("!",_c.getField(true,"TipoControlFiltro" /*RemoteObject*/ ),BA.ObjectToString(""))) { 
 BA.debugLineNum = 5401;BA.debugLine="NumCamposConControlFiltro=NumCamposConControlF";
Debug.JustUpdateDeviceLine();
__ref.setField ("_numcamposconcontrolfiltro" /*RemoteObject*/ ,RemoteObject.solve(new RemoteObject[] {__ref.getField(true,"_numcamposconcontrolfiltro" /*RemoteObject*/ ),RemoteObject.createImmutable(1)}, "+",1, 1));
 BA.debugLineNum = 5402;BA.debugLine="mlstAliasCamposFiltrables.Add(c.AliasCampo)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_mlstaliascamposfiltrables" /*RemoteObject*/ ).runVoidMethod ("Add",(Object)((_c.getField(true,"AliasCampo" /*RemoteObject*/ ))));
 };
 BA.debugLineNum = 5404;BA.debugLine="If c.KeyID>0 Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean(">",_c.getField(true,"KeyID" /*RemoteObject*/ ),BA.numberCast(double.class, 0))) { 
 BA.debugLineNum = 5405;BA.debugLine="Dim PKF As CampoPrimaryKeyJamTableCLV";
Debug.JustUpdateDeviceLine();
_pkf = RemoteObject.createNew ("b4j.docU.jamtableclv._campoprimarykeyjamtableclv");Debug.locals.put("PKF", _pkf);
 BA.debugLineNum = 5406;BA.debugLine="PKF.Campo=c.Campo";
Debug.JustUpdateDeviceLine();
_pkf.setField ("Campo" /*RemoteObject*/ ,_c.getField(true,"Campo" /*RemoteObject*/ ));
 BA.debugLineNum = 5407;BA.debugLine="PKF.AliasCampo=c.AliasCampo";
Debug.JustUpdateDeviceLine();
_pkf.setField ("AliasCampo" /*RemoteObject*/ ,_c.getField(true,"AliasCampo" /*RemoteObject*/ ));
 BA.debugLineNum = 5408;BA.debugLine="PKF.OrdenClave=c.KeyID";
Debug.JustUpdateDeviceLine();
_pkf.setField ("OrdenClave" /*RemoteObject*/ ,_c.getField(true,"KeyID" /*RemoteObject*/ ));
 BA.debugLineNum = 5409;BA.debugLine="mlstCamposPrimaryKey.Add(PKF)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_mlstcamposprimarykey" /*RemoteObject*/ ).runVoidMethod ("Add",(Object)((_pkf)));
 };
 BA.debugLineNum = 5412;BA.debugLine="If c.CampoCalculado=False Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_c.getField(true,"CampoCalculado" /*RemoteObject*/ ),jamtableclv.__c.getField(true,"False"))) { 
 BA.debugLineNum = 5414;BA.debugLine="mlstCamposOrigenDatosNoCalculados.Add(c)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_mlstcamposorigendatosnocalculados" /*RemoteObject*/ ).runVoidMethod ("Add",(Object)((_c)));
 }else {
 BA.debugLineNum = 5416;BA.debugLine="Dim FormulaCampoCalculado As String=c.Campo";
Debug.JustUpdateDeviceLine();
_formulacampocalculado = _c.getField(true,"Campo" /*RemoteObject*/ );Debug.locals.put("FormulaCampoCalculado", _formulacampocalculado);Debug.locals.put("FormulaCampoCalculado", _formulacampocalculado);
 BA.debugLineNum = 5418;BA.debugLine="Dim lstNombresCamposIncluidosEnFormula As List";
Debug.JustUpdateDeviceLine();
_lstnombrescamposincluidosenformula = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");Debug.locals.put("lstNombresCamposIncluidosEnFormula", _lstnombrescamposincluidosenformula);
 BA.debugLineNum = 5419;BA.debugLine="lstNombresCamposIncluidosEnFormula.Initialize";
Debug.JustUpdateDeviceLine();
_lstnombrescamposincluidosenformula.runVoidMethod ("Initialize");
 BA.debugLineNum = 5420;BA.debugLine="Dim pattern As String";
Debug.JustUpdateDeviceLine();
_pattern = RemoteObject.createImmutable("");Debug.locals.put("pattern", _pattern);
 BA.debugLineNum = 5421;BA.debugLine="pattern = \"\\[(.*?)\\]\"  ' texto entre brackets";
Debug.JustUpdateDeviceLine();
_pattern = BA.ObjectToString("\\[(.*?)\\]");Debug.locals.put("pattern", _pattern);
 BA.debugLineNum = 5422;BA.debugLine="Dim Matcher1 As Matcher";
Debug.JustUpdateDeviceLine();
_matcher1 = RemoteObject.createNew ("anywheresoftware.b4a.keywords.Regex.MatcherWrapper");Debug.locals.put("Matcher1", _matcher1);
 BA.debugLineNum = 5423;BA.debugLine="Matcher1 = Regex.Matcher(pattern, FormulaCampoC";
Debug.JustUpdateDeviceLine();
_matcher1 = jamtableclv.__c.getField(false,"Regex").runMethod(false,"Matcher",(Object)(_pattern),(Object)(_formulacampocalculado));Debug.locals.put("Matcher1", _matcher1);
 BA.debugLineNum = 5424;BA.debugLine="Do While Matcher1.Find";
Debug.JustUpdateDeviceLine();
while (_matcher1.runMethod(true,"Find").<Boolean>get().booleanValue()) {
 BA.debugLineNum = 5426;BA.debugLine="lstNombresCamposIncluidosEnFormula.Add(Matcher";
Debug.JustUpdateDeviceLine();
_lstnombrescamposincluidosenformula.runVoidMethod ("Add",(Object)((_matcher1.runMethod(true,"getMatch"))));
 }
;
 BA.debugLineNum = 5428;BA.debugLine="For idxCamposFormula=0 To lstNombresCamposInclu";
Debug.JustUpdateDeviceLine();
{
final int step175 = 1;
final int limit175 = RemoteObject.solve(new RemoteObject[] {_lstnombrescamposincluidosenformula.runMethod(true,"getSize"),RemoteObject.createImmutable(1)}, "-",1, 1).<Integer>get().intValue();
_idxcamposformula = 0 ;
for (;(step175 > 0 && _idxcamposformula <= limit175) || (step175 < 0 && _idxcamposformula >= limit175) ;_idxcamposformula = ((int)(0 + _idxcamposformula + step175))  ) {
Debug.locals.put("idxCamposFormula", _idxcamposformula);
 BA.debugLineNum = 5430;BA.debugLine="Dim AliasCampoBuscado As String=lstNombresCamp";
Debug.JustUpdateDeviceLine();
_aliascampobuscado = BA.ObjectToString(_lstnombrescamposincluidosenformula.runMethod(false,"Get",(Object)(BA.numberCast(int.class, _idxcamposformula))));Debug.locals.put("AliasCampoBuscado", _aliascampobuscado);Debug.locals.put("AliasCampoBuscado", _aliascampobuscado);
 BA.debugLineNum = 5431;BA.debugLine="Dim FlagC As Boolean=False";
Debug.JustUpdateDeviceLine();
_flagc = jamtableclv.__c.getField(true,"False");Debug.locals.put("FlagC", _flagc);Debug.locals.put("FlagC", _flagc);
 BA.debugLineNum = 5432;BA.debugLine="For IDxNf=0 To mLstCamposOrigenDatos.Size-1";
Debug.JustUpdateDeviceLine();
{
final int step178 = 1;
final int limit178 = RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_mlstcamposorigendatos" /*RemoteObject*/ ).runMethod(true,"getSize"),RemoteObject.createImmutable(1)}, "-",1, 1).<Integer>get().intValue();
_idxnf = 0 ;
for (;(step178 > 0 && _idxnf <= limit178) || (step178 < 0 && _idxnf >= limit178) ;_idxnf = ((int)(0 + _idxnf + step178))  ) {
Debug.locals.put("IDxNf", _idxnf);
 BA.debugLineNum = 5433;BA.debugLine="Dim cFormula As CampoOrigenDatosJamTableCLV=m";
Debug.JustUpdateDeviceLine();
_cformula = (__ref.getField(false,"_mlstcamposorigendatos" /*RemoteObject*/ ).runMethod(false,"Get",(Object)(BA.numberCast(int.class, _idxnf))));Debug.locals.put("cFormula", _cformula);Debug.locals.put("cFormula", _cformula);
 BA.debugLineNum = 5435;BA.debugLine="If cFormula.AliasCampo=AliasCampoBuscado.Repl";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_cformula.getField(true,"AliasCampo" /*RemoteObject*/ ),_aliascampobuscado.runMethod(true,"replace",(Object)(BA.ObjectToString("[")),(Object)(RemoteObject.createImmutable(""))).runMethod(true,"replace",(Object)(BA.ObjectToString("]")),(Object)(RemoteObject.createImmutable(""))))) { 
 BA.debugLineNum = 5436;BA.debugLine="FlagC=True";
Debug.JustUpdateDeviceLine();
_flagc = jamtableclv.__c.getField(true,"True");Debug.locals.put("FlagC", _flagc);
 BA.debugLineNum = 5437;BA.debugLine="Exit";
Debug.JustUpdateDeviceLine();
if (true) break;
 };
 }
}Debug.locals.put("IDxNf", _idxnf);
;
 BA.debugLineNum = 5440;BA.debugLine="If FlagC=False Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_flagc,jamtableclv.__c.getField(true,"False"))) { 
 BA.debugLineNum = 5442;BA.debugLine="mResult.Put(\"FlagOK\",False)";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("FlagOK"))),(Object)((jamtableclv.__c.getField(true,"False"))));
 BA.debugLineNum = 5444;BA.debugLine="mResult.Put(\"msgError\",\"El ALIASCAMPO \" & Ali";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("msgError"))),(Object)((RemoteObject.concat(RemoteObject.createImmutable("El ALIASCAMPO "),_aliascampobuscado,RemoteObject.createImmutable(" incluido en el campo calculado "),_c.getField(true,"Campo" /*RemoteObject*/ ),RemoteObject.createImmutable(" no existe en tblOrigenDatos. Avisa al administrador de la aplicacion")))));
 BA.debugLineNum = 5445;BA.debugLine="Exit";
Debug.JustUpdateDeviceLine();
if (true) break;
 };
 }
}Debug.locals.put("idxCamposFormula", _idxcamposformula);
;
 };
 }
}Debug.locals.put("c", _c);
;
 BA.debugLineNum = 5451;BA.debugLine="If mResult.Get(\"FlagOK\")=False Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_mresult.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("FlagOK")))),(jamtableclv.__c.getField(true,"False")))) { 
 BA.debugLineNum = 5453;BA.debugLine="Return mResult";
Debug.JustUpdateDeviceLine();
if (true) return _mresult;
 };
 BA.debugLineNum = 5457;BA.debugLine="lblMostrarEliminarFiltros.Visible=NumCamposConCon";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lblmostrareliminarfiltros" /*RemoteObject*/ ).runMethod(true,"setVisible",BA.ObjectToBoolean(RemoteObject.solveBoolean(">",__ref.getField(true,"_numcamposconcontrolfiltro" /*RemoteObject*/ ),BA.numberCast(double.class, 0))));
 BA.debugLineNum = 5458;BA.debugLine="ImagenLabelFiltros";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_imagenlabelfiltros" /*RemoteObject*/ );
 BA.debugLineNum = 5461;BA.debugLine="If mlstCamposPrimaryKey.Size>0 Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean(">",__ref.getField(false,"_mlstcamposprimarykey" /*RemoteObject*/ ).runMethod(true,"getSize"),BA.numberCast(double.class, 0))) { 
 BA.debugLineNum = 5462;BA.debugLine="mlstCamposPrimaryKey.SortType(\"OrdenClave\",True)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_mlstcamposprimarykey" /*RemoteObject*/ ).runVoidMethod ("SortType",(Object)(BA.ObjectToString("OrdenClave")),(Object)(jamtableclv.__c.getField(true,"True")));
 };
 BA.debugLineNum = 5466;BA.debugLine="sbCampostblOrigenDatos.Remove(sbCampostblOrigenDa";
Debug.JustUpdateDeviceLine();
_sbcampostblorigendatos.runVoidMethod ("Remove",(Object)(RemoteObject.solve(new RemoteObject[] {_sbcampostblorigendatos.runMethod(true,"getLength"),RemoteObject.createImmutable(1)}, "-",1, 1)),(Object)(_sbcampostblorigendatos.runMethod(true,"getLength")));
 BA.debugLineNum = 5468;BA.debugLine="msCampostblOrigenDatos= sbCampostblOrigenDatos.To";
Debug.JustUpdateDeviceLine();
__ref.setField ("_mscampostblorigendatos" /*RemoteObject*/ ,_sbcampostblorigendatos.runMethod(true,"ToString"));
 BA.debugLineNum = 5470;BA.debugLine="If mResult.Get(\"FlagOK\")=False Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_mresult.runMethod(false,"Get",(Object)((RemoteObject.createImmutable("FlagOK")))),(jamtableclv.__c.getField(true,"False")))) { 
 BA.debugLineNum = 5472;BA.debugLine="Return mResult";
Debug.JustUpdateDeviceLine();
if (true) return _mresult;
 };
 BA.debugLineNum = 5476;BA.debugLine="Return mResult";
Debug.JustUpdateDeviceLine();
if (true) return _mresult;
 BA.debugLineNum = 5477;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _setpanelinfovisible(RemoteObject __ref,RemoteObject _visible) throws Exception{
try {
		Debug.PushSubsStack("SetPanelInfoVisible (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,4506);
if (RapidSub.canDelegate("setpanelinfovisible")) { return __ref.runUserSub(false, "jamtableclv","setpanelinfovisible", __ref, _visible);}
Debug.locals.put("Visible", _visible);
 BA.debugLineNum = 4506;BA.debugLine="Public Sub SetPanelInfoVisible(Visible As Boolean)";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 4507;BA.debugLine="mPanelInfoVisible=Visible";
Debug.JustUpdateDeviceLine();
__ref.setField ("_mpanelinfovisible" /*RemoteObject*/ ,_visible);
 BA.debugLineNum = 4508;BA.debugLine="PosicionDimensionesCLVFiltros";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_posiciondimensionesclvfiltros" /*RemoteObject*/ );
 BA.debugLineNum = 4509;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _setrecordsdatalist(RemoteObject __ref,RemoteObject _lstdata) throws Exception{
try {
		Debug.PushSubsStack("SetRecordsDataList (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,5750);
if (RapidSub.canDelegate("setrecordsdatalist")) { return __ref.runUserSub(false, "jamtableclv","setrecordsdatalist", __ref, _lstdata);}
ResumableSub_SetRecordsDataList rsub = new ResumableSub_SetRecordsDataList(null,__ref,_lstdata);
rsub.remoteResumableSub = anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSubForFilter();
rsub.resume(null, null);
return RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.keywords.Common.ResumableSubWrapper"), rsub.remoteResumableSub);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_SetRecordsDataList extends BA.ResumableSub {
public ResumableSub_SetRecordsDataList(b4j.docU.jamtableclv parent,RemoteObject __ref,RemoteObject _lstdata) {
this.parent = parent;
this.__ref = __ref;
this._lstdata = _lstdata;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _lstdata;
RemoteObject _mresult = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
int _idxdata = 0;
RemoteObject _sbquery = RemoteObject.declareNull("anywheresoftware.b4a.keywords.StringBuilderWrapper");
RemoteObject _sbparametros = RemoteObject.declareNull("anywheresoftware.b4a.keywords.StringBuilderWrapper");
RemoteObject _lstvalores = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.List");
RemoteObject _lstcamposdatanoencontrados = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.List");
RemoteObject _mcd = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
RemoteObject _cod = RemoteObject.declareNull("b4j.docU.jamtableclv._campoorigendatosjamtableclv");
RemoteObject _sbcamposdatanoencontrados = RemoteObject.declareNull("anywheresoftware.b4a.keywords.StringBuilderWrapper");
RemoteObject _cnoe = RemoteObject.createImmutable("");
RemoteObject _senderfilter = RemoteObject.declareNull("Object");
RemoteObject _success = RemoteObject.createImmutable(false);
int step14;
int limit14;
RemoteObject group25;
int index25;
int groupLen25;
RemoteObject group42;
int index42;
int groupLen42;

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("SetRecordsDataList (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,5750);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
{
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,RemoteObject.createImmutable(null));return;}
case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
Debug.locals.put("lstData", _lstdata);
 BA.debugLineNum = 5753;BA.debugLine="Dim mResult As Map";
Debug.JustUpdateDeviceLine();
_mresult = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");Debug.locals.put("mResult", _mresult);
 BA.debugLineNum = 5754;BA.debugLine="mResult.Initialize";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Initialize");
 BA.debugLineNum = 5755;BA.debugLine="mResult.Put(\"msgError\",\"\")";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("msgError"))),(Object)((RemoteObject.createImmutable(""))));
 BA.debugLineNum = 5756;BA.debugLine="mResult.Put(\"msgAviso\",\"\")";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("msgAviso"))),(Object)((RemoteObject.createImmutable(""))));
 BA.debugLineNum = 5757;BA.debugLine="mResult.Put(\"FlagOK\",True)";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("FlagOK"))),(Object)((parent.__c.getField(true,"True"))));
 BA.debugLineNum = 5758;BA.debugLine="mResult.Put(\"ListaVacia\",False)";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("ListaVacia"))),(Object)((parent.__c.getField(true,"False"))));
 BA.debugLineNum = 5760;BA.debugLine="If lstData.Size=0 Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//if
this.state = 4;
if (RemoteObject.solveBoolean("=",_lstdata.runMethod(true,"getSize"),BA.numberCast(double.class, 0))) { 
this.state = 3;
}if (true) break;

case 3:
//C
this.state = 4;
 BA.debugLineNum = 5761;BA.debugLine="mResult.Put(\"FlagOK\",False)";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("FlagOK"))),(Object)((parent.__c.getField(true,"False"))));
 BA.debugLineNum = 5762;BA.debugLine="mResult.Put(\"msgAviso\",\"La lista de datos está v";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("msgAviso"))),(Object)((RemoteObject.createImmutable("La lista de datos está vacía."))));
 BA.debugLineNum = 5763;BA.debugLine="mResult.Put(\"ListaVacia\",True)";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("ListaVacia"))),(Object)((parent.__c.getField(true,"True"))));
 BA.debugLineNum = 5764;BA.debugLine="lstData.Initialize";
Debug.JustUpdateDeviceLine();
_lstdata.runVoidMethod ("Initialize");
 BA.debugLineNum = 5765;BA.debugLine="Return mResult";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(_mresult));return;};
 if (true) break;
;
 BA.debugLineNum = 5771;BA.debugLine="For idxData=0 To lstData.Size-1";
Debug.JustUpdateDeviceLine();

case 4:
//for
this.state = 26;
step14 = 1;
limit14 = RemoteObject.solve(new RemoteObject[] {_lstdata.runMethod(true,"getSize"),RemoteObject.createImmutable(1)}, "-",1, 1).<Integer>get().intValue();
_idxdata = 0 ;
Debug.locals.put("idxData", _idxdata);
this.state = 34;
if (true) break;

case 34:
//C
this.state = 26;
if ((step14 > 0 && _idxdata <= limit14) || (step14 < 0 && _idxdata >= limit14)) this.state = 6;
if (true) break;

case 35:
//C
this.state = 34;
_idxdata = ((int)(0 + _idxdata + step14)) ;
Debug.locals.put("idxData", _idxdata);
if (true) break;

case 6:
//C
this.state = 7;
 BA.debugLineNum = 5774;BA.debugLine="Dim sbQuery As StringBuilder";
Debug.JustUpdateDeviceLine();
_sbquery = RemoteObject.createNew ("anywheresoftware.b4a.keywords.StringBuilderWrapper");Debug.locals.put("sbQuery", _sbquery);
 BA.debugLineNum = 5775;BA.debugLine="sbQuery.Initialize";
Debug.JustUpdateDeviceLine();
_sbquery.runVoidMethod ("Initialize");
 BA.debugLineNum = 5777;BA.debugLine="Dim sbParametros As StringBuilder";
Debug.JustUpdateDeviceLine();
_sbparametros = RemoteObject.createNew ("anywheresoftware.b4a.keywords.StringBuilderWrapper");Debug.locals.put("sbParametros", _sbparametros);
 BA.debugLineNum = 5778;BA.debugLine="sbParametros.Initialize";
Debug.JustUpdateDeviceLine();
_sbparametros.runVoidMethod ("Initialize");
 BA.debugLineNum = 5780;BA.debugLine="Dim lstValores As List";
Debug.JustUpdateDeviceLine();
_lstvalores = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");Debug.locals.put("lstValores", _lstvalores);
 BA.debugLineNum = 5781;BA.debugLine="lstValores.Initialize";
Debug.JustUpdateDeviceLine();
_lstvalores.runVoidMethod ("Initialize");
 BA.debugLineNum = 5783;BA.debugLine="sbQuery.Append(\"INSERT INTO tblOrigenDatos (\")";
Debug.JustUpdateDeviceLine();
_sbquery.runVoidMethod ("Append",(Object)(RemoteObject.createImmutable("INSERT INTO tblOrigenDatos (")));
 BA.debugLineNum = 5793;BA.debugLine="Dim lstCamposDataNoEncontrados As List";
Debug.JustUpdateDeviceLine();
_lstcamposdatanoencontrados = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");Debug.locals.put("lstCamposDataNoEncontrados", _lstcamposdatanoencontrados);
 BA.debugLineNum = 5794;BA.debugLine="lstCamposDataNoEncontrados.Initialize";
Debug.JustUpdateDeviceLine();
_lstcamposdatanoencontrados.runVoidMethod ("Initialize");
 BA.debugLineNum = 5797;BA.debugLine="Dim mCD As Map=lstData.Get(idxData)";
Debug.JustUpdateDeviceLine();
_mcd = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");
_mcd = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.collections.Map"), _lstdata.runMethod(false,"Get",(Object)(BA.numberCast(int.class, _idxdata))));Debug.locals.put("mCD", _mcd);Debug.locals.put("mCD", _mcd);
 BA.debugLineNum = 5801;BA.debugLine="For Each CoD As CampoOrigenDatosJamTableCLV In m";
Debug.JustUpdateDeviceLine();
if (true) break;

case 7:
//for
this.state = 16;
group25 = __ref.getField(false,"_mlstcamposorigendatosnocalculados" /*RemoteObject*/ );
index25 = 0;
groupLen25 = group25.runMethod(true,"getSize").<Integer>get();
Debug.locals.put("CoD", _cod);
this.state = 36;
if (true) break;

case 36:
//C
this.state = 16;
if (index25 < groupLen25) {
this.state = 9;
_cod = (group25.runMethod(false,"Get",index25));Debug.locals.put("CoD", _cod);}
if (true) break;

case 37:
//C
this.state = 36;
index25++;
Debug.locals.put("CoD", _cod);
if (true) break;

case 9:
//C
this.state = 10;
 BA.debugLineNum = 5802;BA.debugLine="If mCD.ContainsKey(CoD.Campo) Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 10:
//if
this.state = 15;
if (_mcd.runMethod(true,"ContainsKey",(Object)((_cod.getField(true,"Campo" /*RemoteObject*/ )))).<Boolean>get().booleanValue()) { 
this.state = 12;
}else {
this.state = 14;
}if (true) break;

case 12:
//C
this.state = 15;
 BA.debugLineNum = 5803;BA.debugLine="sbQuery.Append(\"[\").Append(CoD.AliasCampo).App";
Debug.JustUpdateDeviceLine();
_sbquery.runMethod(false,"Append",(Object)(RemoteObject.createImmutable("["))).runMethod(false,"Append",(Object)(_cod.getField(true,"AliasCampo" /*RemoteObject*/ ))).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable("],")));
 BA.debugLineNum = 5804;BA.debugLine="sbParametros.Append(\"?,\")";
Debug.JustUpdateDeviceLine();
_sbparametros.runVoidMethod ("Append",(Object)(RemoteObject.createImmutable("?,")));
 BA.debugLineNum = 5805;BA.debugLine="lstValores.Add(mCD.Get(CoD.Campo))";
Debug.JustUpdateDeviceLine();
_lstvalores.runVoidMethod ("Add",(Object)(_mcd.runMethod(false,"Get",(Object)((_cod.getField(true,"Campo" /*RemoteObject*/ ))))));
 if (true) break;

case 14:
//C
this.state = 15;
 BA.debugLineNum = 5807;BA.debugLine="lstCamposDataNoEncontrados.Add(CoD.Campo)";
Debug.JustUpdateDeviceLine();
_lstcamposdatanoencontrados.runVoidMethod ("Add",(Object)((_cod.getField(true,"Campo" /*RemoteObject*/ ))));
 if (true) break;

case 15:
//C
this.state = 37;
;
 if (true) break;
if (true) break;
Debug.locals.put("CoD", _cod);
;
 BA.debugLineNum = 5811;BA.debugLine="If lstCamposDataNoEncontrados.Size>0  Then";
Debug.JustUpdateDeviceLine();

case 16:
//if
this.state = 25;
if (RemoteObject.solveBoolean(">",_lstcamposdatanoencontrados.runMethod(true,"getSize"),BA.numberCast(double.class, 0))) { 
this.state = 18;
}else {
this.state = 24;
}if (true) break;

case 18:
//C
this.state = 19;
 BA.debugLineNum = 5813;BA.debugLine="LogColor(\"***registro #\" & idxData & \" con erro";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9167968831",RemoteObject.concat(RemoteObject.createImmutable("***registro #"),RemoteObject.createImmutable(_idxdata),RemoteObject.createImmutable(" con errores de campos no encontrados")),__ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"Color_Red"));
 BA.debugLineNum = 5814;BA.debugLine="LogColor(\"SQL Insert list of maps: \" & sbQuery,";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9167968832",RemoteObject.concat(RemoteObject.createImmutable("SQL Insert list of maps: "),_sbquery),__ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"Color_Red"));
 BA.debugLineNum = 5815;BA.debugLine="LogColor(\"Lista valores insert: \" & lstValores,";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9167968833",RemoteObject.concat(RemoteObject.createImmutable("Lista valores insert: "),_lstvalores),__ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"Color_Red"));
 BA.debugLineNum = 5817;BA.debugLine="Dim sbCamposDataNoEncontrados As StringBuilder";
Debug.JustUpdateDeviceLine();
_sbcamposdatanoencontrados = RemoteObject.createNew ("anywheresoftware.b4a.keywords.StringBuilderWrapper");Debug.locals.put("sbCamposDataNoEncontrados", _sbcamposdatanoencontrados);
 BA.debugLineNum = 5818;BA.debugLine="sbCamposDataNoEncontrados.Initialize";
Debug.JustUpdateDeviceLine();
_sbcamposdatanoencontrados.runVoidMethod ("Initialize");
 BA.debugLineNum = 5819;BA.debugLine="sbCamposDataNoEncontrados.Append(\"Registro #\" &";
Debug.JustUpdateDeviceLine();
_sbcamposdatanoencontrados.runVoidMethod ("Append",(Object)(RemoteObject.concat(RemoteObject.createImmutable("Registro #"),RemoteObject.createImmutable(_idxdata),RemoteObject.createImmutable(", faltan los siguientes campos en el REGISTRO de datos."))));
 BA.debugLineNum = 5820;BA.debugLine="sbCamposDataNoEncontrados.Append(\" con la aplic";
Debug.JustUpdateDeviceLine();
_sbcamposdatanoencontrados.runMethod(false,"Append",(Object)(RemoteObject.createImmutable(" con la aplicacion CamposBuilder."))).runMethod(false,"Append",(Object)(parent.__c.getField(true,"CRLF"))).runVoidMethod ("Append",(Object)(parent.__c.getField(true,"CRLF")));
 BA.debugLineNum = 5821;BA.debugLine="For Each CNoE As String In lstCamposDataNoEncon";
Debug.JustUpdateDeviceLine();
if (true) break;

case 19:
//for
this.state = 22;
group42 = _lstcamposdatanoencontrados;
index42 = 0;
groupLen42 = group42.runMethod(true,"getSize").<Integer>get();
Debug.locals.put("CNoE", _cnoe);
this.state = 38;
if (true) break;

case 38:
//C
this.state = 22;
if (index42 < groupLen42) {
this.state = 21;
_cnoe = BA.ObjectToString(group42.runMethod(false,"Get",index42));Debug.locals.put("CNoE", _cnoe);}
if (true) break;

case 39:
//C
this.state = 38;
index42++;
Debug.locals.put("CNoE", _cnoe);
if (true) break;

case 21:
//C
this.state = 39;
 BA.debugLineNum = 5822;BA.debugLine="sbCamposDataNoEncontrados.Append(CNoE).Append(";
Debug.JustUpdateDeviceLine();
_sbcamposdatanoencontrados.runMethod(false,"Append",(Object)(_cnoe)).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(", ")));
 if (true) break;
if (true) break;

case 22:
//C
this.state = 25;
Debug.locals.put("CNoE", _cnoe);
;
 BA.debugLineNum = 5824;BA.debugLine="sbCamposDataNoEncontrados.Remove(sbCamposDataNo";
Debug.JustUpdateDeviceLine();
_sbcamposdatanoencontrados.runVoidMethod ("Remove",(Object)(RemoteObject.solve(new RemoteObject[] {_sbcamposdatanoencontrados.runMethod(true,"getLength"),RemoteObject.createImmutable(2)}, "-",1, 1)),(Object)(_sbcamposdatanoencontrados.runMethod(true,"getLength")));
 BA.debugLineNum = 5825;BA.debugLine="sbCamposDataNoEncontrados.Append(CRLF).Append(C";
Debug.JustUpdateDeviceLine();
_sbcamposdatanoencontrados.runMethod(false,"Append",(Object)(parent.__c.getField(true,"CRLF"))).runMethod(false,"Append",(Object)(parent.__c.getField(true,"CRLF"))).runMethod(false,"Append",(Object)(RemoteObject.createImmutable("Revisar JSON "))).runMethod(false,"Append",(Object)(__ref.getField(true,"_nombrejsonorigendatos" /*RemoteObject*/ ))).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(" y el registro indicado.")));
 BA.debugLineNum = 5826;BA.debugLine="mResult.Put(\"FlagOK\",False)";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("FlagOK"))),(Object)((parent.__c.getField(true,"False"))));
 BA.debugLineNum = 5828;BA.debugLine="mResult.Put(\"msgError\",sbCamposDataNoEncontrado";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("msgError"))),(Object)((_sbcamposdatanoencontrados.runMethod(true,"ToString"))));
 BA.debugLineNum = 5830;BA.debugLine="Exit";
Debug.JustUpdateDeviceLine();
this.state = 26;
if (true) break;
 if (true) break;

case 24:
//C
this.state = 25;
 BA.debugLineNum = 5832;BA.debugLine="sbParametros.Remove(sbParametros.Length-1,sbPar";
Debug.JustUpdateDeviceLine();
_sbparametros.runVoidMethod ("Remove",(Object)(RemoteObject.solve(new RemoteObject[] {_sbparametros.runMethod(true,"getLength"),RemoteObject.createImmutable(1)}, "-",1, 1)),(Object)(_sbparametros.runMethod(true,"getLength")));
 BA.debugLineNum = 5833;BA.debugLine="sbQuery.Remove(sbQuery.Length-1,sbQuery.Length)";
Debug.JustUpdateDeviceLine();
_sbquery.runVoidMethod ("Remove",(Object)(RemoteObject.solve(new RemoteObject[] {_sbquery.runMethod(true,"getLength"),RemoteObject.createImmutable(1)}, "-",1, 1)),(Object)(_sbquery.runMethod(true,"getLength")));
 BA.debugLineNum = 5834;BA.debugLine="sbQuery.Append(\") VALUES (\").Append(sbParametro";
Debug.JustUpdateDeviceLine();
_sbquery.runMethod(false,"Append",(Object)(RemoteObject.createImmutable(") VALUES ("))).runMethod(false,"Append",(Object)(_sbparametros.runMethod(true,"ToString"))).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(")")));
 BA.debugLineNum = 5835;BA.debugLine="mSQL.AddNonQueryToBatch(sbQuery, lstValores)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_msql" /*RemoteObject*/ ).runVoidMethod ("AddNonQueryToBatch",(Object)(BA.ObjectToString(_sbquery)),(Object)(_lstvalores));
 BA.debugLineNum = 5837;BA.debugLine="Log(\"SQL Insert list of maps: \" & sbQuery)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9167968855",RemoteObject.concat(RemoteObject.createImmutable("SQL Insert list of maps: "),_sbquery),0);
 BA.debugLineNum = 5838;BA.debugLine="Log(\"Lista valores insert: \" & lstValores)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9167968856",RemoteObject.concat(RemoteObject.createImmutable("Lista valores insert: "),_lstvalores),0);
 if (true) break;

case 25:
//C
this.state = 35;
;
 if (true) break;
if (true) break;
Debug.locals.put("idxData", _idxdata);
;
 BA.debugLineNum = 5844;BA.debugLine="If lstCamposDataNoEncontrados.Size>0 Then";
Debug.JustUpdateDeviceLine();

case 26:
//if
this.state = 29;
if (RemoteObject.solveBoolean(">",_lstcamposdatanoencontrados.runMethod(true,"getSize"),BA.numberCast(double.class, 0))) { 
this.state = 28;
}if (true) break;

case 28:
//C
this.state = 29;
 BA.debugLineNum = 5845;BA.debugLine="Return mResult";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(_mresult));return;};
 if (true) break;

case 29:
//C
this.state = 30;
;
 BA.debugLineNum = 5848;BA.debugLine="lstData.Initialize  'INICIALIZAR LISTA DE REGISTR";
Debug.JustUpdateDeviceLine();
_lstdata.runVoidMethod ("Initialize");
 BA.debugLineNum = 5849;BA.debugLine="Dim SenderFilter As Object = mSQL.ExecNonQueryBat";
Debug.JustUpdateDeviceLine();
_senderfilter = __ref.getField(false,"_msql" /*RemoteObject*/ ).runMethod(false,"ExecNonQueryBatch",__ref.getField(false, "ba"),(Object)(RemoteObject.createImmutable("mSQL")));Debug.locals.put("SenderFilter", _senderfilter);Debug.locals.put("SenderFilter", _senderfilter);
 BA.debugLineNum = 5850;BA.debugLine="Wait For (SenderFilter) mSQL_NonQueryComplete (Su";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","msql_nonquerycomplete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "setrecordsdatalist"), _senderfilter);
this.state = 40;
return;
case 40:
//C
this.state = 30;
_success = (RemoteObject) result.getArrayElement(true,RemoteObject.createImmutable(1));Debug.locals.put("Success", _success);
;
 BA.debugLineNum = 5851;BA.debugLine="If Not(Success) Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 30:
//if
this.state = 33;
if (parent.__c.runMethod(true,"Not",(Object)(_success)).<Boolean>get().booleanValue()) { 
this.state = 32;
}if (true) break;

case 32:
//C
this.state = 33;
 BA.debugLineNum = 5852;BA.debugLine="mResult.Put(\"FlagOK\",False)";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("FlagOK"))),(Object)((parent.__c.getField(true,"False"))));
 BA.debugLineNum = 5853;BA.debugLine="mResult.Put(\"msgError\",\"Error SQLite al insertar";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("msgError"))),(Object)((RemoteObject.concat(RemoteObject.createImmutable("Error SQLite al insertar los registros de la lista de registros."),parent.__c.getField(true,"CRLF"),parent.__c.runMethod(false,"LastException",__ref.getField(false, "ba")).runMethod(true,"getMessage")))));
 BA.debugLineNum = 5854;BA.debugLine="Return mResult";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(_mresult));return;};
 if (true) break;

case 33:
//C
this.state = -1;
;
 BA.debugLineNum = 5859;BA.debugLine="NTotalRegistros=mSQL.ExecQuerySingleResult(\"selec";
Debug.JustUpdateDeviceLine();
__ref.setField ("_ntotalregistros" /*RemoteObject*/ ,BA.numberCast(int.class, __ref.getField(false,"_msql" /*RemoteObject*/ ).runMethod(true,"ExecQuerySingleResult",(Object)(RemoteObject.createImmutable("select count(*) from tblOrigenDatos")))));
 BA.debugLineNum = 5860;BA.debugLine="NPrimerRegistroVisible=1";
Debug.JustUpdateDeviceLine();
__ref.setField ("_nprimerregistrovisible" /*RemoteObject*/ ,BA.numberCast(int.class, 1));
 BA.debugLineNum = 5866;BA.debugLine="Return mResult";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(_mresult));return;};
 BA.debugLineNum = 5867;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static void  _msql_nonquerycomplete(RemoteObject __ref,RemoteObject _success) throws Exception{
}
public static RemoteObject  _setrecordsdataresultset(RemoteObject __ref,RemoteObject _rsdata) throws Exception{
try {
		Debug.PushSubsStack("SetRecordsDataResultset (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,5870);
if (RapidSub.canDelegate("setrecordsdataresultset")) { return __ref.runUserSub(false, "jamtableclv","setrecordsdataresultset", __ref, _rsdata);}
ResumableSub_SetRecordsDataResultset rsub = new ResumableSub_SetRecordsDataResultset(null,__ref,_rsdata);
rsub.remoteResumableSub = anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSubForFilter();
rsub.resume(null, null);
return RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.keywords.Common.ResumableSubWrapper"), rsub.remoteResumableSub);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_SetRecordsDataResultset extends BA.ResumableSub {
public ResumableSub_SetRecordsDataResultset(b4j.docU.jamtableclv parent,RemoteObject __ref,RemoteObject _rsdata) {
this.parent = parent;
this.__ref = __ref;
this._rsdata = _rsdata;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _rsdata;
RemoteObject _mresult = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
RemoteObject _jrs = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
RemoteObject _rsmd = RemoteObject.declareNull("anywheresoftware.b4j.object.JavaObject");
RemoteObject _numreg = RemoteObject.createImmutable(0);
RemoteObject _sbquery = RemoteObject.declareNull("anywheresoftware.b4a.keywords.StringBuilderWrapper");
RemoteObject _sbparametros = RemoteObject.declareNull("anywheresoftware.b4a.keywords.StringBuilderWrapper");
RemoteObject _lstvalores = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.List");
RemoteObject _lstcamposdatanoencontrados = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.List");
RemoteObject _mcd = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
int _idxcolumnasrs = 0;
RemoteObject _campors = RemoteObject.createImmutable("");
RemoteObject _columntype = RemoteObject.createImmutable(0);
RemoteObject _cod = RemoteObject.declareNull("b4j.docU.jamtableclv._campoorigendatosjamtableclv");
RemoteObject _sbcamposdatanoencontrados = RemoteObject.declareNull("anywheresoftware.b4a.keywords.StringBuilderWrapper");
RemoteObject _cnoe = RemoteObject.createImmutable("");
RemoteObject _senderfilter = RemoteObject.declareNull("Object");
RemoteObject _success = RemoteObject.createImmutable(false);
int step22;
int limit22;
RemoteObject group33;
int index33;
int groupLen33;
RemoteObject group47;
int index47;
int groupLen47;

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("SetRecordsDataResultset (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,5870);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
{
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,RemoteObject.createImmutable(null));return;}
case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
Debug.locals.put("rsData", _rsdata);
 BA.debugLineNum = 5872;BA.debugLine="Dim mResult As Map";
Debug.JustUpdateDeviceLine();
_mresult = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");Debug.locals.put("mResult", _mresult);
 BA.debugLineNum = 5873;BA.debugLine="mResult.Initialize";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Initialize");
 BA.debugLineNum = 5874;BA.debugLine="mResult.Put(\"msgError\",\"\")";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("msgError"))),(Object)((RemoteObject.createImmutable(""))));
 BA.debugLineNum = 5875;BA.debugLine="mResult.Put(\"msgAviso\",\"\")";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("msgAviso"))),(Object)((RemoteObject.createImmutable(""))));
 BA.debugLineNum = 5876;BA.debugLine="mResult.Put(\"FlagOK\",True)";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("FlagOK"))),(Object)((parent.__c.getField(true,"True"))));
 BA.debugLineNum = 5877;BA.debugLine="mResult.Put(\"ListaVacia\",False)";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("ListaVacia"))),(Object)((parent.__c.getField(true,"False"))));
 BA.debugLineNum = 5893;BA.debugLine="Dim jrs As JavaObject = rsData";
Debug.JustUpdateDeviceLine();
_jrs = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");
_jrs = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), _rsdata.getObject());Debug.locals.put("jrs", _jrs);Debug.locals.put("jrs", _jrs);
 BA.debugLineNum = 5894;BA.debugLine="Dim rsmd As JavaObject = jrs.RunMethod(\"getMetaDa";
Debug.JustUpdateDeviceLine();
_rsmd = RemoteObject.createNew ("anywheresoftware.b4j.object.JavaObject");
_rsmd = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.object.JavaObject"), _jrs.runMethod(false,"RunMethod",(Object)(BA.ObjectToString("getMetaData")),(Object)((parent.__c.getField(false,"Null")))));Debug.locals.put("rsmd", _rsmd);Debug.locals.put("rsmd", _rsmd);
 BA.debugLineNum = 5896;BA.debugLine="Dim NumReg As Int";
Debug.JustUpdateDeviceLine();
_numreg = RemoteObject.createImmutable(0);Debug.locals.put("NumReg", _numreg);
 BA.debugLineNum = 5897;BA.debugLine="Do While rsData.NextRow";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//do while
this.state = 34;
while (_rsdata.runMethod(true,"NextRow").<Boolean>get().booleanValue()) {
this.state = 3;
if (true) break;
}
if (true) break;

case 3:
//C
this.state = 4;
 BA.debugLineNum = 5899;BA.debugLine="Dim sbQuery As StringBuilder";
Debug.JustUpdateDeviceLine();
_sbquery = RemoteObject.createNew ("anywheresoftware.b4a.keywords.StringBuilderWrapper");Debug.locals.put("sbQuery", _sbquery);
 BA.debugLineNum = 5900;BA.debugLine="sbQuery.Initialize";
Debug.JustUpdateDeviceLine();
_sbquery.runVoidMethod ("Initialize");
 BA.debugLineNum = 5902;BA.debugLine="Dim sbParametros As StringBuilder";
Debug.JustUpdateDeviceLine();
_sbparametros = RemoteObject.createNew ("anywheresoftware.b4a.keywords.StringBuilderWrapper");Debug.locals.put("sbParametros", _sbparametros);
 BA.debugLineNum = 5903;BA.debugLine="sbParametros.Initialize";
Debug.JustUpdateDeviceLine();
_sbparametros.runVoidMethod ("Initialize");
 BA.debugLineNum = 5905;BA.debugLine="Dim lstValores As List";
Debug.JustUpdateDeviceLine();
_lstvalores = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");Debug.locals.put("lstValores", _lstvalores);
 BA.debugLineNum = 5906;BA.debugLine="lstValores.Initialize";
Debug.JustUpdateDeviceLine();
_lstvalores.runVoidMethod ("Initialize");
 BA.debugLineNum = 5908;BA.debugLine="sbQuery.Append(\"INSERT INTO tblOrigenDatos (\")";
Debug.JustUpdateDeviceLine();
_sbquery.runVoidMethod ("Append",(Object)(RemoteObject.createImmutable("INSERT INTO tblOrigenDatos (")));
 BA.debugLineNum = 5915;BA.debugLine="Dim lstCamposDataNoEncontrados As List";
Debug.JustUpdateDeviceLine();
_lstcamposdatanoencontrados = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");Debug.locals.put("lstCamposDataNoEncontrados", _lstcamposdatanoencontrados);
 BA.debugLineNum = 5916;BA.debugLine="lstCamposDataNoEncontrados.Initialize";
Debug.JustUpdateDeviceLine();
_lstcamposdatanoencontrados.runVoidMethod ("Initialize");
 BA.debugLineNum = 5918;BA.debugLine="Dim mCD As Map";
Debug.JustUpdateDeviceLine();
_mcd = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");Debug.locals.put("mCD", _mcd);
 BA.debugLineNum = 5919;BA.debugLine="mCD.Initialize";
Debug.JustUpdateDeviceLine();
_mcd.runVoidMethod ("Initialize");
 BA.debugLineNum = 5921;BA.debugLine="For idxColumnasRS=0 To rsData.ColumnCount-1";
Debug.JustUpdateDeviceLine();
if (true) break;

case 4:
//for
this.state = 15;
step22 = 1;
limit22 = RemoteObject.solve(new RemoteObject[] {_rsdata.runMethod(true,"getColumnCount"),RemoteObject.createImmutable(1)}, "-",1, 1).<Integer>get().intValue();
_idxcolumnasrs = 0 ;
Debug.locals.put("idxColumnasRS", _idxcolumnasrs);
this.state = 42;
if (true) break;

case 42:
//C
this.state = 15;
if ((step22 > 0 && _idxcolumnasrs <= limit22) || (step22 < 0 && _idxcolumnasrs >= limit22)) this.state = 6;
if (true) break;

case 43:
//C
this.state = 42;
_idxcolumnasrs = ((int)(0 + _idxcolumnasrs + step22)) ;
Debug.locals.put("idxColumnasRS", _idxcolumnasrs);
if (true) break;

case 6:
//C
this.state = 7;
 BA.debugLineNum = 5922;BA.debugLine="Dim CampoRS As String=rsData.GetColumnName(idxC";
Debug.JustUpdateDeviceLine();
_campors = _rsdata.runMethod(true,"GetColumnName",(Object)(BA.numberCast(int.class, _idxcolumnasrs)));Debug.locals.put("CampoRS", _campors);Debug.locals.put("CampoRS", _campors);
 BA.debugLineNum = 5924;BA.debugLine="Dim columnType As Int = rsmd.RunMethod(\"getColu";
Debug.JustUpdateDeviceLine();
_columntype = BA.numberCast(int.class, _rsmd.runMethod(false,"RunMethod",(Object)(BA.ObjectToString("getColumnType")),(Object)(RemoteObject.createNewArray("Object",new int[] {1},new Object[] {(RemoteObject.solve(new RemoteObject[] {RemoteObject.createImmutable(_idxcolumnasrs),RemoteObject.createImmutable(1)}, "+",1, 1))}))));Debug.locals.put("columnType", _columntype);Debug.locals.put("columnType", _columntype);
 BA.debugLineNum = 5925;BA.debugLine="If columnType = -2 Or columnType = 2004 Or colu";
Debug.JustUpdateDeviceLine();
if (true) break;

case 7:
//if
this.state = 14;
if (RemoteObject.solveBoolean("=",_columntype,BA.numberCast(double.class, -(double) (0 + 2))) || RemoteObject.solveBoolean("=",_columntype,BA.numberCast(double.class, 2004)) || RemoteObject.solveBoolean("=",_columntype,BA.numberCast(double.class, -(double) (0 + 3))) || RemoteObject.solveBoolean("=",_columntype,BA.numberCast(double.class, -(double) (0 + 4)))) { 
this.state = 9;
}else 
{ BA.debugLineNum = 5928;BA.debugLine="Else if columnType = 2 Or columnType = 3 Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean("=",_columntype,BA.numberCast(double.class, 2)) || RemoteObject.solveBoolean("=",_columntype,BA.numberCast(double.class, 3))) { 
this.state = 11;
}else {
this.state = 13;
}}
if (true) break;

case 9:
//C
this.state = 14;
 BA.debugLineNum = 5927;BA.debugLine="mCD.Put(CampoRS,rsData.GetBlob2(idxColumnasRS)";
Debug.JustUpdateDeviceLine();
_mcd.runVoidMethod ("Put",(Object)((_campors)),(Object)((_rsdata.runMethod(false,"GetBlob2",(Object)(BA.numberCast(int.class, _idxcolumnasrs))))));
 if (true) break;

case 11:
//C
this.state = 14;
 BA.debugLineNum = 5930;BA.debugLine="mCD.Put(CampoRS,rsData.GetDouble2(idxColumnasR";
Debug.JustUpdateDeviceLine();
_mcd.runVoidMethod ("Put",(Object)((_campors)),(Object)((_rsdata.runMethod(true,"GetDouble2",(Object)(BA.numberCast(int.class, _idxcolumnasrs))))));
 if (true) break;

case 13:
//C
this.state = 14;
 BA.debugLineNum = 5933;BA.debugLine="mCD.Put(CampoRS,jrs.RunMethod(\"getObject\", Arr";
Debug.JustUpdateDeviceLine();
_mcd.runVoidMethod ("Put",(Object)((_campors)),(Object)(_jrs.runMethod(false,"RunMethod",(Object)(BA.ObjectToString("getObject")),(Object)(RemoteObject.createNewArray("Object",new int[] {1},new Object[] {(RemoteObject.solve(new RemoteObject[] {RemoteObject.createImmutable(_idxcolumnasrs),RemoteObject.createImmutable(1)}, "+",1, 1))})))));
 if (true) break;

case 14:
//C
this.state = 43;
;
 if (true) break;
if (true) break;
Debug.locals.put("idxColumnasRS", _idxcolumnasrs);
;
 BA.debugLineNum = 5938;BA.debugLine="For Each CoD As CampoOrigenDatosJamTableCLV In m";
Debug.JustUpdateDeviceLine();

case 15:
//for
this.state = 24;
group33 = __ref.getField(false,"_mlstcamposorigendatosnocalculados" /*RemoteObject*/ );
index33 = 0;
groupLen33 = group33.runMethod(true,"getSize").<Integer>get();
Debug.locals.put("CoD", _cod);
this.state = 44;
if (true) break;

case 44:
//C
this.state = 24;
if (index33 < groupLen33) {
this.state = 17;
_cod = (group33.runMethod(false,"Get",index33));Debug.locals.put("CoD", _cod);}
if (true) break;

case 45:
//C
this.state = 44;
index33++;
Debug.locals.put("CoD", _cod);
if (true) break;

case 17:
//C
this.state = 18;
 BA.debugLineNum = 5939;BA.debugLine="If mCD.ContainsKey(CoD.Campo) Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 18:
//if
this.state = 23;
if (_mcd.runMethod(true,"ContainsKey",(Object)((_cod.getField(true,"Campo" /*RemoteObject*/ )))).<Boolean>get().booleanValue()) { 
this.state = 20;
}else {
this.state = 22;
}if (true) break;

case 20:
//C
this.state = 23;
 BA.debugLineNum = 5940;BA.debugLine="sbQuery.Append(\"[\").Append(CoD.AliasCampo).App";
Debug.JustUpdateDeviceLine();
_sbquery.runMethod(false,"Append",(Object)(RemoteObject.createImmutable("["))).runMethod(false,"Append",(Object)(_cod.getField(true,"AliasCampo" /*RemoteObject*/ ))).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable("],")));
 BA.debugLineNum = 5941;BA.debugLine="sbParametros.Append(\"?,\")";
Debug.JustUpdateDeviceLine();
_sbparametros.runVoidMethod ("Append",(Object)(RemoteObject.createImmutable("?,")));
 BA.debugLineNum = 5942;BA.debugLine="lstValores.Add(mCD.Get(CoD.Campo))";
Debug.JustUpdateDeviceLine();
_lstvalores.runVoidMethod ("Add",(Object)(_mcd.runMethod(false,"Get",(Object)((_cod.getField(true,"Campo" /*RemoteObject*/ ))))));
 if (true) break;

case 22:
//C
this.state = 23;
 BA.debugLineNum = 5944;BA.debugLine="lstCamposDataNoEncontrados.Add(CoD.Campo)";
Debug.JustUpdateDeviceLine();
_lstcamposdatanoencontrados.runVoidMethod ("Add",(Object)((_cod.getField(true,"Campo" /*RemoteObject*/ ))));
 if (true) break;

case 23:
//C
this.state = 45;
;
 if (true) break;
if (true) break;
Debug.locals.put("CoD", _cod);
;
 BA.debugLineNum = 5948;BA.debugLine="If lstCamposDataNoEncontrados.Size>0  Then";
Debug.JustUpdateDeviceLine();

case 24:
//if
this.state = 33;
if (RemoteObject.solveBoolean(">",_lstcamposdatanoencontrados.runMethod(true,"getSize"),BA.numberCast(double.class, 0))) { 
this.state = 26;
}else {
this.state = 32;
}if (true) break;

case 26:
//C
this.state = 27;
 BA.debugLineNum = 5949;BA.debugLine="Dim sbCamposDataNoEncontrados As StringBuilder";
Debug.JustUpdateDeviceLine();
_sbcamposdatanoencontrados = RemoteObject.createNew ("anywheresoftware.b4a.keywords.StringBuilderWrapper");Debug.locals.put("sbCamposDataNoEncontrados", _sbcamposdatanoencontrados);
 BA.debugLineNum = 5950;BA.debugLine="sbCamposDataNoEncontrados.Initialize";
Debug.JustUpdateDeviceLine();
_sbcamposdatanoencontrados.runVoidMethod ("Initialize");
 BA.debugLineNum = 5951;BA.debugLine="sbCamposDataNoEncontrados.Append(\"Registro #\" &";
Debug.JustUpdateDeviceLine();
_sbcamposdatanoencontrados.runVoidMethod ("Append",(Object)(RemoteObject.concat(RemoteObject.createImmutable("Registro #"),_numreg,RemoteObject.createImmutable(", faltan los siguientes campos en el REGISTRO de datos."))));
 BA.debugLineNum = 5952;BA.debugLine="sbCamposDataNoEncontrados.Append(\" con la aplic";
Debug.JustUpdateDeviceLine();
_sbcamposdatanoencontrados.runMethod(false,"Append",(Object)(RemoteObject.createImmutable(" con la aplicacion CamposBuilder."))).runMethod(false,"Append",(Object)(parent.__c.getField(true,"CRLF"))).runVoidMethod ("Append",(Object)(parent.__c.getField(true,"CRLF")));
 BA.debugLineNum = 5953;BA.debugLine="For Each CNoE As String In lstCamposDataNoEncon";
Debug.JustUpdateDeviceLine();
if (true) break;

case 27:
//for
this.state = 30;
group47 = _lstcamposdatanoencontrados;
index47 = 0;
groupLen47 = group47.runMethod(true,"getSize").<Integer>get();
Debug.locals.put("CNoE", _cnoe);
this.state = 46;
if (true) break;

case 46:
//C
this.state = 30;
if (index47 < groupLen47) {
this.state = 29;
_cnoe = BA.ObjectToString(group47.runMethod(false,"Get",index47));Debug.locals.put("CNoE", _cnoe);}
if (true) break;

case 47:
//C
this.state = 46;
index47++;
Debug.locals.put("CNoE", _cnoe);
if (true) break;

case 29:
//C
this.state = 47;
 BA.debugLineNum = 5954;BA.debugLine="sbCamposDataNoEncontrados.Append(CNoE).Append(";
Debug.JustUpdateDeviceLine();
_sbcamposdatanoencontrados.runMethod(false,"Append",(Object)(_cnoe)).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(", ")));
 if (true) break;
if (true) break;

case 30:
//C
this.state = 33;
Debug.locals.put("CNoE", _cnoe);
;
 BA.debugLineNum = 5956;BA.debugLine="sbCamposDataNoEncontrados.Remove(sbCamposDataNo";
Debug.JustUpdateDeviceLine();
_sbcamposdatanoencontrados.runVoidMethod ("Remove",(Object)(RemoteObject.solve(new RemoteObject[] {_sbcamposdatanoencontrados.runMethod(true,"getLength"),RemoteObject.createImmutable(2)}, "-",1, 1)),(Object)(_sbcamposdatanoencontrados.runMethod(true,"getLength")));
 BA.debugLineNum = 5957;BA.debugLine="sbCamposDataNoEncontrados.Append(CRLF).Append(C";
Debug.JustUpdateDeviceLine();
_sbcamposdatanoencontrados.runMethod(false,"Append",(Object)(parent.__c.getField(true,"CRLF"))).runMethod(false,"Append",(Object)(parent.__c.getField(true,"CRLF"))).runMethod(false,"Append",(Object)(RemoteObject.createImmutable("Revisar JSON "))).runMethod(false,"Append",(Object)(__ref.getField(true,"_nombrejsonorigendatos" /*RemoteObject*/ ))).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(" y el registro indicado.")));
 BA.debugLineNum = 5958;BA.debugLine="mResult.Put(\"FlagOK\",False)";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("FlagOK"))),(Object)((parent.__c.getField(true,"False"))));
 BA.debugLineNum = 5960;BA.debugLine="mResult.Put(\"msgError\",sbCamposDataNoEncontrado";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("msgError"))),(Object)((_sbcamposdatanoencontrados.runMethod(true,"ToString"))));
 BA.debugLineNum = 5962;BA.debugLine="Exit";
Debug.JustUpdateDeviceLine();
this.state = 34;
if (true) break;
 if (true) break;

case 32:
//C
this.state = 33;
 BA.debugLineNum = 5964;BA.debugLine="sbParametros.Remove(sbParametros.Length-1,sbPar";
Debug.JustUpdateDeviceLine();
_sbparametros.runVoidMethod ("Remove",(Object)(RemoteObject.solve(new RemoteObject[] {_sbparametros.runMethod(true,"getLength"),RemoteObject.createImmutable(1)}, "-",1, 1)),(Object)(_sbparametros.runMethod(true,"getLength")));
 BA.debugLineNum = 5965;BA.debugLine="sbQuery.Remove(sbQuery.Length-1,sbQuery.Length)";
Debug.JustUpdateDeviceLine();
_sbquery.runVoidMethod ("Remove",(Object)(RemoteObject.solve(new RemoteObject[] {_sbquery.runMethod(true,"getLength"),RemoteObject.createImmutable(1)}, "-",1, 1)),(Object)(_sbquery.runMethod(true,"getLength")));
 BA.debugLineNum = 5966;BA.debugLine="sbQuery.Append(\") VALUES (\").Append(sbParametro";
Debug.JustUpdateDeviceLine();
_sbquery.runMethod(false,"Append",(Object)(RemoteObject.createImmutable(") VALUES ("))).runMethod(false,"Append",(Object)(_sbparametros.runMethod(true,"ToString"))).runVoidMethod ("Append",(Object)(RemoteObject.createImmutable(")")));
 BA.debugLineNum = 5967;BA.debugLine="mSQL.AddNonQueryToBatch(sbQuery, lstValores)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_msql" /*RemoteObject*/ ).runVoidMethod ("AddNonQueryToBatch",(Object)(BA.ObjectToString(_sbquery)),(Object)(_lstvalores));
 if (true) break;

case 33:
//C
this.state = 1;
;
 BA.debugLineNum = 5973;BA.debugLine="NumReg=NumReg+1";
Debug.JustUpdateDeviceLine();
_numreg = RemoteObject.solve(new RemoteObject[] {_numreg,RemoteObject.createImmutable(1)}, "+",1, 1);Debug.locals.put("NumReg", _numreg);
 if (true) break;

case 34:
//C
this.state = 35;
;
 BA.debugLineNum = 5975;BA.debugLine="rsData.Close";
Debug.JustUpdateDeviceLine();
_rsdata.runVoidMethod ("Close");
 BA.debugLineNum = 5977;BA.debugLine="Dim SenderFilter As Object = mSQL.ExecNonQueryBat";
Debug.JustUpdateDeviceLine();
_senderfilter = __ref.getField(false,"_msql" /*RemoteObject*/ ).runMethod(false,"ExecNonQueryBatch",__ref.getField(false, "ba"),(Object)(RemoteObject.createImmutable("mSQL")));Debug.locals.put("SenderFilter", _senderfilter);Debug.locals.put("SenderFilter", _senderfilter);
 BA.debugLineNum = 5978;BA.debugLine="Wait For (SenderFilter) mSQL_NonQueryComplete (Su";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","msql_nonquerycomplete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "setrecordsdataresultset"), _senderfilter);
this.state = 48;
return;
case 48:
//C
this.state = 35;
_success = (RemoteObject) result.getArrayElement(true,RemoteObject.createImmutable(1));Debug.locals.put("Success", _success);
;
 BA.debugLineNum = 5979;BA.debugLine="If Not(Success) Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 35:
//if
this.state = 38;
if (parent.__c.runMethod(true,"Not",(Object)(_success)).<Boolean>get().booleanValue()) { 
this.state = 37;
}if (true) break;

case 37:
//C
this.state = 38;
 BA.debugLineNum = 5980;BA.debugLine="mResult.Put(\"FlagOK\",False)";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("FlagOK"))),(Object)((parent.__c.getField(true,"False"))));
 BA.debugLineNum = 5981;BA.debugLine="mResult.Put(\"msgError\",\"Error SQLite al insertar";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("msgError"))),(Object)((RemoteObject.concat(RemoteObject.createImmutable("Error SQLite al insertar los registros del resultset."),parent.__c.getField(true,"CRLF"),parent.__c.runMethod(false,"LastException",__ref.getField(false, "ba")).runMethod(true,"getMessage")))));
 BA.debugLineNum = 5982;BA.debugLine="Return mResult";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(_mresult));return;};
 if (true) break;
;
 BA.debugLineNum = 5985;BA.debugLine="If NumReg=0 Then";
Debug.JustUpdateDeviceLine();

case 38:
//if
this.state = 41;
if (RemoteObject.solveBoolean("=",_numreg,BA.numberCast(double.class, 0))) { 
this.state = 40;
}if (true) break;

case 40:
//C
this.state = 41;
 BA.debugLineNum = 5986;BA.debugLine="mResult.Put(\"FlagOK\",False)";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("FlagOK"))),(Object)((parent.__c.getField(true,"False"))));
 BA.debugLineNum = 5987;BA.debugLine="mResult.Put(\"msgAviso\",\"La lista de datos está v";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("msgAviso"))),(Object)((RemoteObject.createImmutable("La lista de datos está vacía."))));
 BA.debugLineNum = 5988;BA.debugLine="mResult.Put(\"ListaVacia\",True)";
Debug.JustUpdateDeviceLine();
_mresult.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("ListaVacia"))),(Object)((parent.__c.getField(true,"True"))));
 BA.debugLineNum = 5990;BA.debugLine="Return mResult";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(_mresult));return;};
 if (true) break;

case 41:
//C
this.state = -1;
;
 BA.debugLineNum = 5995;BA.debugLine="NTotalRegistros=mSQL.ExecQuerySingleResult(\"selec";
Debug.JustUpdateDeviceLine();
__ref.setField ("_ntotalregistros" /*RemoteObject*/ ,BA.numberCast(int.class, __ref.getField(false,"_msql" /*RemoteObject*/ ).runMethod(true,"ExecQuerySingleResult",(Object)(RemoteObject.createImmutable("select count(*) from tblOrigenDatos")))));
 BA.debugLineNum = 5997;BA.debugLine="NPrimerRegistroVisible=1";
Debug.JustUpdateDeviceLine();
__ref.setField ("_nprimerregistrovisible" /*RemoteObject*/ ,BA.numberCast(int.class, 1));
 BA.debugLineNum = 6003;BA.debugLine="Return mResult";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(_mresult));return;};
 BA.debugLineNum = 6004;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static RemoteObject  _settextopanelinfojamtableclv(RemoteObject __ref,RemoteObject _textopanelinfo) throws Exception{
try {
		Debug.PushSubsStack("setTextoPanelInfoJamTableCLV (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,4516);
if (RapidSub.canDelegate("settextopanelinfojamtableclv")) { return __ref.runUserSub(false, "jamtableclv","settextopanelinfojamtableclv", __ref, _textopanelinfo);}
Debug.locals.put("TextoPanelInfo", _textopanelinfo);
 BA.debugLineNum = 4516;BA.debugLine="Public Sub setTextoPanelInfoJamTableCLV(TextoPanel";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 4517;BA.debugLine="lblInfoJamTableCLV.Text=TextoPanelInfo";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_lblinfojamtableclv" /*RemoteObject*/ ).runMethod(true,"setText",BA.ObjectToString(_textopanelinfo));
 BA.debugLineNum = 4518;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _setusarpclv(RemoteObject __ref,RemoteObject _usarpclv) throws Exception{
try {
		Debug.PushSubsStack("setUsarPCLV (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,694);
if (RapidSub.canDelegate("setusarpclv")) { return __ref.runUserSub(false, "jamtableclv","setusarpclv", __ref, _usarpclv);}
Debug.locals.put("UsarPCLV", _usarpclv);
 BA.debugLineNum = 694;BA.debugLine="Sub setUsarPCLV(UsarPCLV As Boolean)";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 695;BA.debugLine="mUsarPCLV=UsarPCLV";
Debug.JustUpdateDeviceLine();
__ref.setField ("_musarpclv" /*RemoteObject*/ ,_usarpclv);
 BA.debugLineNum = 696;BA.debugLine="HabilitarPCLV(UsarPCLV)";
Debug.JustUpdateDeviceLine();
__ref.runClassMethod (b4j.docU.jamtableclv.class, "_habilitarpclv" /*RemoteObject*/ ,(Object)(_usarpclv));
 BA.debugLineNum = 697;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _texttoimageawesome(RemoteObject __ref,RemoteObject _s,RemoteObject _fontsize) throws Exception{
try {
		Debug.PushSubsStack("TextToImageAwesome (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,1353);
if (RapidSub.canDelegate("texttoimageawesome")) { return __ref.runUserSub(false, "jamtableclv","texttoimageawesome", __ref, _s, _fontsize);}
RemoteObject _img = RemoteObject.declareNull("anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper");
RemoteObject _lbl = RemoteObject.declareNull("anywheresoftware.b4j.objects.LabelWrapper");
RemoteObject _p = RemoteObject.declareNull("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
Debug.locals.put("s", _s);
Debug.locals.put("FontSize", _fontsize);
 BA.debugLineNum = 1353;BA.debugLine="public Sub TextToImageAwesome(s As String, FontSiz";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 1354;BA.debugLine="Dim img As Image";
Debug.JustUpdateDeviceLine();
_img = RemoteObject.createNew ("anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper");Debug.locals.put("img", _img);
 BA.debugLineNum = 1355;BA.debugLine="Dim lbl As Label";
Debug.JustUpdateDeviceLine();
_lbl = RemoteObject.createNew ("anywheresoftware.b4j.objects.LabelWrapper");Debug.locals.put("lbl", _lbl);
 BA.debugLineNum = 1356;BA.debugLine="lbl.Initialize(\"lbl\")";
Debug.JustUpdateDeviceLine();
_lbl.runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(RemoteObject.createImmutable("lbl")));
 BA.debugLineNum = 1357;BA.debugLine="lbl.Font = fx.CreateFontAwesome(FontSize)";
Debug.JustUpdateDeviceLine();
_lbl.runMethod(false,"setFont",__ref.getField(false,"_fx" /*RemoteObject*/ ).runMethod(false,"CreateFontAwesome",(Object)(_fontsize)));
 BA.debugLineNum = 1358;BA.debugLine="lbl.Text = s";
Debug.JustUpdateDeviceLine();
_lbl.runMethod(true,"setText",_s);
 BA.debugLineNum = 1360;BA.debugLine="Dim p As Pane=mParentForm.RootPane";
Debug.JustUpdateDeviceLine();
_p = RemoteObject.createNew ("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
_p = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper"), __ref.getField(false,"_mparentform" /*RemoteObject*/ ).runMethod(false,"getRootPane").getObject());Debug.locals.put("p", _p);Debug.locals.put("p", _p);
 BA.debugLineNum = 1361;BA.debugLine="p.AddNode(lbl, -1, -1, -1, -1)";
Debug.JustUpdateDeviceLine();
_p.runVoidMethod ("AddNode",(Object)((_lbl.getObject())),(Object)(BA.numberCast(double.class, -(double) (0 + 1))),(Object)(BA.numberCast(double.class, -(double) (0 + 1))),(Object)(BA.numberCast(double.class, -(double) (0 + 1))),(Object)(BA.numberCast(double.class, -(double) (0 + 1))));
 BA.debugLineNum = 1363;BA.debugLine="img = lbl.Snapshot2(fx.Colors.Transparent) ' snap";
Debug.JustUpdateDeviceLine();
_img = _lbl.runMethod(false,"Snapshot2",(Object)(__ref.getField(false,"_fx" /*RemoteObject*/ ).getField(false,"Colors").getField(false,"Transparent")));Debug.locals.put("img", _img);
 BA.debugLineNum = 1364;BA.debugLine="lbl.Visible = False";
Debug.JustUpdateDeviceLine();
_lbl.runMethod(true,"setVisible",jamtableclv.__c.getField(true,"False"));
 BA.debugLineNum = 1366;BA.debugLine="p.RemoveNodeAt(p.NumberOfNodes-1)";
Debug.JustUpdateDeviceLine();
_p.runVoidMethod ("RemoveNodeAt",(Object)(RemoteObject.solve(new RemoteObject[] {_p.runMethod(true,"getNumberOfNodes"),RemoteObject.createImmutable(1)}, "-",1, 1)));
 BA.debugLineNum = 1367;BA.debugLine="Return img";
Debug.JustUpdateDeviceLine();
if (true) return _img;
 BA.debugLineNum = 1368;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _texttoimagematerialicons(RemoteObject __ref,RemoteObject _s,RemoteObject _fontsize) throws Exception{
try {
		Debug.PushSubsStack("TextToImageMaterialIcons (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,1370);
if (RapidSub.canDelegate("texttoimagematerialicons")) { return __ref.runUserSub(false, "jamtableclv","texttoimagematerialicons", __ref, _s, _fontsize);}
RemoteObject _img = RemoteObject.declareNull("anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper");
RemoteObject _lbl = RemoteObject.declareNull("anywheresoftware.b4j.objects.LabelWrapper");
RemoteObject _p = RemoteObject.declareNull("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
Debug.locals.put("s", _s);
Debug.locals.put("FontSize", _fontsize);
 BA.debugLineNum = 1370;BA.debugLine="public Sub TextToImageMaterialIcons(s As String, F";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 1371;BA.debugLine="Dim img As Image";
Debug.JustUpdateDeviceLine();
_img = RemoteObject.createNew ("anywheresoftware.b4j.objects.ImageViewWrapper.ImageWrapper");Debug.locals.put("img", _img);
 BA.debugLineNum = 1372;BA.debugLine="Dim lbl As Label";
Debug.JustUpdateDeviceLine();
_lbl = RemoteObject.createNew ("anywheresoftware.b4j.objects.LabelWrapper");Debug.locals.put("lbl", _lbl);
 BA.debugLineNum = 1373;BA.debugLine="lbl.Initialize(\"lbl\")";
Debug.JustUpdateDeviceLine();
_lbl.runVoidMethod ("Initialize",__ref.getField(false, "ba"),(Object)(RemoteObject.createImmutable("lbl")));
 BA.debugLineNum = 1374;BA.debugLine="lbl.Font = fx.CreateMaterialIcons(FontSize)";
Debug.JustUpdateDeviceLine();
_lbl.runMethod(false,"setFont",__ref.getField(false,"_fx" /*RemoteObject*/ ).runMethod(false,"CreateMaterialIcons",(Object)(_fontsize)));
 BA.debugLineNum = 1375;BA.debugLine="lbl.Text = s";
Debug.JustUpdateDeviceLine();
_lbl.runMethod(true,"setText",_s);
 BA.debugLineNum = 1377;BA.debugLine="Dim p As Pane=mParentForm.RootPane";
Debug.JustUpdateDeviceLine();
_p = RemoteObject.createNew ("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper");
_p = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.PaneWrapper.ConcretePaneWrapper"), __ref.getField(false,"_mparentform" /*RemoteObject*/ ).runMethod(false,"getRootPane").getObject());Debug.locals.put("p", _p);Debug.locals.put("p", _p);
 BA.debugLineNum = 1378;BA.debugLine="p.AddNode(lbl, -1, -1, -1, -1)";
Debug.JustUpdateDeviceLine();
_p.runVoidMethod ("AddNode",(Object)((_lbl.getObject())),(Object)(BA.numberCast(double.class, -(double) (0 + 1))),(Object)(BA.numberCast(double.class, -(double) (0 + 1))),(Object)(BA.numberCast(double.class, -(double) (0 + 1))),(Object)(BA.numberCast(double.class, -(double) (0 + 1))));
 BA.debugLineNum = 1380;BA.debugLine="img = lbl.Snapshot2(fx.Colors.Transparent) ' snap";
Debug.JustUpdateDeviceLine();
_img = _lbl.runMethod(false,"Snapshot2",(Object)(__ref.getField(false,"_fx" /*RemoteObject*/ ).getField(false,"Colors").getField(false,"Transparent")));Debug.locals.put("img", _img);
 BA.debugLineNum = 1381;BA.debugLine="lbl.Visible = False";
Debug.JustUpdateDeviceLine();
_lbl.runMethod(true,"setVisible",jamtableclv.__c.getField(true,"False"));
 BA.debugLineNum = 1383;BA.debugLine="p.RemoveNodeAt(p.NumberOfNodes-1)";
Debug.JustUpdateDeviceLine();
_p.runVoidMethod ("RemoveNodeAt",(Object)(RemoteObject.solve(new RemoteObject[] {_p.runMethod(true,"getNumberOfNodes"),RemoteObject.createImmutable(1)}, "-",1, 1)));
 BA.debugLineNum = 1384;BA.debugLine="Return img";
Debug.JustUpdateDeviceLine();
if (true) return _img;
 BA.debugLineNum = 1385;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _tickstoexceldate(RemoteObject __ref,RemoteObject _t) throws Exception{
try {
		Debug.PushSubsStack("TicksToExcelDate (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,8072);
if (RapidSub.canDelegate("tickstoexceldate")) { return __ref.runUserSub(false, "jamtableclv","tickstoexceldate", __ref, _t);}
RemoteObject _t0 = RemoteObject.createImmutable(0L);
RemoteObject _p = RemoteObject.declareNull("b4j.example.dateutils._period");
RemoteObject _diasexcel = RemoteObject.createImmutable(0);
Debug.locals.put("t", _t);
 BA.debugLineNum = 8072;BA.debugLine="Public Sub TicksToExcelDate(t As Long) As Double";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 8074;BA.debugLine="Dim t0 As Long=DateUtils.SetDate(1900,1,1)";
Debug.JustUpdateDeviceLine();
_t0 = jamtableclv._dateutils.runMethod(true,"_setdate",(Object)(BA.numberCast(int.class, 1900)),(Object)(BA.numberCast(int.class, 1)),(Object)(BA.numberCast(int.class, 1)));Debug.locals.put("t0", _t0);Debug.locals.put("t0", _t0);
 BA.debugLineNum = 8076;BA.debugLine="Dim p As Period=DateUtils.PeriodBetweenInDays(t0,";
Debug.JustUpdateDeviceLine();
_p = jamtableclv._dateutils.runMethod(false,"_periodbetweenindays",(Object)(_t0),(Object)(_t));Debug.locals.put("p", _p);Debug.locals.put("p", _p);
 BA.debugLineNum = 8077;BA.debugLine="Dim DiasExcel As Double=p.Days+2+p.Hours/24+p.Min";
Debug.JustUpdateDeviceLine();
_diasexcel = RemoteObject.solve(new RemoteObject[] {_p.getField(true,"Days"),RemoteObject.createImmutable(2),_p.getField(true,"Hours"),RemoteObject.createImmutable(24),_p.getField(true,"Minutes"),(RemoteObject.solve(new RemoteObject[] {RemoteObject.createImmutable(60),RemoteObject.createImmutable(24)}, "*",0, 1)),_p.getField(true,"Seconds"),(RemoteObject.solve(new RemoteObject[] {RemoteObject.createImmutable(60),RemoteObject.createImmutable(60),RemoteObject.createImmutable(24)}, "**",0, 1))}, "++/+/+/",4, 0);Debug.locals.put("DiasExcel", _diasexcel);Debug.locals.put("DiasExcel", _diasexcel);
 BA.debugLineNum = 8079;BA.debugLine="Return(DiasExcel)";
Debug.JustUpdateDeviceLine();
if (true) return (_diasexcel);
 BA.debugLineNum = 8081;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable(0);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _totalescamponodoseleccionado(RemoteObject __ref,RemoteObject _csel,RemoteObject _sfunciontotal) throws Exception{
try {
		Debug.PushSubsStack("TotalesCampoNodoSeleccionado (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,1637);
if (RapidSub.canDelegate("totalescamponodoseleccionado")) { return __ref.runUserSub(false, "jamtableclv","totalescamponodoseleccionado", __ref, _csel, _sfunciontotal);}
RemoteObject _valorcamponodo = RemoteObject.declareNull("Object");
RemoteObject _valorcamponodofiltrado = RemoteObject.declareNull("Object");
RemoteObject _stitulofuncion = RemoteObject.createImmutable("");
RemoteObject _sbtextomensaje = RemoteObject.declareNull("anywheresoftware.b4a.keywords.StringBuilderWrapper");
RemoteObject _valorcamponodoint = RemoteObject.createImmutable(0);
RemoteObject _svalorcamponodoint = RemoteObject.createImmutable("");
RemoteObject _valorcamponodofiltradaint = RemoteObject.createImmutable(0);
RemoteObject _svalorcampocolumnafiltradaint = RemoteObject.createImmutable("");
RemoteObject _valorcamponododouble = RemoteObject.createImmutable(0);
RemoteObject _svalorcamponododouble = RemoteObject.createImmutable("");
RemoteObject _valorcamponodofiltradodouble = RemoteObject.createImmutable(0);
RemoteObject _svalorcamponodofiltradodouble = RemoteObject.createImmutable("");
Debug.locals.put("cSel", _csel);
Debug.locals.put("sFuncionTotal", _sfunciontotal);
 BA.debugLineNum = 1637;BA.debugLine="Private Sub TotalesCampoNodoSeleccionado(cSel As C";
Debug.JustUpdateDeviceLine();
 BA.debugLineNum = 1639;BA.debugLine="Dim ValorCampoNodo As Object=mSQL.ExecQuerySingle";
Debug.JustUpdateDeviceLine();
_valorcamponodo = (__ref.getField(false,"_msql" /*RemoteObject*/ ).runMethod(true,"ExecQuerySingleResult",(Object)(RemoteObject.concat(RemoteObject.createImmutable("select "),_sfunciontotal,RemoteObject.createImmutable("(["),_csel.getField(true,"AliasCampo" /*RemoteObject*/ ),RemoteObject.createImmutable("]) from tblOrigenDatos")))));Debug.locals.put("ValorCampoNodo", _valorcamponodo);Debug.locals.put("ValorCampoNodo", _valorcamponodo);
 BA.debugLineNum = 1640;BA.debugLine="If lstValoresFiltros.Size>0 Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean(">",__ref.getField(false,"_lstvaloresfiltros" /*RemoteObject*/ ).runMethod(true,"getSize"),BA.numberCast(double.class, 0))) { 
 BA.debugLineNum = 1641;BA.debugLine="Dim ValorCampoNodoFiltrado As Object=mSQL.ExecQu";
Debug.JustUpdateDeviceLine();
_valorcamponodofiltrado = (__ref.getField(false,"_msql" /*RemoteObject*/ ).runMethod(true,"ExecQuerySingleResult2",(Object)(RemoteObject.concat(RemoteObject.createImmutable("select "),_sfunciontotal,RemoteObject.createImmutable("(["),_csel.getField(true,"AliasCampo" /*RemoteObject*/ ),RemoteObject.createImmutable("]) from tblOrigenDatos where "),__ref.getField(true,"_scamposfiltrados" /*RemoteObject*/ ))),(Object)(__ref.getField(false,"_lstvaloresfiltros" /*RemoteObject*/ ))));Debug.locals.put("ValorCampoNodoFiltrado", _valorcamponodofiltrado);Debug.locals.put("ValorCampoNodoFiltrado", _valorcamponodofiltrado);
 };
 BA.debugLineNum = 1643;BA.debugLine="Dim sTituloFuncion As String";
Debug.JustUpdateDeviceLine();
_stitulofuncion = RemoteObject.createImmutable("");Debug.locals.put("sTituloFuncion", _stitulofuncion);
 BA.debugLineNum = 1644;BA.debugLine="Select sFuncionTotal.ToUpperCase";
Debug.JustUpdateDeviceLine();
switch (BA.switchObjectToInt(_sfunciontotal.runMethod(true,"toUpperCase"),BA.ObjectToString("SUM"),BA.ObjectToString("AVG"),BA.ObjectToString("MAX"),BA.ObjectToString("MIN"))) {
case 0: {
 BA.debugLineNum = 1646;BA.debugLine="sTituloFuncion=\"Suma\"";
Debug.JustUpdateDeviceLine();
_stitulofuncion = BA.ObjectToString("Suma");Debug.locals.put("sTituloFuncion", _stitulofuncion);
 break; }
case 1: {
 BA.debugLineNum = 1648;BA.debugLine="sTituloFuncion=\"Promedio\"";
Debug.JustUpdateDeviceLine();
_stitulofuncion = BA.ObjectToString("Promedio");Debug.locals.put("sTituloFuncion", _stitulofuncion);
 break; }
case 2: {
 BA.debugLineNum = 1650;BA.debugLine="sTituloFuncion=\"Máximo\"";
Debug.JustUpdateDeviceLine();
_stitulofuncion = BA.ObjectToString("Máximo");Debug.locals.put("sTituloFuncion", _stitulofuncion);
 break; }
case 3: {
 BA.debugLineNum = 1652;BA.debugLine="sTituloFuncion=\"Mínimo\"";
Debug.JustUpdateDeviceLine();
_stitulofuncion = BA.ObjectToString("Mínimo");Debug.locals.put("sTituloFuncion", _stitulofuncion);
 break; }
}
;
 BA.debugLineNum = 1654;BA.debugLine="Dim sbTextoMensaje As StringBuilder";
Debug.JustUpdateDeviceLine();
_sbtextomensaje = RemoteObject.createNew ("anywheresoftware.b4a.keywords.StringBuilderWrapper");Debug.locals.put("sbTextoMensaje", _sbtextomensaje);
 BA.debugLineNum = 1655;BA.debugLine="sbTextoMensaje.Initialize";
Debug.JustUpdateDeviceLine();
_sbtextomensaje.runVoidMethod ("Initialize");
 BA.debugLineNum = 1656;BA.debugLine="Select cSel.TipoDato";
Debug.JustUpdateDeviceLine();
switch (BA.switchObjectToInt(_csel.getField(true,"TipoDato" /*RemoteObject*/ ),BA.ObjectToString("INTEGER"),BA.ObjectToString("REAL"))) {
case 0: {
 BA.debugLineNum = 1658;BA.debugLine="Dim ValorCampoNodoInt As Int=ValorCampoNodo";
Debug.JustUpdateDeviceLine();
_valorcamponodoint = BA.numberCast(int.class, _valorcamponodo);Debug.locals.put("ValorCampoNodoInt", _valorcamponodoint);Debug.locals.put("ValorCampoNodoInt", _valorcamponodoint);
 BA.debugLineNum = 1659;BA.debugLine="Dim sValorCampoNodoInt As String=FormatoNumeric";
Debug.JustUpdateDeviceLine();
_svalorcamponodoint = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_formatonumerico2" /*RemoteObject*/ ,(Object)(BA.numberCast(double.class, _valorcamponodoint)),(Object)(BA.numberCast(int.class, 1)),(Object)(BA.numberCast(int.class, 0)),(Object)(BA.numberCast(int.class, 0)),(Object)(jamtableclv.__c.getField(true,"True")));Debug.locals.put("sValorCampoNodoInt", _svalorcamponodoint);Debug.locals.put("sValorCampoNodoInt", _svalorcamponodoint);
 BA.debugLineNum = 1660;BA.debugLine="sbTextoMensaje.Append(\"Total \").Append(sTituloF";
Debug.JustUpdateDeviceLine();
_sbtextomensaje.runMethod(false,"Append",(Object)(RemoteObject.createImmutable("Total "))).runMethod(false,"Append",(Object)(_stitulofuncion)).runMethod(false,"Append",(Object)(RemoteObject.createImmutable(" "))).runMethod(false,"Append",(Object)(_csel.getField(true,"AliasCampo" /*RemoteObject*/ ))).runMethod(false,"Append",(Object)(RemoteObject.createImmutable(":  "))).runVoidMethod ("Append",(Object)(_svalorcamponodoint));
 BA.debugLineNum = 1661;BA.debugLine="If lstValoresFiltros.Size>0 Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean(">",__ref.getField(false,"_lstvaloresfiltros" /*RemoteObject*/ ).runMethod(true,"getSize"),BA.numberCast(double.class, 0))) { 
 BA.debugLineNum = 1662;BA.debugLine="Dim ValorCampoNodoFiltradaInt As Int=ValorCamp";
Debug.JustUpdateDeviceLine();
_valorcamponodofiltradaint = BA.numberCast(int.class, _valorcamponodofiltrado);Debug.locals.put("ValorCampoNodoFiltradaInt", _valorcamponodofiltradaint);Debug.locals.put("ValorCampoNodoFiltradaInt", _valorcamponodofiltradaint);
 BA.debugLineNum = 1663;BA.debugLine="Dim sValorCampoColumnaFiltradaInt As String=Nu";
Debug.JustUpdateDeviceLine();
_svalorcampocolumnafiltradaint = jamtableclv.__c.runMethod(true,"NumberFormat2",(Object)(BA.numberCast(double.class, _valorcamponodofiltradaint)),(Object)(BA.numberCast(int.class, 1)),(Object)(BA.numberCast(int.class, 0)),(Object)(BA.numberCast(int.class, 0)),(Object)(jamtableclv.__c.getField(true,"True"))).runMethod(true,"replace",(Object)(BA.ObjectToString(",")),(Object)(RemoteObject.createImmutable(".")));Debug.locals.put("sValorCampoColumnaFiltradaInt", _svalorcampocolumnafiltradaint);Debug.locals.put("sValorCampoColumnaFiltradaInt", _svalorcampocolumnafiltradaint);
 BA.debugLineNum = 1664;BA.debugLine="sbTextoMensaje.Append(CRLF).Append(CRLF).Appen";
Debug.JustUpdateDeviceLine();
_sbtextomensaje.runMethod(false,"Append",(Object)(jamtableclv.__c.getField(true,"CRLF"))).runMethod(false,"Append",(Object)(jamtableclv.__c.getField(true,"CRLF"))).runMethod(false,"Append",(Object)(RemoteObject.createImmutable("Total "))).runMethod(false,"Append",(Object)(_stitulofuncion)).runMethod(false,"Append",(Object)(RemoteObject.createImmutable(" "))).runMethod(false,"Append",(Object)(_csel.getField(true,"AliasCampo" /*RemoteObject*/ ))).runMethod(false,"Append",(Object)(RemoteObject.createImmutable(" Registros Filtrados:  "))).runVoidMethod ("Append",(Object)(_svalorcampocolumnafiltradaint));
 };
 break; }
case 1: {
 BA.debugLineNum = 1668;BA.debugLine="Dim ValorCampoNodoDouble As Double=ValorCampoNo";
Debug.JustUpdateDeviceLine();
_valorcamponododouble = BA.numberCast(double.class, _valorcamponodo);Debug.locals.put("ValorCampoNodoDouble", _valorcamponododouble);Debug.locals.put("ValorCampoNodoDouble", _valorcamponododouble);
 BA.debugLineNum = 1669;BA.debugLine="Dim sValorCampoNodoDouble As String=FormatoNume";
Debug.JustUpdateDeviceLine();
_svalorcamponododouble = __ref.runClassMethod (b4j.docU.jamtableclv.class, "_formatonumerico2" /*RemoteObject*/ ,(Object)(_valorcamponododouble),(Object)(BA.numberCast(int.class, 1)),(Object)(BA.numberCast(int.class, 2)),(Object)(BA.numberCast(int.class, 0)),(Object)(jamtableclv.__c.getField(true,"True")));Debug.locals.put("sValorCampoNodoDouble", _svalorcamponododouble);Debug.locals.put("sValorCampoNodoDouble", _svalorcamponododouble);
 BA.debugLineNum = 1670;BA.debugLine="sbTextoMensaje.Append(\"Total \").Append(sTituloF";
Debug.JustUpdateDeviceLine();
_sbtextomensaje.runMethod(false,"Append",(Object)(RemoteObject.createImmutable("Total "))).runMethod(false,"Append",(Object)(_stitulofuncion)).runMethod(false,"Append",(Object)(RemoteObject.createImmutable(" "))).runMethod(false,"Append",(Object)(_csel.getField(true,"AliasCampo" /*RemoteObject*/ ))).runMethod(false,"Append",(Object)(RemoteObject.createImmutable(":  "))).runVoidMethod ("Append",(Object)(_svalorcamponododouble));
 BA.debugLineNum = 1671;BA.debugLine="If lstValoresFiltros.Size>0 Then";
Debug.JustUpdateDeviceLine();
if (RemoteObject.solveBoolean(">",__ref.getField(false,"_lstvaloresfiltros" /*RemoteObject*/ ).runMethod(true,"getSize"),BA.numberCast(double.class, 0))) { 
 BA.debugLineNum = 1672;BA.debugLine="Dim ValorCampoNodoFiltradoDouble As Double=Val";
Debug.JustUpdateDeviceLine();
_valorcamponodofiltradodouble = BA.numberCast(double.class, _valorcamponodofiltrado);Debug.locals.put("ValorCampoNodoFiltradoDouble", _valorcamponodofiltradodouble);Debug.locals.put("ValorCampoNodoFiltradoDouble", _valorcamponodofiltradodouble);
 BA.debugLineNum = 1673;BA.debugLine="Dim sValorCampoNodoFiltradoDouble As String=Nu";
Debug.JustUpdateDeviceLine();
_svalorcamponodofiltradodouble = jamtableclv.__c.runMethod(true,"NumberFormat2",(Object)(_valorcamponodofiltradodouble),(Object)(BA.numberCast(int.class, 1)),(Object)(BA.numberCast(int.class, 2)),(Object)(BA.numberCast(int.class, 0)),(Object)(jamtableclv.__c.getField(true,"True")));Debug.locals.put("sValorCampoNodoFiltradoDouble", _svalorcamponodofiltradodouble);Debug.locals.put("sValorCampoNodoFiltradoDouble", _svalorcamponodofiltradodouble);
 BA.debugLineNum = 1674;BA.debugLine="sbTextoMensaje.Append(CRLF).Append(CRLF).Appen";
Debug.JustUpdateDeviceLine();
_sbtextomensaje.runMethod(false,"Append",(Object)(jamtableclv.__c.getField(true,"CRLF"))).runMethod(false,"Append",(Object)(jamtableclv.__c.getField(true,"CRLF"))).runMethod(false,"Append",(Object)(RemoteObject.createImmutable("Total "))).runMethod(false,"Append",(Object)(_stitulofuncion)).runMethod(false,"Append",(Object)(RemoteObject.createImmutable(" "))).runMethod(false,"Append",(Object)(_csel.getField(true,"AliasCampo" /*RemoteObject*/ ))).runMethod(false,"Append",(Object)(RemoteObject.createImmutable(" Registros Filtrados:  "))).runVoidMethod ("Append",(Object)(_svalorcamponodofiltradodouble));
 };
 break; }
}
;
 BA.debugLineNum = 1678;BA.debugLine="fx.Msgbox(mParentForm,sbTextoMensaje.ToString,sTi";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_fx" /*RemoteObject*/ ).runVoidMethodAndSync ("Msgbox",(Object)(__ref.getField(false,"_mparentform" /*RemoteObject*/ )),(Object)(_sbtextomensaje.runMethod(true,"ToString")),(Object)(RemoteObject.concat(_stitulofuncion,RemoteObject.createImmutable("  "),_csel.getField(true,"AliasCampo" /*RemoteObject*/ ))));
 BA.debugLineNum = 1679;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
return RemoteObject.createImmutable("");
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static RemoteObject  _totalescamposnumericos(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("TotalesCamposNumericos (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7431);
if (RapidSub.canDelegate("totalescamposnumericos")) { return __ref.runUserSub(false, "jamtableclv","totalescamposnumericos", __ref);}
ResumableSub_TotalesCamposNumericos rsub = new ResumableSub_TotalesCamposNumericos(null,__ref);
rsub.remoteResumableSub = anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSubForFilter();
rsub.resume(null, null);
return RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.keywords.Common.ResumableSubWrapper"), rsub.remoteResumableSub);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_TotalesCamposNumericos extends BA.ResumableSub {
public ResumableSub_TotalesCamposNumericos(b4j.docU.jamtableclv parent,RemoteObject __ref) {
this.parent = parent;
this.__ref = __ref;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _lstfunciones = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.List");
RemoteObject _lstdatostotalescamposnumericos = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.List");
RemoteObject _c = RemoteObject.declareNull("b4j.docU.jamtableclv._campoorigendatosjamtableclv");
RemoteObject _mdatos = RemoteObject.declareNull("anywheresoftware.b4a.objects.collections.Map");
RemoteObject _sfunciontotal = RemoteObject.createImmutable("");
RemoteObject _valorcampocolumna = RemoteObject.declareNull("Object");
RemoteObject _stitulofuncion = RemoteObject.createImmutable("");
RemoteObject _valorcampocolumnaint = RemoteObject.createImmutable(0);
RemoteObject _svalorcampocolumnaint = RemoteObject.createImmutable("");
RemoteObject _valorcampocolumnadouble = RemoteObject.createImmutable(0);
RemoteObject _svalorcampocolumnadouble = RemoteObject.createImmutable("");
RemoteObject _valorcampocolumnafiltrada = RemoteObject.declareNull("Object");
RemoteObject _valorcampocolumnafiltradaint = RemoteObject.createImmutable(0);
RemoteObject _svalorcampocolumnafiltradaint = RemoteObject.createImmutable("");
RemoteObject _valorcampocolumnafiltradadouble = RemoteObject.createImmutable(0);
RemoteObject _svalorcampocolumnafiltradadouble = RemoteObject.createImmutable("");
RemoteObject _pbaseflexgrid = RemoteObject.declareNull("anywheresoftware.b4a.objects.B4XViewWrapper");
RemoteObject _headersfont = RemoteObject.declareNull("anywheresoftware.b4j.objects.JFX.FontWrapper");
RemoteObject _rowsfont = RemoteObject.declareNull("anywheresoftware.b4j.objects.JFX.FontWrapper");
RemoteObject _numcolumnastablatotales = RemoteObject.createImmutable(0);
RemoteObject _anchoscolumnas = null;
RemoteObject _colindex = RemoteObject.createImmutable(0);
RemoteObject _k = RemoteObject.createImmutable("");
RemoteObject _anchocolumna = RemoteObject.createImmutable(0);
RemoteObject _fila = null;
RemoteObject _anchototaltabla = RemoteObject.createImmutable(0);
int _rowindex = 0;
RemoteObject _altototal = RemoteObject.createImmutable(0);
RemoteObject _rsub = RemoteObject.declareNull("anywheresoftware.b4a.keywords.Common.ResumableSubWrapper");
RemoteObject _result = RemoteObject.createImmutable(0);
RemoteObject group4;
int index4;
int groupLen4;
RemoteObject group9;
int index9;
int groupLen9;
RemoteObject group36;
int index36;
int groupLen36;
RemoteObject group79;
int index79;
int groupLen79;
RemoteObject group92;
int index92;
int groupLen92;
RemoteObject group95;
int index95;
int groupLen95;
int step107;
int limit107;
int step111;
int limit111;

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("TotalesCamposNumericos (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,7431);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
{
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,RemoteObject.createImmutable(null));return;}
case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
 BA.debugLineNum = 7435;BA.debugLine="Dim lstFunciones As List=Array As String(\"SUM\",\"A";
Debug.JustUpdateDeviceLine();
_lstfunciones = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");
_lstfunciones = parent.__c.runMethod(false, "ArrayToList", (Object)(RemoteObject.createNewArray("String",new int[] {5},new Object[] {BA.ObjectToString("SUM"),BA.ObjectToString("AVG"),BA.ObjectToString("MAX"),BA.ObjectToString("MIN"),RemoteObject.createImmutable("COUNT")})));Debug.locals.put("lstFunciones", _lstfunciones);Debug.locals.put("lstFunciones", _lstfunciones);
 BA.debugLineNum = 7438;BA.debugLine="Dim lstDatosTotalesCamposNumericos As List";
Debug.JustUpdateDeviceLine();
_lstdatostotalescamposnumericos = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.List");Debug.locals.put("lstDatosTotalesCamposNumericos", _lstdatostotalescamposnumericos);
 BA.debugLineNum = 7439;BA.debugLine="lstDatosTotalesCamposNumericos.Initialize";
Debug.JustUpdateDeviceLine();
_lstdatostotalescamposnumericos.runVoidMethod ("Initialize");
 BA.debugLineNum = 7440;BA.debugLine="For Each c As CampoOrigenDatosJamTableCLV In mLst";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//for
this.state = 53;
group4 = __ref.getField(false,"_mlstcamposorigendatos" /*RemoteObject*/ );
index4 = 0;
groupLen4 = group4.runMethod(true,"getSize").<Integer>get();
Debug.locals.put("c", _c);
this.state = 91;
if (true) break;

case 91:
//C
this.state = 53;
if (index4 < groupLen4) {
this.state = 3;
_c = (group4.runMethod(false,"Get",index4));Debug.locals.put("c", _c);}
if (true) break;

case 92:
//C
this.state = 91;
index4++;
Debug.locals.put("c", _c);
if (true) break;

case 3:
//C
this.state = 4;
 BA.debugLineNum = 7442;BA.debugLine="If (c.TipoDato=\"INTEGER\" Or c.Tipodato=\"REAL\") A";
Debug.JustUpdateDeviceLine();
if (true) break;

case 4:
//if
this.state = 52;
if (RemoteObject.solveBoolean(".",BA.ObjectToBoolean((RemoteObject.solveBoolean("=",_c.getField(true,"TipoDato" /*RemoteObject*/ ),BA.ObjectToString("INTEGER")) || RemoteObject.solveBoolean("=",_c.getField(true,"TipoDato" /*RemoteObject*/ ),RemoteObject.createImmutable("REAL"))))) && RemoteObject.solveBoolean(".",parent.__c.runMethod(true,"Not",(Object)(_c.getField(true,"EsFecha" /*RemoteObject*/ )))) && RemoteObject.solveBoolean(".",parent.__c.runMethod(true,"Not",(Object)(_c.getField(true,"EsBooleano" /*RemoteObject*/ ))))) { 
this.state = 6;
}if (true) break;

case 6:
//C
this.state = 7;
 BA.debugLineNum = 7443;BA.debugLine="Dim mDatos As Map";
Debug.JustUpdateDeviceLine();
_mdatos = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");Debug.locals.put("mDatos", _mdatos);
 BA.debugLineNum = 7444;BA.debugLine="mDatos.Initialize";
Debug.JustUpdateDeviceLine();
_mdatos.runVoidMethod ("Initialize");
 BA.debugLineNum = 7445;BA.debugLine="mDatos.Put(\"AliasCampo\",c.AliasCampo)";
Debug.JustUpdateDeviceLine();
_mdatos.runVoidMethod ("Put",(Object)(RemoteObject.createImmutable(("AliasCampo"))),(Object)((_c.getField(true,"AliasCampo" /*RemoteObject*/ ))));
 BA.debugLineNum = 7452;BA.debugLine="For Each sFuncionTotal As String In lstFuncione";
Debug.JustUpdateDeviceLine();
if (true) break;

case 7:
//for
this.state = 27;
group9 = _lstfunciones;
index9 = 0;
groupLen9 = group9.runMethod(true,"getSize").<Integer>get();
Debug.locals.put("sFuncionTotal", _sfunciontotal);
this.state = 93;
if (true) break;

case 93:
//C
this.state = 27;
if (index9 < groupLen9) {
this.state = 9;
_sfunciontotal = BA.ObjectToString(group9.runMethod(false,"Get",index9));Debug.locals.put("sFuncionTotal", _sfunciontotal);}
if (true) break;

case 94:
//C
this.state = 93;
index9++;
Debug.locals.put("sFuncionTotal", _sfunciontotal);
if (true) break;

case 9:
//C
this.state = 10;
 BA.debugLineNum = 7454;BA.debugLine="Dim ValorCampoColumna As Object=mSQL.ExecQuery";
Debug.JustUpdateDeviceLine();
_valorcampocolumna = (__ref.getField(false,"_msql" /*RemoteObject*/ ).runMethod(true,"ExecQuerySingleResult",(Object)(RemoteObject.concat(RemoteObject.createImmutable("select "),_sfunciontotal,RemoteObject.createImmutable("(["),_c.getField(true,"AliasCampo" /*RemoteObject*/ ),RemoteObject.createImmutable("]) from tblOrigenDatos")))));Debug.locals.put("ValorCampoColumna", _valorcampocolumna);Debug.locals.put("ValorCampoColumna", _valorcampocolumna);
 BA.debugLineNum = 7458;BA.debugLine="Dim sTituloFuncion As String";
Debug.JustUpdateDeviceLine();
_stitulofuncion = RemoteObject.createImmutable("");Debug.locals.put("sTituloFuncion", _stitulofuncion);
 BA.debugLineNum = 7459;BA.debugLine="Select sFuncionTotal.ToUpperCase";
Debug.JustUpdateDeviceLine();
if (true) break;

case 10:
//select
this.state = 21;
switch (BA.switchObjectToInt(_sfunciontotal.runMethod(true,"toUpperCase"),BA.ObjectToString("SUM"),BA.ObjectToString("AVG"),BA.ObjectToString("MAX"),BA.ObjectToString("MIN"),BA.ObjectToString("COUNT"))) {
case 0: {
this.state = 12;
if (true) break;
}
case 1: {
this.state = 14;
if (true) break;
}
case 2: {
this.state = 16;
if (true) break;
}
case 3: {
this.state = 18;
if (true) break;
}
case 4: {
this.state = 20;
if (true) break;
}
}
if (true) break;

case 12:
//C
this.state = 21;
 BA.debugLineNum = 7461;BA.debugLine="sTituloFuncion=\"Suma\"";
Debug.JustUpdateDeviceLine();
_stitulofuncion = BA.ObjectToString("Suma");Debug.locals.put("sTituloFuncion", _stitulofuncion);
 if (true) break;

case 14:
//C
this.state = 21;
 BA.debugLineNum = 7463;BA.debugLine="sTituloFuncion=\"Promedio\"";
Debug.JustUpdateDeviceLine();
_stitulofuncion = BA.ObjectToString("Promedio");Debug.locals.put("sTituloFuncion", _stitulofuncion);
 if (true) break;

case 16:
//C
this.state = 21;
 BA.debugLineNum = 7465;BA.debugLine="sTituloFuncion=\"Máximo\"";
Debug.JustUpdateDeviceLine();
_stitulofuncion = BA.ObjectToString("Máximo");Debug.locals.put("sTituloFuncion", _stitulofuncion);
 if (true) break;

case 18:
//C
this.state = 21;
 BA.debugLineNum = 7467;BA.debugLine="sTituloFuncion=\"Mínimo\"";
Debug.JustUpdateDeviceLine();
_stitulofuncion = BA.ObjectToString("Mínimo");Debug.locals.put("sTituloFuncion", _stitulofuncion);
 if (true) break;

case 20:
//C
this.state = 21;
 BA.debugLineNum = 7469;BA.debugLine="sTituloFuncion=\"Cuenta\"";
Debug.JustUpdateDeviceLine();
_stitulofuncion = BA.ObjectToString("Cuenta");Debug.locals.put("sTituloFuncion", _stitulofuncion);
 if (true) break;
;
 BA.debugLineNum = 7472;BA.debugLine="Select c.TipoDato";
Debug.JustUpdateDeviceLine();

case 21:
//select
this.state = 26;
switch (BA.switchObjectToInt(_c.getField(true,"TipoDato" /*RemoteObject*/ ),BA.ObjectToString("INTEGER"),BA.ObjectToString("REAL"))) {
case 0: {
this.state = 23;
if (true) break;
}
case 1: {
this.state = 25;
if (true) break;
}
}
if (true) break;

case 23:
//C
this.state = 26;
 BA.debugLineNum = 7474;BA.debugLine="Dim ValorCampoColumnaInt As Int=ValorCampoCo";
Debug.JustUpdateDeviceLine();
_valorcampocolumnaint = BA.numberCast(int.class, _valorcampocolumna);Debug.locals.put("ValorCampoColumnaInt", _valorcampocolumnaint);Debug.locals.put("ValorCampoColumnaInt", _valorcampocolumnaint);
 BA.debugLineNum = 7475;BA.debugLine="Dim sValorCampoColumnaInt As String=NumberFo";
Debug.JustUpdateDeviceLine();
_svalorcampocolumnaint = parent.__c.runMethod(true,"NumberFormat2",(Object)(BA.numberCast(double.class, _valorcampocolumnaint)),(Object)(BA.numberCast(int.class, 1)),(Object)(BA.numberCast(int.class, 0)),(Object)(BA.numberCast(int.class, 0)),(Object)(parent.__c.getField(true,"True"))).runMethod(true,"replace",(Object)(BA.ObjectToString(",")),(Object)(RemoteObject.createImmutable(".")));Debug.locals.put("sValorCampoColumnaInt", _svalorcampocolumnaint);Debug.locals.put("sValorCampoColumnaInt", _svalorcampocolumnaint);
 BA.debugLineNum = 7484;BA.debugLine="mDatos.Put(sTituloFuncion,sValorCampoColumna";
Debug.JustUpdateDeviceLine();
_mdatos.runVoidMethod ("Put",(Object)((_stitulofuncion)),(Object)((_svalorcampocolumnaint)));
 if (true) break;

case 25:
//C
this.state = 26;
 BA.debugLineNum = 7486;BA.debugLine="Dim ValorCampoColumnaDouble As Double=ValorC";
Debug.JustUpdateDeviceLine();
_valorcampocolumnadouble = BA.numberCast(double.class, _valorcampocolumna);Debug.locals.put("ValorCampoColumnaDouble", _valorcampocolumnadouble);Debug.locals.put("ValorCampoColumnaDouble", _valorcampocolumnadouble);
 BA.debugLineNum = 7487;BA.debugLine="Dim sValorCampoColumnaDouble As String=Numbe";
Debug.JustUpdateDeviceLine();
_svalorcampocolumnadouble = parent.__c.runMethod(true,"NumberFormat2",(Object)(_valorcampocolumnadouble),(Object)(BA.numberCast(int.class, 1)),(Object)(BA.numberCast(int.class, 2)),(Object)(BA.numberCast(int.class, 0)),(Object)(parent.__c.getField(true,"True")));Debug.locals.put("sValorCampoColumnaDouble", _svalorcampocolumnadouble);Debug.locals.put("sValorCampoColumnaDouble", _svalorcampocolumnadouble);
 BA.debugLineNum = 7496;BA.debugLine="mDatos.Put(sTituloFuncion,sValorCampoColumna";
Debug.JustUpdateDeviceLine();
_mdatos.runVoidMethod ("Put",(Object)((_stitulofuncion)),(Object)((_svalorcampocolumnadouble)));
 if (true) break;

case 26:
//C
this.state = 94;
;
 if (true) break;
if (true) break;
Debug.locals.put("sFuncionTotal", _sfunciontotal);
;
 BA.debugLineNum = 7501;BA.debugLine="If lstValoresFiltros.Size>0 Then";
Debug.JustUpdateDeviceLine();

case 27:
//if
this.state = 51;
if (RemoteObject.solveBoolean(">",__ref.getField(false,"_lstvaloresfiltros" /*RemoteObject*/ ).runMethod(true,"getSize"),BA.numberCast(double.class, 0))) { 
this.state = 29;
}if (true) break;

case 29:
//C
this.state = 30;
 BA.debugLineNum = 7503;BA.debugLine="For Each sFuncionTotal As String In lstFuncion";
Debug.JustUpdateDeviceLine();
if (true) break;

case 30:
//for
this.state = 50;
group36 = _lstfunciones;
index36 = 0;
groupLen36 = group36.runMethod(true,"getSize").<Integer>get();
Debug.locals.put("sFuncionTotal", _sfunciontotal);
this.state = 95;
if (true) break;

case 95:
//C
this.state = 50;
if (index36 < groupLen36) {
this.state = 32;
_sfunciontotal = BA.ObjectToString(group36.runMethod(false,"Get",index36));Debug.locals.put("sFuncionTotal", _sfunciontotal);}
if (true) break;

case 96:
//C
this.state = 95;
index36++;
Debug.locals.put("sFuncionTotal", _sfunciontotal);
if (true) break;

case 32:
//C
this.state = 33;
 BA.debugLineNum = 7506;BA.debugLine="Dim ValorCampoColumnaFiltrada As Object=mSQL.";
Debug.JustUpdateDeviceLine();
_valorcampocolumnafiltrada = (__ref.getField(false,"_msql" /*RemoteObject*/ ).runMethod(true,"ExecQuerySingleResult2",(Object)(RemoteObject.concat(RemoteObject.createImmutable("select "),_sfunciontotal,RemoteObject.createImmutable("(["),_c.getField(true,"AliasCampo" /*RemoteObject*/ ),RemoteObject.createImmutable("]) from tblOrigenDatos where "),__ref.getField(true,"_scamposfiltrados" /*RemoteObject*/ ))),(Object)(__ref.getField(false,"_lstvaloresfiltros" /*RemoteObject*/ ))));Debug.locals.put("ValorCampoColumnaFiltrada", _valorcampocolumnafiltrada);Debug.locals.put("ValorCampoColumnaFiltrada", _valorcampocolumnafiltrada);
 BA.debugLineNum = 7508;BA.debugLine="Dim sTituloFuncion As String";
Debug.JustUpdateDeviceLine();
_stitulofuncion = RemoteObject.createImmutable("");Debug.locals.put("sTituloFuncion", _stitulofuncion);
 BA.debugLineNum = 7509;BA.debugLine="Select sFuncionTotal.ToUpperCase";
Debug.JustUpdateDeviceLine();
if (true) break;

case 33:
//select
this.state = 44;
switch (BA.switchObjectToInt(_sfunciontotal.runMethod(true,"toUpperCase"),BA.ObjectToString("SUM"),BA.ObjectToString("AVG"),BA.ObjectToString("MAX"),BA.ObjectToString("MIN"),BA.ObjectToString("COUNT"))) {
case 0: {
this.state = 35;
if (true) break;
}
case 1: {
this.state = 37;
if (true) break;
}
case 2: {
this.state = 39;
if (true) break;
}
case 3: {
this.state = 41;
if (true) break;
}
case 4: {
this.state = 43;
if (true) break;
}
}
if (true) break;

case 35:
//C
this.state = 44;
 BA.debugLineNum = 7511;BA.debugLine="sTituloFuncion=\"Suma\"";
Debug.JustUpdateDeviceLine();
_stitulofuncion = BA.ObjectToString("Suma");Debug.locals.put("sTituloFuncion", _stitulofuncion);
 if (true) break;

case 37:
//C
this.state = 44;
 BA.debugLineNum = 7513;BA.debugLine="sTituloFuncion=\"Promedio\"";
Debug.JustUpdateDeviceLine();
_stitulofuncion = BA.ObjectToString("Promedio");Debug.locals.put("sTituloFuncion", _stitulofuncion);
 if (true) break;

case 39:
//C
this.state = 44;
 BA.debugLineNum = 7515;BA.debugLine="sTituloFuncion=\"Máximo\"";
Debug.JustUpdateDeviceLine();
_stitulofuncion = BA.ObjectToString("Máximo");Debug.locals.put("sTituloFuncion", _stitulofuncion);
 if (true) break;

case 41:
//C
this.state = 44;
 BA.debugLineNum = 7517;BA.debugLine="sTituloFuncion=\"Mínimo\"";
Debug.JustUpdateDeviceLine();
_stitulofuncion = BA.ObjectToString("Mínimo");Debug.locals.put("sTituloFuncion", _stitulofuncion);
 if (true) break;

case 43:
//C
this.state = 44;
 BA.debugLineNum = 7519;BA.debugLine="sTituloFuncion=\"Cuenta\"";
Debug.JustUpdateDeviceLine();
_stitulofuncion = BA.ObjectToString("Cuenta");Debug.locals.put("sTituloFuncion", _stitulofuncion);
 if (true) break;
;
 BA.debugLineNum = 7522;BA.debugLine="Select c.TipoDato";
Debug.JustUpdateDeviceLine();

case 44:
//select
this.state = 49;
switch (BA.switchObjectToInt(_c.getField(true,"TipoDato" /*RemoteObject*/ ),BA.ObjectToString("INTEGER"),BA.ObjectToString("REAL"))) {
case 0: {
this.state = 46;
if (true) break;
}
case 1: {
this.state = 48;
if (true) break;
}
}
if (true) break;

case 46:
//C
this.state = 49;
 BA.debugLineNum = 7526;BA.debugLine="Dim ValorCampoColumnaFiltradaInt As Int=Val";
Debug.JustUpdateDeviceLine();
_valorcampocolumnafiltradaint = BA.numberCast(int.class, _valorcampocolumnafiltrada);Debug.locals.put("ValorCampoColumnaFiltradaInt", _valorcampocolumnafiltradaint);Debug.locals.put("ValorCampoColumnaFiltradaInt", _valorcampocolumnafiltradaint);
 BA.debugLineNum = 7527;BA.debugLine="Dim sValorCampoColumnaFiltradaInt As String";
Debug.JustUpdateDeviceLine();
_svalorcampocolumnafiltradaint = parent.__c.runMethod(true,"NumberFormat2",(Object)(BA.numberCast(double.class, _valorcampocolumnafiltradaint)),(Object)(BA.numberCast(int.class, 1)),(Object)(BA.numberCast(int.class, 0)),(Object)(BA.numberCast(int.class, 0)),(Object)(parent.__c.getField(true,"True"))).runMethod(true,"replace",(Object)(BA.ObjectToString(",")),(Object)(RemoteObject.createImmutable(".")));Debug.locals.put("sValorCampoColumnaFiltradaInt", _svalorcampocolumnafiltradaint);Debug.locals.put("sValorCampoColumnaFiltradaInt", _svalorcampocolumnafiltradaint);
 BA.debugLineNum = 7531;BA.debugLine="mDatos.Put(sTituloFuncion & \"Filtro\",sValor";
Debug.JustUpdateDeviceLine();
_mdatos.runVoidMethod ("Put",(Object)((RemoteObject.concat(_stitulofuncion,RemoteObject.createImmutable("Filtro")))),(Object)((_svalorcampocolumnafiltradaint)));
 if (true) break;

case 48:
//C
this.state = 49;
 BA.debugLineNum = 7534;BA.debugLine="Dim ValorCampoColumnaFiltradaDouble As Doub";
Debug.JustUpdateDeviceLine();
_valorcampocolumnafiltradadouble = BA.numberCast(double.class, _valorcampocolumnafiltrada);Debug.locals.put("ValorCampoColumnaFiltradaDouble", _valorcampocolumnafiltradadouble);Debug.locals.put("ValorCampoColumnaFiltradaDouble", _valorcampocolumnafiltradadouble);
 BA.debugLineNum = 7535;BA.debugLine="Dim sValorCampoColumnaFiltradaDouble As Str";
Debug.JustUpdateDeviceLine();
_svalorcampocolumnafiltradadouble = parent.__c.runMethod(true,"NumberFormat2",(Object)(_valorcampocolumnafiltradadouble),(Object)(BA.numberCast(int.class, 1)),(Object)(BA.numberCast(int.class, 2)),(Object)(BA.numberCast(int.class, 0)),(Object)(parent.__c.getField(true,"True")));Debug.locals.put("sValorCampoColumnaFiltradaDouble", _svalorcampocolumnafiltradadouble);Debug.locals.put("sValorCampoColumnaFiltradaDouble", _svalorcampocolumnafiltradadouble);
 BA.debugLineNum = 7539;BA.debugLine="mDatos.Put(sTituloFuncion & \"Filtro\",sValor";
Debug.JustUpdateDeviceLine();
_mdatos.runVoidMethod ("Put",(Object)((RemoteObject.concat(_stitulofuncion,RemoteObject.createImmutable("Filtro")))),(Object)((_svalorcampocolumnafiltradadouble)));
 if (true) break;

case 49:
//C
this.state = 96;
;
 if (true) break;
if (true) break;

case 50:
//C
this.state = 51;
Debug.locals.put("sFuncionTotal", _sfunciontotal);
;
 if (true) break;

case 51:
//C
this.state = 52;
;
 BA.debugLineNum = 7544;BA.debugLine="lstDatosTotalesCamposNumericos.Add(mDatos)";
Debug.JustUpdateDeviceLine();
_lstdatostotalescamposnumericos.runVoidMethod ("Add",(Object)((_mdatos.getObject())));
 if (true) break;

case 52:
//C
this.state = 92;
;
 if (true) break;
if (true) break;
Debug.locals.put("c", _c);
;
 BA.debugLineNum = 7553;BA.debugLine="If lstDatosTotalesCamposNumericos.Size=0 Then Ret";
Debug.JustUpdateDeviceLine();

case 53:
//if
this.state = 58;
if (RemoteObject.solveBoolean("=",_lstdatostotalescamposnumericos.runMethod(true,"getSize"),BA.numberCast(double.class, 0))) { 
this.state = 55;
;}if (true) break;

case 55:
//C
this.state = 58;
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(parent.__c.getField(true,"True")));return;};
if (true) break;

case 58:
//C
this.state = 59;
;
 BA.debugLineNum = 7565;BA.debugLine="Dim pBaseFlexGrid As B4XView = xui.CreatePanel(\"\"";
Debug.JustUpdateDeviceLine();
_pbaseflexgrid = RemoteObject.createNew ("anywheresoftware.b4a.objects.B4XViewWrapper");
_pbaseflexgrid = __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"CreatePanel",__ref.getField(false, "ba"),(Object)(RemoteObject.createImmutable("")));Debug.locals.put("pBaseFlexGrid", _pbaseflexgrid);Debug.locals.put("pBaseFlexGrid", _pbaseflexgrid);
 BA.debugLineNum = 7566;BA.debugLine="pBaseFlexGrid.SetLayoutAnimated(0, 0, 0, 500dip,";
Debug.JustUpdateDeviceLine();
_pbaseflexgrid.runVoidMethod ("SetLayoutAnimated",(Object)(BA.numberCast(int.class, 0)),(Object)(BA.numberCast(double.class, 0)),(Object)(BA.numberCast(double.class, 0)),(Object)(BA.numberCast(double.class, parent.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 500))))),(Object)((RemoteObject.solve(new RemoteObject[] {RemoteObject.createImmutable(0.75),(RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_fx" /*RemoteObject*/ ).runMethod(false,"getPrimaryScreen").runMethod(true,"getMaxY"),__ref.getField(false,"_fx" /*RemoteObject*/ ).runMethod(false,"getPrimaryScreen").runMethod(true,"getMinY")}, "-",1, 0))}, "*",0, 0))));
 BA.debugLineNum = 7568;BA.debugLine="pBaseFlexGrid.LoadLayout(\"scrJamTableCLVDialogFle";
Debug.JustUpdateDeviceLine();
_pbaseflexgrid.runVoidMethodAndSync ("LoadLayout",(Object)(RemoteObject.createImmutable("scrJamTableCLVDialogFlexGrid")),__ref.getField(false, "ba"));
 BA.debugLineNum = 7570;BA.debugLine="Dim HeadersFont As Font=xui.CreateDefaultfont(15)";
Debug.JustUpdateDeviceLine();
_headersfont = RemoteObject.createNew ("anywheresoftware.b4j.objects.JFX.FontWrapper");
_headersfont = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.JFX.FontWrapper"), __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"CreateDefaultFont",(Object)(BA.numberCast(float.class, 15))).getObject());Debug.locals.put("HeadersFont", _headersfont);Debug.locals.put("HeadersFont", _headersfont);
 BA.debugLineNum = 7571;BA.debugLine="JamTableCLVDialogFlexGrid.HeaderFont=HeadersFont";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_jamtableclvdialogflexgrid" /*RemoteObject*/ ).runVoidMethod ("_setvvvvvvvvvvvvvvvv7",RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper.B4XFont"), _headersfont.getObject()));
 BA.debugLineNum = 7572;BA.debugLine="Dim RowsFont As Font=xui.CreateDefaultfont(14)";
Debug.JustUpdateDeviceLine();
_rowsfont = RemoteObject.createNew ("anywheresoftware.b4j.objects.JFX.FontWrapper");
_rowsfont = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.JFX.FontWrapper"), __ref.getField(false,"_xui" /*RemoteObject*/ ).runMethod(false,"CreateDefaultFont",(Object)(BA.numberCast(float.class, 14))).getObject());Debug.locals.put("RowsFont", _rowsfont);Debug.locals.put("RowsFont", _rowsfont);
 BA.debugLineNum = 7573;BA.debugLine="JamTableCLVDialogFlexGrid.Font=RowsFont";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_jamtableclvdialogflexgrid" /*RemoteObject*/ ).runVoidMethod ("_setvvvvvvvvvvvvvvvv4",RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper.B4XFont"), _rowsfont.getObject()));
 BA.debugLineNum = 7574;BA.debugLine="Dim NumColumnasTablaTotales As Int=mDatos.Size";
Debug.JustUpdateDeviceLine();
_numcolumnastablatotales = _mdatos.runMethod(true,"getSize");Debug.locals.put("NumColumnasTablaTotales", _numcolumnastablatotales);Debug.locals.put("NumColumnasTablaTotales", _numcolumnastablatotales);
 BA.debugLineNum = 7575;BA.debugLine="Dim AnchosColumnas(NumColumnasTablaTotales) As In";
Debug.JustUpdateDeviceLine();
_anchoscolumnas = RemoteObject.createNewArray ("int", new int[] {_numcolumnastablatotales.<Integer>get().intValue()}, new Object[]{});Debug.locals.put("AnchosColumnas", _anchoscolumnas);
 BA.debugLineNum = 7576;BA.debugLine="JamTableCLVDialogFlexGrid.SetColsNumber(NumColumn";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_jamtableclvdialogflexgrid" /*RemoteObject*/ ).runVoidMethod ("_vvvvvvvvvv1",(Object)(_numcolumnastablatotales));
 BA.debugLineNum = 7577;BA.debugLine="Dim ColIndex As Int";
Debug.JustUpdateDeviceLine();
_colindex = RemoteObject.createImmutable(0);Debug.locals.put("ColIndex", _colindex);
 BA.debugLineNum = 7578;BA.debugLine="Dim mDatos As Map=lstDatosTotalesCamposNumericos.";
Debug.JustUpdateDeviceLine();
_mdatos = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");
_mdatos = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.collections.Map"), _lstdatostotalescamposnumericos.runMethod(false,"Get",(Object)(BA.numberCast(int.class, 0))));Debug.locals.put("mDatos", _mdatos);Debug.locals.put("mDatos", _mdatos);
 BA.debugLineNum = 7579;BA.debugLine="For Each k As String In mDatos.Keys";
Debug.JustUpdateDeviceLine();
if (true) break;

case 59:
//for
this.state = 72;
group79 = _mdatos.runMethod(false,"Keys");
index79 = 0;
groupLen79 = group79.runMethod(true,"getSize").<Integer>get();
Debug.locals.put("k", _k);
this.state = 97;
if (true) break;

case 97:
//C
this.state = 72;
if (index79 < groupLen79) {
this.state = 61;
_k = BA.ObjectToString(group79.runMethod(false,"Get",index79));Debug.locals.put("k", _k);}
if (true) break;

case 98:
//C
this.state = 97;
index79++;
Debug.locals.put("k", _k);
if (true) break;

case 61:
//C
this.state = 62;
 BA.debugLineNum = 7581;BA.debugLine="If k=\"AliasCampo\" Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 62:
//if
this.state = 67;
if (RemoteObject.solveBoolean("=",_k,BA.ObjectToString("AliasCampo"))) { 
this.state = 64;
}else {
this.state = 66;
}if (true) break;

case 64:
//C
this.state = 67;
 BA.debugLineNum = 7582;BA.debugLine="JamTableCLVDialogFlexGrid.SetColName(ColIndex,\"";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_jamtableclvdialogflexgrid" /*RemoteObject*/ ).runVoidMethod ("_vvvvvvvvv4",(Object)(_colindex),(Object)(RemoteObject.createImmutable("Campo")));
 if (true) break;

case 66:
//C
this.state = 67;
 BA.debugLineNum = 7584;BA.debugLine="JamTableCLVDialogFlexGrid.SetColName(ColIndex,k";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_jamtableclvdialogflexgrid" /*RemoteObject*/ ).runVoidMethod ("_vvvvvvvvv4",(Object)(_colindex),(Object)(_k.runMethod(true,"replace",(Object)(BA.ObjectToString("Filtro")),(Object)(RemoteObject.createImmutable(" (Filtro)")))));
 if (true) break;

case 67:
//C
this.state = 68;
;
 BA.debugLineNum = 7586;BA.debugLine="Dim AnchoColumna As Int=AnchosColumnas(ColIndex)";
Debug.JustUpdateDeviceLine();
_anchocolumna = _anchoscolumnas.getArrayElement(true,_colindex);Debug.locals.put("AnchoColumna", _anchocolumna);Debug.locals.put("AnchoColumna", _anchocolumna);
 BA.debugLineNum = 7587;BA.debugLine="If AnchoColumna<MeasurementCanvas.MeasureText(Ja";
Debug.JustUpdateDeviceLine();
if (true) break;

case 68:
//if
this.state = 71;
if (RemoteObject.solveBoolean("<",_anchocolumna,RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_measurementcanvas" /*RemoteObject*/ ).runMethod(false,"MeasureText",(Object)(__ref.getField(false,"_jamtableclvdialogflexgrid" /*RemoteObject*/ ).runMethod(false,"_getvvvvvvvvvvvvvv2").getArrayElement(true,_colindex)),RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper.B4XFont"), _headersfont.getObject())).runMethod(true,"getWidth"),parent.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 40)))}, "+",1, 0))) { 
this.state = 70;
}if (true) break;

case 70:
//C
this.state = 71;
 BA.debugLineNum = 7588;BA.debugLine="AnchoColumna=MeasurementCanvas.MeasureText(JamT";
Debug.JustUpdateDeviceLine();
_anchocolumna = BA.numberCast(int.class, RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_measurementcanvas" /*RemoteObject*/ ).runMethod(false,"MeasureText",(Object)(__ref.getField(false,"_jamtableclvdialogflexgrid" /*RemoteObject*/ ).runMethod(false,"_getvvvvvvvvvvvvvv2").getArrayElement(true,_colindex)),RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper.B4XFont"), _headersfont.getObject())).runMethod(true,"getWidth"),parent.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 40)))}, "+",1, 0));Debug.locals.put("AnchoColumna", _anchocolumna);
 BA.debugLineNum = 7589;BA.debugLine="AnchosColumnas(ColIndex)=AnchoColumna";
Debug.JustUpdateDeviceLine();
_anchoscolumnas.setArrayElement (_anchocolumna,_colindex);
 if (true) break;

case 71:
//C
this.state = 98;
;
 BA.debugLineNum = 7592;BA.debugLine="ColIndex=ColIndex+1";
Debug.JustUpdateDeviceLine();
_colindex = RemoteObject.solve(new RemoteObject[] {_colindex,RemoteObject.createImmutable(1)}, "+",1, 1);Debug.locals.put("ColIndex", _colindex);
 if (true) break;
if (true) break;
Debug.locals.put("k", _k);
;
 BA.debugLineNum = 7601;BA.debugLine="For Each mDatos As Map In lstDatosTotalesCamposNu";
Debug.JustUpdateDeviceLine();

case 72:
//for
this.state = 83;
_mdatos = RemoteObject.createNew ("anywheresoftware.b4a.objects.collections.Map");
group92 = _lstdatostotalescamposnumericos;
index92 = 0;
groupLen92 = group92.runMethod(true,"getSize").<Integer>get();
Debug.locals.put("mDatos", _mdatos);
this.state = 99;
if (true) break;

case 99:
//C
this.state = 83;
if (index92 < groupLen92) {
this.state = 74;
_mdatos = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.collections.Map"), group92.runMethod(false,"Get",index92));Debug.locals.put("mDatos", _mdatos);}
if (true) break;

case 100:
//C
this.state = 99;
index92++;
Debug.locals.put("mDatos", _mdatos);
if (true) break;

case 74:
//C
this.state = 75;
 BA.debugLineNum = 7602;BA.debugLine="Dim Fila(NumColumnasTablaTotales) As String";
Debug.JustUpdateDeviceLine();
_fila = RemoteObject.createNewArray ("String", new int[] {_numcolumnastablatotales.<Integer>get().intValue()}, new Object[]{});Debug.locals.put("Fila", _fila);
 BA.debugLineNum = 7603;BA.debugLine="Dim ColIndex As Int";
Debug.JustUpdateDeviceLine();
_colindex = RemoteObject.createImmutable(0);Debug.locals.put("ColIndex", _colindex);
 BA.debugLineNum = 7604;BA.debugLine="For Each k As String In mDatos.Keys";
Debug.JustUpdateDeviceLine();
if (true) break;

case 75:
//for
this.state = 82;
group95 = _mdatos.runMethod(false,"Keys");
index95 = 0;
groupLen95 = group95.runMethod(true,"getSize").<Integer>get();
Debug.locals.put("k", _k);
this.state = 101;
if (true) break;

case 101:
//C
this.state = 82;
if (index95 < groupLen95) {
this.state = 77;
_k = BA.ObjectToString(group95.runMethod(false,"Get",index95));Debug.locals.put("k", _k);}
if (true) break;

case 102:
//C
this.state = 101;
index95++;
Debug.locals.put("k", _k);
if (true) break;

case 77:
//C
this.state = 78;
 BA.debugLineNum = 7605;BA.debugLine="Fila(ColIndex)=mDatos.get(k)";
Debug.JustUpdateDeviceLine();
_fila.setArrayElement (BA.ObjectToString(_mdatos.runMethod(false,"Get",(Object)((_k)))),_colindex);
 BA.debugLineNum = 7606;BA.debugLine="Dim AnchoColumna As Int=AnchosColumnas(ColIndex";
Debug.JustUpdateDeviceLine();
_anchocolumna = _anchoscolumnas.getArrayElement(true,_colindex);Debug.locals.put("AnchoColumna", _anchocolumna);Debug.locals.put("AnchoColumna", _anchocolumna);
 BA.debugLineNum = 7607;BA.debugLine="If AnchoColumna<MeasurementCanvas.MeasureText(m";
Debug.JustUpdateDeviceLine();
if (true) break;

case 78:
//if
this.state = 81;
if (RemoteObject.solveBoolean("<",_anchocolumna,RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_measurementcanvas" /*RemoteObject*/ ).runMethod(false,"MeasureText",(Object)(BA.ObjectToString(_mdatos.runMethod(false,"Get",(Object)((_k))))),RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper.B4XFont"), _rowsfont.getObject())).runMethod(true,"getWidth"),parent.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 40)))}, "+",1, 0))) { 
this.state = 80;
}if (true) break;

case 80:
//C
this.state = 81;
 BA.debugLineNum = 7608;BA.debugLine="AnchoColumna=MeasurementCanvas.MeasureText(mDa";
Debug.JustUpdateDeviceLine();
_anchocolumna = BA.numberCast(int.class, RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_measurementcanvas" /*RemoteObject*/ ).runMethod(false,"MeasureText",(Object)(BA.ObjectToString(_mdatos.runMethod(false,"Get",(Object)((_k))))),RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4a.objects.B4XViewWrapper.B4XFont"), _rowsfont.getObject())).runMethod(true,"getWidth"),parent.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 40)))}, "+",1, 0));Debug.locals.put("AnchoColumna", _anchocolumna);
 BA.debugLineNum = 7609;BA.debugLine="AnchosColumnas(ColIndex)=AnchoColumna";
Debug.JustUpdateDeviceLine();
_anchoscolumnas.setArrayElement (_anchocolumna,_colindex);
 if (true) break;

case 81:
//C
this.state = 102;
;
 BA.debugLineNum = 7611;BA.debugLine="ColIndex=ColIndex+1";
Debug.JustUpdateDeviceLine();
_colindex = RemoteObject.solve(new RemoteObject[] {_colindex,RemoteObject.createImmutable(1)}, "+",1, 1);Debug.locals.put("ColIndex", _colindex);
 if (true) break;
if (true) break;

case 82:
//C
this.state = 100;
Debug.locals.put("k", _k);
;
 BA.debugLineNum = 7613;BA.debugLine="JamTableCLVDialogFlexGrid.AddRow(Fila,False)";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_jamtableclvdialogflexgrid" /*RemoteObject*/ ).runVoidMethod ("_v7",(Object)((_fila)),(Object)(parent.__c.getField(true,"False")));
 if (true) break;
if (true) break;

case 83:
//C
this.state = 84;
Debug.locals.put("mDatos", _mdatos);
;
 BA.debugLineNum = 7617;BA.debugLine="Dim AnchoTotalTabla As Int";
Debug.JustUpdateDeviceLine();
_anchototaltabla = RemoteObject.createImmutable(0);Debug.locals.put("AnchoTotalTabla", _anchototaltabla);
 BA.debugLineNum = 7618;BA.debugLine="For ColIndex=0 To NumColumnasTablaTotales-1";
Debug.JustUpdateDeviceLine();
if (true) break;

case 84:
//for
this.state = 87;
step107 = 1;
limit107 = RemoteObject.solve(new RemoteObject[] {_numcolumnastablatotales,RemoteObject.createImmutable(1)}, "-",1, 1).<Integer>get().intValue();
_colindex = BA.numberCast(int.class, 0) ;
Debug.locals.put("ColIndex", _colindex);
this.state = 103;
if (true) break;

case 103:
//C
this.state = 87;
if ((step107 > 0 && _colindex.<Integer>get().intValue() <= limit107) || (step107 < 0 && _colindex.<Integer>get().intValue() >= limit107)) this.state = 86;
if (true) break;

case 104:
//C
this.state = 103;
_colindex = RemoteObject.createImmutable((int)(0 + _colindex.<Integer>get().intValue() + step107)) ;
Debug.locals.put("ColIndex", _colindex);
if (true) break;

case 86:
//C
this.state = 104;
 BA.debugLineNum = 7619;BA.debugLine="JamTableCLVDialogFlexGrid.SetColWidth(ColIndex,A";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_jamtableclvdialogflexgrid" /*RemoteObject*/ ).runVoidMethod ("_vvvvvvvvvv5",(Object)(_colindex),(Object)(_anchoscolumnas.getArrayElement(true,_colindex)));
 BA.debugLineNum = 7620;BA.debugLine="AnchoTotalTabla=AnchoTotalTabla+AnchosColumnas(C";
Debug.JustUpdateDeviceLine();
_anchototaltabla = RemoteObject.solve(new RemoteObject[] {_anchototaltabla,_anchoscolumnas.getArrayElement(true,_colindex)}, "+",1, 1);Debug.locals.put("AnchoTotalTabla", _anchototaltabla);
 if (true) break;
if (true) break;
Debug.locals.put("ColIndex", _colindex);
;
 BA.debugLineNum = 7623;BA.debugLine="For RowIndex=0 To JamTableCLVDialogFlexGrid.RowCo";
Debug.JustUpdateDeviceLine();

case 87:
//for
this.state = 90;
step111 = 1;
limit111 = RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_jamtableclvdialogflexgrid" /*RemoteObject*/ ).runMethod(true,"_getvvvvvvvvvvvvvv6"),RemoteObject.createImmutable(1)}, "-",1, 1).<Integer>get().intValue();
_rowindex = 0 ;
Debug.locals.put("RowIndex", _rowindex);
this.state = 105;
if (true) break;

case 105:
//C
this.state = 90;
if ((step111 > 0 && _rowindex <= limit111) || (step111 < 0 && _rowindex >= limit111)) this.state = 89;
if (true) break;

case 106:
//C
this.state = 105;
_rowindex = ((int)(0 + _rowindex + step111)) ;
Debug.locals.put("RowIndex", _rowindex);
if (true) break;

case 89:
//C
this.state = 106;
 BA.debugLineNum = 7624;BA.debugLine="JamTableCLVDialogFlexGrid.SetRowHeight(RowIndex,";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_jamtableclvdialogflexgrid" /*RemoteObject*/ ).runVoidMethod ("_vvvvvvvvvvvv5",(Object)(BA.numberCast(int.class, _rowindex)),(Object)(parent.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 50)))));
 if (true) break;
if (true) break;

case 90:
//C
this.state = -1;
Debug.locals.put("RowIndex", _rowindex);
;
 BA.debugLineNum = 7626;BA.debugLine="Dim AltoTotal As Int=Min(50dip*(JamTableCLVDialog";
Debug.JustUpdateDeviceLine();
_altototal = BA.numberCast(int.class, parent.__c.runMethod(true,"Min",(Object)(BA.numberCast(double.class, RemoteObject.solve(new RemoteObject[] {parent.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 50))),(__ref.getField(false,"_jamtableclvdialogflexgrid" /*RemoteObject*/ ).runMethod(true,"_getvvvvvvvvvvvvvv6")),parent.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 50)))}, "*+",1, 1))),(Object)((RemoteObject.solve(new RemoteObject[] {RemoteObject.createImmutable(0.75),(RemoteObject.solve(new RemoteObject[] {__ref.getField(false,"_fx" /*RemoteObject*/ ).runMethod(false,"getPrimaryScreen").runMethod(true,"getMaxY"),__ref.getField(false,"_fx" /*RemoteObject*/ ).runMethod(false,"getPrimaryScreen").runMethod(true,"getMinY")}, "-",1, 0))}, "*",0, 0)))));Debug.locals.put("AltoTotal", _altototal);Debug.locals.put("AltoTotal", _altototal);
 BA.debugLineNum = 7627;BA.debugLine="JamTableCLVDialogFlexGrid.Base.Width=AnchoTotalTa";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_jamtableclvdialogflexgrid" /*RemoteObject*/ ).runMethod(false,"_getvvvvvvvvvvvvv0").runMethod(true,"setWidth",BA.numberCast(double.class, _anchototaltabla));
 BA.debugLineNum = 7628;BA.debugLine="JamTableCLVDialogFlexGrid.Base.Height=AltoTotal";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_jamtableclvdialogflexgrid" /*RemoteObject*/ ).runMethod(false,"_getvvvvvvvvvvvvv0").runMethod(true,"setHeight",BA.numberCast(double.class, _altototal));
 BA.debugLineNum = 7630;BA.debugLine="pBaseFlexGrid.SetLayoutAnimated(0, 0, 0, AnchoTot";
Debug.JustUpdateDeviceLine();
_pbaseflexgrid.runVoidMethod ("SetLayoutAnimated",(Object)(BA.numberCast(int.class, 0)),(Object)(BA.numberCast(double.class, 0)),(Object)(BA.numberCast(double.class, 0)),(Object)(BA.numberCast(double.class, RemoteObject.solve(new RemoteObject[] {_anchototaltabla,parent.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 30)))}, "+",1, 1))),(Object)(BA.numberCast(double.class, RemoteObject.solve(new RemoteObject[] {_altototal,parent.__c.runMethod(true,"DipToCurrent",(Object)(BA.numberCast(int.class, 60)))}, "+",1, 1))));
 BA.debugLineNum = 7632;BA.debugLine="Sleep(100)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("Sleep",__ref.getField(false, "ba"),anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "totalescamposnumericos"),BA.numberCast(int.class, 100));
this.state = 107;
return;
case 107:
//C
this.state = -1;
;
 BA.debugLineNum = 7633;BA.debugLine="JamTableCLVDialogFlexGrid.Invalidate";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_jamtableclvdialogflexgrid" /*RemoteObject*/ ).runVoidMethod ("_vvvvvvv1");
 BA.debugLineNum = 7635;BA.debugLine="Dialog.Title=\"Totales Campos Numéricos\"";
Debug.JustUpdateDeviceLine();
__ref.getField(false,"_dialog" /*RemoteObject*/ ).setField ("_title" /*RemoteObject*/ ,RemoteObject.createImmutable(("Totales Campos Numéricos")));
 BA.debugLineNum = 7636;BA.debugLine="Dim rSub As ResumableSub=Dialog.ShowCustom(pBaseF";
Debug.JustUpdateDeviceLine();
_rsub = RemoteObject.createNew ("anywheresoftware.b4a.keywords.Common.ResumableSubWrapper");
_rsub = __ref.getField(false,"_dialog" /*RemoteObject*/ ).runClassMethod (b4j.docU.b4xdialog.class, "_showcustom" /*RemoteObject*/ ,(Object)(_pbaseflexgrid),(Object)(RemoteObject.createImmutable(("OK"))),(Object)(RemoteObject.createImmutable((""))),(Object)((RemoteObject.createImmutable(""))));Debug.locals.put("rSub", _rsub);Debug.locals.put("rSub", _rsub);
 BA.debugLineNum = 7637;BA.debugLine="Wait For (rSub) Complete (Result As Int)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "totalescamposnumericos"), _rsub);
this.state = 108;
return;
case 108:
//C
this.state = -1;
_result = (RemoteObject) result.getArrayElement(true,RemoteObject.createImmutable(1));Debug.locals.put("Result", _result);
;
 BA.debugLineNum = 7639;BA.debugLine="Return True";
Debug.JustUpdateDeviceLine();
if (true) {
parent.__c.runVoidMethod ("ReturnFromResumableSub",this.remoteResumableSub,(parent.__c.getField(true,"True")));return;};
 BA.debugLineNum = 7640;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static void  _txtvalorfiltro_action(RemoteObject __ref) throws Exception{
try {
		Debug.PushSubsStack("txtValorFiltro_Action (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,3019);
if (RapidSub.canDelegate("txtvalorfiltro_action")) { __ref.runUserSub(false, "jamtableclv","txtvalorfiltro_action", __ref); return;}
ResumableSub_txtValorFiltro_Action rsub = new ResumableSub_txtValorFiltro_Action(null,__ref);
rsub.resume(null, null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_txtValorFiltro_Action extends BA.ResumableSub {
public ResumableSub_txtValorFiltro_Action(b4j.docU.jamtableclv parent,RemoteObject __ref) {
this.parent = parent;
this.__ref = __ref;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _tf = RemoteObject.declareNull("anywheresoftware.b4j.objects.TextInputControlWrapper.TextFieldWrapper");
RemoteObject _rbool = RemoteObject.createImmutable(false);

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("txtValorFiltro_Action (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,3019);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
        switch (state) {
            case -1:
return;

case 0:
//C
this.state = -1;
Debug.locals.put("_ref", __ref);
 BA.debugLineNum = 3023;BA.debugLine="Dim tF As TextField=Sender";
Debug.JustUpdateDeviceLine();
_tf = RemoteObject.createNew ("anywheresoftware.b4j.objects.TextInputControlWrapper.TextFieldWrapper");
_tf = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.TextInputControlWrapper.TextFieldWrapper"), parent.__c.runMethod(false,"Sender",__ref.getField(false, "ba")));Debug.locals.put("tF", _tf);Debug.locals.put("tF", _tf);
 BA.debugLineNum = 3024;BA.debugLine="wait for (CambioTxtValorFiltro(tF)) complete (rBo";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "txtvalorfiltro_action"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_cambiotxtvalorfiltro" /*RemoteObject*/ ,(Object)(_tf)));
this.state = 1;
return;
case 1:
//C
this.state = -1;
_rbool = (RemoteObject) result.getArrayElement(true,RemoteObject.createImmutable(1));Debug.locals.put("rBool", _rbool);
;
 BA.debugLineNum = 3048;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;

            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
public static void  _txtvalorfiltro_focuschanged(RemoteObject __ref,RemoteObject _hasfocus) throws Exception{
try {
		Debug.PushSubsStack("txtValorFiltro_FocusChanged (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,3143);
if (RapidSub.canDelegate("txtvalorfiltro_focuschanged")) { __ref.runUserSub(false, "jamtableclv","txtvalorfiltro_focuschanged", __ref, _hasfocus); return;}
ResumableSub_txtValorFiltro_FocusChanged rsub = new ResumableSub_txtValorFiltro_FocusChanged(null,__ref,_hasfocus);
rsub.resume(null, null);
}
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
public static class ResumableSub_txtValorFiltro_FocusChanged extends BA.ResumableSub {
public ResumableSub_txtValorFiltro_FocusChanged(b4j.docU.jamtableclv parent,RemoteObject __ref,RemoteObject _hasfocus) {
this.parent = parent;
this.__ref = __ref;
this._hasfocus = _hasfocus;
}
java.util.LinkedHashMap<String, Object> rsLocals = new java.util.LinkedHashMap<String, Object>();
RemoteObject __ref;
b4j.docU.jamtableclv parent;
RemoteObject _hasfocus;
RemoteObject _tf = RemoteObject.declareNull("anywheresoftware.b4j.objects.TextInputControlWrapper.TextFieldWrapper");
RemoteObject _rbool = RemoteObject.createImmutable(false);

@Override
public void resume(BA ba, RemoteObject result) throws Exception{
try {
		Debug.PushSubsStack("txtValorFiltro_FocusChanged (jamtableclv) ","jamtableclv",91,__ref.getField(false, "ba"),__ref,3143);
Debug.locals = rsLocals;Debug.currentSubFrame.locals = rsLocals;

    while (true) {
try {

        switch (state) {
            case -1:
return;

case 0:
//C
this.state = 1;
Debug.locals.put("_ref", __ref);
Debug.locals.put("HasFocus", _hasfocus);
 BA.debugLineNum = 3146;BA.debugLine="If ActualizarFiltroTextFieldAction Then";
Debug.JustUpdateDeviceLine();
if (true) break;

case 1:
//if
this.state = 4;
if (__ref.getField(true,"_actualizarfiltrotextfieldaction" /*RemoteObject*/ ).<Boolean>get().booleanValue()) { 
this.state = 3;
}if (true) break;

case 3:
//C
this.state = 4;
 BA.debugLineNum = 3147;BA.debugLine="ActualizarFiltroTextFieldAction=False";
Debug.JustUpdateDeviceLine();
__ref.setField ("_actualizarfiltrotextfieldaction" /*RemoteObject*/ ,parent.__c.getField(true,"False"));
 BA.debugLineNum = 3148;BA.debugLine="Return";
Debug.JustUpdateDeviceLine();
if (true) return ;
 if (true) break;
;
 BA.debugLineNum = 3151;BA.debugLine="If HasFocus=False Then";
Debug.JustUpdateDeviceLine();

case 4:
//if
this.state = 13;
if (RemoteObject.solveBoolean("=",_hasfocus,parent.__c.getField(true,"False"))) { 
this.state = 6;
}if (true) break;

case 6:
//C
this.state = 7;
 BA.debugLineNum = 3152;BA.debugLine="Try";
Debug.JustUpdateDeviceLine();
if (true) break;

case 7:
//try
this.state = 12;
this.catchState = 11;
this.state = 9;
if (true) break;

case 9:
//C
this.state = 12;
this.catchState = 11;
 BA.debugLineNum = 3153;BA.debugLine="Dim tF As TextField=Sender";
Debug.JustUpdateDeviceLine();
_tf = RemoteObject.createNew ("anywheresoftware.b4j.objects.TextInputControlWrapper.TextFieldWrapper");
_tf = RemoteObject.declareNull("anywheresoftware.b4a.AbsObjectWrapper").runMethod(false, "ConvertToWrapper", RemoteObject.createNew("anywheresoftware.b4j.objects.TextInputControlWrapper.TextFieldWrapper"), parent.__c.runMethod(false,"Sender",__ref.getField(false, "ba")));Debug.locals.put("tF", _tf);Debug.locals.put("tF", _tf);
 BA.debugLineNum = 3173;BA.debugLine="wait for (CambioTxtValorFiltro(tF)) complete (r";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("WaitFor","complete", __ref.getField(false, "ba"), anywheresoftware.b4a.pc.PCResumableSub.createDebugResumeSub(this, "jamtableclv", "txtvalorfiltro_focuschanged"), __ref.runClassMethod (b4j.docU.jamtableclv.class, "_cambiotxtvalorfiltro" /*RemoteObject*/ ,(Object)(_tf)));
this.state = 14;
return;
case 14:
//C
this.state = 12;
_rbool = (RemoteObject) result.getArrayElement(true,RemoteObject.createImmutable(1));Debug.locals.put("rBool", _rbool);
;
 Debug.CheckDeviceExceptions();
if (true) break;

case 11:
//C
this.state = 12;
this.catchState = 0;
 BA.debugLineNum = 3175;BA.debugLine="LogColor(LastException.Message, xui.Color_Red)";
Debug.JustUpdateDeviceLine();
parent.__c.runVoidMethod ("LogImpl","9165347360",parent.__c.runMethod(false,"LastException",__ref.getField(false, "ba")).runMethod(true,"getMessage"),__ref.getField(false,"_xui" /*RemoteObject*/ ).getField(true,"Color_Red"));
 if (true) break;
if (true) break;

case 12:
//C
this.state = 13;
this.catchState = 0;
;
 if (true) break;

case 13:
//C
this.state = -1;
;
 BA.debugLineNum = 3178;BA.debugLine="End Sub";
Debug.JustUpdateDeviceLine();
if (true) break;
}} 
       catch (Exception e0) {
			
if (catchState == 0)
    throw e0;
else {
    state = catchState;
BA.rdebugUtils.runVoidMethod("setLastException",__ref.getField(false, "ba"), e0.toString());}
            }
        }
    }
catch (Exception e) {
			throw Debug.ErrorCaught(e);
		} 
finally {
			Debug.PopSubsStack();
		}}
}
}